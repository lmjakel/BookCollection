[DEBUG] 2021-05-03 09:52:57.274 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2021-05-03 09:52:57.324 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2021-05-03 09:52:57.374 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2021-05-03 09:52:57.983 [main] Version - HHH000412: Hibernate Core {5.4.4.Final}
[DEBUG] 2021-05-03 09:52:57.993 [main] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2021-05-03 09:52:58.538 [main] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2021-05-03 09:52:58.551 [main] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2021-05-03 09:52:58.566 [main] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2021-05-03 09:52:59.618 [main] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2021-05-03 09:52:59.657 [main] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2021-05-03 09:52:59.661 [main] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2021-05-03 09:52:59.692 [main] Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] 2021-05-03 09:52:59.779 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@1d0a61c8
[DEBUG] 2021-05-03 09:52:59.781 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@1d0a61c8
[DEBUG] 2021-05-03 09:52:59.784 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1d0a61c8
[DEBUG] 2021-05-03 09:52:59.784 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@73fc518f
[DEBUG] 2021-05-03 09:52:59.785 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@151ef57f
[DEBUG] 2021-05-03 09:52:59.786 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@4e17913b
[DEBUG] 2021-05-03 09:52:59.787 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@35e8316e
[DEBUG] 2021-05-03 09:52:59.787 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@35e8316e
[DEBUG] 2021-05-03 09:52:59.787 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@35e8316e
[DEBUG] 2021-05-03 09:52:59.794 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@5fac521d
[DEBUG] 2021-05-03 09:52:59.795 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@5fac521d
[DEBUG] 2021-05-03 09:52:59.795 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@5fac521d
[DEBUG] 2021-05-03 09:52:59.799 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@4248b963
[DEBUG] 2021-05-03 09:52:59.799 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@4248b963
[DEBUG] 2021-05-03 09:52:59.799 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@4248b963
[DEBUG] 2021-05-03 09:52:59.800 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@706eab5d
[DEBUG] 2021-05-03 09:52:59.800 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@706eab5d
[DEBUG] 2021-05-03 09:52:59.801 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@706eab5d
[DEBUG] 2021-05-03 09:52:59.803 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@61f39bb
[DEBUG] 2021-05-03 09:52:59.803 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@61f39bb
[DEBUG] 2021-05-03 09:52:59.808 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@61f39bb
[DEBUG] 2021-05-03 09:52:59.812 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@4d654825
[DEBUG] 2021-05-03 09:52:59.813 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@4d654825
[DEBUG] 2021-05-03 09:52:59.813 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@4d654825
[DEBUG] 2021-05-03 09:52:59.814 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@b0fc838
[DEBUG] 2021-05-03 09:52:59.814 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@b0fc838
[DEBUG] 2021-05-03 09:52:59.815 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@b0fc838
[DEBUG] 2021-05-03 09:52:59.820 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@2954b5ea
[DEBUG] 2021-05-03 09:52:59.821 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@2954b5ea
[DEBUG] 2021-05-03 09:52:59.824 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@3ab6678b
[DEBUG] 2021-05-03 09:52:59.824 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@3ab6678b
[DEBUG] 2021-05-03 09:52:59.825 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@642505c7
[DEBUG] 2021-05-03 09:52:59.825 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@642505c7
[DEBUG] 2021-05-03 09:52:59.825 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@2d9f64c9
[DEBUG] 2021-05-03 09:52:59.829 [main] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@27b2faa6
[DEBUG] 2021-05-03 09:52:59.840 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@75a118e6
[DEBUG] 2021-05-03 09:52:59.844 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@75a118e6
[DEBUG] 2021-05-03 09:52:59.845 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@6bda1d19
[DEBUG] 2021-05-03 09:52:59.845 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@6bda1d19
[DEBUG] 2021-05-03 09:52:59.854 [main] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@20e3c449
[DEBUG] 2021-05-03 09:52:59.854 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@20e3c449
[DEBUG] 2021-05-03 09:52:59.858 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@7b7683d4
[DEBUG] 2021-05-03 09:52:59.858 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@7b7683d4
[DEBUG] 2021-05-03 09:52:59.865 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@6137cf6e
[DEBUG] 2021-05-03 09:52:59.865 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@6137cf6e
[DEBUG] 2021-05-03 09:52:59.866 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@24934262
[DEBUG] 2021-05-03 09:52:59.867 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@24934262
[DEBUG] 2021-05-03 09:52:59.868 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@341672e
[DEBUG] 2021-05-03 09:52:59.868 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@341672e
[DEBUG] 2021-05-03 09:52:59.882 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@4554de02
[DEBUG] 2021-05-03 09:52:59.882 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@4554de02
[DEBUG] 2021-05-03 09:52:59.886 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@58496c97
[DEBUG] 2021-05-03 09:52:59.887 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@58496c97
[DEBUG] 2021-05-03 09:52:59.890 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@2a066689
[DEBUG] 2021-05-03 09:52:59.891 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@2a066689
[DEBUG] 2021-05-03 09:52:59.896 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@47a7a101
[DEBUG] 2021-05-03 09:52:59.896 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@47a7a101
[DEBUG] 2021-05-03 09:52:59.897 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@6c42f2a1
[DEBUG] 2021-05-03 09:52:59.898 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@6c42f2a1
[DEBUG] 2021-05-03 09:52:59.898 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@6c42f2a1
[DEBUG] 2021-05-03 09:52:59.902 [main] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1aa6e3c0
[DEBUG] 2021-05-03 09:52:59.903 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@5e671e20
[DEBUG] 2021-05-03 09:52:59.903 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@5e671e20
[DEBUG] 2021-05-03 09:52:59.907 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@5e671e20
[DEBUG] 2021-05-03 09:52:59.912 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@3f049056
[DEBUG] 2021-05-03 09:52:59.913 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@4c2fb9dd
[DEBUG] 2021-05-03 09:52:59.914 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@4c2fb9dd
[DEBUG] 2021-05-03 09:52:59.915 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@41522537
[DEBUG] 2021-05-03 09:52:59.915 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@41522537
[DEBUG] 2021-05-03 09:52:59.920 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@42c28305
[DEBUG] 2021-05-03 09:52:59.921 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@42c28305
[DEBUG] 2021-05-03 09:52:59.922 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@6ba30587
[DEBUG] 2021-05-03 09:52:59.923 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@6ba30587
[DEBUG] 2021-05-03 09:52:59.923 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@37af1f93
[DEBUG] 2021-05-03 09:52:59.924 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@37af1f93
[DEBUG] 2021-05-03 09:52:59.924 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@168cd36b
[DEBUG] 2021-05-03 09:52:59.925 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@b835727
[DEBUG] 2021-05-03 09:52:59.925 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@b835727
[DEBUG] 2021-05-03 09:52:59.925 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@b835727
[DEBUG] 2021-05-03 09:52:59.931 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@319c3a25
[DEBUG] 2021-05-03 09:52:59.931 [main] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@319c3a25
[DEBUG] 2021-05-03 09:52:59.931 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@319c3a25
[DEBUG] 2021-05-03 09:52:59.935 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@199bc830
[DEBUG] 2021-05-03 09:52:59.936 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@790a251b
[DEBUG] 2021-05-03 09:52:59.938 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@69228e85
[DEBUG] 2021-05-03 09:52:59.943 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@69228e85
[DEBUG] 2021-05-03 09:52:59.944 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@69228e85
[DEBUG] 2021-05-03 09:52:59.945 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@72456279
[DEBUG] 2021-05-03 09:52:59.945 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@72456279
[DEBUG] 2021-05-03 09:52:59.945 [main] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@72456279
[DEBUG] 2021-05-03 09:52:59.945 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@1416cf9f
[DEBUG] 2021-05-03 09:52:59.946 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@2dfe5525
[DEBUG] 2021-05-03 09:52:59.951 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@710d89e2
[DEBUG] 2021-05-03 09:52:59.952 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@710d89e2
[DEBUG] 2021-05-03 09:52:59.952 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@29eda4f8
[DEBUG] 2021-05-03 09:52:59.953 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@a18649a
[DEBUG] 2021-05-03 09:52:59.954 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@a18649a
[DEBUG] 2021-05-03 09:52:59.957 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@102efc59
[DEBUG] 2021-05-03 09:52:59.958 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@102efc59
[DEBUG] 2021-05-03 09:52:59.959 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@75fa1be3
[DEBUG] 2021-05-03 09:52:59.964 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@3ce53f6a
[DEBUG] 2021-05-03 09:52:59.965 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@44c13103
[DEBUG] 2021-05-03 09:52:59.968 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@3a543f31
[DEBUG] 2021-05-03 09:52:59.971 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@3a543f31
[DEBUG] 2021-05-03 09:52:59.990 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@7efe7b87
[DEBUG] 2021-05-03 09:53:00.003 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@ac20bb4
[DEBUG] 2021-05-03 09:53:00.003 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@5a2bd7c8
[DEBUG] 2021-05-03 09:53:00.003 [main] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@7ca8d498
[DEBUG] 2021-05-03 09:53:00.025 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@7187bac9
[DEBUG] 2021-05-03 09:53:00.026 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@6b8280e6
[DEBUG] 2021-05-03 09:53:00.026 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@6f139fc9
[DEBUG] 2021-05-03 09:53:00.026 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@55259aa7
[DEBUG] 2021-05-03 09:53:00.132 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2021-05-03 09:53:00.137 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2021-05-03 09:53:00.142 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2021-05-03 09:53:00.149 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2021-05-03 09:53:00.150 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2021-05-03 09:53:00.150 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2021-05-03 09:53:00.151 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2021-05-03 09:53:00.152 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2021-05-03 09:53:00.153 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2021-05-03 09:53:00.154 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2021-05-03 09:53:00.157 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2021-05-03 09:53:00.158 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2021-05-03 09:53:00.163 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2021-05-03 09:53:00.164 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2021-05-03 09:53:00.171 [main] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/test_BookCollection
[INFO ] 2021-05-03 09:53:00.171 [main] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2021-05-03 09:53:00.181 [main] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2021-05-03 09:53:00.516 [main] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2021-05-03 09:53:00.869 [main] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.22
      major : 8
      minor : 0
[DEBUG] 2021-05-03 09:53:00.869 [main] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.22 (Revision: d64b664fa93e81296a377de031b8123a67e6def2)
      major : 8
      minor : 0
[DEBUG] 2021-05-03 09:53:00.869 [main] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2021-05-03 09:53:00.979 [main] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[DEBUG] 2021-05-03 09:53:01.029 [main] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2021-05-03 09:53:01.084 [main] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2021-05-03 09:53:01.269 [main] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2021-05-03 09:53:01.296 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5961e92d] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@4fd05028]
[DEBUG] 2021-05-03 09:53:01.431 [main] AnnotationMetadataSourceProcessorImpl - Encountered a non-categorized annotated class [com.leeannjakel.entity.AuthorResponse]; ignoring
[DEBUG] 2021-05-03 09:53:01.432 [main] AnnotationMetadataSourceProcessorImpl - Encountered a non-categorized annotated class [com.leeannjakel.entity.WorksAuthorsItem]; ignoring
[DEBUG] 2021-05-03 09:53:01.433 [main] AnnotationMetadataSourceProcessorImpl - Encountered a non-categorized annotated class [com.leeannjakel.entity.Classifications]; ignoring
[DEBUG] 2021-05-03 09:53:01.434 [main] AnnotationMetadataSourceProcessorImpl - Encountered a non-categorized annotated class [com.leeannjakel.entity.Created]; ignoring
[DEBUG] 2021-05-03 09:53:01.434 [main] AnnotationMetadataSourceProcessorImpl - Encountered a non-categorized annotated class [com.leeannjakel.entity.Identifiers]; ignoring
[DEBUG] 2021-05-03 09:53:01.435 [main] AnnotationMetadataSourceProcessorImpl - Encountered a non-categorized annotated class [com.leeannjakel.entity.Info]; ignoring
[DEBUG] 2021-05-03 09:53:01.436 [main] AnnotationMetadataSourceProcessorImpl - Encountered a non-categorized annotated class [com.leeannjakel.entity.LanguagesItem]; ignoring
[DEBUG] 2021-05-03 09:53:01.441 [main] AnnotationMetadataSourceProcessorImpl - Encountered a non-categorized annotated class [com.leeannjakel.entity.LastModified]; ignoring
[DEBUG] 2021-05-03 09:53:01.444 [main] AnnotationMetadataSourceProcessorImpl - Encountered a non-categorized annotated class [com.leeannjakel.entity.Type]; ignoring
[DEBUG] 2021-05-03 09:53:01.445 [main] AnnotationMetadataSourceProcessorImpl - Encountered a non-categorized annotated class [com.leeannjakel.entity.WorksItem]; ignoring
[DEBUG] 2021-05-03 09:53:01.486 [main] AnnotationBinder - Binding entity from annotated class: com.leeannjakel.entity.Author
[DEBUG] 2021-05-03 09:53:01.552 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2021-05-03 09:53:01.559 [main] EntityBinder - Import with entity name Author
[DEBUG] 2021-05-03 09:53:01.567 [main] EntityBinder - Bind entity com.leeannjakel.entity.Author on table author
[DEBUG] 2021-05-03 09:53:01.801 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(author), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-03 09:53:01.815 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2021-05-03 09:53:01.837 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.leeannjakel.entity.Author:id]
[DEBUG] 2021-05-03 09:53:01.847 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2021-05-03 09:53:01.882 [main] PropertyBinder - Building property id
[DEBUG] 2021-05-03 09:53:01.922 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2021-05-03 09:53:01.933 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='author'}
[DEBUG] 2021-05-03 09:53:01.933 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(author), mappingColumn=books, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-03 09:53:01.942 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(author), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-03 09:53:01.971 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(author), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-03 09:53:01.978 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(author), mappingColumn=books_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-03 09:53:01.982 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='books_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2021-05-03 09:53:01.983 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='author'}
[DEBUG] 2021-05-03 09:53:01.983 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='author'}
[DEBUG] 2021-05-03 09:53:01.984 [main] CollectionBinder - Collection role: com.leeannjakel.entity.Author.books
[DEBUG] 2021-05-03 09:53:02.000 [main] PropertyBinder - Building property books
[DEBUG] 2021-05-03 09:53:02.001 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(author), mappingColumn=name, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-03 09:53:02.003 [main] PropertyBinder - MetadataSourceProcessor property name with lazy=false
[DEBUG] 2021-05-03 09:53:02.003 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.leeannjakel.entity.Author:name]
[DEBUG] 2021-05-03 09:53:02.004 [main] SimpleValueBinder - building SimpleValue for name
[DEBUG] 2021-05-03 09:53:02.008 [main] PropertyBinder - Building property name
[DEBUG] 2021-05-03 09:53:02.015 [main] AnnotationBinder - Binding entity from annotated class: com.leeannjakel.entity.Book
[DEBUG] 2021-05-03 09:53:02.019 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2021-05-03 09:53:02.021 [main] EntityBinder - Import with entity name Book
[DEBUG] 2021-05-03 09:53:02.022 [main] EntityBinder - Bind entity com.leeannjakel.entity.Book on table book
[DEBUG] 2021-05-03 09:53:02.042 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-03 09:53:02.044 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2021-05-03 09:53:02.044 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.leeannjakel.entity.Book:id]
[DEBUG] 2021-05-03 09:53:02.044 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2021-05-03 09:53:02.044 [main] PropertyBinder - Building property id
[DEBUG] 2021-05-03 09:53:02.046 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2021-05-03 09:53:02.046 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='author_id', referencedColumn='', mappedBy=''}
[DEBUG] 2021-05-03 09:53:02.047 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=author, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-03 09:53:02.050 [main] PropertyBinder - Building property author
[DEBUG] 2021-05-03 09:53:02.051 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='genre_id', referencedColumn='', mappedBy=''}
[DEBUG] 2021-05-03 09:53:02.053 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=genre, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-03 09:53:02.054 [main] PropertyBinder - Building property genre
[DEBUG] 2021-05-03 09:53:02.063 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=isbn, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-03 09:53:02.064 [main] PropertyBinder - MetadataSourceProcessor property isbn with lazy=false
[DEBUG] 2021-05-03 09:53:02.064 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.leeannjakel.entity.Book:isbn]
[DEBUG] 2021-05-03 09:53:02.064 [main] SimpleValueBinder - building SimpleValue for isbn
[DEBUG] 2021-05-03 09:53:02.064 [main] PropertyBinder - Building property isbn
[DEBUG] 2021-05-03 09:53:02.065 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=notes, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-03 09:53:02.065 [main] PropertyBinder - MetadataSourceProcessor property notes with lazy=false
[DEBUG] 2021-05-03 09:53:02.072 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.leeannjakel.entity.Book:notes]
[DEBUG] 2021-05-03 09:53:02.073 [main] SimpleValueBinder - building SimpleValue for notes
[DEBUG] 2021-05-03 09:53:02.073 [main] PropertyBinder - Building property notes
[DEBUG] 2021-05-03 09:53:02.073 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=title, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-03 09:53:02.074 [main] PropertyBinder - MetadataSourceProcessor property title with lazy=false
[DEBUG] 2021-05-03 09:53:02.074 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.leeannjakel.entity.Book:title]
[DEBUG] 2021-05-03 09:53:02.074 [main] SimpleValueBinder - building SimpleValue for title
[DEBUG] 2021-05-03 09:53:02.074 [main] PropertyBinder - Building property title
[DEBUG] 2021-05-03 09:53:02.074 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
[DEBUG] 2021-05-03 09:53:02.074 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-03 09:53:02.074 [main] PropertyBinder - Building property user
[DEBUG] 2021-05-03 09:53:02.075 [main] AnnotationBinder - Binding entity from annotated class: com.leeannjakel.entity.Genre
[DEBUG] 2021-05-03 09:53:02.075 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2021-05-03 09:53:02.076 [main] EntityBinder - Import with entity name Genre
[DEBUG] 2021-05-03 09:53:02.076 [main] EntityBinder - Bind entity com.leeannjakel.entity.Genre on table genre
[DEBUG] 2021-05-03 09:53:02.082 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(genre), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-03 09:53:02.082 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2021-05-03 09:53:02.082 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.leeannjakel.entity.Genre:id]
[DEBUG] 2021-05-03 09:53:02.082 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2021-05-03 09:53:02.082 [main] PropertyBinder - Building property id
[DEBUG] 2021-05-03 09:53:02.083 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2021-05-03 09:53:02.083 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='genre'}
[DEBUG] 2021-05-03 09:53:02.086 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(genre), mappingColumn=books, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-03 09:53:02.086 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(genre), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-03 09:53:02.086 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(genre), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-03 09:53:02.086 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(genre), mappingColumn=books_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-03 09:53:02.087 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='books_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2021-05-03 09:53:02.087 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='genre'}
[DEBUG] 2021-05-03 09:53:02.087 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='genre'}
[DEBUG] 2021-05-03 09:53:02.087 [main] CollectionBinder - Collection role: com.leeannjakel.entity.Genre.books
[DEBUG] 2021-05-03 09:53:02.087 [main] PropertyBinder - Building property books
[DEBUG] 2021-05-03 09:53:02.087 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(genre), mappingColumn=name, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-03 09:53:02.087 [main] PropertyBinder - MetadataSourceProcessor property name with lazy=false
[DEBUG] 2021-05-03 09:53:02.089 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.leeannjakel.entity.Genre:name]
[DEBUG] 2021-05-03 09:53:02.089 [main] SimpleValueBinder - building SimpleValue for name
[DEBUG] 2021-05-03 09:53:02.089 [main] PropertyBinder - Building property name
[DEBUG] 2021-05-03 09:53:02.090 [main] AnnotationBinder - Binding entity from annotated class: com.leeannjakel.entity.Role
[DEBUG] 2021-05-03 09:53:02.090 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2021-05-03 09:53:02.090 [main] EntityBinder - Import with entity name Role
[DEBUG] 2021-05-03 09:53:02.090 [main] EntityBinder - Bind entity com.leeannjakel.entity.Role on table role
[DEBUG] 2021-05-03 09:53:02.092 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-03 09:53:02.092 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2021-05-03 09:53:02.092 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.leeannjakel.entity.Role:id]
[DEBUG] 2021-05-03 09:53:02.093 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2021-05-03 09:53:02.094 [main] PropertyBinder - Building property id
[DEBUG] 2021-05-03 09:53:02.097 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2021-05-03 09:53:02.099 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=role_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-03 09:53:02.099 [main] PropertyBinder - MetadataSourceProcessor property roleName with lazy=false
[DEBUG] 2021-05-03 09:53:02.099 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.leeannjakel.entity.Role:roleName]
[DEBUG] 2021-05-03 09:53:02.099 [main] SimpleValueBinder - building SimpleValue for roleName
[DEBUG] 2021-05-03 09:53:02.099 [main] PropertyBinder - Building property roleName
[DEBUG] 2021-05-03 09:53:02.101 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
[DEBUG] 2021-05-03 09:53:02.101 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-03 09:53:02.109 [main] PropertyBinder - Building property user
[DEBUG] 2021-05-03 09:53:02.109 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=user_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-03 09:53:02.109 [main] PropertyBinder - MetadataSourceProcessor property userName with lazy=false
[DEBUG] 2021-05-03 09:53:02.110 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.leeannjakel.entity.Role:userName]
[DEBUG] 2021-05-03 09:53:02.110 [main] SimpleValueBinder - building SimpleValue for userName
[DEBUG] 2021-05-03 09:53:02.110 [main] PropertyBinder - Building property userName
[DEBUG] 2021-05-03 09:53:02.110 [main] AnnotationBinder - Binding entity from annotated class: com.leeannjakel.entity.User
[DEBUG] 2021-05-03 09:53:02.110 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2021-05-03 09:53:02.110 [main] EntityBinder - Import with entity name User
[DEBUG] 2021-05-03 09:53:02.116 [main] EntityBinder - Bind entity com.leeannjakel.entity.User on table user
[DEBUG] 2021-05-03 09:53:02.118 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-03 09:53:02.118 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2021-05-03 09:53:02.118 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.leeannjakel.entity.User:id]
[DEBUG] 2021-05-03 09:53:02.118 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2021-05-03 09:53:02.118 [main] PropertyBinder - Building property id
[DEBUG] 2021-05-03 09:53:02.118 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2021-05-03 09:53:02.118 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2021-05-03 09:53:02.119 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=books, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-03 09:53:02.119 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-03 09:53:02.119 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-03 09:53:02.119 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=books_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-03 09:53:02.119 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='books_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2021-05-03 09:53:02.119 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2021-05-03 09:53:02.119 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2021-05-03 09:53:02.119 [main] CollectionBinder - Collection role: com.leeannjakel.entity.User.books
[DEBUG] 2021-05-03 09:53:02.119 [main] PropertyBinder - Building property books
[DEBUG] 2021-05-03 09:53:02.119 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=email, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-03 09:53:02.119 [main] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[DEBUG] 2021-05-03 09:53:02.123 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.leeannjakel.entity.User:email]
[DEBUG] 2021-05-03 09:53:02.124 [main] SimpleValueBinder - building SimpleValue for email
[DEBUG] 2021-05-03 09:53:02.128 [main] PropertyBinder - Building property email
[DEBUG] 2021-05-03 09:53:02.128 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-03 09:53:02.128 [main] PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
[DEBUG] 2021-05-03 09:53:02.128 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.leeannjakel.entity.User:firstName]
[DEBUG] 2021-05-03 09:53:02.128 [main] SimpleValueBinder - building SimpleValue for firstName
[DEBUG] 2021-05-03 09:53:02.128 [main] PropertyBinder - Building property firstName
[DEBUG] 2021-05-03 09:53:02.131 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-03 09:53:02.131 [main] PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
[DEBUG] 2021-05-03 09:53:02.131 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.leeannjakel.entity.User:lastName]
[DEBUG] 2021-05-03 09:53:02.131 [main] SimpleValueBinder - building SimpleValue for lastName
[DEBUG] 2021-05-03 09:53:02.131 [main] PropertyBinder - Building property lastName
[DEBUG] 2021-05-03 09:53:02.132 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=password, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-03 09:53:02.132 [main] PropertyBinder - MetadataSourceProcessor property password with lazy=false
[DEBUG] 2021-05-03 09:53:02.132 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.leeannjakel.entity.User:password]
[DEBUG] 2021-05-03 09:53:02.132 [main] SimpleValueBinder - building SimpleValue for password
[DEBUG] 2021-05-03 09:53:02.132 [main] PropertyBinder - Building property password
[DEBUG] 2021-05-03 09:53:02.132 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2021-05-03 09:53:02.132 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=roles, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-03 09:53:02.132 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-03 09:53:02.132 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-03 09:53:02.132 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=roles_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-03 09:53:02.133 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='roles_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2021-05-03 09:53:02.134 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2021-05-03 09:53:02.134 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2021-05-03 09:53:02.134 [main] CollectionBinder - Collection role: com.leeannjakel.entity.User.roles
[DEBUG] 2021-05-03 09:53:02.134 [main] PropertyBinder - Building property roles
[DEBUG] 2021-05-03 09:53:02.134 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=user_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-03 09:53:02.134 [main] PropertyBinder - MetadataSourceProcessor property userName with lazy=false
[DEBUG] 2021-05-03 09:53:02.134 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.leeannjakel.entity.User:userName]
[DEBUG] 2021-05-03 09:53:02.134 [main] SimpleValueBinder - building SimpleValue for userName
[DEBUG] 2021-05-03 09:53:02.134 [main] PropertyBinder - Building property userName
[DEBUG] 2021-05-03 09:53:02.143 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2021-05-03 09:53:02.143 [main] SimpleValueBinder - Starting fillSimpleValue for name
[DEBUG] 2021-05-03 09:53:02.143 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2021-05-03 09:53:02.144 [main] SimpleValueBinder - Starting fillSimpleValue for isbn
[DEBUG] 2021-05-03 09:53:02.144 [main] SimpleValueBinder - Starting fillSimpleValue for notes
[DEBUG] 2021-05-03 09:53:02.144 [main] SimpleValueBinder - Starting fillSimpleValue for title
[DEBUG] 2021-05-03 09:53:02.144 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2021-05-03 09:53:02.144 [main] SimpleValueBinder - Starting fillSimpleValue for name
[DEBUG] 2021-05-03 09:53:02.144 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2021-05-03 09:53:02.145 [main] SimpleValueBinder - Starting fillSimpleValue for roleName
[DEBUG] 2021-05-03 09:53:02.145 [main] SimpleValueBinder - Starting fillSimpleValue for userName
[DEBUG] 2021-05-03 09:53:02.145 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2021-05-03 09:53:02.145 [main] SimpleValueBinder - Starting fillSimpleValue for email
[DEBUG] 2021-05-03 09:53:02.145 [main] SimpleValueBinder - Starting fillSimpleValue for firstName
[DEBUG] 2021-05-03 09:53:02.145 [main] SimpleValueBinder - Starting fillSimpleValue for lastName
[DEBUG] 2021-05-03 09:53:02.145 [main] SimpleValueBinder - Starting fillSimpleValue for password
[DEBUG] 2021-05-03 09:53:02.145 [main] SimpleValueBinder - Starting fillSimpleValue for userName
[DEBUG] 2021-05-03 09:53:02.149 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [author]
[DEBUG] 2021-05-03 09:53:02.149 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [book]
[DEBUG] 2021-05-03 09:53:02.149 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [genre]
[DEBUG] 2021-05-03 09:53:02.149 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [role]
[DEBUG] 2021-05-03 09:53:02.149 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [user]
[DEBUG] 2021-05-03 09:53:02.149 [main] CollectionSecondPass - Second pass for collection: com.leeannjakel.entity.Author.books
[DEBUG] 2021-05-03 09:53:02.155 [main] CollectionBinder - Binding a OneToMany: com.leeannjakel.entity.Author.books through a foreign key
[DEBUG] 2021-05-03 09:53:02.158 [main] CollectionBinder - Mapping collection: com.leeannjakel.entity.Author.books -> book
[DEBUG] 2021-05-03 09:53:02.161 [main] TableBinder - Retrieving property com.leeannjakel.entity.Book.author
[DEBUG] 2021-05-03 09:53:02.176 [main] CollectionSecondPass - Mapped collection key: author_id, one-to-many: com.leeannjakel.entity.Book
[DEBUG] 2021-05-03 09:53:02.176 [main] CollectionSecondPass - Second pass for collection: com.leeannjakel.entity.Genre.books
[DEBUG] 2021-05-03 09:53:02.176 [main] CollectionBinder - Binding a OneToMany: com.leeannjakel.entity.Genre.books through a foreign key
[DEBUG] 2021-05-03 09:53:02.176 [main] CollectionBinder - Mapping collection: com.leeannjakel.entity.Genre.books -> book
[DEBUG] 2021-05-03 09:53:02.176 [main] TableBinder - Retrieving property com.leeannjakel.entity.Book.genre
[DEBUG] 2021-05-03 09:53:02.179 [main] CollectionSecondPass - Mapped collection key: genre_id, one-to-many: com.leeannjakel.entity.Book
[DEBUG] 2021-05-03 09:53:02.179 [main] CollectionSecondPass - Second pass for collection: com.leeannjakel.entity.User.books
[DEBUG] 2021-05-03 09:53:02.179 [main] CollectionBinder - Binding a OneToMany: com.leeannjakel.entity.User.books through a foreign key
[DEBUG] 2021-05-03 09:53:02.179 [main] CollectionBinder - Mapping collection: com.leeannjakel.entity.User.books -> book
[DEBUG] 2021-05-03 09:53:02.183 [main] TableBinder - Retrieving property com.leeannjakel.entity.Book.user
[DEBUG] 2021-05-03 09:53:02.183 [main] CollectionSecondPass - Mapped collection key: user_id, one-to-many: com.leeannjakel.entity.Book
[DEBUG] 2021-05-03 09:53:02.183 [main] CollectionSecondPass - Second pass for collection: com.leeannjakel.entity.User.roles
[DEBUG] 2021-05-03 09:53:02.183 [main] CollectionBinder - Binding a OneToMany: com.leeannjakel.entity.User.roles through a foreign key
[DEBUG] 2021-05-03 09:53:02.184 [main] CollectionBinder - Mapping collection: com.leeannjakel.entity.User.roles -> role
[DEBUG] 2021-05-03 09:53:02.184 [main] TableBinder - Retrieving property com.leeannjakel.entity.Role.user
[DEBUG] 2021-05-03 09:53:02.184 [main] CollectionSecondPass - Mapped collection key: user_id, one-to-many: com.leeannjakel.entity.Role
[DEBUG] 2021-05-03 09:53:02.185 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.leeannjakel.entity.Author
[DEBUG] 2021-05-03 09:53:02.187 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.leeannjakel.entity.Genre
[DEBUG] 2021-05-03 09:53:02.190 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.leeannjakel.entity.User
[DEBUG] 2021-05-03 09:53:02.191 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.leeannjakel.entity.User
[DEBUG] 2021-05-03 09:53:02.196 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.leeannjakel.entity.Author
[DEBUG] 2021-05-03 09:53:02.196 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.leeannjakel.entity.Genre
[DEBUG] 2021-05-03 09:53:02.197 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.leeannjakel.entity.User
[DEBUG] 2021-05-03 09:53:02.197 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.leeannjakel.entity.User
[DEBUG] 2021-05-03 09:53:02.263 [main] SessionFactoryImpl - Building session factory
[DEBUG] 2021-05-03 09:53:02.280 [main] Settings - SessionFactory name : null
[DEBUG] 2021-05-03 09:53:02.280 [main] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2021-05-03 09:53:02.280 [main] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2021-05-03 09:53:02.280 [main] Settings - Statistics: disabled
[DEBUG] 2021-05-03 09:53:02.280 [main] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2021-05-03 09:53:02.280 [main] Settings - Default entity-mode: pojo
[DEBUG] 2021-05-03 09:53:02.282 [main] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2021-05-03 09:53:02.285 [main] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2021-05-03 09:53:02.285 [main] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2021-05-03 09:53:02.286 [main] Settings - Default batch fetch size: -1
[DEBUG] 2021-05-03 09:53:02.287 [main] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2021-05-03 09:53:02.287 [main] Settings - Default null ordering: NONE
[DEBUG] 2021-05-03 09:53:02.287 [main] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2021-05-03 09:53:02.287 [main] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2021-05-03 09:53:02.287 [main] Settings - multi-tenancy strategy : NONE
[DEBUG] 2021-05-03 09:53:02.287 [main] Settings - JTA Track by Thread: enabled
[DEBUG] 2021-05-03 09:53:02.287 [main] Settings - Query language substitutions: {}
[DEBUG] 2021-05-03 09:53:02.291 [main] Settings - Named query checking : enabled
[DEBUG] 2021-05-03 09:53:02.293 [main] Settings - Second-level cache: disabled
[DEBUG] 2021-05-03 09:53:02.293 [main] Settings - Second-level query cache: disabled
[DEBUG] 2021-05-03 09:53:02.294 [main] Settings - Second-level query cache factory: null
[DEBUG] 2021-05-03 09:53:02.295 [main] Settings - Second-level cache region prefix: null
[DEBUG] 2021-05-03 09:53:02.295 [main] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2021-05-03 09:53:02.299 [main] Settings - Structured second-level cache entries: disabled
[DEBUG] 2021-05-03 09:53:02.300 [main] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2021-05-03 09:53:02.300 [main] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2021-05-03 09:53:02.300 [main] Settings - JDBC batch size: 15
[DEBUG] 2021-05-03 09:53:02.300 [main] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2021-05-03 09:53:02.300 [main] Settings - Scrollable result sets: enabled
[DEBUG] 2021-05-03 09:53:02.300 [main] Settings - Wrap result sets: disabled
[DEBUG] 2021-05-03 09:53:02.300 [main] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2021-05-03 09:53:02.300 [main] Settings - JDBC result set fetch size: null
[DEBUG] 2021-05-03 09:53:02.300 [main] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2021-05-03 09:53:02.300 [main] Settings - Generate SQL with comments: disabled
[DEBUG] 2021-05-03 09:53:02.300 [main] Settings - JPA compliance - query : 
[DEBUG] 2021-05-03 09:53:02.300 [main] Settings - JPA compliance - closed-handling : 
[DEBUG] 2021-05-03 09:53:02.300 [main] Settings - JPA compliance - lists : 
[DEBUG] 2021-05-03 09:53:02.300 [main] Settings - JPA compliance - transactions : 
[INFO ] 2021-05-03 09:53:02.449 [main] beans - HHH10005002: No explicit CDI BeanManager reference was passed to Hibernate, but CDI is available on the Hibernate ClassLoader.
[DEBUG] 2021-05-03 09:53:02.514 [main] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2021-05-03 09:53:02.514 [main] SessionFactoryImpl - Instantiating session factory with properties: {sun.desktop=gnome, awt.toolkit=sun.awt.X11.XToolkit, java.specification.version=11, sun.cpu.isalist=, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=UTF-8, hibernate.c3p0.min_size=5, java.class.path=/home/student/intellij/lib/idea_rt.jar:/home/student/intellij/plugins/junit/lib/junit5-rt.jar:/home/student/intellij/plugins/junit/lib/junit-rt.jar:/home/student/IdeaProjects/BookCollection/target/test-classes:/home/student/IdeaProjects/BookCollection/target/classes:/home/student/.m2/repository/junit/junit/4.12/junit-4.12.jar:/home/student/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/student/.m2/repository/javax/javaee-web-api/7.0/javaee-web-api-7.0.jar:/home/student/.m2/repository/mysql/mysql-connector-java/8.0.22/mysql-connector-java-8.0.22.jar:/home/student/.m2/repository/com/google/protobuf/protobuf-java/3.11.4/protobuf-java-3.11.4.jar:/home/student/.m2/repository/javax/servlet/jsp/jstl/jstl-api/1.2/jstl-api-1.2.jar:/home/student/.m2/repository/javax/servlet/servlet-api/2.5/servlet-api-2.5.jar:/home/student/.m2/repository/javax/servlet/jsp/jsp-api/2.1/jsp-api-2.1.jar:/home/student/.m2/repository/javax/servlet/jstl/1.2/jstl-1.2.jar:/home/student/.m2/repository/taglibs/standard/1.1.2/standard-1.1.2.jar:/home/student/.m2/repository/org/apache/logging/log4j/log4j-api/2.10.0/log4j-api-2.10.0.jar:/home/student/.m2/repository/org/apache/logging/log4j/log4j-core/2.10.0/log4j-core-2.10.0.jar:/home/student/.m2/repository/org/junit/platform/junit-platform-runner/1.0.0/junit-platform-runner-1.0.0.jar:/home/student/.m2/repository/org/apiguardian/apiguardian-api/1.0.0/apiguardian-api-1.0.0.jar:/home/student/.m2/repository/org/junit/platform/junit-platform-launcher/1.0.0/junit-platform-launcher-1.0.0.jar:/home/student/.m2/repository/org/junit/platform/junit-platform-suite-api/1.0.0/junit-platform-suite-api-1.0.0.jar:/home/student/.m2/repository/org/junit/vintage/junit-vintage-engine/4.12.0/junit-vintage-engine-4.12.0.jar:/home/student/.m2/repository/org/junit/platform/junit-platform-engine/1.0.0/junit-platform-engine-1.0.0.jar:/home/student/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.0.0/junit-jupiter-engine-5.0.0.jar:/home/student/.m2/repository/org/hibernate/hibernate-core/5.4.4.Final/hibernate-core-5.4.4.Final.jar:/home/student/.m2/repository/org/jboss/logging/jboss-logging/3.3.2.Final/jboss-logging-3.3.2.Final.jar:/home/student/.m2/repository/javax/persistence/javax.persistence-api/2.2/javax.persistence-api-2.2.jar:/home/student/.m2/repository/org/javassist/javassist/3.24.0-GA/javassist-3.24.0-GA.jar:/home/student/.m2/repository/net/bytebuddy/byte-buddy/1.9.11/byte-buddy-1.9.11.jar:/home/student/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/home/student/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.1.1.Final/jboss-transaction-api_1.2_spec-1.1.1.Final.jar:/home/student/.m2/repository/org/jboss/jandex/2.0.5.Final/jandex-2.0.5.Final.jar:/home/student/.m2/repository/com/fasterxml/classmate/1.3.4/classmate-1.3.4.jar:/home/student/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/home/student/.m2/repository/org/dom4j/dom4j/2.1.1/dom4j-2.1.1.jar:/home/student/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.1.0.Final/hibernate-commons-annotations-5.1.0.Final.jar:/home/student/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/home/student/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-runtime-2.3.1.jar:/home/student/.m2/repository/org/glassfish/jaxb/txw2/2.3.1/txw2-2.3.1.jar:/home/student/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.7/istack-commons-runtime-3.0.7.jar:/home/student/.m2/repository/org/jvnet/staxex/stax-ex/1.8/stax-ex-1.8.jar:/home/student/.m2/repository/com/sun/xml/fastinfoset/FastInfoset/1.2.15/FastInfoset-1.2.15.jar:/home/student/.m2/repository/org/hibernate/hibernate-c3p0/5.4.4.Final/hibernate-c3p0-5.4.4.Final.jar:/home/student/.m2/repository/com/mchange/c3p0/0.9.5.3/c3p0-0.9.5.3.jar:/home/student/.m2/repository/com/mchange/mchange-commons-java/0.2.15/mchange-commons-java-0.2.15.jar:/home/student/.m2/repository/org/glassfish/jersey/core/jersey-client/2.29.1/jersey-client-2.29.1.jar:/home/student/.m2/repository/jakarta/ws/rs/jakarta.ws.rs-api/2.1.6/jakarta.ws.rs-api-2.1.6.jar:/home/student/.m2/repository/org/glassfish/jersey/core/jersey-common/2.29.1/jersey-common-2.29.1.jar:/home/student/.m2/repository/jakarta/annotation/jakarta.annotation-api/1.3.5/jakarta.annotation-api-1.3.5.jar:/home/student/.m2/repository/org/glassfish/hk2/osgi-resource-locator/1.0.3/osgi-resource-locator-1.0.3.jar:/home/student/.m2/repository/com/sun/activation/jakarta.activation/1.2.1/jakarta.activation-1.2.1.jar:/home/student/.m2/repository/org/glassfish/hk2/external/jakarta.inject/2.6.1/jakarta.inject-2.6.1.jar:/home/student/.m2/repository/org/glassfish/jersey/inject/jersey-hk2/2.29.1/jersey-hk2-2.29.1.jar:/home/student/.m2/repository/org/glassfish/hk2/hk2-locator/2.6.1/hk2-locator-2.6.1.jar:/home/student/.m2/repository/org/glassfish/hk2/external/aopalliance-repackaged/2.6.1/aopalliance-repackaged-2.6.1.jar:/home/student/.m2/repository/org/glassfish/hk2/hk2-api/2.6.1/hk2-api-2.6.1.jar:/home/student/.m2/repository/org/glassfish/hk2/hk2-utils/2.6.1/hk2-utils-2.6.1.jar:/home/student/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.10.0/jackson-core-2.10.0.jar:/home/student/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.10.0/jackson-annotations-2.10.0.jar:/home/student/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.10.0/jackson-databind-2.10.0.jar:/home/student/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.0.0/junit-jupiter-api-5.0.0.jar:/home/student/.m2/repository/org/opentest4j/opentest4j/1.0.0/opentest4j-1.0.0.jar:/home/student/.m2/repository/org/junit/platform/junit-platform-commons/1.0.0/junit-platform-commons-1.0.0.jar:/home/student/.m2/repository/org/assertj/assertj-core/3.9.1/assertj-core-3.9.1.jar, java.vm.vendor=Ubuntu, sun.arch.data.model=64, idea.test.cyclic.buffer.size=1048576, java.vendor.url=https://ubuntu.com/, user.timezone=America/Chicago, os.name=Linux, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=/usr/lib/jvm/java-11-openjdk-amd64/lib, sun.java.command=com.intellij.rt.junit.JUnitStarter -ideVersion5 -junit5 test.persistence.BookDaoTest,insertBookSuccess, jdk.debug=release, sun.cpu.endian=little, user.home=/home/student, hibernate.c3p0.max_statements=50, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2021-04-20, java.home=/usr/lib/jvm/java-11-openjdk-amd64, file.separator=/, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, connection.password=student, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.c3p0.max_size=20, java.runtime.version=11.0.11+9-Ubuntu-0ubuntu2.20.04, user.name=student, path.separator=:, hibernate.connection.username=****, os.version=5.4.0-72-generic, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/test_BookCollection, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugs.launchpad.net/ubuntu/+source/openjdk-lts, java.io.tmpdir=/tmp, java.version=11.0.11, user.dir=/home/student/IdeaProjects/BookCollection, os.arch=amd64, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.print.PSPrinterJob, hibernate.connection.password=****, sun.os.patch.level=unknown, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@f557c37, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor=Ubuntu, java.vm.info=mixed mode, sharing, java.vm.version=11.0.11+9-Ubuntu-0ubuntu2.20.04, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, connection.url=jdbc:mysql://localhost:3306/test_BookCollection, java.class.version=55.0}
[DEBUG] 2021-05-03 09:53:02.568 [main] TypeSafeActivator - Unable to acquire Bean Validation ValidatorFactory, skipping activation
[DEBUG] 2021-05-03 09:53:02.568 [main] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2021-05-03 09:53:02.569 [main] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2021-05-03 09:53:02.582 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5961e92d] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@2a2dc0a]
[DEBUG] 2021-05-03 09:53:02.724 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.leeannjakel.entity.Book] is safe
[DEBUG] 2021-05-03 09:53:02.725 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.leeannjakel.entity.Book
[DEBUG] 2021-05-03 09:53:02.752 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.leeannjakel.entity.Book] is safe
[DEBUG] 2021-05-03 09:53:02.753 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.leeannjakel.entity.Book
[DEBUG] 2021-05-03 09:53:03.175 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.leeannjakel.entity.User] is safe
[DEBUG] 2021-05-03 09:53:03.175 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.leeannjakel.entity.User
[DEBUG] 2021-05-03 09:53:03.177 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.leeannjakel.entity.User] is safe
[DEBUG] 2021-05-03 09:53:03.177 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.leeannjakel.entity.User
[DEBUG] 2021-05-03 09:53:03.306 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.leeannjakel.entity.Author] is safe
[DEBUG] 2021-05-03 09:53:03.312 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.leeannjakel.entity.Author
[DEBUG] 2021-05-03 09:53:03.313 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.leeannjakel.entity.Author] is safe
[DEBUG] 2021-05-03 09:53:03.313 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.leeannjakel.entity.Author
[DEBUG] 2021-05-03 09:53:03.375 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.leeannjakel.entity.Genre] is safe
[DEBUG] 2021-05-03 09:53:03.375 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.leeannjakel.entity.Genre
[DEBUG] 2021-05-03 09:53:03.376 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.leeannjakel.entity.Genre] is safe
[DEBUG] 2021-05-03 09:53:03.376 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.leeannjakel.entity.Genre
[DEBUG] 2021-05-03 09:53:03.443 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.leeannjakel.entity.Role] is safe
[DEBUG] 2021-05-03 09:53:03.443 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.leeannjakel.entity.Role
[DEBUG] 2021-05-03 09:53:03.443 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.leeannjakel.entity.Role] is safe
[DEBUG] 2021-05-03 09:53:03.444 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.leeannjakel.entity.Role
[DEBUG] 2021-05-03 09:53:03.561 [main] AbstractCollectionPersister - Static SQL for collection: com.leeannjakel.entity.Author.books
[DEBUG] 2021-05-03 09:53:03.563 [main] AbstractCollectionPersister -  Row insert: update book set author_id=? where id=?
[DEBUG] 2021-05-03 09:53:03.563 [main] AbstractCollectionPersister -  Row update: update book set  where id=?
[DEBUG] 2021-05-03 09:53:03.563 [main] AbstractCollectionPersister -  Row delete: update book set author_id=null where author_id=? and id=?
[DEBUG] 2021-05-03 09:53:03.563 [main] AbstractCollectionPersister -  One-shot delete: update book set author_id=null where author_id=?
[DEBUG] 2021-05-03 09:53:03.563 [main] AbstractCollectionPersister - Static SQL for collection: com.leeannjakel.entity.User.books
[DEBUG] 2021-05-03 09:53:03.563 [main] AbstractCollectionPersister -  Row insert: update book set user_id=? where id=?
[DEBUG] 2021-05-03 09:53:03.563 [main] AbstractCollectionPersister -  Row update: update book set  where id=?
[DEBUG] 2021-05-03 09:53:03.563 [main] AbstractCollectionPersister -  Row delete: update book set user_id=null where user_id=? and id=?
[DEBUG] 2021-05-03 09:53:03.563 [main] AbstractCollectionPersister -  One-shot delete: update book set user_id=null where user_id=?
[DEBUG] 2021-05-03 09:53:03.571 [main] AbstractCollectionPersister - Static SQL for collection: com.leeannjakel.entity.User.roles
[DEBUG] 2021-05-03 09:53:03.571 [main] AbstractCollectionPersister -  Row insert: update role set user_id=? where id=?
[DEBUG] 2021-05-03 09:53:03.571 [main] AbstractCollectionPersister -  Row update: update role set  where id=?
[DEBUG] 2021-05-03 09:53:03.571 [main] AbstractCollectionPersister -  Row delete: update role set user_id=null where user_id=? and id=?
[DEBUG] 2021-05-03 09:53:03.571 [main] AbstractCollectionPersister -  One-shot delete: update role set user_id=null where user_id=?
[DEBUG] 2021-05-03 09:53:03.580 [main] AbstractCollectionPersister - Static SQL for collection: com.leeannjakel.entity.Genre.books
[DEBUG] 2021-05-03 09:53:03.580 [main] AbstractCollectionPersister -  Row insert: update book set genre_id=? where id=?
[DEBUG] 2021-05-03 09:53:03.580 [main] AbstractCollectionPersister -  Row update: update book set  where id=?
[DEBUG] 2021-05-03 09:53:03.580 [main] AbstractCollectionPersister -  Row delete: update book set genre_id=null where genre_id=? and id=?
[DEBUG] 2021-05-03 09:53:03.580 [main] AbstractCollectionPersister -  One-shot delete: update book set genre_id=null where genre_id=?
[DEBUG] 2021-05-03 09:53:03.626 [main] AbstractEntityPersister - Static SQL for entity: com.leeannjakel.entity.Book
[DEBUG] 2021-05-03 09:53:03.626 [main] AbstractEntityPersister -  Version select: select id from book where id =?
[DEBUG] 2021-05-03 09:53:03.626 [main] AbstractEntityPersister -  Snapshot select: select book_.id, book_.author_id as author_i5_1_, book_.genre_id as genre_id6_1_, book_.isbn as isbn2_1_, book_.notes as notes3_1_, book_.title as title4_1_, book_.user_id as user_id7_1_ from book book_ where book_.id=?
[DEBUG] 2021-05-03 09:53:03.626 [main] AbstractEntityPersister -  Insert 0: insert into book (author_id, genre_id, isbn, notes, title, user_id, id) values (?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2021-05-03 09:53:03.626 [main] AbstractEntityPersister -  Update 0: update book set author_id=?, genre_id=?, isbn=?, notes=?, title=?, user_id=? where id=?
[DEBUG] 2021-05-03 09:53:03.626 [main] AbstractEntityPersister -  Delete 0: delete from book where id=?
[DEBUG] 2021-05-03 09:53:03.626 [main] AbstractEntityPersister -  Identity insert: insert into book (author_id, genre_id, isbn, notes, title, user_id) values (?, ?, ?, ?, ?, ?)
[DEBUG] 2021-05-03 09:53:03.692 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5e193ef5]
[DEBUG] 2021-05-03 09:53:03.693 [main] MetamodelGraphWalker - Visiting attribute path : author
[DEBUG] 2021-05-03 09:53:03.708 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@53ea380b]
[DEBUG] 2021-05-03 09:53:03.711 [main] MetamodelGraphWalker - Visiting attribute path : author.books
[DEBUG] 2021-05-03 09:53:03.711 [main] MetamodelGraphWalker - Property path deemed to be circular : author.books
[DEBUG] 2021-05-03 09:53:03.711 [main] MetamodelGraphWalker - Visiting attribute path : author.name
[DEBUG] 2021-05-03 09:53:03.713 [main] MetamodelGraphWalker - Visiting attribute path : genre
[DEBUG] 2021-05-03 09:53:03.713 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@935493d]
[DEBUG] 2021-05-03 09:53:03.714 [main] MetamodelGraphWalker - Visiting attribute path : genre.books
[DEBUG] 2021-05-03 09:53:03.714 [main] MetamodelGraphWalker - Property path deemed to be circular : genre.books
[DEBUG] 2021-05-03 09:53:03.714 [main] MetamodelGraphWalker - Visiting attribute path : genre.name
[DEBUG] 2021-05-03 09:53:03.714 [main] MetamodelGraphWalker - Visiting attribute path : isbn
[DEBUG] 2021-05-03 09:53:03.714 [main] MetamodelGraphWalker - Visiting attribute path : notes
[DEBUG] 2021-05-03 09:53:03.714 [main] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2021-05-03 09:53:03.714 [main] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2021-05-03 09:53:03.714 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@34c62fdf]
[DEBUG] 2021-05-03 09:53:03.714 [main] MetamodelGraphWalker - Visiting attribute path : user.books
[DEBUG] 2021-05-03 09:53:03.714 [main] MetamodelGraphWalker - Property path deemed to be circular : user.books
[DEBUG] 2021-05-03 09:53:03.714 [main] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2021-05-03 09:53:03.714 [main] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2021-05-03 09:53:03.714 [main] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2021-05-03 09:53:03.715 [main] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2021-05-03 09:53:03.715 [main] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2021-05-03 09:53:03.716 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4863c8ac]
[DEBUG] 2021-05-03 09:53:03.717 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1ecf0ac6]
[DEBUG] 2021-05-03 09:53:03.718 [main] MetamodelGraphWalker - Visiting attribute path : user.roles.roleName
[DEBUG] 2021-05-03 09:53:03.718 [main] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2021-05-03 09:53:03.718 [main] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2021-05-03 09:53:03.719 [main] MetamodelGraphWalker - Visiting attribute path : user.roles.userName
[DEBUG] 2021-05-03 09:53:03.719 [main] MetamodelGraphWalker - Visiting attribute path : user.userName
[DEBUG] 2021-05-03 09:53:03.719 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-05-03 09:53:03.731 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-05-03 09:53:03.744 [main] LoadPlanTreePrinter - LoadPlan(entity=com.leeannjakel.entity.Book)
    - Returns
       - EntityReturnImpl(entity=com.leeannjakel.entity.Book, querySpaceUid=<gen:0>, path=com.leeannjakel.entity.Book)
          - EntityAttributeFetchImpl(entity=com.leeannjakel.entity.Author, querySpaceUid=<gen:1>, path=com.leeannjakel.entity.Book.author)
          - EntityAttributeFetchImpl(entity=com.leeannjakel.entity.Genre, querySpaceUid=<gen:2>, path=com.leeannjakel.entity.Book.genre)
          - EntityAttributeFetchImpl(entity=com.leeannjakel.entity.User, querySpaceUid=<gen:3>, path=com.leeannjakel.entity.Book.user)
             - CollectionAttributeFetchImpl(collection=com.leeannjakel.entity.User.roles, querySpaceUid=<gen:4>, path=com.leeannjakel.entity.Book.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.leeannjakel.entity.Role, querySpaceUid=<gen:5>, path=com.leeannjakel.entity.Book.user.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.leeannjakel.entity.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(author)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.leeannjakel.entity.Author)
                - SQL table alias mapping - author1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}
          - JOIN (JoinDefinedByMetadata(genre)) : <gen:0> -> <gen:2>
             - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.leeannjakel.entity.Genre)
                - SQL table alias mapping - genre2_
                - alias suffix - 2_
                - suffixed key columns - {id1_2_2_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=com.leeannjakel.entity.User)
                - SQL table alias mapping - user3_
                - alias suffix - 3_
                - suffixed key columns - {id1_4_3_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:3> -> <gen:4>
                   - CollectionQuerySpaceImpl(uid=<gen:4>, collection=com.leeannjakel.entity.User.roles)
                      - SQL table alias mapping - roles4_
                      - alias suffix - 4_
                      - suffixed key columns - {user_id4_3_4_}
                      - entity-element alias suffix - 5_
                      - 5_entity-element suffixed key columns - id1_3_5_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:4> -> <gen:5>
                         - EntityQuerySpaceImpl(uid=<gen:5>, entity=com.leeannjakel.entity.Role)
                            - SQL table alias mapping - roles4_
                            - alias suffix - 5_
                            - suffixed key columns - {id1_3_5_}

[DEBUG] 2021-05-03 09:53:03.748 [main] EntityLoader - Static select for entity com.leeannjakel.entity.Book [NONE]: select book0_.id as id1_1_0_, book0_.author_id as author_i5_1_0_, book0_.genre_id as genre_id6_1_0_, book0_.isbn as isbn2_1_0_, book0_.notes as notes3_1_0_, book0_.title as title4_1_0_, book0_.user_id as user_id7_1_0_, author1_.id as id1_0_1_, author1_.name as name2_0_1_, genre2_.id as id1_2_2_, genre2_.name as name2_2_2_, user3_.id as id1_4_3_, user3_.email as email2_4_3_, user3_.first_name as first_na3_4_3_, user3_.last_name as last_nam4_4_3_, user3_.password as password5_4_3_, user3_.user_name as user_nam6_4_3_, roles4_.user_id as user_id4_3_4_, roles4_.id as id1_3_4_, roles4_.id as id1_3_5_, roles4_.role_name as role_nam2_3_5_, roles4_.user_id as user_id4_3_5_, roles4_.user_name as user_nam3_3_5_ from book book0_ left outer join author author1_ on book0_.author_id=author1_.id left outer join genre genre2_ on book0_.genre_id=genre2_.id left outer join user user3_ on book0_.user_id=user3_.id left outer join role roles4_ on user3_.id=roles4_.user_id where book0_.id=?
[DEBUG] 2021-05-03 09:53:03.749 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@649b5891]
[DEBUG] 2021-05-03 09:53:03.750 [main] MetamodelGraphWalker - Visiting attribute path : author
[DEBUG] 2021-05-03 09:53:03.751 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1be52861]
[DEBUG] 2021-05-03 09:53:03.751 [main] MetamodelGraphWalker - Visiting attribute path : author.books
[DEBUG] 2021-05-03 09:53:03.751 [main] MetamodelGraphWalker - Property path deemed to be circular : author.books
[DEBUG] 2021-05-03 09:53:03.751 [main] MetamodelGraphWalker - Visiting attribute path : author.name
[DEBUG] 2021-05-03 09:53:03.752 [main] MetamodelGraphWalker - Visiting attribute path : genre
[DEBUG] 2021-05-03 09:53:03.753 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@615439f7]
[DEBUG] 2021-05-03 09:53:03.756 [main] MetamodelGraphWalker - Visiting attribute path : genre.books
[DEBUG] 2021-05-03 09:53:03.756 [main] MetamodelGraphWalker - Property path deemed to be circular : genre.books
[DEBUG] 2021-05-03 09:53:03.756 [main] MetamodelGraphWalker - Visiting attribute path : genre.name
[DEBUG] 2021-05-03 09:53:03.760 [main] MetamodelGraphWalker - Visiting attribute path : isbn
[DEBUG] 2021-05-03 09:53:03.761 [main] MetamodelGraphWalker - Visiting attribute path : notes
[DEBUG] 2021-05-03 09:53:03.761 [main] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2021-05-03 09:53:03.761 [main] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2021-05-03 09:53:03.761 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@51b87df7]
[DEBUG] 2021-05-03 09:53:03.761 [main] MetamodelGraphWalker - Visiting attribute path : user.books
[DEBUG] 2021-05-03 09:53:03.761 [main] MetamodelGraphWalker - Property path deemed to be circular : user.books
[DEBUG] 2021-05-03 09:53:03.761 [main] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2021-05-03 09:53:03.761 [main] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2021-05-03 09:53:03.761 [main] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2021-05-03 09:53:03.761 [main] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2021-05-03 09:53:03.762 [main] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2021-05-03 09:53:03.762 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@634e1b39]
[DEBUG] 2021-05-03 09:53:03.762 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@67d8faec]
[DEBUG] 2021-05-03 09:53:03.762 [main] MetamodelGraphWalker - Visiting attribute path : user.roles.roleName
[DEBUG] 2021-05-03 09:53:03.762 [main] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2021-05-03 09:53:03.762 [main] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2021-05-03 09:53:03.762 [main] MetamodelGraphWalker - Visiting attribute path : user.roles.userName
[DEBUG] 2021-05-03 09:53:03.762 [main] MetamodelGraphWalker - Visiting attribute path : user.userName
[DEBUG] 2021-05-03 09:53:03.762 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-05-03 09:53:03.762 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-05-03 09:53:03.763 [main] LoadPlanTreePrinter - LoadPlan(entity=com.leeannjakel.entity.Book)
    - Returns
       - EntityReturnImpl(entity=com.leeannjakel.entity.Book, querySpaceUid=<gen:0>, path=com.leeannjakel.entity.Book)
          - EntityAttributeFetchImpl(entity=com.leeannjakel.entity.Author, querySpaceUid=<gen:1>, path=com.leeannjakel.entity.Book.author)
          - EntityAttributeFetchImpl(entity=com.leeannjakel.entity.Genre, querySpaceUid=<gen:2>, path=com.leeannjakel.entity.Book.genre)
          - EntityAttributeFetchImpl(entity=com.leeannjakel.entity.User, querySpaceUid=<gen:3>, path=com.leeannjakel.entity.Book.user)
             - CollectionAttributeFetchImpl(collection=com.leeannjakel.entity.User.roles, querySpaceUid=<gen:4>, path=com.leeannjakel.entity.Book.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.leeannjakel.entity.Role, querySpaceUid=<gen:5>, path=com.leeannjakel.entity.Book.user.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.leeannjakel.entity.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(author)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.leeannjakel.entity.Author)
                - SQL table alias mapping - author1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}
          - JOIN (JoinDefinedByMetadata(genre)) : <gen:0> -> <gen:2>
             - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.leeannjakel.entity.Genre)
                - SQL table alias mapping - genre2_
                - alias suffix - 2_
                - suffixed key columns - {id1_2_2_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=com.leeannjakel.entity.User)
                - SQL table alias mapping - user3_
                - alias suffix - 3_
                - suffixed key columns - {id1_4_3_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:3> -> <gen:4>
                   - CollectionQuerySpaceImpl(uid=<gen:4>, collection=com.leeannjakel.entity.User.roles)
                      - SQL table alias mapping - roles4_
                      - alias suffix - 4_
                      - suffixed key columns - {user_id4_3_4_}
                      - entity-element alias suffix - 5_
                      - 5_entity-element suffixed key columns - id1_3_5_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:4> -> <gen:5>
                         - EntityQuerySpaceImpl(uid=<gen:5>, entity=com.leeannjakel.entity.Role)
                            - SQL table alias mapping - roles4_
                            - alias suffix - 5_
                            - suffixed key columns - {id1_3_5_}

[DEBUG] 2021-05-03 09:53:03.763 [main] EntityLoader - Static select for entity com.leeannjakel.entity.Book [READ]: select book0_.id as id1_1_0_, book0_.author_id as author_i5_1_0_, book0_.genre_id as genre_id6_1_0_, book0_.isbn as isbn2_1_0_, book0_.notes as notes3_1_0_, book0_.title as title4_1_0_, book0_.user_id as user_id7_1_0_, author1_.id as id1_0_1_, author1_.name as name2_0_1_, genre2_.id as id1_2_2_, genre2_.name as name2_2_2_, user3_.id as id1_4_3_, user3_.email as email2_4_3_, user3_.first_name as first_na3_4_3_, user3_.last_name as last_nam4_4_3_, user3_.password as password5_4_3_, user3_.user_name as user_nam6_4_3_, roles4_.user_id as user_id4_3_4_, roles4_.id as id1_3_4_, roles4_.id as id1_3_5_, roles4_.role_name as role_nam2_3_5_, roles4_.user_id as user_id4_3_5_, roles4_.user_name as user_nam3_3_5_ from book book0_ left outer join author author1_ on book0_.author_id=author1_.id left outer join genre genre2_ on book0_.genre_id=genre2_.id left outer join user user3_ on book0_.user_id=user3_.id left outer join role roles4_ on user3_.id=roles4_.user_id where book0_.id=?
[DEBUG] 2021-05-03 09:53:03.787 [main] Loader - Static select for action ACTION_MERGE on entity com.leeannjakel.entity.Book: select book0_.id as id1_1_0_, book0_.author_id as author_i5_1_0_, book0_.genre_id as genre_id6_1_0_, book0_.isbn as isbn2_1_0_, book0_.notes as notes3_1_0_, book0_.title as title4_1_0_, book0_.user_id as user_id7_1_0_ from book book0_ where book0_.id=?
[DEBUG] 2021-05-03 09:53:03.787 [main] Loader - Static select for action ACTION_REFRESH on entity com.leeannjakel.entity.Book: select book0_.id as id1_1_0_, book0_.author_id as author_i5_1_0_, book0_.genre_id as genre_id6_1_0_, book0_.isbn as isbn2_1_0_, book0_.notes as notes3_1_0_, book0_.title as title4_1_0_, book0_.user_id as user_id7_1_0_ from book book0_ where book0_.id=?
[DEBUG] 2021-05-03 09:53:03.787 [main] AbstractEntityPersister - Static SQL for entity: com.leeannjakel.entity.User
[DEBUG] 2021-05-03 09:53:03.787 [main] AbstractEntityPersister -  Version select: select id from user where id =?
[DEBUG] 2021-05-03 09:53:03.788 [main] AbstractEntityPersister -  Snapshot select: select user_.id, user_.email as email2_4_, user_.first_name as first_na3_4_, user_.last_name as last_nam4_4_, user_.password as password5_4_, user_.user_name as user_nam6_4_ from user user_ where user_.id=?
[DEBUG] 2021-05-03 09:53:03.788 [main] AbstractEntityPersister -  Insert 0: insert into user (email, first_name, last_name, password, user_name, id) values (?, ?, ?, ?, ?, ?)
[DEBUG] 2021-05-03 09:53:03.788 [main] AbstractEntityPersister -  Update 0: update user set email=?, first_name=?, last_name=?, password=?, user_name=? where id=?
[DEBUG] 2021-05-03 09:53:03.789 [main] AbstractEntityPersister -  Delete 0: delete from user where id=?
[DEBUG] 2021-05-03 09:53:03.789 [main] AbstractEntityPersister -  Identity insert: insert into user (email, first_name, last_name, password, user_name) values (?, ?, ?, ?, ?)
[DEBUG] 2021-05-03 09:53:03.789 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7708b66a]
[DEBUG] 2021-05-03 09:53:03.789 [main] MetamodelGraphWalker - Visiting attribute path : books
[DEBUG] 2021-05-03 09:53:03.789 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4dd2ef54]
[DEBUG] 2021-05-03 09:53:03.789 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@795b66d]
[DEBUG] 2021-05-03 09:53:03.789 [main] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2021-05-03 09:53:03.789 [main] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2021-05-03 09:53:03.789 [main] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2021-05-03 09:53:03.789 [main] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2021-05-03 09:53:03.789 [main] MetamodelGraphWalker - Visiting attribute path : roles
[DEBUG] 2021-05-03 09:53:03.789 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@359ceb13]
[DEBUG] 2021-05-03 09:53:03.791 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1068176]
[DEBUG] 2021-05-03 09:53:03.793 [main] MetamodelGraphWalker - Visiting attribute path : roles.roleName
[DEBUG] 2021-05-03 09:53:03.795 [main] MetamodelGraphWalker - Visiting attribute path : roles.user
[DEBUG] 2021-05-03 09:53:03.795 [main] MetamodelGraphWalker - Property path deemed to be circular : roles.user
[DEBUG] 2021-05-03 09:53:03.796 [main] MetamodelGraphWalker - Visiting attribute path : roles.userName
[DEBUG] 2021-05-03 09:53:03.796 [main] MetamodelGraphWalker - Visiting attribute path : userName
[DEBUG] 2021-05-03 09:53:03.797 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-05-03 09:53:03.797 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-05-03 09:53:03.798 [main] LoadPlanTreePrinter - LoadPlan(entity=com.leeannjakel.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.leeannjakel.entity.User, querySpaceUid=<gen:0>, path=com.leeannjakel.entity.User)
          - CollectionAttributeFetchImpl(collection=com.leeannjakel.entity.User.books, querySpaceUid=<gen:1>, path=com.leeannjakel.entity.User.books)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.leeannjakel.entity.Book, querySpaceUid=<gen:2>, path=com.leeannjakel.entity.User.books.<elements>)
          - CollectionAttributeFetchImpl(collection=com.leeannjakel.entity.User.roles, querySpaceUid=<gen:3>, path=com.leeannjakel.entity.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.leeannjakel.entity.Role, querySpaceUid=<gen:4>, path=com.leeannjakel.entity.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.leeannjakel.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:3>
             - CollectionQuerySpaceImpl(uid=<gen:3>, collection=com.leeannjakel.entity.User.roles)
                - SQL table alias mapping - roles1_
                - alias suffix - 1_
                - suffixed key columns - {user_id4_3_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_3_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:3> -> <gen:4>
                   - EntityQuerySpaceImpl(uid=<gen:4>, entity=com.leeannjakel.entity.Role)
                      - SQL table alias mapping - roles1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_3_2_}

[DEBUG] 2021-05-03 09:53:03.808 [main] EntityLoader - Static select for entity com.leeannjakel.entity.User [NONE]: select user0_.id as id1_4_0_, user0_.email as email2_4_0_, user0_.first_name as first_na3_4_0_, user0_.last_name as last_nam4_4_0_, user0_.password as password5_4_0_, user0_.user_name as user_nam6_4_0_, roles1_.user_id as user_id4_3_1_, roles1_.id as id1_3_1_, roles1_.id as id1_3_2_, roles1_.role_name as role_nam2_3_2_, roles1_.user_id as user_id4_3_2_, roles1_.user_name as user_nam3_3_2_ from user user0_ left outer join role roles1_ on user0_.id=roles1_.user_id where user0_.id=?
[DEBUG] 2021-05-03 09:53:03.808 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@23ee2ccf]
[DEBUG] 2021-05-03 09:53:03.809 [main] MetamodelGraphWalker - Visiting attribute path : books
[DEBUG] 2021-05-03 09:53:03.809 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6e685e6c]
[DEBUG] 2021-05-03 09:53:03.809 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5b0902b4]
[DEBUG] 2021-05-03 09:53:03.809 [main] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2021-05-03 09:53:03.809 [main] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2021-05-03 09:53:03.809 [main] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2021-05-03 09:53:03.810 [main] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2021-05-03 09:53:03.810 [main] MetamodelGraphWalker - Visiting attribute path : roles
[DEBUG] 2021-05-03 09:53:03.810 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@9d3d54e]
[DEBUG] 2021-05-03 09:53:03.810 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2f04993d]
[DEBUG] 2021-05-03 09:53:03.811 [main] MetamodelGraphWalker - Visiting attribute path : roles.roleName
[DEBUG] 2021-05-03 09:53:03.811 [main] MetamodelGraphWalker - Visiting attribute path : roles.user
[DEBUG] 2021-05-03 09:53:03.811 [main] MetamodelGraphWalker - Property path deemed to be circular : roles.user
[DEBUG] 2021-05-03 09:53:03.811 [main] MetamodelGraphWalker - Visiting attribute path : roles.userName
[DEBUG] 2021-05-03 09:53:03.811 [main] MetamodelGraphWalker - Visiting attribute path : userName
[DEBUG] 2021-05-03 09:53:03.811 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-05-03 09:53:03.813 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-05-03 09:53:03.818 [main] LoadPlanTreePrinter - LoadPlan(entity=com.leeannjakel.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.leeannjakel.entity.User, querySpaceUid=<gen:0>, path=com.leeannjakel.entity.User)
          - CollectionAttributeFetchImpl(collection=com.leeannjakel.entity.User.books, querySpaceUid=<gen:1>, path=com.leeannjakel.entity.User.books)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.leeannjakel.entity.Book, querySpaceUid=<gen:2>, path=com.leeannjakel.entity.User.books.<elements>)
          - CollectionAttributeFetchImpl(collection=com.leeannjakel.entity.User.roles, querySpaceUid=<gen:3>, path=com.leeannjakel.entity.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.leeannjakel.entity.Role, querySpaceUid=<gen:4>, path=com.leeannjakel.entity.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.leeannjakel.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:3>
             - CollectionQuerySpaceImpl(uid=<gen:3>, collection=com.leeannjakel.entity.User.roles)
                - SQL table alias mapping - roles1_
                - alias suffix - 1_
                - suffixed key columns - {user_id4_3_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_3_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:3> -> <gen:4>
                   - EntityQuerySpaceImpl(uid=<gen:4>, entity=com.leeannjakel.entity.Role)
                      - SQL table alias mapping - roles1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_3_2_}

[DEBUG] 2021-05-03 09:53:03.818 [main] EntityLoader - Static select for entity com.leeannjakel.entity.User [READ]: select user0_.id as id1_4_0_, user0_.email as email2_4_0_, user0_.first_name as first_na3_4_0_, user0_.last_name as last_nam4_4_0_, user0_.password as password5_4_0_, user0_.user_name as user_nam6_4_0_, roles1_.user_id as user_id4_3_1_, roles1_.id as id1_3_1_, roles1_.id as id1_3_2_, roles1_.role_name as role_nam2_3_2_, roles1_.user_id as user_id4_3_2_, roles1_.user_name as user_nam3_3_2_ from user user0_ left outer join role roles1_ on user0_.id=roles1_.user_id where user0_.id=?
[DEBUG] 2021-05-03 09:53:03.820 [main] Loader - Static select for action ACTION_MERGE on entity com.leeannjakel.entity.User: select user0_.id as id1_4_1_, user0_.email as email2_4_1_, user0_.first_name as first_na3_4_1_, user0_.last_name as last_nam4_4_1_, user0_.password as password5_4_1_, user0_.user_name as user_nam6_4_1_, books1_.user_id as user_id7_1_3_, books1_.id as id1_1_3_, books1_.id as id1_1_0_, books1_.author_id as author_i5_1_0_, books1_.genre_id as genre_id6_1_0_, books1_.isbn as isbn2_1_0_, books1_.notes as notes3_1_0_, books1_.title as title4_1_0_, books1_.user_id as user_id7_1_0_ from user user0_ left outer join book books1_ on user0_.id=books1_.user_id where user0_.id=?
[DEBUG] 2021-05-03 09:53:03.822 [main] Loader - Static select for action ACTION_REFRESH on entity com.leeannjakel.entity.User: select user0_.id as id1_4_1_, user0_.email as email2_4_1_, user0_.first_name as first_na3_4_1_, user0_.last_name as last_nam4_4_1_, user0_.password as password5_4_1_, user0_.user_name as user_nam6_4_1_, books1_.user_id as user_id7_1_3_, books1_.id as id1_1_3_, books1_.id as id1_1_0_, books1_.author_id as author_i5_1_0_, books1_.genre_id as genre_id6_1_0_, books1_.isbn as isbn2_1_0_, books1_.notes as notes3_1_0_, books1_.title as title4_1_0_, books1_.user_id as user_id7_1_0_ from user user0_ left outer join book books1_ on user0_.id=books1_.user_id where user0_.id=?
[DEBUG] 2021-05-03 09:53:03.823 [main] AbstractEntityPersister - Static SQL for entity: com.leeannjakel.entity.Author
[DEBUG] 2021-05-03 09:53:03.823 [main] AbstractEntityPersister -  Version select: select id from author where id =?
[DEBUG] 2021-05-03 09:53:03.823 [main] AbstractEntityPersister -  Snapshot select: select author_.id, author_.name as name2_0_ from author author_ where author_.id=?
[DEBUG] 2021-05-03 09:53:03.823 [main] AbstractEntityPersister -  Insert 0: insert into author (name, id) values (?, ?)
[DEBUG] 2021-05-03 09:53:03.823 [main] AbstractEntityPersister -  Update 0: update author set name=? where id=?
[DEBUG] 2021-05-03 09:53:03.823 [main] AbstractEntityPersister -  Delete 0: delete from author where id=?
[DEBUG] 2021-05-03 09:53:03.823 [main] AbstractEntityPersister -  Identity insert: insert into author (name) values (?)
[DEBUG] 2021-05-03 09:53:03.823 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6206b4a7]
[DEBUG] 2021-05-03 09:53:03.823 [main] MetamodelGraphWalker - Visiting attribute path : books
[DEBUG] 2021-05-03 09:53:03.823 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5c1b89ac]
[DEBUG] 2021-05-03 09:53:03.824 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@40a1b6d4]
[DEBUG] 2021-05-03 09:53:03.824 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2021-05-03 09:53:03.824 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-05-03 09:53:03.824 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-05-03 09:53:03.824 [main] LoadPlanTreePrinter - LoadPlan(entity=com.leeannjakel.entity.Author)
    - Returns
       - EntityReturnImpl(entity=com.leeannjakel.entity.Author, querySpaceUid=<gen:0>, path=com.leeannjakel.entity.Author)
          - CollectionAttributeFetchImpl(collection=com.leeannjakel.entity.Author.books, querySpaceUid=<gen:1>, path=com.leeannjakel.entity.Author.books)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.leeannjakel.entity.Book, querySpaceUid=<gen:2>, path=com.leeannjakel.entity.Author.books.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.leeannjakel.entity.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[DEBUG] 2021-05-03 09:53:03.824 [main] EntityLoader - Static select for entity com.leeannjakel.entity.Author [NONE]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_ from author author0_ where author0_.id=?
[DEBUG] 2021-05-03 09:53:03.824 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@175581eb]
[DEBUG] 2021-05-03 09:53:03.825 [main] MetamodelGraphWalker - Visiting attribute path : books
[DEBUG] 2021-05-03 09:53:03.825 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2baf72d5]
[DEBUG] 2021-05-03 09:53:03.825 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@66756662]
[DEBUG] 2021-05-03 09:53:03.825 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2021-05-03 09:53:03.825 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-05-03 09:53:03.825 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-05-03 09:53:03.826 [main] LoadPlanTreePrinter - LoadPlan(entity=com.leeannjakel.entity.Author)
    - Returns
       - EntityReturnImpl(entity=com.leeannjakel.entity.Author, querySpaceUid=<gen:0>, path=com.leeannjakel.entity.Author)
          - CollectionAttributeFetchImpl(collection=com.leeannjakel.entity.Author.books, querySpaceUid=<gen:1>, path=com.leeannjakel.entity.Author.books)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.leeannjakel.entity.Book, querySpaceUid=<gen:2>, path=com.leeannjakel.entity.Author.books.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.leeannjakel.entity.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[DEBUG] 2021-05-03 09:53:03.826 [main] EntityLoader - Static select for entity com.leeannjakel.entity.Author [READ]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_ from author author0_ where author0_.id=?
[DEBUG] 2021-05-03 09:53:03.830 [main] Loader - Static select for action ACTION_MERGE on entity com.leeannjakel.entity.Author: select author0_.id as id1_0_1_, author0_.name as name2_0_1_, books1_.author_id as author_i5_1_3_, books1_.id as id1_1_3_, books1_.id as id1_1_0_, books1_.author_id as author_i5_1_0_, books1_.genre_id as genre_id6_1_0_, books1_.isbn as isbn2_1_0_, books1_.notes as notes3_1_0_, books1_.title as title4_1_0_, books1_.user_id as user_id7_1_0_ from author author0_ left outer join book books1_ on author0_.id=books1_.author_id where author0_.id=?
[DEBUG] 2021-05-03 09:53:03.831 [main] Loader - Static select for action ACTION_REFRESH on entity com.leeannjakel.entity.Author: select author0_.id as id1_0_1_, author0_.name as name2_0_1_, books1_.author_id as author_i5_1_3_, books1_.id as id1_1_3_, books1_.id as id1_1_0_, books1_.author_id as author_i5_1_0_, books1_.genre_id as genre_id6_1_0_, books1_.isbn as isbn2_1_0_, books1_.notes as notes3_1_0_, books1_.title as title4_1_0_, books1_.user_id as user_id7_1_0_ from author author0_ left outer join book books1_ on author0_.id=books1_.author_id where author0_.id=?
[DEBUG] 2021-05-03 09:53:03.831 [main] AbstractEntityPersister - Static SQL for entity: com.leeannjakel.entity.Genre
[DEBUG] 2021-05-03 09:53:03.832 [main] AbstractEntityPersister -  Version select: select id from genre where id =?
[DEBUG] 2021-05-03 09:53:03.832 [main] AbstractEntityPersister -  Snapshot select: select genre_.id, genre_.name as name2_2_ from genre genre_ where genre_.id=?
[DEBUG] 2021-05-03 09:53:03.833 [main] AbstractEntityPersister -  Insert 0: insert into genre (name, id) values (?, ?)
[DEBUG] 2021-05-03 09:53:03.833 [main] AbstractEntityPersister -  Update 0: update genre set name=? where id=?
[DEBUG] 2021-05-03 09:53:03.834 [main] AbstractEntityPersister -  Delete 0: delete from genre where id=?
[DEBUG] 2021-05-03 09:53:03.834 [main] AbstractEntityPersister -  Identity insert: insert into genre (name) values (?)
[DEBUG] 2021-05-03 09:53:03.834 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5d14e99e]
[DEBUG] 2021-05-03 09:53:03.834 [main] MetamodelGraphWalker - Visiting attribute path : books
[DEBUG] 2021-05-03 09:53:03.834 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@682618e5]
[DEBUG] 2021-05-03 09:53:03.834 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@25ad25f5]
[DEBUG] 2021-05-03 09:53:03.834 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2021-05-03 09:53:03.834 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-05-03 09:53:03.834 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-05-03 09:53:03.835 [main] LoadPlanTreePrinter - LoadPlan(entity=com.leeannjakel.entity.Genre)
    - Returns
       - EntityReturnImpl(entity=com.leeannjakel.entity.Genre, querySpaceUid=<gen:0>, path=com.leeannjakel.entity.Genre)
          - CollectionAttributeFetchImpl(collection=com.leeannjakel.entity.Genre.books, querySpaceUid=<gen:1>, path=com.leeannjakel.entity.Genre.books)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.leeannjakel.entity.Book, querySpaceUid=<gen:2>, path=com.leeannjakel.entity.Genre.books.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.leeannjakel.entity.Genre)
          - SQL table alias mapping - genre0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

[DEBUG] 2021-05-03 09:53:03.835 [main] EntityLoader - Static select for entity com.leeannjakel.entity.Genre [NONE]: select genre0_.id as id1_2_0_, genre0_.name as name2_2_0_ from genre genre0_ where genre0_.id=?
[DEBUG] 2021-05-03 09:53:03.835 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5f0f70c7]
[DEBUG] 2021-05-03 09:53:03.835 [main] MetamodelGraphWalker - Visiting attribute path : books
[DEBUG] 2021-05-03 09:53:03.835 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@40d96578]
[DEBUG] 2021-05-03 09:53:03.835 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@c97721b]
[DEBUG] 2021-05-03 09:53:03.835 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2021-05-03 09:53:03.835 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-05-03 09:53:03.835 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-05-03 09:53:03.836 [main] LoadPlanTreePrinter - LoadPlan(entity=com.leeannjakel.entity.Genre)
    - Returns
       - EntityReturnImpl(entity=com.leeannjakel.entity.Genre, querySpaceUid=<gen:0>, path=com.leeannjakel.entity.Genre)
          - CollectionAttributeFetchImpl(collection=com.leeannjakel.entity.Genre.books, querySpaceUid=<gen:1>, path=com.leeannjakel.entity.Genre.books)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.leeannjakel.entity.Book, querySpaceUid=<gen:2>, path=com.leeannjakel.entity.Genre.books.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.leeannjakel.entity.Genre)
          - SQL table alias mapping - genre0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

[DEBUG] 2021-05-03 09:53:03.836 [main] EntityLoader - Static select for entity com.leeannjakel.entity.Genre [READ]: select genre0_.id as id1_2_0_, genre0_.name as name2_2_0_ from genre genre0_ where genre0_.id=?
[DEBUG] 2021-05-03 09:53:03.837 [main] Loader - Static select for action ACTION_MERGE on entity com.leeannjakel.entity.Genre: select genre0_.id as id1_2_1_, genre0_.name as name2_2_1_, books1_.genre_id as genre_id6_1_3_, books1_.id as id1_1_3_, books1_.id as id1_1_0_, books1_.author_id as author_i5_1_0_, books1_.genre_id as genre_id6_1_0_, books1_.isbn as isbn2_1_0_, books1_.notes as notes3_1_0_, books1_.title as title4_1_0_, books1_.user_id as user_id7_1_0_ from genre genre0_ left outer join book books1_ on genre0_.id=books1_.genre_id where genre0_.id=?
[DEBUG] 2021-05-03 09:53:03.837 [main] Loader - Static select for action ACTION_REFRESH on entity com.leeannjakel.entity.Genre: select genre0_.id as id1_2_1_, genre0_.name as name2_2_1_, books1_.genre_id as genre_id6_1_3_, books1_.id as id1_1_3_, books1_.id as id1_1_0_, books1_.author_id as author_i5_1_0_, books1_.genre_id as genre_id6_1_0_, books1_.isbn as isbn2_1_0_, books1_.notes as notes3_1_0_, books1_.title as title4_1_0_, books1_.user_id as user_id7_1_0_ from genre genre0_ left outer join book books1_ on genre0_.id=books1_.genre_id where genre0_.id=?
[DEBUG] 2021-05-03 09:53:03.837 [main] AbstractEntityPersister - Static SQL for entity: com.leeannjakel.entity.Role
[DEBUG] 2021-05-03 09:53:03.842 [main] AbstractEntityPersister -  Version select: select id from role where id =?
[DEBUG] 2021-05-03 09:53:03.842 [main] AbstractEntityPersister -  Snapshot select: select role_.id, role_.role_name as role_nam2_3_, role_.user_id as user_id4_3_, role_.user_name as user_nam3_3_ from role role_ where role_.id=?
[DEBUG] 2021-05-03 09:53:03.842 [main] AbstractEntityPersister -  Insert 0: insert into role (role_name, user_id, user_name, id) values (?, ?, ?, ?)
[DEBUG] 2021-05-03 09:53:03.842 [main] AbstractEntityPersister -  Update 0: update role set role_name=?, user_id=?, user_name=? where id=?
[DEBUG] 2021-05-03 09:53:03.842 [main] AbstractEntityPersister -  Delete 0: delete from role where id=?
[DEBUG] 2021-05-03 09:53:03.842 [main] AbstractEntityPersister -  Identity insert: insert into role (role_name, user_id, user_name) values (?, ?, ?)
[DEBUG] 2021-05-03 09:53:03.843 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@283ab206]
[DEBUG] 2021-05-03 09:53:03.843 [main] MetamodelGraphWalker - Visiting attribute path : roleName
[DEBUG] 2021-05-03 09:53:03.843 [main] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2021-05-03 09:53:03.843 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3e03046d]
[DEBUG] 2021-05-03 09:53:03.843 [main] MetamodelGraphWalker - Visiting attribute path : user.books
[DEBUG] 2021-05-03 09:53:03.843 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@74e497ae]
[DEBUG] 2021-05-03 09:53:03.843 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@13516600]
[DEBUG] 2021-05-03 09:53:03.843 [main] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2021-05-03 09:53:03.843 [main] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2021-05-03 09:53:03.843 [main] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2021-05-03 09:53:03.843 [main] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2021-05-03 09:53:03.843 [main] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2021-05-03 09:53:03.843 [main] MetamodelGraphWalker - Property path deemed to be circular : user.roles
[DEBUG] 2021-05-03 09:53:03.843 [main] MetamodelGraphWalker - Visiting attribute path : user.userName
[DEBUG] 2021-05-03 09:53:03.843 [main] MetamodelGraphWalker - Visiting attribute path : userName
[DEBUG] 2021-05-03 09:53:03.843 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-05-03 09:53:03.843 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-05-03 09:53:03.844 [main] LoadPlanTreePrinter - LoadPlan(entity=com.leeannjakel.entity.Role)
    - Returns
       - EntityReturnImpl(entity=com.leeannjakel.entity.Role, querySpaceUid=<gen:0>, path=com.leeannjakel.entity.Role)
          - EntityAttributeFetchImpl(entity=com.leeannjakel.entity.User, querySpaceUid=<gen:1>, path=com.leeannjakel.entity.Role.user)
             - CollectionAttributeFetchImpl(collection=com.leeannjakel.entity.User.books, querySpaceUid=<gen:2>, path=com.leeannjakel.entity.Role.user.books)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.leeannjakel.entity.Book, querySpaceUid=<gen:3>, path=com.leeannjakel.entity.Role.user.books.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.leeannjakel.entity.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.leeannjakel.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_4_1_}

[DEBUG] 2021-05-03 09:53:03.844 [main] EntityLoader - Static select for entity com.leeannjakel.entity.Role [NONE]: select role0_.id as id1_3_0_, role0_.role_name as role_nam2_3_0_, role0_.user_id as user_id4_3_0_, role0_.user_name as user_nam3_3_0_, user1_.id as id1_4_1_, user1_.email as email2_4_1_, user1_.first_name as first_na3_4_1_, user1_.last_name as last_nam4_4_1_, user1_.password as password5_4_1_, user1_.user_name as user_nam6_4_1_ from role role0_ left outer join user user1_ on role0_.user_id=user1_.id where role0_.id=?
[DEBUG] 2021-05-03 09:53:03.844 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@35d7386b]
[DEBUG] 2021-05-03 09:53:03.844 [main] MetamodelGraphWalker - Visiting attribute path : roleName
[DEBUG] 2021-05-03 09:53:03.844 [main] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2021-05-03 09:53:03.844 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@718989fa]
[DEBUG] 2021-05-03 09:53:03.844 [main] MetamodelGraphWalker - Visiting attribute path : user.books
[DEBUG] 2021-05-03 09:53:03.844 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6568f998]
[DEBUG] 2021-05-03 09:53:03.844 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@45d4421d]
[DEBUG] 2021-05-03 09:53:03.844 [main] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2021-05-03 09:53:03.844 [main] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2021-05-03 09:53:03.844 [main] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2021-05-03 09:53:03.844 [main] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2021-05-03 09:53:03.844 [main] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2021-05-03 09:53:03.845 [main] MetamodelGraphWalker - Property path deemed to be circular : user.roles
[DEBUG] 2021-05-03 09:53:03.845 [main] MetamodelGraphWalker - Visiting attribute path : user.userName
[DEBUG] 2021-05-03 09:53:03.845 [main] MetamodelGraphWalker - Visiting attribute path : userName
[DEBUG] 2021-05-03 09:53:03.845 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-05-03 09:53:03.845 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-05-03 09:53:03.845 [main] LoadPlanTreePrinter - LoadPlan(entity=com.leeannjakel.entity.Role)
    - Returns
       - EntityReturnImpl(entity=com.leeannjakel.entity.Role, querySpaceUid=<gen:0>, path=com.leeannjakel.entity.Role)
          - EntityAttributeFetchImpl(entity=com.leeannjakel.entity.User, querySpaceUid=<gen:1>, path=com.leeannjakel.entity.Role.user)
             - CollectionAttributeFetchImpl(collection=com.leeannjakel.entity.User.books, querySpaceUid=<gen:2>, path=com.leeannjakel.entity.Role.user.books)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.leeannjakel.entity.Book, querySpaceUid=<gen:3>, path=com.leeannjakel.entity.Role.user.books.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.leeannjakel.entity.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.leeannjakel.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_4_1_}

[DEBUG] 2021-05-03 09:53:03.845 [main] EntityLoader - Static select for entity com.leeannjakel.entity.Role [READ]: select role0_.id as id1_3_0_, role0_.role_name as role_nam2_3_0_, role0_.user_id as user_id4_3_0_, role0_.user_name as user_nam3_3_0_, user1_.id as id1_4_1_, user1_.email as email2_4_1_, user1_.first_name as first_na3_4_1_, user1_.last_name as last_nam4_4_1_, user1_.password as password5_4_1_, user1_.user_name as user_nam6_4_1_ from role role0_ left outer join user user1_ on role0_.user_id=user1_.id where role0_.id=?
[DEBUG] 2021-05-03 09:53:03.845 [main] Loader - Static select for action ACTION_MERGE on entity com.leeannjakel.entity.Role: select role0_.id as id1_3_0_, role0_.role_name as role_nam2_3_0_, role0_.user_id as user_id4_3_0_, role0_.user_name as user_nam3_3_0_ from role role0_ where role0_.id=?
[DEBUG] 2021-05-03 09:53:03.846 [main] Loader - Static select for action ACTION_REFRESH on entity com.leeannjakel.entity.Role: select role0_.id as id1_3_0_, role0_.role_name as role_nam2_3_0_, role0_.user_id as user_id4_3_0_, role0_.user_name as user_nam3_3_0_ from role role0_ where role0_.id=?
[DEBUG] 2021-05-03 09:53:03.856 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@133aacbe]
[DEBUG] 2021-05-03 09:53:03.857 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2aa5bd48]
[DEBUG] 2021-05-03 09:53:03.857 [main] MetamodelGraphWalker - Visiting attribute path : author
[DEBUG] 2021-05-03 09:53:03.857 [main] MetamodelGraphWalker - Property path deemed to be circular : author
[DEBUG] 2021-05-03 09:53:03.857 [main] MetamodelGraphWalker - Visiting attribute path : genre
[DEBUG] 2021-05-03 09:53:03.857 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@19002b34]
[DEBUG] 2021-05-03 09:53:03.857 [main] MetamodelGraphWalker - Visiting attribute path : genre.books
[DEBUG] 2021-05-03 09:53:03.858 [main] MetamodelGraphWalker - Property path deemed to be circular : genre.books
[DEBUG] 2021-05-03 09:53:03.858 [main] MetamodelGraphWalker - Visiting attribute path : genre.name
[DEBUG] 2021-05-03 09:53:03.858 [main] MetamodelGraphWalker - Visiting attribute path : isbn
[DEBUG] 2021-05-03 09:53:03.858 [main] MetamodelGraphWalker - Visiting attribute path : notes
[DEBUG] 2021-05-03 09:53:03.858 [main] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2021-05-03 09:53:03.858 [main] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2021-05-03 09:53:03.858 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3e6748ae]
[DEBUG] 2021-05-03 09:53:03.858 [main] MetamodelGraphWalker - Visiting attribute path : user.books
[DEBUG] 2021-05-03 09:53:03.858 [main] MetamodelGraphWalker - Property path deemed to be circular : user.books
[DEBUG] 2021-05-03 09:53:03.858 [main] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2021-05-03 09:53:03.858 [main] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2021-05-03 09:53:03.859 [main] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2021-05-03 09:53:03.859 [main] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2021-05-03 09:53:03.859 [main] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2021-05-03 09:53:03.859 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3030836d]
[DEBUG] 2021-05-03 09:53:03.859 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6af78a48]
[DEBUG] 2021-05-03 09:53:03.859 [main] MetamodelGraphWalker - Visiting attribute path : user.userName
[DEBUG] 2021-05-03 09:53:03.860 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-05-03 09:53:03.862 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-05-03 09:53:03.866 [main] LoadPlanTreePrinter - LoadPlan(collection=com.leeannjakel.entity.Author.books)
    - Returns
       - CollectionReturnImpl(collection=com.leeannjakel.entity.Author.books, querySpaceUid=<gen:0>, path=[com.leeannjakel.entity.Author.books])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.leeannjakel.entity.Book, querySpaceUid=<gen:1>, path=[com.leeannjakel.entity.Author.books].<elements>)
             - EntityAttributeFetchImpl(entity=com.leeannjakel.entity.Genre, querySpaceUid=<gen:2>, path=[com.leeannjakel.entity.Author.books].<elements>.genre)
             - EntityAttributeFetchImpl(entity=com.leeannjakel.entity.User, querySpaceUid=<gen:3>, path=[com.leeannjakel.entity.Author.books].<elements>.user)
                - CollectionAttributeFetchImpl(collection=com.leeannjakel.entity.User.roles, querySpaceUid=<gen:4>, path=[com.leeannjakel.entity.Author.books].<elements>.user.roles)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.leeannjakel.entity.Role, querySpaceUid=<gen:5>, path=[com.leeannjakel.entity.Author.books].<elements>.user.roles.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.leeannjakel.entity.Author.books)
          - SQL table alias mapping - books0_
          - alias suffix - 0_
          - suffixed key columns - {author_i5_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.leeannjakel.entity.Book)
                - SQL table alias mapping - books0_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}
                - JOIN (JoinDefinedByMetadata(genre)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.leeannjakel.entity.Genre)
                      - SQL table alias mapping - genre1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_2_2_}
                - JOIN (JoinDefinedByMetadata(user)) : <gen:1> -> <gen:3>
                   - EntityQuerySpaceImpl(uid=<gen:3>, entity=com.leeannjakel.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 3_
                      - suffixed key columns - {id1_4_3_}

[DEBUG] 2021-05-03 09:53:03.866 [main] CollectionLoader - Static select for collection com.leeannjakel.entity.Author.books: select books0_.author_id as author_i5_1_0_, books0_.id as id1_1_0_, books0_.id as id1_1_1_, books0_.author_id as author_i5_1_1_, books0_.genre_id as genre_id6_1_1_, books0_.isbn as isbn2_1_1_, books0_.notes as notes3_1_1_, books0_.title as title4_1_1_, books0_.user_id as user_id7_1_1_, genre1_.id as id1_2_2_, genre1_.name as name2_2_2_, user2_.id as id1_4_3_, user2_.email as email2_4_3_, user2_.first_name as first_na3_4_3_, user2_.last_name as last_nam4_4_3_, user2_.password as password5_4_3_, user2_.user_name as user_nam6_4_3_ from book books0_ left outer join genre genre1_ on books0_.genre_id=genre1_.id left outer join user user2_ on books0_.user_id=user2_.id where books0_.author_id=?
[DEBUG] 2021-05-03 09:53:03.866 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@230232b0]
[DEBUG] 2021-05-03 09:53:03.867 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@44fd7ba4]
[DEBUG] 2021-05-03 09:53:03.867 [main] MetamodelGraphWalker - Visiting attribute path : author
[DEBUG] 2021-05-03 09:53:03.867 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5b742bc8]
[DEBUG] 2021-05-03 09:53:03.867 [main] MetamodelGraphWalker - Visiting attribute path : author.books
[DEBUG] 2021-05-03 09:53:03.867 [main] MetamodelGraphWalker - Property path deemed to be circular : author.books
[DEBUG] 2021-05-03 09:53:03.867 [main] MetamodelGraphWalker - Visiting attribute path : author.name
[DEBUG] 2021-05-03 09:53:03.867 [main] MetamodelGraphWalker - Visiting attribute path : genre
[DEBUG] 2021-05-03 09:53:03.867 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@130a6eb9]
[DEBUG] 2021-05-03 09:53:03.868 [main] MetamodelGraphWalker - Visiting attribute path : genre.books
[DEBUG] 2021-05-03 09:53:03.868 [main] MetamodelGraphWalker - Property path deemed to be circular : genre.books
[DEBUG] 2021-05-03 09:53:03.868 [main] MetamodelGraphWalker - Visiting attribute path : genre.name
[DEBUG] 2021-05-03 09:53:03.868 [main] MetamodelGraphWalker - Visiting attribute path : isbn
[DEBUG] 2021-05-03 09:53:03.868 [main] MetamodelGraphWalker - Visiting attribute path : notes
[DEBUG] 2021-05-03 09:53:03.868 [main] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2021-05-03 09:53:03.868 [main] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2021-05-03 09:53:03.868 [main] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2021-05-03 09:53:03.868 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-05-03 09:53:03.869 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-05-03 09:53:03.870 [main] LoadPlanTreePrinter - LoadPlan(collection=com.leeannjakel.entity.User.books)
    - Returns
       - CollectionReturnImpl(collection=com.leeannjakel.entity.User.books, querySpaceUid=<gen:0>, path=[com.leeannjakel.entity.User.books])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.leeannjakel.entity.Book, querySpaceUid=<gen:1>, path=[com.leeannjakel.entity.User.books].<elements>)
             - EntityAttributeFetchImpl(entity=com.leeannjakel.entity.Author, querySpaceUid=<gen:2>, path=[com.leeannjakel.entity.User.books].<elements>.author)
             - EntityAttributeFetchImpl(entity=com.leeannjakel.entity.Genre, querySpaceUid=<gen:3>, path=[com.leeannjakel.entity.User.books].<elements>.genre)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.leeannjakel.entity.User.books)
          - SQL table alias mapping - books0_
          - alias suffix - 0_
          - suffixed key columns - {user_id7_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.leeannjakel.entity.Book)
                - SQL table alias mapping - books0_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}
                - JOIN (JoinDefinedByMetadata(author)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.leeannjakel.entity.Author)
                      - SQL table alias mapping - author1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}
                - JOIN (JoinDefinedByMetadata(genre)) : <gen:1> -> <gen:3>
                   - EntityQuerySpaceImpl(uid=<gen:3>, entity=com.leeannjakel.entity.Genre)
                      - SQL table alias mapping - genre2_
                      - alias suffix - 3_
                      - suffixed key columns - {id1_2_3_}

[DEBUG] 2021-05-03 09:53:03.870 [main] CollectionLoader - Static select for collection com.leeannjakel.entity.User.books: select books0_.user_id as user_id7_1_0_, books0_.id as id1_1_0_, books0_.id as id1_1_1_, books0_.author_id as author_i5_1_1_, books0_.genre_id as genre_id6_1_1_, books0_.isbn as isbn2_1_1_, books0_.notes as notes3_1_1_, books0_.title as title4_1_1_, books0_.user_id as user_id7_1_1_, author1_.id as id1_0_2_, author1_.name as name2_0_2_, genre2_.id as id1_2_3_, genre2_.name as name2_2_3_ from book books0_ left outer join author author1_ on books0_.author_id=author1_.id left outer join genre genre2_ on books0_.genre_id=genre2_.id where books0_.user_id=?
[DEBUG] 2021-05-03 09:53:03.870 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@8f57e4c]
[DEBUG] 2021-05-03 09:53:03.870 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@26fadd98]
[DEBUG] 2021-05-03 09:53:03.875 [main] MetamodelGraphWalker - Visiting attribute path : roleName
[DEBUG] 2021-05-03 09:53:03.875 [main] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2021-05-03 09:53:03.875 [main] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2021-05-03 09:53:03.875 [main] MetamodelGraphWalker - Visiting attribute path : userName
[DEBUG] 2021-05-03 09:53:03.876 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-05-03 09:53:03.876 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-05-03 09:53:03.878 [main] LoadPlanTreePrinter - LoadPlan(collection=com.leeannjakel.entity.User.roles)
    - Returns
       - CollectionReturnImpl(collection=com.leeannjakel.entity.User.roles, querySpaceUid=<gen:0>, path=[com.leeannjakel.entity.User.roles])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.leeannjakel.entity.Role, querySpaceUid=<gen:1>, path=[com.leeannjakel.entity.User.roles].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.leeannjakel.entity.User.roles)
          - SQL table alias mapping - roles0_
          - alias suffix - 0_
          - suffixed key columns - {user_id4_3_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_3_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.leeannjakel.entity.Role)
                - SQL table alias mapping - roles0_
                - alias suffix - 1_
                - suffixed key columns - {id1_3_1_}

[DEBUG] 2021-05-03 09:53:03.878 [main] CollectionLoader - Static select for collection com.leeannjakel.entity.User.roles: select roles0_.user_id as user_id4_3_0_, roles0_.id as id1_3_0_, roles0_.id as id1_3_1_, roles0_.role_name as role_nam2_3_1_, roles0_.user_id as user_id4_3_1_, roles0_.user_name as user_nam3_3_1_ from role roles0_ where roles0_.user_id=?
[DEBUG] 2021-05-03 09:53:03.878 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1e92c3b6]
[DEBUG] 2021-05-03 09:53:03.879 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6ef4cbe1]
[DEBUG] 2021-05-03 09:53:03.880 [main] MetamodelGraphWalker - Visiting attribute path : author
[DEBUG] 2021-05-03 09:53:03.880 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@23ad2d17]
[DEBUG] 2021-05-03 09:53:03.880 [main] MetamodelGraphWalker - Visiting attribute path : author.books
[DEBUG] 2021-05-03 09:53:03.880 [main] MetamodelGraphWalker - Property path deemed to be circular : author.books
[DEBUG] 2021-05-03 09:53:03.880 [main] MetamodelGraphWalker - Visiting attribute path : author.name
[DEBUG] 2021-05-03 09:53:03.880 [main] MetamodelGraphWalker - Visiting attribute path : genre
[DEBUG] 2021-05-03 09:53:03.881 [main] MetamodelGraphWalker - Property path deemed to be circular : genre
[DEBUG] 2021-05-03 09:53:03.881 [main] MetamodelGraphWalker - Visiting attribute path : isbn
[DEBUG] 2021-05-03 09:53:03.881 [main] MetamodelGraphWalker - Visiting attribute path : notes
[DEBUG] 2021-05-03 09:53:03.881 [main] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2021-05-03 09:53:03.881 [main] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2021-05-03 09:53:03.882 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@25f0c5e7]
[DEBUG] 2021-05-03 09:53:03.883 [main] MetamodelGraphWalker - Visiting attribute path : user.books
[DEBUG] 2021-05-03 09:53:03.883 [main] MetamodelGraphWalker - Property path deemed to be circular : user.books
[DEBUG] 2021-05-03 09:53:03.883 [main] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2021-05-03 09:53:03.883 [main] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2021-05-03 09:53:03.883 [main] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2021-05-03 09:53:03.883 [main] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2021-05-03 09:53:03.883 [main] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2021-05-03 09:53:03.883 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@120df990]
[DEBUG] 2021-05-03 09:53:03.883 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@b506ed0]
[DEBUG] 2021-05-03 09:53:03.883 [main] MetamodelGraphWalker - Visiting attribute path : user.userName
[DEBUG] 2021-05-03 09:53:03.885 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-05-03 09:53:03.886 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-05-03 09:53:03.887 [main] LoadPlanTreePrinter - LoadPlan(collection=com.leeannjakel.entity.Genre.books)
    - Returns
       - CollectionReturnImpl(collection=com.leeannjakel.entity.Genre.books, querySpaceUid=<gen:0>, path=[com.leeannjakel.entity.Genre.books])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.leeannjakel.entity.Book, querySpaceUid=<gen:1>, path=[com.leeannjakel.entity.Genre.books].<elements>)
             - EntityAttributeFetchImpl(entity=com.leeannjakel.entity.Author, querySpaceUid=<gen:2>, path=[com.leeannjakel.entity.Genre.books].<elements>.author)
             - EntityAttributeFetchImpl(entity=com.leeannjakel.entity.User, querySpaceUid=<gen:3>, path=[com.leeannjakel.entity.Genre.books].<elements>.user)
                - CollectionAttributeFetchImpl(collection=com.leeannjakel.entity.User.roles, querySpaceUid=<gen:4>, path=[com.leeannjakel.entity.Genre.books].<elements>.user.roles)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.leeannjakel.entity.Role, querySpaceUid=<gen:5>, path=[com.leeannjakel.entity.Genre.books].<elements>.user.roles.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.leeannjakel.entity.Genre.books)
          - SQL table alias mapping - books0_
          - alias suffix - 0_
          - suffixed key columns - {genre_id6_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.leeannjakel.entity.Book)
                - SQL table alias mapping - books0_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}
                - JOIN (JoinDefinedByMetadata(author)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.leeannjakel.entity.Author)
                      - SQL table alias mapping - author1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}
                - JOIN (JoinDefinedByMetadata(user)) : <gen:1> -> <gen:3>
                   - EntityQuerySpaceImpl(uid=<gen:3>, entity=com.leeannjakel.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 3_
                      - suffixed key columns - {id1_4_3_}

[DEBUG] 2021-05-03 09:53:03.887 [main] CollectionLoader - Static select for collection com.leeannjakel.entity.Genre.books: select books0_.genre_id as genre_id6_1_0_, books0_.id as id1_1_0_, books0_.id as id1_1_1_, books0_.author_id as author_i5_1_1_, books0_.genre_id as genre_id6_1_1_, books0_.isbn as isbn2_1_1_, books0_.notes as notes3_1_1_, books0_.title as title4_1_1_, books0_.user_id as user_id7_1_1_, author1_.id as id1_0_2_, author1_.name as name2_0_2_, user2_.id as id1_4_3_, user2_.email as email2_4_3_, user2_.first_name as first_na3_4_3_, user2_.last_name as last_nam4_4_3_, user2_.password as password5_4_3_, user2_.user_name as user_nam6_4_3_ from book books0_ left outer join author author1_ on books0_.author_id=author1_.id left outer join user user2_ on books0_.user_id=user2_.id where books0_.genre_id=?
[DEBUG] 2021-05-03 09:53:03.933 [main] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2021-05-03 09:53:03.933 [main] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2021-05-03 09:53:03.933 [main] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2021-05-03 09:53:03.949 [main] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2021-05-03 09:53:03.950 [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2021-05-03 09:53:03.950 [main] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2021-05-03 09:53:03.951 [main] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2021-05-03 09:53:03.990 [main] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@504497fa
[DEBUG] 2021-05-03 09:53:04.000 [main] SessionFactoryRegistry - Registering SessionFactory: b9bd2d74-efd2-4766-905b-e465aaed2acd (<unnamed>)
[DEBUG] 2021-05-03 09:53:04.000 [main] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2021-05-03 09:53:04.473 [main] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2021-05-03 09:53:04.670 [main] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from Author as generatedAlias0 where generatedAlias0.name=:param0
[DEBUG] 2021-05-03 09:53:04.754 [main] QueryTranslatorFactoryInitiator - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@18e4551
[DEBUG] 2021-05-03 09:53:04.850 [main] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from com.leeannjakel.entity.Author as generatedAlias0 where generatedAlias0.name=:param0
[DEBUG] 2021-05-03 09:53:04.879 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2021-05-03 09:53:04.909 [main] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  \-[IDENT] Node: 'leeannjakel'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'Author'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'name'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

[DEBUG] 2021-05-03 09:53:04.999 [main] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2021-05-03 09:53:05.051 [main] FromElement - FromClause{level=1} : com.leeannjakel.entity.Author (generatedAlias0) -> author0_
[DEBUG] 2021-05-03 09:53:05.052 [main] FromReferenceNode - Resolved : generatedAlias0 -> author0_.id
[DEBUG] 2021-05-03 09:53:05.066 [main] FromReferenceNode - Resolved : generatedAlias0 -> author0_.id
[DEBUG] 2021-05-03 09:53:05.067 [main] DotNode - getDataType() : name -> org.hibernate.type.StringType@642505c7
[DEBUG] 2021-05-03 09:53:05.068 [main] FromReferenceNode - Resolved : generatedAlias0.name -> author0_.name
[DEBUG] 2021-05-03 09:53:05.081 [main] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2021-05-03 09:53:05.082 [main] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} author0_.id ) ( FromClause{level=1} author author0_ ) ( where ( = ( author0_.name author0_.id name ) ? ) ) )
[DEBUG] 2021-05-03 09:53:05.099 [main] JoinProcessor - Using FROM fragment [author author0_]
[DEBUG] 2021-05-03 09:53:05.099 [main] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2021-05-03 09:53:05.116 [main] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (author)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'author0_.id as id1_0_' {alias=generatedAlias0, className=com.leeannjakel.entity.Author, tableAlias=author0_}
    |  \-[SQL_TOKEN] SqlFragment: 'author0_.name as name2_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[author0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'author author0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=author,tableAlias=author0_,origin=null,columns={,className=com.leeannjakel.entity.Author}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'author0_.name' {propertyName=name,dereferenceType=PRIMITIVE,getPropertyPath=name,path=generatedAlias0.name,tableAlias=author0_,className=com.leeannjakel.entity.Author,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'author0_.id' {alias=generatedAlias0, className=com.leeannjakel.entity.Author, tableAlias=author0_}
          |  \-[IDENT] IdentNode: 'name' {originalText=name}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@642505c7}

[DEBUG] 2021-05-03 09:53:05.116 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2021-05-03 09:53:05.138 [main] QueryTranslatorImpl - HQL: select generatedAlias0 from com.leeannjakel.entity.Author as generatedAlias0 where generatedAlias0.name=:param0
[DEBUG] 2021-05-03 09:53:05.139 [main] QueryTranslatorImpl - SQL: select author0_.id as id1_0_, author0_.name as name2_0_ from author author0_ where author0_.name=?
[DEBUG] 2021-05-03 09:53:05.139 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2021-05-03 09:53:05.199 [main] SQL - select author0_.id as id1_0_, author0_.name as name2_0_ from author author0_ where author0_.name=?
[DEBUG] 2021-05-03 09:53:05.279 [main] Loader - Result set row: 0
[DEBUG] 2021-05-03 09:53:05.290 [main] Loader - Result row: EntityKey[com.leeannjakel.entity.Author#1]
[DEBUG] 2021-05-03 09:53:05.320 [main] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.Author#1]
[DEBUG] 2021-05-03 09:53:05.323 [main] TwoPhaseLoad - Processing attribute `books` : value = NOT NULL COLLECTION
[DEBUG] 2021-05-03 09:53:05.329 [main] TwoPhaseLoad - Attribute (`books`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-03 09:53:05.356 [main] TwoPhaseLoad - Processing attribute `name` : value = Sarah J. Maas
[DEBUG] 2021-05-03 09:53:05.356 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-03 09:53:05.357 [main] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.Author#1]
[DEBUG] 2021-05-03 09:53:05.359 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-05-03 09:53:05.451 [main] SQL - select user0_.id as id1_4_0_, user0_.email as email2_4_0_, user0_.first_name as first_na3_4_0_, user0_.last_name as last_nam4_4_0_, user0_.password as password5_4_0_, user0_.user_name as user_nam6_4_0_, roles1_.user_id as user_id4_3_1_, roles1_.id as id1_3_1_, roles1_.id as id1_3_2_, roles1_.role_name as role_nam2_3_2_, roles1_.user_id as user_id4_3_2_, roles1_.user_name as user_nam3_3_2_ from user user0_ left outer join role roles1_ on user0_.id=roles1_.user_id where user0_.id=?
[DEBUG] 2021-05-03 09:53:05.469 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-05-03 09:53:05.481 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-05-03 09:53:05.484 [main] CollectionReferenceInitializerImpl - Result set contains (possibly empty) collection: [com.leeannjakel.entity.User.roles#1]
[DEBUG] 2021-05-03 09:53:05.494 [main] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.User#1]
[DEBUG] 2021-05-03 09:53:05.502 [main] TwoPhaseLoad - Processing attribute `books` : value = NOT NULL COLLECTION
[DEBUG] 2021-05-03 09:53:05.502 [main] TwoPhaseLoad - Attribute (`books`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-03 09:53:05.503 [main] TwoPhaseLoad - Processing attribute `email` : value = email@something.com
[DEBUG] 2021-05-03 09:53:05.504 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-03 09:53:05.506 [main] TwoPhaseLoad - Processing attribute `firstName` : value = LeeAnn
[DEBUG] 2021-05-03 09:53:05.512 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-03 09:53:05.512 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Jakel
[DEBUG] 2021-05-03 09:53:05.512 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-03 09:53:05.512 [main] TwoPhaseLoad - Processing attribute `password` : value = password
[DEBUG] 2021-05-03 09:53:05.512 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-03 09:53:05.513 [main] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2021-05-03 09:53:05.513 [main] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-03 09:53:05.513 [main] TwoPhaseLoad - Processing attribute `userName` : value = ljakel
[DEBUG] 2021-05-03 09:53:05.513 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-03 09:53:05.513 [main] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.User#1]
[DEBUG] 2021-05-03 09:53:05.513 [main] CollectionLoadContext - 1 collections were found in result set for role: com.leeannjakel.entity.User.roles
[DEBUG] 2021-05-03 09:53:05.513 [main] CollectionLoadContext - Collection fully initialized: [com.leeannjakel.entity.User.roles#1]
[DEBUG] 2021-05-03 09:53:05.514 [main] CollectionLoadContext - 1 collections initialized for role: com.leeannjakel.entity.User.roles
[DEBUG] 2021-05-03 09:53:05.514 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-05-03 09:53:05.514 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.leeannjakel.entity.User#1
[DEBUG] 2021-05-03 09:53:05.515 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-05-03 09:53:05.740 [main] SQL - select genre0_.id as id1_2_0_, genre0_.name as name2_2_0_ from genre genre0_ where genre0_.id=?
[DEBUG] 2021-05-03 09:53:05.760 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-05-03 09:53:05.760 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-05-03 09:53:05.764 [main] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.Genre#1]
[DEBUG] 2021-05-03 09:53:05.764 [main] TwoPhaseLoad - Processing attribute `books` : value = NOT NULL COLLECTION
[DEBUG] 2021-05-03 09:53:05.765 [main] TwoPhaseLoad - Attribute (`books`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-03 09:53:05.765 [main] TwoPhaseLoad - Processing attribute `name` : value = Young Adult
[DEBUG] 2021-05-03 09:53:05.765 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-03 09:53:05.767 [main] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.Genre#1]
[DEBUG] 2021-05-03 09:53:05.768 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-05-03 09:53:05.768 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.leeannjakel.entity.Genre#1
[DEBUG] 2021-05-03 09:53:05.768 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-05-03 09:53:05.886 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2021-05-03 09:53:05.895 [main] TransactionImpl - begin
[DEBUG] 2021-05-03 09:53:05.916 [main] ActionQueue - Executing identity-insert immediately
[DEBUG] 2021-05-03 09:53:05.918 [main] SQL - insert into book (author_id, genre_id, isbn, notes, title, user_id) values (?, ?, ?, ?, ?, ?)
[DEBUG] 2021-05-03 09:53:05.930 [main] IdentifierGeneratorHelper - Natively generated identity: 6
[DEBUG] 2021-05-03 09:53:05.930 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-05-03 09:53:05.931 [main] TransactionImpl - committing
[DEBUG] 2021-05-03 09:53:05.931 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2021-05-03 09:53:05.947 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2021-05-03 09:53:05.971 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
[DEBUG] 2021-05-03 09:53:05.971 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[DEBUG] 2021-05-03 09:53:05.974 [main] EntityPrinter - Listing entities:
[DEBUG] 2021-05-03 09:53:05.975 [main] EntityPrinter - com.leeannjakel.entity.Book{notes=Another lovely book by SJM, author=com.leeannjakel.entity.Author#1, isbn=9781599906959, genre=com.leeannjakel.entity.Genre#1, id=6, title=Throne of Glass, user=com.leeannjakel.entity.User#1}
[DEBUG] 2021-05-03 09:53:05.985 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-05-03 09:53:05.994 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-05-03 09:53:06.006 [main] SQL - select book0_.id as id1_1_0_, book0_.author_id as author_i5_1_0_, book0_.genre_id as genre_id6_1_0_, book0_.isbn as isbn2_1_0_, book0_.notes as notes3_1_0_, book0_.title as title4_1_0_, book0_.user_id as user_id7_1_0_, author1_.id as id1_0_1_, author1_.name as name2_0_1_, genre2_.id as id1_2_2_, genre2_.name as name2_2_2_, user3_.id as id1_4_3_, user3_.email as email2_4_3_, user3_.first_name as first_na3_4_3_, user3_.last_name as last_nam4_4_3_, user3_.password as password5_4_3_, user3_.user_name as user_nam6_4_3_, roles4_.user_id as user_id4_3_4_, roles4_.id as id1_3_4_, roles4_.id as id1_3_5_, roles4_.role_name as role_nam2_3_5_, roles4_.user_id as user_id4_3_5_, roles4_.user_name as user_nam3_3_5_ from book book0_ left outer join author author1_ on book0_.author_id=author1_.id left outer join genre genre2_ on book0_.genre_id=genre2_.id left outer join user user3_ on book0_.user_id=user3_.id left outer join role roles4_ on user3_.id=roles4_.user_id where book0_.id=?
[DEBUG] 2021-05-03 09:53:06.017 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-05-03 09:53:06.022 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-05-03 09:53:06.027 [main] CollectionReferenceInitializerImpl - Result set contains (possibly empty) collection: [com.leeannjakel.entity.User.roles#1]
[DEBUG] 2021-05-03 09:53:06.027 [main] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.Book#6]
[DEBUG] 2021-05-03 09:53:06.027 [main] TwoPhaseLoad - Processing attribute `author` : value = 1
[DEBUG] 2021-05-03 09:53:06.027 [main] TwoPhaseLoad - Attribute (`author`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-03 09:53:06.027 [main] TwoPhaseLoad - Processing attribute `genre` : value = 1
[DEBUG] 2021-05-03 09:53:06.027 [main] TwoPhaseLoad - Attribute (`genre`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-03 09:53:06.027 [main] TwoPhaseLoad - Processing attribute `isbn` : value = 9781599906959
[DEBUG] 2021-05-03 09:53:06.027 [main] TwoPhaseLoad - Attribute (`isbn`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-03 09:53:06.027 [main] TwoPhaseLoad - Processing attribute `notes` : value = Another lovely book by SJM
[DEBUG] 2021-05-03 09:53:06.027 [main] TwoPhaseLoad - Attribute (`notes`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-03 09:53:06.028 [main] TwoPhaseLoad - Processing attribute `title` : value = Throne of Glass
[DEBUG] 2021-05-03 09:53:06.028 [main] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-03 09:53:06.028 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2021-05-03 09:53:06.028 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-03 09:53:06.028 [main] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.Book#6]
[DEBUG] 2021-05-03 09:53:06.028 [main] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.Author#1]
[DEBUG] 2021-05-03 09:53:06.028 [main] TwoPhaseLoad - Processing attribute `books` : value = NOT NULL COLLECTION
[DEBUG] 2021-05-03 09:53:06.028 [main] TwoPhaseLoad - Attribute (`books`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-03 09:53:06.028 [main] TwoPhaseLoad - Processing attribute `name` : value = Sarah J. Maas
[DEBUG] 2021-05-03 09:53:06.028 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-03 09:53:06.028 [main] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.Author#1]
[DEBUG] 2021-05-03 09:53:06.028 [main] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.Genre#1]
[DEBUG] 2021-05-03 09:53:06.028 [main] TwoPhaseLoad - Processing attribute `books` : value = NOT NULL COLLECTION
[DEBUG] 2021-05-03 09:53:06.028 [main] TwoPhaseLoad - Attribute (`books`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-03 09:53:06.028 [main] TwoPhaseLoad - Processing attribute `name` : value = Young Adult
[DEBUG] 2021-05-03 09:53:06.028 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-03 09:53:06.028 [main] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.Genre#1]
[DEBUG] 2021-05-03 09:53:06.028 [main] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.User#1]
[DEBUG] 2021-05-03 09:53:06.028 [main] TwoPhaseLoad - Processing attribute `books` : value = NOT NULL COLLECTION
[DEBUG] 2021-05-03 09:53:06.028 [main] TwoPhaseLoad - Attribute (`books`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-03 09:53:06.033 [main] TwoPhaseLoad - Processing attribute `email` : value = email@something.com
[DEBUG] 2021-05-03 09:53:06.034 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-03 09:53:06.034 [main] TwoPhaseLoad - Processing attribute `firstName` : value = LeeAnn
[DEBUG] 2021-05-03 09:53:06.034 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-03 09:53:06.034 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Jakel
[DEBUG] 2021-05-03 09:53:06.034 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-03 09:53:06.034 [main] TwoPhaseLoad - Processing attribute `password` : value = password
[DEBUG] 2021-05-03 09:53:06.034 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-03 09:53:06.034 [main] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2021-05-03 09:53:06.034 [main] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-03 09:53:06.034 [main] TwoPhaseLoad - Processing attribute `userName` : value = ljakel
[DEBUG] 2021-05-03 09:53:06.034 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-03 09:53:06.034 [main] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.User#1]
[DEBUG] 2021-05-03 09:53:06.034 [main] CollectionLoadContext - 1 collections were found in result set for role: com.leeannjakel.entity.User.roles
[DEBUG] 2021-05-03 09:53:06.034 [main] CollectionLoadContext - Collection fully initialized: [com.leeannjakel.entity.User.roles#1]
[DEBUG] 2021-05-03 09:53:06.034 [main] CollectionLoadContext - 1 collections initialized for role: com.leeannjakel.entity.User.roles
[DEBUG] 2021-05-03 09:53:06.035 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-05-03 09:53:06.036 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.leeannjakel.entity.Book#6
[DEBUG] 2021-05-03 09:53:06.036 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
