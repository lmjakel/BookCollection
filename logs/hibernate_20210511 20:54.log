[DEBUG] 2021-05-11 20:53:50.274 [http-nio-8080-exec-10] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2021-05-11 20:53:50.300 [http-nio-8080-exec-10] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2021-05-11 20:53:50.340 [http-nio-8080-exec-10] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2021-05-11 20:53:51.750 [http-nio-8080-exec-10] Version - HHH000412: Hibernate Core {5.4.4.Final}
[DEBUG] 2021-05-11 20:53:51.816 [http-nio-8080-exec-10] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2021-05-11 20:53:53.897 [http-nio-8080-exec-10] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2021-05-11 20:53:53.899 [http-nio-8080-exec-10] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2021-05-11 20:53:54.077 [http-nio-8080-exec-10] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2021-05-11 20:53:58.500 [http-nio-8080-exec-10] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2021-05-11 20:53:58.722 [http-nio-8080-exec-10] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2021-05-11 20:53:58.736 [http-nio-8080-exec-10] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2021-05-11 20:53:59.097 [http-nio-8080-exec-10] Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] 2021-05-11 20:53:59.594 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@35092438
[DEBUG] 2021-05-11 20:53:59.595 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@35092438
[DEBUG] 2021-05-11 20:53:59.595 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@35092438
[DEBUG] 2021-05-11 20:53:59.597 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@25d77be0
[DEBUG] 2021-05-11 20:53:59.600 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@561caeb6
[DEBUG] 2021-05-11 20:53:59.604 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@6c2f5616
[DEBUG] 2021-05-11 20:53:59.621 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@644b8c36
[DEBUG] 2021-05-11 20:53:59.625 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@644b8c36
[DEBUG] 2021-05-11 20:53:59.633 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@644b8c36
[DEBUG] 2021-05-11 20:53:59.644 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@4cde0b4
[DEBUG] 2021-05-11 20:53:59.645 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@4cde0b4
[DEBUG] 2021-05-11 20:53:59.645 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@4cde0b4
[DEBUG] 2021-05-11 20:53:59.679 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@3aa4fef0
[DEBUG] 2021-05-11 20:53:59.681 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@3aa4fef0
[DEBUG] 2021-05-11 20:53:59.692 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@3aa4fef0
[DEBUG] 2021-05-11 20:53:59.694 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@524636fb
[DEBUG] 2021-05-11 20:53:59.694 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@524636fb
[DEBUG] 2021-05-11 20:53:59.694 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@524636fb
[DEBUG] 2021-05-11 20:53:59.701 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@6b2b0957
[DEBUG] 2021-05-11 20:53:59.701 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@6b2b0957
[DEBUG] 2021-05-11 20:53:59.702 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@6b2b0957
[DEBUG] 2021-05-11 20:53:59.705 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@4a86c524
[DEBUG] 2021-05-11 20:53:59.710 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@4a86c524
[DEBUG] 2021-05-11 20:53:59.710 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@4a86c524
[DEBUG] 2021-05-11 20:53:59.716 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@572ea7af
[DEBUG] 2021-05-11 20:53:59.717 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@572ea7af
[DEBUG] 2021-05-11 20:53:59.721 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@572ea7af
[DEBUG] 2021-05-11 20:53:59.725 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@4ff6cc9f
[DEBUG] 2021-05-11 20:53:59.725 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@4ff6cc9f
[DEBUG] 2021-05-11 20:53:59.759 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@5aed71d0
[DEBUG] 2021-05-11 20:53:59.761 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@5aed71d0
[DEBUG] 2021-05-11 20:53:59.796 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@4eec4b56
[DEBUG] 2021-05-11 20:53:59.796 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@4eec4b56
[DEBUG] 2021-05-11 20:53:59.805 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@75fa6ce7
[DEBUG] 2021-05-11 20:53:59.811 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@2b86429c
[DEBUG] 2021-05-11 20:53:59.820 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@dafb1b7
[DEBUG] 2021-05-11 20:53:59.820 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@dafb1b7
[DEBUG] 2021-05-11 20:53:59.842 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@296bb527
[DEBUG] 2021-05-11 20:53:59.862 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@296bb527
[DEBUG] 2021-05-11 20:53:59.933 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@4ce40b52
[DEBUG] 2021-05-11 20:53:59.933 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@4ce40b52
[DEBUG] 2021-05-11 20:53:59.935 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@5f25bff6
[DEBUG] 2021-05-11 20:53:59.935 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@5f25bff6
[DEBUG] 2021-05-11 20:53:59.937 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@27527583
[DEBUG] 2021-05-11 20:53:59.938 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@27527583
[DEBUG] 2021-05-11 20:53:59.959 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@30bf96f6
[DEBUG] 2021-05-11 20:53:59.962 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@30bf96f6
[DEBUG] 2021-05-11 20:53:59.968 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5a27fb8e
[DEBUG] 2021-05-11 20:53:59.969 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5a27fb8e
[DEBUG] 2021-05-11 20:53:59.978 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@6c49d297
[DEBUG] 2021-05-11 20:53:59.979 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@6c49d297
[DEBUG] 2021-05-11 20:53:59.992 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@73f5b886
[DEBUG] 2021-05-11 20:53:59.992 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@73f5b886
[DEBUG] 2021-05-11 20:54:00.012 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@4934be8c
[DEBUG] 2021-05-11 20:54:00.012 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@4934be8c
[DEBUG] 2021-05-11 20:54:00.039 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@6c64e3ed
[DEBUG] 2021-05-11 20:54:00.049 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@6c64e3ed
[DEBUG] 2021-05-11 20:54:00.054 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@1c8fbdee
[DEBUG] 2021-05-11 20:54:00.055 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1c8fbdee
[DEBUG] 2021-05-11 20:54:00.055 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1c8fbdee
[DEBUG] 2021-05-11 20:54:00.060 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@618d69ee
[DEBUG] 2021-05-11 20:54:00.066 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@3243d6eb
[DEBUG] 2021-05-11 20:54:00.067 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@3243d6eb
[DEBUG] 2021-05-11 20:54:00.068 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@3243d6eb
[DEBUG] 2021-05-11 20:54:00.100 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@61dd45dd
[DEBUG] 2021-05-11 20:54:00.116 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@41a82831
[DEBUG] 2021-05-11 20:54:00.116 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@41a82831
[DEBUG] 2021-05-11 20:54:00.136 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@13d8a683
[DEBUG] 2021-05-11 20:54:00.136 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@13d8a683
[DEBUG] 2021-05-11 20:54:00.156 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@3b942f93
[DEBUG] 2021-05-11 20:54:00.168 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@3b942f93
[DEBUG] 2021-05-11 20:54:00.192 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@fd7fe3c
[DEBUG] 2021-05-11 20:54:00.195 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@fd7fe3c
[DEBUG] 2021-05-11 20:54:00.197 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@6021365b
[DEBUG] 2021-05-11 20:54:00.197 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@6021365b
[DEBUG] 2021-05-11 20:54:00.198 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@1b5e02b7
[DEBUG] 2021-05-11 20:54:00.200 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@6484ef9e
[DEBUG] 2021-05-11 20:54:00.200 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@6484ef9e
[DEBUG] 2021-05-11 20:54:00.200 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@6484ef9e
[DEBUG] 2021-05-11 20:54:00.202 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@4e5b5304
[DEBUG] 2021-05-11 20:54:00.202 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@4e5b5304
[DEBUG] 2021-05-11 20:54:00.202 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@4e5b5304
[DEBUG] 2021-05-11 20:54:00.215 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@4738676d
[DEBUG] 2021-05-11 20:54:00.225 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@a345ea8
[DEBUG] 2021-05-11 20:54:00.227 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@5a1576de
[DEBUG] 2021-05-11 20:54:00.230 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@5a1576de
[DEBUG] 2021-05-11 20:54:00.231 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@5a1576de
[DEBUG] 2021-05-11 20:54:00.247 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@45679644
[DEBUG] 2021-05-11 20:54:00.247 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@45679644
[DEBUG] 2021-05-11 20:54:00.247 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@45679644
[DEBUG] 2021-05-11 20:54:00.248 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@62c79880
[DEBUG] 2021-05-11 20:54:00.259 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@26c122e5
[DEBUG] 2021-05-11 20:54:00.268 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@57bbb15
[DEBUG] 2021-05-11 20:54:00.277 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@57bbb15
[DEBUG] 2021-05-11 20:54:00.278 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@66d37d40
[DEBUG] 2021-05-11 20:54:00.289 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@2c7c52fb
[DEBUG] 2021-05-11 20:54:00.290 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@2c7c52fb
[DEBUG] 2021-05-11 20:54:00.312 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@27cdaf51
[DEBUG] 2021-05-11 20:54:00.312 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@27cdaf51
[DEBUG] 2021-05-11 20:54:00.314 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@45e48d45
[DEBUG] 2021-05-11 20:54:00.326 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@514a1278
[DEBUG] 2021-05-11 20:54:00.330 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@6edb6526
[DEBUG] 2021-05-11 20:54:00.350 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@4f69ba7e
[DEBUG] 2021-05-11 20:54:00.351 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@4f69ba7e
[DEBUG] 2021-05-11 20:54:00.353 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@48ff3c5f
[DEBUG] 2021-05-11 20:54:00.353 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@df37caa
[DEBUG] 2021-05-11 20:54:00.353 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@735af068
[DEBUG] 2021-05-11 20:54:00.353 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@740cded
[DEBUG] 2021-05-11 20:54:00.353 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@366c149e
[DEBUG] 2021-05-11 20:54:00.354 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@20ec28d5
[DEBUG] 2021-05-11 20:54:00.354 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@4115510
[DEBUG] 2021-05-11 20:54:00.354 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@53fcfda
[DEBUG] 2021-05-11 20:54:00.700 [http-nio-8080-exec-10] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2021-05-11 20:54:00.702 [http-nio-8080-exec-10] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2021-05-11 20:54:00.722 [http-nio-8080-exec-10] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2021-05-11 20:54:00.730 [http-nio-8080-exec-10] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2021-05-11 20:54:00.742 [http-nio-8080-exec-10] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2021-05-11 20:54:00.748 [http-nio-8080-exec-10] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2021-05-11 20:54:00.769 [http-nio-8080-exec-10] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2021-05-11 20:54:00.788 [http-nio-8080-exec-10] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2021-05-11 20:54:00.790 [http-nio-8080-exec-10] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2021-05-11 20:54:00.791 [http-nio-8080-exec-10] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2021-05-11 20:54:00.792 [http-nio-8080-exec-10] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2021-05-11 20:54:00.793 [http-nio-8080-exec-10] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2021-05-11 20:54:00.793 [http-nio-8080-exec-10] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2021-05-11 20:54:00.795 [http-nio-8080-exec-10] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2021-05-11 20:54:00.923 [http-nio-8080-exec-10] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/BookCollection
[INFO ] 2021-05-11 20:54:00.925 [http-nio-8080-exec-10] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2021-05-11 20:54:00.926 [http-nio-8080-exec-10] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2021-05-11 20:54:03.928 [http-nio-8080-exec-10] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2021-05-11 20:54:06.796 [http-nio-8080-exec-10] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.22
      major : 8
      minor : 0
[DEBUG] 2021-05-11 20:54:06.814 [http-nio-8080-exec-10] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.22 (Revision: d64b664fa93e81296a377de031b8123a67e6def2)
      major : 8
      minor : 0
[DEBUG] 2021-05-11 20:54:06.814 [http-nio-8080-exec-10] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2021-05-11 20:54:07.329 [http-nio-8080-exec-10] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[DEBUG] 2021-05-11 20:54:07.790 [http-nio-8080-exec-10] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2021-05-11 20:54:08.227 [http-nio-8080-exec-10] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2021-05-11 20:54:08.978 [http-nio-8080-exec-10] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2021-05-11 20:54:09.053 [http-nio-8080-exec-10] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1be612c0] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@78b0768c]
[DEBUG] 2021-05-11 20:54:10.313 [http-nio-8080-exec-10] AnnotationMetadataSourceProcessorImpl - Encountered a non-categorized annotated class [com.leeannjakel.entity.AuthorResponse]; ignoring
[DEBUG] 2021-05-11 20:54:10.328 [http-nio-8080-exec-10] AnnotationMetadataSourceProcessorImpl - Encountered a non-categorized annotated class [com.leeannjakel.entity.WorksAuthorsItem]; ignoring
[DEBUG] 2021-05-11 20:54:10.344 [http-nio-8080-exec-10] AnnotationMetadataSourceProcessorImpl - Encountered a non-categorized annotated class [com.leeannjakel.entity.Classifications]; ignoring
[DEBUG] 2021-05-11 20:54:10.345 [http-nio-8080-exec-10] AnnotationMetadataSourceProcessorImpl - Encountered a non-categorized annotated class [com.leeannjakel.entity.Created]; ignoring
[DEBUG] 2021-05-11 20:54:10.362 [http-nio-8080-exec-10] AnnotationMetadataSourceProcessorImpl - Encountered a non-categorized annotated class [com.leeannjakel.entity.Identifiers]; ignoring
[DEBUG] 2021-05-11 20:54:10.411 [http-nio-8080-exec-10] AnnotationMetadataSourceProcessorImpl - Encountered a non-categorized annotated class [com.leeannjakel.entity.Info]; ignoring
[DEBUG] 2021-05-11 20:54:10.425 [http-nio-8080-exec-10] AnnotationMetadataSourceProcessorImpl - Encountered a non-categorized annotated class [com.leeannjakel.entity.LanguagesItem]; ignoring
[DEBUG] 2021-05-11 20:54:10.430 [http-nio-8080-exec-10] AnnotationMetadataSourceProcessorImpl - Encountered a non-categorized annotated class [com.leeannjakel.entity.LastModified]; ignoring
[DEBUG] 2021-05-11 20:54:10.449 [http-nio-8080-exec-10] AnnotationMetadataSourceProcessorImpl - Encountered a non-categorized annotated class [com.leeannjakel.entity.Type]; ignoring
[DEBUG] 2021-05-11 20:54:10.460 [http-nio-8080-exec-10] AnnotationMetadataSourceProcessorImpl - Encountered a non-categorized annotated class [com.leeannjakel.entity.WorksItem]; ignoring
[DEBUG] 2021-05-11 20:54:10.664 [http-nio-8080-exec-10] AnnotationBinder - Binding entity from annotated class: com.leeannjakel.entity.Author
[DEBUG] 2021-05-11 20:54:11.222 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2021-05-11 20:54:11.615 [http-nio-8080-exec-10] EntityBinder - Import with entity name Author
[DEBUG] 2021-05-11 20:54:11.689 [http-nio-8080-exec-10] EntityBinder - Bind entity com.leeannjakel.entity.Author on table author
[DEBUG] 2021-05-11 20:54:12.370 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(author), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-11 20:54:12.441 [http-nio-8080-exec-10] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2021-05-11 20:54:12.447 [http-nio-8080-exec-10] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.leeannjakel.entity.Author:id]
[DEBUG] 2021-05-11 20:54:12.465 [http-nio-8080-exec-10] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2021-05-11 20:54:12.513 [http-nio-8080-exec-10] PropertyBinder - Building property id
[DEBUG] 2021-05-11 20:54:12.578 [http-nio-8080-exec-10] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2021-05-11 20:54:12.631 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='author'}
[DEBUG] 2021-05-11 20:54:12.642 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(author), mappingColumn=books, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-11 20:54:12.732 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(author), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-11 20:54:12.899 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(author), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-11 20:54:12.913 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(author), mappingColumn=books_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-11 20:54:12.915 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='books_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2021-05-11 20:54:12.947 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='author'}
[DEBUG] 2021-05-11 20:54:12.947 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='author'}
[DEBUG] 2021-05-11 20:54:12.967 [http-nio-8080-exec-10] CollectionBinder - Collection role: com.leeannjakel.entity.Author.books
[DEBUG] 2021-05-11 20:54:13.010 [http-nio-8080-exec-10] PropertyBinder - Building property books
[DEBUG] 2021-05-11 20:54:13.010 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(author), mappingColumn=name, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-11 20:54:13.010 [http-nio-8080-exec-10] PropertyBinder - MetadataSourceProcessor property name with lazy=false
[DEBUG] 2021-05-11 20:54:13.015 [http-nio-8080-exec-10] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.leeannjakel.entity.Author:name]
[DEBUG] 2021-05-11 20:54:13.019 [http-nio-8080-exec-10] SimpleValueBinder - building SimpleValue for name
[DEBUG] 2021-05-11 20:54:13.020 [http-nio-8080-exec-10] PropertyBinder - Building property name
[DEBUG] 2021-05-11 20:54:13.026 [http-nio-8080-exec-10] AnnotationBinder - Binding entity from annotated class: com.leeannjakel.entity.Book
[DEBUG] 2021-05-11 20:54:13.026 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2021-05-11 20:54:13.026 [http-nio-8080-exec-10] EntityBinder - Import with entity name Book
[DEBUG] 2021-05-11 20:54:13.027 [http-nio-8080-exec-10] EntityBinder - Bind entity com.leeannjakel.entity.Book on table book
[DEBUG] 2021-05-11 20:54:13.077 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-11 20:54:13.078 [http-nio-8080-exec-10] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2021-05-11 20:54:13.079 [http-nio-8080-exec-10] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.leeannjakel.entity.Book:id]
[DEBUG] 2021-05-11 20:54:13.080 [http-nio-8080-exec-10] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2021-05-11 20:54:13.080 [http-nio-8080-exec-10] PropertyBinder - Building property id
[DEBUG] 2021-05-11 20:54:13.080 [http-nio-8080-exec-10] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2021-05-11 20:54:13.081 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='author_id', referencedColumn='', mappedBy=''}
[DEBUG] 2021-05-11 20:54:13.082 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=author, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-11 20:54:13.089 [http-nio-8080-exec-10] PropertyBinder - Building property author
[DEBUG] 2021-05-11 20:54:13.096 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='genre_id', referencedColumn='', mappedBy=''}
[DEBUG] 2021-05-11 20:54:13.096 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=genre, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-11 20:54:13.097 [http-nio-8080-exec-10] PropertyBinder - Building property genre
[DEBUG] 2021-05-11 20:54:13.097 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=isbn, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-11 20:54:13.097 [http-nio-8080-exec-10] PropertyBinder - MetadataSourceProcessor property isbn with lazy=false
[DEBUG] 2021-05-11 20:54:13.097 [http-nio-8080-exec-10] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.leeannjakel.entity.Book:isbn]
[DEBUG] 2021-05-11 20:54:13.099 [http-nio-8080-exec-10] SimpleValueBinder - building SimpleValue for isbn
[DEBUG] 2021-05-11 20:54:13.101 [http-nio-8080-exec-10] PropertyBinder - Building property isbn
[DEBUG] 2021-05-11 20:54:13.125 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=notes, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-11 20:54:13.126 [http-nio-8080-exec-10] PropertyBinder - MetadataSourceProcessor property notes with lazy=false
[DEBUG] 2021-05-11 20:54:13.129 [http-nio-8080-exec-10] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.leeannjakel.entity.Book:notes]
[DEBUG] 2021-05-11 20:54:13.130 [http-nio-8080-exec-10] SimpleValueBinder - building SimpleValue for notes
[DEBUG] 2021-05-11 20:54:13.132 [http-nio-8080-exec-10] PropertyBinder - Building property notes
[DEBUG] 2021-05-11 20:54:13.134 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=title, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-11 20:54:13.151 [http-nio-8080-exec-10] PropertyBinder - MetadataSourceProcessor property title with lazy=false
[DEBUG] 2021-05-11 20:54:13.151 [http-nio-8080-exec-10] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.leeannjakel.entity.Book:title]
[DEBUG] 2021-05-11 20:54:13.151 [http-nio-8080-exec-10] SimpleValueBinder - building SimpleValue for title
[DEBUG] 2021-05-11 20:54:13.152 [http-nio-8080-exec-10] PropertyBinder - Building property title
[DEBUG] 2021-05-11 20:54:13.152 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
[DEBUG] 2021-05-11 20:54:13.152 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-11 20:54:13.153 [http-nio-8080-exec-10] PropertyBinder - Building property user
[DEBUG] 2021-05-11 20:54:13.156 [http-nio-8080-exec-10] AnnotationBinder - Binding entity from annotated class: com.leeannjakel.entity.Genre
[DEBUG] 2021-05-11 20:54:13.160 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2021-05-11 20:54:13.162 [http-nio-8080-exec-10] EntityBinder - Import with entity name Genre
[DEBUG] 2021-05-11 20:54:13.162 [http-nio-8080-exec-10] EntityBinder - Bind entity com.leeannjakel.entity.Genre on table genre
[DEBUG] 2021-05-11 20:54:13.166 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(genre), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-11 20:54:13.167 [http-nio-8080-exec-10] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2021-05-11 20:54:13.167 [http-nio-8080-exec-10] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.leeannjakel.entity.Genre:id]
[DEBUG] 2021-05-11 20:54:13.167 [http-nio-8080-exec-10] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2021-05-11 20:54:13.168 [http-nio-8080-exec-10] PropertyBinder - Building property id
[DEBUG] 2021-05-11 20:54:13.169 [http-nio-8080-exec-10] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2021-05-11 20:54:13.169 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='genre'}
[DEBUG] 2021-05-11 20:54:13.169 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(genre), mappingColumn=books, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-11 20:54:13.169 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(genre), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-11 20:54:13.169 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(genre), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-11 20:54:13.170 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(genre), mappingColumn=books_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-11 20:54:13.170 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='books_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2021-05-11 20:54:13.170 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='genre'}
[DEBUG] 2021-05-11 20:54:13.170 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='genre'}
[DEBUG] 2021-05-11 20:54:13.170 [http-nio-8080-exec-10] CollectionBinder - Collection role: com.leeannjakel.entity.Genre.books
[DEBUG] 2021-05-11 20:54:13.170 [http-nio-8080-exec-10] PropertyBinder - Building property books
[DEBUG] 2021-05-11 20:54:13.170 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(genre), mappingColumn=name, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-11 20:54:13.171 [http-nio-8080-exec-10] PropertyBinder - MetadataSourceProcessor property name with lazy=false
[DEBUG] 2021-05-11 20:54:13.186 [http-nio-8080-exec-10] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.leeannjakel.entity.Genre:name]
[DEBUG] 2021-05-11 20:54:13.193 [http-nio-8080-exec-10] SimpleValueBinder - building SimpleValue for name
[DEBUG] 2021-05-11 20:54:13.193 [http-nio-8080-exec-10] PropertyBinder - Building property name
[DEBUG] 2021-05-11 20:54:13.193 [http-nio-8080-exec-10] AnnotationBinder - Binding entity from annotated class: com.leeannjakel.entity.Role
[DEBUG] 2021-05-11 20:54:13.194 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2021-05-11 20:54:13.194 [http-nio-8080-exec-10] EntityBinder - Import with entity name Role
[DEBUG] 2021-05-11 20:54:13.194 [http-nio-8080-exec-10] EntityBinder - Bind entity com.leeannjakel.entity.Role on table role
[DEBUG] 2021-05-11 20:54:13.198 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-11 20:54:13.198 [http-nio-8080-exec-10] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2021-05-11 20:54:13.199 [http-nio-8080-exec-10] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.leeannjakel.entity.Role:id]
[DEBUG] 2021-05-11 20:54:13.202 [http-nio-8080-exec-10] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2021-05-11 20:54:13.224 [http-nio-8080-exec-10] PropertyBinder - Building property id
[DEBUG] 2021-05-11 20:54:13.228 [http-nio-8080-exec-10] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2021-05-11 20:54:13.228 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=role_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-11 20:54:13.229 [http-nio-8080-exec-10] PropertyBinder - MetadataSourceProcessor property roleName with lazy=false
[DEBUG] 2021-05-11 20:54:13.229 [http-nio-8080-exec-10] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.leeannjakel.entity.Role:roleName]
[DEBUG] 2021-05-11 20:54:13.230 [http-nio-8080-exec-10] SimpleValueBinder - building SimpleValue for roleName
[DEBUG] 2021-05-11 20:54:13.233 [http-nio-8080-exec-10] PropertyBinder - Building property roleName
[DEBUG] 2021-05-11 20:54:13.233 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
[DEBUG] 2021-05-11 20:54:13.246 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-11 20:54:13.247 [http-nio-8080-exec-10] PropertyBinder - Building property user
[DEBUG] 2021-05-11 20:54:13.247 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=user_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-11 20:54:13.248 [http-nio-8080-exec-10] PropertyBinder - MetadataSourceProcessor property userName with lazy=false
[DEBUG] 2021-05-11 20:54:13.255 [http-nio-8080-exec-10] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.leeannjakel.entity.Role:userName]
[DEBUG] 2021-05-11 20:54:13.255 [http-nio-8080-exec-10] SimpleValueBinder - building SimpleValue for userName
[DEBUG] 2021-05-11 20:54:13.256 [http-nio-8080-exec-10] PropertyBinder - Building property userName
[DEBUG] 2021-05-11 20:54:13.280 [http-nio-8080-exec-10] AnnotationBinder - Binding entity from annotated class: com.leeannjakel.entity.User
[DEBUG] 2021-05-11 20:54:13.280 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2021-05-11 20:54:13.280 [http-nio-8080-exec-10] EntityBinder - Import with entity name User
[DEBUG] 2021-05-11 20:54:13.281 [http-nio-8080-exec-10] EntityBinder - Bind entity com.leeannjakel.entity.User on table user
[DEBUG] 2021-05-11 20:54:13.298 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-11 20:54:13.299 [http-nio-8080-exec-10] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2021-05-11 20:54:13.299 [http-nio-8080-exec-10] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.leeannjakel.entity.User:id]
[DEBUG] 2021-05-11 20:54:13.299 [http-nio-8080-exec-10] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2021-05-11 20:54:13.299 [http-nio-8080-exec-10] PropertyBinder - Building property id
[DEBUG] 2021-05-11 20:54:13.301 [http-nio-8080-exec-10] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2021-05-11 20:54:13.301 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2021-05-11 20:54:13.302 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=books, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-11 20:54:13.302 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-11 20:54:13.302 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-11 20:54:13.302 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=books_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-11 20:54:13.302 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='books_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2021-05-11 20:54:13.303 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2021-05-11 20:54:13.303 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2021-05-11 20:54:13.303 [http-nio-8080-exec-10] CollectionBinder - Collection role: com.leeannjakel.entity.User.books
[DEBUG] 2021-05-11 20:54:13.303 [http-nio-8080-exec-10] PropertyBinder - Building property books
[DEBUG] 2021-05-11 20:54:13.303 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=email, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-11 20:54:13.303 [http-nio-8080-exec-10] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[DEBUG] 2021-05-11 20:54:13.303 [http-nio-8080-exec-10] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.leeannjakel.entity.User:email]
[DEBUG] 2021-05-11 20:54:13.303 [http-nio-8080-exec-10] SimpleValueBinder - building SimpleValue for email
[DEBUG] 2021-05-11 20:54:13.303 [http-nio-8080-exec-10] PropertyBinder - Building property email
[DEBUG] 2021-05-11 20:54:13.303 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-11 20:54:13.304 [http-nio-8080-exec-10] PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
[DEBUG] 2021-05-11 20:54:13.304 [http-nio-8080-exec-10] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.leeannjakel.entity.User:firstName]
[DEBUG] 2021-05-11 20:54:13.313 [http-nio-8080-exec-10] SimpleValueBinder - building SimpleValue for firstName
[DEBUG] 2021-05-11 20:54:13.314 [http-nio-8080-exec-10] PropertyBinder - Building property firstName
[DEBUG] 2021-05-11 20:54:13.314 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-11 20:54:13.314 [http-nio-8080-exec-10] PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
[DEBUG] 2021-05-11 20:54:13.314 [http-nio-8080-exec-10] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.leeannjakel.entity.User:lastName]
[DEBUG] 2021-05-11 20:54:13.314 [http-nio-8080-exec-10] SimpleValueBinder - building SimpleValue for lastName
[DEBUG] 2021-05-11 20:54:13.314 [http-nio-8080-exec-10] PropertyBinder - Building property lastName
[DEBUG] 2021-05-11 20:54:13.314 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=password, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-11 20:54:13.323 [http-nio-8080-exec-10] PropertyBinder - MetadataSourceProcessor property password with lazy=false
[DEBUG] 2021-05-11 20:54:13.324 [http-nio-8080-exec-10] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.leeannjakel.entity.User:password]
[DEBUG] 2021-05-11 20:54:13.324 [http-nio-8080-exec-10] SimpleValueBinder - building SimpleValue for password
[DEBUG] 2021-05-11 20:54:13.324 [http-nio-8080-exec-10] PropertyBinder - Building property password
[DEBUG] 2021-05-11 20:54:13.325 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2021-05-11 20:54:13.325 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=roles, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-11 20:54:13.325 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-11 20:54:13.326 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-11 20:54:13.326 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=roles_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-11 20:54:13.326 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='roles_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2021-05-11 20:54:13.326 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2021-05-11 20:54:13.326 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2021-05-11 20:54:13.326 [http-nio-8080-exec-10] CollectionBinder - Collection role: com.leeannjakel.entity.User.roles
[DEBUG] 2021-05-11 20:54:13.326 [http-nio-8080-exec-10] PropertyBinder - Building property roles
[DEBUG] 2021-05-11 20:54:13.326 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=user_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-11 20:54:13.327 [http-nio-8080-exec-10] PropertyBinder - MetadataSourceProcessor property userName with lazy=false
[DEBUG] 2021-05-11 20:54:13.327 [http-nio-8080-exec-10] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.leeannjakel.entity.User:userName]
[DEBUG] 2021-05-11 20:54:13.327 [http-nio-8080-exec-10] SimpleValueBinder - building SimpleValue for userName
[DEBUG] 2021-05-11 20:54:13.327 [http-nio-8080-exec-10] PropertyBinder - Building property userName
[DEBUG] 2021-05-11 20:54:13.329 [http-nio-8080-exec-10] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2021-05-11 20:54:13.329 [http-nio-8080-exec-10] SimpleValueBinder - Starting fillSimpleValue for name
[DEBUG] 2021-05-11 20:54:13.329 [http-nio-8080-exec-10] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2021-05-11 20:54:13.329 [http-nio-8080-exec-10] SimpleValueBinder - Starting fillSimpleValue for isbn
[DEBUG] 2021-05-11 20:54:13.329 [http-nio-8080-exec-10] SimpleValueBinder - Starting fillSimpleValue for notes
[DEBUG] 2021-05-11 20:54:13.329 [http-nio-8080-exec-10] SimpleValueBinder - Starting fillSimpleValue for title
[DEBUG] 2021-05-11 20:54:13.329 [http-nio-8080-exec-10] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2021-05-11 20:54:13.329 [http-nio-8080-exec-10] SimpleValueBinder - Starting fillSimpleValue for name
[DEBUG] 2021-05-11 20:54:13.330 [http-nio-8080-exec-10] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2021-05-11 20:54:13.330 [http-nio-8080-exec-10] SimpleValueBinder - Starting fillSimpleValue for roleName
[DEBUG] 2021-05-11 20:54:13.330 [http-nio-8080-exec-10] SimpleValueBinder - Starting fillSimpleValue for userName
[DEBUG] 2021-05-11 20:54:13.330 [http-nio-8080-exec-10] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2021-05-11 20:54:13.330 [http-nio-8080-exec-10] SimpleValueBinder - Starting fillSimpleValue for email
[DEBUG] 2021-05-11 20:54:13.330 [http-nio-8080-exec-10] SimpleValueBinder - Starting fillSimpleValue for firstName
[DEBUG] 2021-05-11 20:54:13.330 [http-nio-8080-exec-10] SimpleValueBinder - Starting fillSimpleValue for lastName
[DEBUG] 2021-05-11 20:54:13.330 [http-nio-8080-exec-10] SimpleValueBinder - Starting fillSimpleValue for password
[DEBUG] 2021-05-11 20:54:13.330 [http-nio-8080-exec-10] SimpleValueBinder - Starting fillSimpleValue for userName
[DEBUG] 2021-05-11 20:54:13.366 [http-nio-8080-exec-10] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [author]
[DEBUG] 2021-05-11 20:54:13.367 [http-nio-8080-exec-10] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [book]
[DEBUG] 2021-05-11 20:54:13.367 [http-nio-8080-exec-10] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [genre]
[DEBUG] 2021-05-11 20:54:13.367 [http-nio-8080-exec-10] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [role]
[DEBUG] 2021-05-11 20:54:13.368 [http-nio-8080-exec-10] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [user]
[DEBUG] 2021-05-11 20:54:13.375 [http-nio-8080-exec-10] CollectionSecondPass - Second pass for collection: com.leeannjakel.entity.Author.books
[DEBUG] 2021-05-11 20:54:13.377 [http-nio-8080-exec-10] CollectionBinder - Binding a OneToMany: com.leeannjakel.entity.Author.books through a foreign key
[DEBUG] 2021-05-11 20:54:13.381 [http-nio-8080-exec-10] CollectionBinder - Mapping collection: com.leeannjakel.entity.Author.books -> book
[DEBUG] 2021-05-11 20:54:13.383 [http-nio-8080-exec-10] TableBinder - Retrieving property com.leeannjakel.entity.Book.author
[DEBUG] 2021-05-11 20:54:13.386 [http-nio-8080-exec-10] CollectionSecondPass - Mapped collection key: author_id, one-to-many: com.leeannjakel.entity.Book
[DEBUG] 2021-05-11 20:54:13.392 [http-nio-8080-exec-10] CollectionSecondPass - Second pass for collection: com.leeannjakel.entity.Genre.books
[DEBUG] 2021-05-11 20:54:13.392 [http-nio-8080-exec-10] CollectionBinder - Binding a OneToMany: com.leeannjakel.entity.Genre.books through a foreign key
[DEBUG] 2021-05-11 20:54:13.392 [http-nio-8080-exec-10] CollectionBinder - Mapping collection: com.leeannjakel.entity.Genre.books -> book
[DEBUG] 2021-05-11 20:54:13.393 [http-nio-8080-exec-10] TableBinder - Retrieving property com.leeannjakel.entity.Book.genre
[DEBUG] 2021-05-11 20:54:13.393 [http-nio-8080-exec-10] CollectionSecondPass - Mapped collection key: genre_id, one-to-many: com.leeannjakel.entity.Book
[DEBUG] 2021-05-11 20:54:13.393 [http-nio-8080-exec-10] CollectionSecondPass - Second pass for collection: com.leeannjakel.entity.User.books
[DEBUG] 2021-05-11 20:54:13.393 [http-nio-8080-exec-10] CollectionBinder - Binding a OneToMany: com.leeannjakel.entity.User.books through a foreign key
[DEBUG] 2021-05-11 20:54:13.394 [http-nio-8080-exec-10] CollectionBinder - Mapping collection: com.leeannjakel.entity.User.books -> book
[DEBUG] 2021-05-11 20:54:13.394 [http-nio-8080-exec-10] TableBinder - Retrieving property com.leeannjakel.entity.Book.user
[DEBUG] 2021-05-11 20:54:13.394 [http-nio-8080-exec-10] CollectionSecondPass - Mapped collection key: user_id, one-to-many: com.leeannjakel.entity.Book
[DEBUG] 2021-05-11 20:54:13.394 [http-nio-8080-exec-10] CollectionSecondPass - Second pass for collection: com.leeannjakel.entity.User.roles
[DEBUG] 2021-05-11 20:54:13.395 [http-nio-8080-exec-10] CollectionBinder - Binding a OneToMany: com.leeannjakel.entity.User.roles through a foreign key
[DEBUG] 2021-05-11 20:54:13.395 [http-nio-8080-exec-10] CollectionBinder - Mapping collection: com.leeannjakel.entity.User.roles -> role
[DEBUG] 2021-05-11 20:54:13.395 [http-nio-8080-exec-10] TableBinder - Retrieving property com.leeannjakel.entity.Role.user
[DEBUG] 2021-05-11 20:54:13.396 [http-nio-8080-exec-10] CollectionSecondPass - Mapped collection key: user_id, one-to-many: com.leeannjakel.entity.Role
[DEBUG] 2021-05-11 20:54:13.396 [http-nio-8080-exec-10] InFlightMetadataCollectorImpl - Resolving reference to class: com.leeannjakel.entity.Author
[DEBUG] 2021-05-11 20:54:13.417 [http-nio-8080-exec-10] InFlightMetadataCollectorImpl - Resolving reference to class: com.leeannjakel.entity.Genre
[DEBUG] 2021-05-11 20:54:13.420 [http-nio-8080-exec-10] InFlightMetadataCollectorImpl - Resolving reference to class: com.leeannjakel.entity.User
[DEBUG] 2021-05-11 20:54:13.421 [http-nio-8080-exec-10] InFlightMetadataCollectorImpl - Resolving reference to class: com.leeannjakel.entity.User
[DEBUG] 2021-05-11 20:54:13.435 [http-nio-8080-exec-10] InFlightMetadataCollectorImpl - Resolving reference to class: com.leeannjakel.entity.Author
[DEBUG] 2021-05-11 20:54:13.436 [http-nio-8080-exec-10] InFlightMetadataCollectorImpl - Resolving reference to class: com.leeannjakel.entity.Genre
[DEBUG] 2021-05-11 20:54:13.436 [http-nio-8080-exec-10] InFlightMetadataCollectorImpl - Resolving reference to class: com.leeannjakel.entity.User
[DEBUG] 2021-05-11 20:54:13.436 [http-nio-8080-exec-10] InFlightMetadataCollectorImpl - Resolving reference to class: com.leeannjakel.entity.User
[DEBUG] 2021-05-11 20:54:13.788 [http-nio-8080-exec-10] SessionFactoryImpl - Building session factory
[DEBUG] 2021-05-11 20:54:13.791 [http-nio-8080-exec-10] Settings - SessionFactory name : null
[DEBUG] 2021-05-11 20:54:13.792 [http-nio-8080-exec-10] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2021-05-11 20:54:13.792 [http-nio-8080-exec-10] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2021-05-11 20:54:13.793 [http-nio-8080-exec-10] Settings - Statistics: disabled
[DEBUG] 2021-05-11 20:54:13.793 [http-nio-8080-exec-10] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2021-05-11 20:54:13.793 [http-nio-8080-exec-10] Settings - Default entity-mode: pojo
[DEBUG] 2021-05-11 20:54:13.809 [http-nio-8080-exec-10] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2021-05-11 20:54:13.811 [http-nio-8080-exec-10] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2021-05-11 20:54:13.811 [http-nio-8080-exec-10] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2021-05-11 20:54:13.811 [http-nio-8080-exec-10] Settings - Default batch fetch size: -1
[DEBUG] 2021-05-11 20:54:13.811 [http-nio-8080-exec-10] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2021-05-11 20:54:13.811 [http-nio-8080-exec-10] Settings - Default null ordering: NONE
[DEBUG] 2021-05-11 20:54:13.811 [http-nio-8080-exec-10] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2021-05-11 20:54:13.811 [http-nio-8080-exec-10] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2021-05-11 20:54:13.811 [http-nio-8080-exec-10] Settings - multi-tenancy strategy : NONE
[DEBUG] 2021-05-11 20:54:13.812 [http-nio-8080-exec-10] Settings - JTA Track by Thread: enabled
[DEBUG] 2021-05-11 20:54:13.812 [http-nio-8080-exec-10] Settings - Query language substitutions: {}
[DEBUG] 2021-05-11 20:54:13.812 [http-nio-8080-exec-10] Settings - Named query checking : enabled
[DEBUG] 2021-05-11 20:54:13.812 [http-nio-8080-exec-10] Settings - Second-level cache: disabled
[DEBUG] 2021-05-11 20:54:13.812 [http-nio-8080-exec-10] Settings - Second-level query cache: disabled
[DEBUG] 2021-05-11 20:54:13.812 [http-nio-8080-exec-10] Settings - Second-level query cache factory: null
[DEBUG] 2021-05-11 20:54:13.812 [http-nio-8080-exec-10] Settings - Second-level cache region prefix: null
[DEBUG] 2021-05-11 20:54:13.812 [http-nio-8080-exec-10] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2021-05-11 20:54:13.812 [http-nio-8080-exec-10] Settings - Structured second-level cache entries: disabled
[DEBUG] 2021-05-11 20:54:13.812 [http-nio-8080-exec-10] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2021-05-11 20:54:13.812 [http-nio-8080-exec-10] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2021-05-11 20:54:13.812 [http-nio-8080-exec-10] Settings - JDBC batch size: 15
[DEBUG] 2021-05-11 20:54:13.821 [http-nio-8080-exec-10] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2021-05-11 20:54:13.824 [http-nio-8080-exec-10] Settings - Scrollable result sets: enabled
[DEBUG] 2021-05-11 20:54:13.824 [http-nio-8080-exec-10] Settings - Wrap result sets: disabled
[DEBUG] 2021-05-11 20:54:13.824 [http-nio-8080-exec-10] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2021-05-11 20:54:13.824 [http-nio-8080-exec-10] Settings - JDBC result set fetch size: null
[DEBUG] 2021-05-11 20:54:13.824 [http-nio-8080-exec-10] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2021-05-11 20:54:13.824 [http-nio-8080-exec-10] Settings - Generate SQL with comments: disabled
[DEBUG] 2021-05-11 20:54:13.824 [http-nio-8080-exec-10] Settings - JPA compliance - query : 
[DEBUG] 2021-05-11 20:54:13.824 [http-nio-8080-exec-10] Settings - JPA compliance - closed-handling : 
[DEBUG] 2021-05-11 20:54:13.841 [http-nio-8080-exec-10] Settings - JPA compliance - lists : 
[DEBUG] 2021-05-11 20:54:13.842 [http-nio-8080-exec-10] Settings - JPA compliance - transactions : 
[INFO ] 2021-05-11 20:54:14.478 [http-nio-8080-exec-10] beans - HHH10005002: No explicit CDI BeanManager reference was passed to Hibernate, but CDI is available on the Hibernate ClassLoader.
[DEBUG] 2021-05-11 20:54:14.894 [http-nio-8080-exec-10] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2021-05-11 20:54:14.896 [http-nio-8080-exec-10] SessionFactoryImpl - Instantiating session factory with properties: {awt.toolkit=sun.awt.X11.XToolkit, java.specification.version=11, sun.cpu.isalist=, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=UTF-8, hibernate.c3p0.min_size=5, sun.arch.data.model=64, java.vendor.url=https://ubuntu.com/, catalina.useNaming=true, openejb.provider.default=org.apache.tomee, sun.boot.library.path=/usr/lib/jvm/java-11-openjdk-amd64/lib, com.sun.management.jmxremote.ssl=false, sun.java.command=org.apache.catalina.startup.Bootstrap start, jdk.debug=release, java.specification.vendor=Oracle Corporation, java.naming.factory.url.pkgs=org.apache.naming:org.apache.openejb.core.ivm.naming, openejb.embedder.source=ServerListener, java.version.date=2021-04-20, java.home=/usr/lib/jvm/java-11-openjdk-amd64, ignore.endorsed.dirs=, file.separator=/, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, openejb.scan.webapp.container=true, com.sun.management.jmxremote.password.file=/home/student/.cache/JetBrains/IntelliJIdea2020.3/tomcat/10a53701-4112-462e-a101-1df2054f3873/jmxremote.password, package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.naming.,org.apache.tomcat., openejb.deployments.classpath.filter.systemapps=false, jdk.tls.ephemeralDHKeySize=2048, java.util.logging.config.file=/home/student/.cache/JetBrains/IntelliJIdea2020.3/tomcat/10a53701-4112-462e-a101-1df2054f3873/conf/logging.properties, java.protocol.handler.pkgs=org.apache.catalina.webresources, connection.password=student, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, openejb.scan.webapp.container.excludes=, java.runtime.version=11.0.11+9-Ubuntu-0ubuntu2.20.04, user.name=student, org.apache.johnzon.max-string-length=8192, file.encoding=UTF-8, derby.system.home=/home/student/tomcat/bin, org.apache.catalina.security.SecurityListener.UMASK=0027, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.io.tmpdir=/home/student/tomcat/temp, tomcat.util.scan.StandardJarScanFilter.jarsToScan=log4j-taglib*.jar,log4j-web*.jar,log4javascript*.jar,slf4j-taglib*.jar, java.version=11.0.11, com.sun.management.jmxremote.port=1099, tomcat.util.scan.StandardJarScanFilter.jarsToSkip=annotations-api.jar,ant-junit*.jar,ant-launcher.jar,ant.jar,asm-*.jar,aspectj*.jar,bootstrap.jar,catalina-ant.jar,catalina-ha.jar,catalina-jmx-remote.jar,catalina-storeconfig.jar,catalina-tribes.jar,catalina-ws.jar,catalina.jar,cglib-*.jar,cobertura-*.jar,commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,commons-daemon.jar,commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,commons-math*.jar,commons-pool*.jar,dom4j-*.jar,easymock-*.jar,ecj-*.jar,el-api.jar,geronimo-spec-jaxrpc*.jar,h2*.jar,hamcrest-*.jar,hibernate*.jar,httpclient*.jar,icu4j-*.jar,jasper-el.jar,jasper.jar,jaspic-api.jar,jaxb-*.jar,jaxen-*.jar,jdom-*.jar,jetty-*.jar,jmx-tools.jar,jmx.jar,jsp-api.jar,jstl.jar,jta*.jar,junit-*.jar,junit.jar,log4j*.jar,mail*.jar,objenesis-*.jar,oraclepki.jar,oro-*.jar,servlet-api-*.jar,servlet-api.jar,slf4j*.jar,taglibs-standard-spec-*.jar,tagsoup-*.jar,tomcat-api.jar,tomcat-coyote.jar,tomcat-dbcp.jar,tomcat-i18n-*.jar,tomcat-jdbc.jar,tomcat-jni.jar,tomcat-juli-adapters.jar,tomcat-juli.jar,tomcat-util-scan.jar,tomcat-util.jar,tomcat-websocket.jar,tools.jar,websocket-api.jar,wsdl4j*.jar,xercesImpl.jar,xml-apis.jar,xmlParserAPIs-*.jar,xmlParserAPIs.jar,xom-*.jar, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.print.PSPrinterJob, sun.os.patch.level=unknown, connection.driver_class=com.mysql.cj.jdbc.Driver, tomcat.built=May 4 2019 09:17:16 UTC, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor=Ubuntu, tomee.version=7.1.1, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, tomcat.util.buf.StringCache.byte.enabled=true, sun.desktop=gnome, java.class.path=/home/student/tomcat/bin/bootstrap.jar:/home/student/tomcat/bin/tomcat-juli.jar, tomcat.version=8.5.41.0, java.vm.vendor=Ubuntu, openejb.home=/home/student/tomcat, openejb.system.apps=true, user.timezone=America/Chicago, os.name=Linux, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, openejb.base=/home/student/.cache/JetBrains/IntelliJIdea2020.3/tomcat/10a53701-4112-462e-a101-1df2054f3873, com.sun.management.jmxremote=, sun.cpu.endian=little, user.home=/home/student, hibernate.c3p0.max_statements=50, user.language=en, openejb.deployments.classpath=false, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.tomcat., openejb.loader=tomcat-system, server.loader=, com.sun.management.jmxremote.access.file=/home/student/.cache/JetBrains/IntelliJIdea2020.3/tomcat/10a53701-4112-462e-a101-1df2054f3873/jmxremote.access, hibernate.c3p0.max_size=20, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, path.separator=:, org.apache.openejb.core.security.JaccProvider=org.apache.openejb.core.security.jacc.BasicJaccProvider, common.loader="/home/student/tomcat/lib","/home/student/tomcat/lib/*.jar","/home/student/tomcat/lib","/home/student/tomcat/lib/*.jar", hibernate.connection.username=****, os.version=5.4.0-72-generic, openejb.version=7.1.1, org.apache.security.jacc.EJBMethodPermission.methodInterfaces=BusinessLocalHome,BusinessRemoteHome,BusinessRemote,BusinessLocal, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/BookCollection, java.vm.name=OpenJDK 64-Bit Server VM, openejb.scan.webapp.container.includes=.*(geronimo|mp-jwt|failsafe).*, tomee.remote.support=true, java.vendor.url.bug=https://bugs.launchpad.net/ubuntu/+source/openjdk-lts, catalina.home=/home/student/tomcat, user.dir=/home/student/tomcat/bin, bval.in-container=true, os.arch=amd64, openjpa.Log=org.apache.openejb.openjpa.JULOpenJPALogFactory, hibernate.connection.password=****, tomee.serialization.class.blacklist=-, tomee.serialization.class.whitelist=, shared.loader=, catalina.base=/home/student/.cache/JetBrains/IntelliJIdea2020.3/tomcat/10a53701-4112-462e-a101-1df2054f3873, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@70259cab, noBanner=true, java.util.logging.manager=org.apache.juli.ClassLoaderLogManager, org.apache.webbeans.logger.WebBeansLoggerFacade=org.apache.openejb.cdi.logging.ContainerJULLoggerFactory, java.vm.info=mixed mode, sharing, java.vm.version=11.0.11+9-Ubuntu-0ubuntu2.20.04, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.hostname=127.0.0.1, javax.security.jacc.PolicyConfigurationFactory.provider=org.apache.openejb.core.security.JaccProvider$Factory, connection.url=jdbc:mysql://localhost:3306/BookCollection, java.class.version=55.0, authconfigprovider.factory=false}
[DEBUG] 2021-05-11 20:54:15.111 [http-nio-8080-exec-10] ClassLoaderAccessImpl - Not known whether passed class name [com.leeannjakel.entity.Book] is safe
[DEBUG] 2021-05-11 20:54:15.112 [http-nio-8080-exec-10] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.leeannjakel.entity.Book
[DEBUG] 2021-05-11 20:54:15.208 [http-nio-8080-exec-10] ClassLoaderAccessImpl - Not known whether passed class name [com.leeannjakel.entity.User] is safe
[DEBUG] 2021-05-11 20:54:15.209 [http-nio-8080-exec-10] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.leeannjakel.entity.User
[DEBUG] 2021-05-11 20:54:15.260 [http-nio-8080-exec-10] ClassLoaderAccessImpl - Not known whether passed class name [com.leeannjakel.entity.Author] is safe
[DEBUG] 2021-05-11 20:54:15.261 [http-nio-8080-exec-10] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.leeannjakel.entity.Author
[DEBUG] 2021-05-11 20:54:15.282 [http-nio-8080-exec-10] ClassLoaderAccessImpl - Not known whether passed class name [com.leeannjakel.entity.Genre] is safe
[DEBUG] 2021-05-11 20:54:15.282 [http-nio-8080-exec-10] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.leeannjakel.entity.Genre
[DEBUG] 2021-05-11 20:54:15.288 [http-nio-8080-exec-10] ClassLoaderAccessImpl - Not known whether passed class name [com.leeannjakel.entity.Role] is safe
[DEBUG] 2021-05-11 20:54:15.289 [http-nio-8080-exec-10] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.leeannjakel.entity.Role
[DEBUG] 2021-05-11 20:54:15.358 [http-nio-8080-exec-10] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2021-05-11 20:54:15.365 [http-nio-8080-exec-10] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2021-05-11 20:54:15.366 [http-nio-8080-exec-10] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1be612c0] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@2f6306e9]
[DEBUG] 2021-05-11 20:54:16.087 [http-nio-8080-exec-10] ClassLoaderAccessImpl - Not known whether passed class name [com.leeannjakel.entity.Book] is safe
[DEBUG] 2021-05-11 20:54:16.088 [http-nio-8080-exec-10] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.leeannjakel.entity.Book
[DEBUG] 2021-05-11 20:54:16.293 [http-nio-8080-exec-10] ClassLoaderAccessImpl - Not known whether passed class name [com.leeannjakel.entity.Book] is safe
[DEBUG] 2021-05-11 20:54:16.302 [http-nio-8080-exec-10] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.leeannjakel.entity.Book
[DEBUG] 2021-05-11 20:54:18.643 [http-nio-8080-exec-10] ClassLoaderAccessImpl - Not known whether passed class name [com.leeannjakel.entity.User] is safe
[DEBUG] 2021-05-11 20:54:18.647 [http-nio-8080-exec-10] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.leeannjakel.entity.User
[DEBUG] 2021-05-11 20:54:18.666 [http-nio-8080-exec-10] ClassLoaderAccessImpl - Not known whether passed class name [com.leeannjakel.entity.User] is safe
[DEBUG] 2021-05-11 20:54:18.667 [http-nio-8080-exec-10] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.leeannjakel.entity.User
[DEBUG] 2021-05-11 20:54:19.269 [http-nio-8080-exec-10] ClassLoaderAccessImpl - Not known whether passed class name [com.leeannjakel.entity.Author] is safe
[DEBUG] 2021-05-11 20:54:19.269 [http-nio-8080-exec-10] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.leeannjakel.entity.Author
[DEBUG] 2021-05-11 20:54:19.274 [http-nio-8080-exec-10] ClassLoaderAccessImpl - Not known whether passed class name [com.leeannjakel.entity.Author] is safe
[DEBUG] 2021-05-11 20:54:19.275 [http-nio-8080-exec-10] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.leeannjakel.entity.Author
[DEBUG] 2021-05-11 20:54:19.540 [http-nio-8080-exec-10] ClassLoaderAccessImpl - Not known whether passed class name [com.leeannjakel.entity.Genre] is safe
[DEBUG] 2021-05-11 20:54:19.540 [http-nio-8080-exec-10] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.leeannjakel.entity.Genre
[DEBUG] 2021-05-11 20:54:19.540 [http-nio-8080-exec-10] ClassLoaderAccessImpl - Not known whether passed class name [com.leeannjakel.entity.Genre] is safe
[DEBUG] 2021-05-11 20:54:19.540 [http-nio-8080-exec-10] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.leeannjakel.entity.Genre
[DEBUG] 2021-05-11 20:54:19.710 [http-nio-8080-exec-10] ClassLoaderAccessImpl - Not known whether passed class name [com.leeannjakel.entity.Role] is safe
[DEBUG] 2021-05-11 20:54:19.711 [http-nio-8080-exec-10] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.leeannjakel.entity.Role
[DEBUG] 2021-05-11 20:54:19.711 [http-nio-8080-exec-10] ClassLoaderAccessImpl - Not known whether passed class name [com.leeannjakel.entity.Role] is safe
[DEBUG] 2021-05-11 20:54:19.711 [http-nio-8080-exec-10] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.leeannjakel.entity.Role
[DEBUG] 2021-05-11 20:54:20.040 [http-nio-8080-exec-10] AbstractCollectionPersister - Static SQL for collection: com.leeannjakel.entity.Author.books
[DEBUG] 2021-05-11 20:54:20.040 [http-nio-8080-exec-10] AbstractCollectionPersister -  Row insert: update book set author_id=? where id=?
[DEBUG] 2021-05-11 20:54:20.040 [http-nio-8080-exec-10] AbstractCollectionPersister -  Row update: update book set  where id=?
[DEBUG] 2021-05-11 20:54:20.040 [http-nio-8080-exec-10] AbstractCollectionPersister -  Row delete: update book set author_id=null where author_id=? and id=?
[DEBUG] 2021-05-11 20:54:20.040 [http-nio-8080-exec-10] AbstractCollectionPersister -  One-shot delete: update book set author_id=null where author_id=?
[DEBUG] 2021-05-11 20:54:20.041 [http-nio-8080-exec-10] AbstractCollectionPersister - Static SQL for collection: com.leeannjakel.entity.User.books
[DEBUG] 2021-05-11 20:54:20.041 [http-nio-8080-exec-10] AbstractCollectionPersister -  Row insert: update book set user_id=? where id=?
[DEBUG] 2021-05-11 20:54:20.041 [http-nio-8080-exec-10] AbstractCollectionPersister -  Row update: update book set  where id=?
[DEBUG] 2021-05-11 20:54:20.041 [http-nio-8080-exec-10] AbstractCollectionPersister -  Row delete: update book set user_id=null where user_id=? and id=?
[DEBUG] 2021-05-11 20:54:20.041 [http-nio-8080-exec-10] AbstractCollectionPersister -  One-shot delete: update book set user_id=null where user_id=?
[DEBUG] 2021-05-11 20:54:20.041 [http-nio-8080-exec-10] AbstractCollectionPersister - Static SQL for collection: com.leeannjakel.entity.User.roles
[DEBUG] 2021-05-11 20:54:20.042 [http-nio-8080-exec-10] AbstractCollectionPersister -  Row insert: update role set user_id=? where id=?
[DEBUG] 2021-05-11 20:54:20.042 [http-nio-8080-exec-10] AbstractCollectionPersister -  Row update: update role set  where id=?
[DEBUG] 2021-05-11 20:54:20.042 [http-nio-8080-exec-10] AbstractCollectionPersister -  Row delete: update role set user_id=null where user_id=? and id=?
[DEBUG] 2021-05-11 20:54:20.042 [http-nio-8080-exec-10] AbstractCollectionPersister -  One-shot delete: update role set user_id=null where user_id=?
[DEBUG] 2021-05-11 20:54:20.042 [http-nio-8080-exec-10] AbstractCollectionPersister - Static SQL for collection: com.leeannjakel.entity.Genre.books
[DEBUG] 2021-05-11 20:54:20.042 [http-nio-8080-exec-10] AbstractCollectionPersister -  Row insert: update book set genre_id=? where id=?
[DEBUG] 2021-05-11 20:54:20.042 [http-nio-8080-exec-10] AbstractCollectionPersister -  Row update: update book set  where id=?
[DEBUG] 2021-05-11 20:54:20.042 [http-nio-8080-exec-10] AbstractCollectionPersister -  Row delete: update book set genre_id=null where genre_id=? and id=?
[DEBUG] 2021-05-11 20:54:20.042 [http-nio-8080-exec-10] AbstractCollectionPersister -  One-shot delete: update book set genre_id=null where genre_id=?
[DEBUG] 2021-05-11 20:54:20.073 [http-nio-8080-exec-10] AbstractEntityPersister - Static SQL for entity: com.leeannjakel.entity.Book
[DEBUG] 2021-05-11 20:54:20.073 [http-nio-8080-exec-10] AbstractEntityPersister -  Version select: select id from book where id =?
[DEBUG] 2021-05-11 20:54:20.073 [http-nio-8080-exec-10] AbstractEntityPersister -  Snapshot select: select book_.id, book_.author_id as author_i5_1_, book_.genre_id as genre_id6_1_, book_.isbn as isbn2_1_, book_.notes as notes3_1_, book_.title as title4_1_, book_.user_id as user_id7_1_ from book book_ where book_.id=?
[DEBUG] 2021-05-11 20:54:20.073 [http-nio-8080-exec-10] AbstractEntityPersister -  Insert 0: insert into book (author_id, genre_id, isbn, notes, title, user_id, id) values (?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2021-05-11 20:54:20.073 [http-nio-8080-exec-10] AbstractEntityPersister -  Update 0: update book set author_id=?, genre_id=?, isbn=?, notes=?, title=?, user_id=? where id=?
[DEBUG] 2021-05-11 20:54:20.073 [http-nio-8080-exec-10] AbstractEntityPersister -  Delete 0: delete from book where id=?
[DEBUG] 2021-05-11 20:54:20.074 [http-nio-8080-exec-10] AbstractEntityPersister -  Identity insert: insert into book (author_id, genre_id, isbn, notes, title, user_id) values (?, ?, ?, ?, ?, ?)
[DEBUG] 2021-05-11 20:54:20.529 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2efcda78]
[DEBUG] 2021-05-11 20:54:20.546 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : author
[DEBUG] 2021-05-11 20:54:20.640 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@197e65e1]
[DEBUG] 2021-05-11 20:54:20.668 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : author.books
[DEBUG] 2021-05-11 20:54:20.668 [http-nio-8080-exec-10] MetamodelGraphWalker - Property path deemed to be circular : author.books
[DEBUG] 2021-05-11 20:54:20.669 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : author.name
[DEBUG] 2021-05-11 20:54:20.669 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : genre
[DEBUG] 2021-05-11 20:54:20.669 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@598d6b87]
[DEBUG] 2021-05-11 20:54:20.670 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : genre.books
[DEBUG] 2021-05-11 20:54:20.670 [http-nio-8080-exec-10] MetamodelGraphWalker - Property path deemed to be circular : genre.books
[DEBUG] 2021-05-11 20:54:20.676 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : genre.name
[DEBUG] 2021-05-11 20:54:20.676 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : isbn
[DEBUG] 2021-05-11 20:54:20.676 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : notes
[DEBUG] 2021-05-11 20:54:20.676 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2021-05-11 20:54:20.676 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2021-05-11 20:54:20.676 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4cdf69ff]
[DEBUG] 2021-05-11 20:54:20.677 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.books
[DEBUG] 2021-05-11 20:54:20.677 [http-nio-8080-exec-10] MetamodelGraphWalker - Property path deemed to be circular : user.books
[DEBUG] 2021-05-11 20:54:20.677 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2021-05-11 20:54:20.677 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2021-05-11 20:54:20.677 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2021-05-11 20:54:20.677 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2021-05-11 20:54:20.677 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2021-05-11 20:54:20.678 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@66403880]
[DEBUG] 2021-05-11 20:54:20.712 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2e14555f]
[DEBUG] 2021-05-11 20:54:20.738 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.roles.roleName
[DEBUG] 2021-05-11 20:54:20.739 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2021-05-11 20:54:20.739 [http-nio-8080-exec-10] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2021-05-11 20:54:20.745 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.roles.userName
[DEBUG] 2021-05-11 20:54:20.745 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.userName
[DEBUG] 2021-05-11 20:54:20.745 [http-nio-8080-exec-10] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-05-11 20:54:20.975 [http-nio-8080-exec-10] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-05-11 20:54:21.072 [http-nio-8080-exec-10] LoadPlanTreePrinter - LoadPlan(entity=com.leeannjakel.entity.Book)
    - Returns
       - EntityReturnImpl(entity=com.leeannjakel.entity.Book, querySpaceUid=<gen:0>, path=com.leeannjakel.entity.Book)
          - EntityAttributeFetchImpl(entity=com.leeannjakel.entity.Author, querySpaceUid=<gen:1>, path=com.leeannjakel.entity.Book.author)
          - EntityAttributeFetchImpl(entity=com.leeannjakel.entity.Genre, querySpaceUid=<gen:2>, path=com.leeannjakel.entity.Book.genre)
          - EntityAttributeFetchImpl(entity=com.leeannjakel.entity.User, querySpaceUid=<gen:3>, path=com.leeannjakel.entity.Book.user)
             - CollectionAttributeFetchImpl(collection=com.leeannjakel.entity.User.roles, querySpaceUid=<gen:4>, path=com.leeannjakel.entity.Book.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.leeannjakel.entity.Role, querySpaceUid=<gen:5>, path=com.leeannjakel.entity.Book.user.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.leeannjakel.entity.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(author)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.leeannjakel.entity.Author)
                - SQL table alias mapping - author1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}
          - JOIN (JoinDefinedByMetadata(genre)) : <gen:0> -> <gen:2>
             - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.leeannjakel.entity.Genre)
                - SQL table alias mapping - genre2_
                - alias suffix - 2_
                - suffixed key columns - {id1_2_2_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=com.leeannjakel.entity.User)
                - SQL table alias mapping - user3_
                - alias suffix - 3_
                - suffixed key columns - {id1_4_3_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:3> -> <gen:4>
                   - CollectionQuerySpaceImpl(uid=<gen:4>, collection=com.leeannjakel.entity.User.roles)
                      - SQL table alias mapping - roles4_
                      - alias suffix - 4_
                      - suffixed key columns - {user_id4_3_4_}
                      - entity-element alias suffix - 5_
                      - 5_entity-element suffixed key columns - id1_3_5_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:4> -> <gen:5>
                         - EntityQuerySpaceImpl(uid=<gen:5>, entity=com.leeannjakel.entity.Role)
                            - SQL table alias mapping - roles4_
                            - alias suffix - 5_
                            - suffixed key columns - {id1_3_5_}

[DEBUG] 2021-05-11 20:54:21.138 [http-nio-8080-exec-10] EntityLoader - Static select for entity com.leeannjakel.entity.Book [NONE]: select book0_.id as id1_1_0_, book0_.author_id as author_i5_1_0_, book0_.genre_id as genre_id6_1_0_, book0_.isbn as isbn2_1_0_, book0_.notes as notes3_1_0_, book0_.title as title4_1_0_, book0_.user_id as user_id7_1_0_, author1_.id as id1_0_1_, author1_.name as name2_0_1_, genre2_.id as id1_2_2_, genre2_.name as name2_2_2_, user3_.id as id1_4_3_, user3_.email as email2_4_3_, user3_.first_name as first_na3_4_3_, user3_.last_name as last_nam4_4_3_, user3_.password as password5_4_3_, user3_.user_name as user_nam6_4_3_, roles4_.user_id as user_id4_3_4_, roles4_.id as id1_3_4_, roles4_.id as id1_3_5_, roles4_.role_name as role_nam2_3_5_, roles4_.user_id as user_id4_3_5_, roles4_.user_name as user_nam3_3_5_ from book book0_ left outer join author author1_ on book0_.author_id=author1_.id left outer join genre genre2_ on book0_.genre_id=genre2_.id left outer join user user3_ on book0_.user_id=user3_.id left outer join role roles4_ on user3_.id=roles4_.user_id where book0_.id=?
[DEBUG] 2021-05-11 20:54:21.140 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3556a046]
[DEBUG] 2021-05-11 20:54:21.141 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : author
[DEBUG] 2021-05-11 20:54:21.165 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2498cc6d]
[DEBUG] 2021-05-11 20:54:21.166 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : author.books
[DEBUG] 2021-05-11 20:54:21.166 [http-nio-8080-exec-10] MetamodelGraphWalker - Property path deemed to be circular : author.books
[DEBUG] 2021-05-11 20:54:21.166 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : author.name
[DEBUG] 2021-05-11 20:54:21.166 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : genre
[DEBUG] 2021-05-11 20:54:21.178 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4b771bed]
[DEBUG] 2021-05-11 20:54:21.178 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : genre.books
[DEBUG] 2021-05-11 20:54:21.178 [http-nio-8080-exec-10] MetamodelGraphWalker - Property path deemed to be circular : genre.books
[DEBUG] 2021-05-11 20:54:21.178 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : genre.name
[DEBUG] 2021-05-11 20:54:21.178 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : isbn
[DEBUG] 2021-05-11 20:54:21.178 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : notes
[DEBUG] 2021-05-11 20:54:21.178 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2021-05-11 20:54:21.178 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2021-05-11 20:54:21.178 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6b8b3cc7]
[DEBUG] 2021-05-11 20:54:21.179 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.books
[DEBUG] 2021-05-11 20:54:21.179 [http-nio-8080-exec-10] MetamodelGraphWalker - Property path deemed to be circular : user.books
[DEBUG] 2021-05-11 20:54:21.179 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2021-05-11 20:54:21.190 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2021-05-11 20:54:21.191 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2021-05-11 20:54:21.191 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2021-05-11 20:54:21.191 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2021-05-11 20:54:21.191 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4d145210]
[DEBUG] 2021-05-11 20:54:21.191 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@578dda8c]
[DEBUG] 2021-05-11 20:54:21.191 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.roles.roleName
[DEBUG] 2021-05-11 20:54:21.191 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2021-05-11 20:54:21.191 [http-nio-8080-exec-10] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2021-05-11 20:54:21.192 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.roles.userName
[DEBUG] 2021-05-11 20:54:21.192 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.userName
[DEBUG] 2021-05-11 20:54:21.192 [http-nio-8080-exec-10] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-05-11 20:54:21.192 [http-nio-8080-exec-10] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-05-11 20:54:21.229 [http-nio-8080-exec-10] LoadPlanTreePrinter - LoadPlan(entity=com.leeannjakel.entity.Book)
    - Returns
       - EntityReturnImpl(entity=com.leeannjakel.entity.Book, querySpaceUid=<gen:0>, path=com.leeannjakel.entity.Book)
          - EntityAttributeFetchImpl(entity=com.leeannjakel.entity.Author, querySpaceUid=<gen:1>, path=com.leeannjakel.entity.Book.author)
          - EntityAttributeFetchImpl(entity=com.leeannjakel.entity.Genre, querySpaceUid=<gen:2>, path=com.leeannjakel.entity.Book.genre)
          - EntityAttributeFetchImpl(entity=com.leeannjakel.entity.User, querySpaceUid=<gen:3>, path=com.leeannjakel.entity.Book.user)
             - CollectionAttributeFetchImpl(collection=com.leeannjakel.entity.User.roles, querySpaceUid=<gen:4>, path=com.leeannjakel.entity.Book.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.leeannjakel.entity.Role, querySpaceUid=<gen:5>, path=com.leeannjakel.entity.Book.user.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.leeannjakel.entity.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(author)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.leeannjakel.entity.Author)
                - SQL table alias mapping - author1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}
          - JOIN (JoinDefinedByMetadata(genre)) : <gen:0> -> <gen:2>
             - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.leeannjakel.entity.Genre)
                - SQL table alias mapping - genre2_
                - alias suffix - 2_
                - suffixed key columns - {id1_2_2_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=com.leeannjakel.entity.User)
                - SQL table alias mapping - user3_
                - alias suffix - 3_
                - suffixed key columns - {id1_4_3_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:3> -> <gen:4>
                   - CollectionQuerySpaceImpl(uid=<gen:4>, collection=com.leeannjakel.entity.User.roles)
                      - SQL table alias mapping - roles4_
                      - alias suffix - 4_
                      - suffixed key columns - {user_id4_3_4_}
                      - entity-element alias suffix - 5_
                      - 5_entity-element suffixed key columns - id1_3_5_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:4> -> <gen:5>
                         - EntityQuerySpaceImpl(uid=<gen:5>, entity=com.leeannjakel.entity.Role)
                            - SQL table alias mapping - roles4_
                            - alias suffix - 5_
                            - suffixed key columns - {id1_3_5_}

[DEBUG] 2021-05-11 20:54:21.243 [http-nio-8080-exec-10] EntityLoader - Static select for entity com.leeannjakel.entity.Book [READ]: select book0_.id as id1_1_0_, book0_.author_id as author_i5_1_0_, book0_.genre_id as genre_id6_1_0_, book0_.isbn as isbn2_1_0_, book0_.notes as notes3_1_0_, book0_.title as title4_1_0_, book0_.user_id as user_id7_1_0_, author1_.id as id1_0_1_, author1_.name as name2_0_1_, genre2_.id as id1_2_2_, genre2_.name as name2_2_2_, user3_.id as id1_4_3_, user3_.email as email2_4_3_, user3_.first_name as first_na3_4_3_, user3_.last_name as last_nam4_4_3_, user3_.password as password5_4_3_, user3_.user_name as user_nam6_4_3_, roles4_.user_id as user_id4_3_4_, roles4_.id as id1_3_4_, roles4_.id as id1_3_5_, roles4_.role_name as role_nam2_3_5_, roles4_.user_id as user_id4_3_5_, roles4_.user_name as user_nam3_3_5_ from book book0_ left outer join author author1_ on book0_.author_id=author1_.id left outer join genre genre2_ on book0_.genre_id=genre2_.id left outer join user user3_ on book0_.user_id=user3_.id left outer join role roles4_ on user3_.id=roles4_.user_id where book0_.id=?
[DEBUG] 2021-05-11 20:54:21.502 [http-nio-8080-exec-10] Loader - Static select for action ACTION_MERGE on entity com.leeannjakel.entity.Book: select book0_.id as id1_1_0_, book0_.author_id as author_i5_1_0_, book0_.genre_id as genre_id6_1_0_, book0_.isbn as isbn2_1_0_, book0_.notes as notes3_1_0_, book0_.title as title4_1_0_, book0_.user_id as user_id7_1_0_ from book book0_ where book0_.id=?
[DEBUG] 2021-05-11 20:54:21.522 [http-nio-8080-exec-10] Loader - Static select for action ACTION_REFRESH on entity com.leeannjakel.entity.Book: select book0_.id as id1_1_0_, book0_.author_id as author_i5_1_0_, book0_.genre_id as genre_id6_1_0_, book0_.isbn as isbn2_1_0_, book0_.notes as notes3_1_0_, book0_.title as title4_1_0_, book0_.user_id as user_id7_1_0_ from book book0_ where book0_.id=?
[DEBUG] 2021-05-11 20:54:21.535 [http-nio-8080-exec-10] AbstractEntityPersister - Static SQL for entity: com.leeannjakel.entity.User
[DEBUG] 2021-05-11 20:54:21.536 [http-nio-8080-exec-10] AbstractEntityPersister -  Version select: select id from user where id =?
[DEBUG] 2021-05-11 20:54:21.536 [http-nio-8080-exec-10] AbstractEntityPersister -  Snapshot select: select user_.id, user_.email as email2_4_, user_.first_name as first_na3_4_, user_.last_name as last_nam4_4_, user_.password as password5_4_, user_.user_name as user_nam6_4_ from user user_ where user_.id=?
[DEBUG] 2021-05-11 20:54:21.536 [http-nio-8080-exec-10] AbstractEntityPersister -  Insert 0: insert into user (email, first_name, last_name, password, user_name, id) values (?, ?, ?, ?, ?, ?)
[DEBUG] 2021-05-11 20:54:21.536 [http-nio-8080-exec-10] AbstractEntityPersister -  Update 0: update user set email=?, first_name=?, last_name=?, password=?, user_name=? where id=?
[DEBUG] 2021-05-11 20:54:21.536 [http-nio-8080-exec-10] AbstractEntityPersister -  Delete 0: delete from user where id=?
[DEBUG] 2021-05-11 20:54:21.536 [http-nio-8080-exec-10] AbstractEntityPersister -  Identity insert: insert into user (email, first_name, last_name, password, user_name) values (?, ?, ?, ?, ?)
[DEBUG] 2021-05-11 20:54:21.536 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3cf9d887]
[DEBUG] 2021-05-11 20:54:21.537 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : books
[DEBUG] 2021-05-11 20:54:21.537 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@14b8e7c1]
[DEBUG] 2021-05-11 20:54:21.537 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6be22ecd]
[DEBUG] 2021-05-11 20:54:21.537 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2021-05-11 20:54:21.537 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2021-05-11 20:54:21.537 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2021-05-11 20:54:21.541 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2021-05-11 20:54:21.542 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : roles
[DEBUG] 2021-05-11 20:54:21.545 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@192dfed6]
[DEBUG] 2021-05-11 20:54:21.545 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@425a88ba]
[DEBUG] 2021-05-11 20:54:21.545 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : roles.roleName
[DEBUG] 2021-05-11 20:54:21.545 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : roles.user
[DEBUG] 2021-05-11 20:54:21.545 [http-nio-8080-exec-10] MetamodelGraphWalker - Property path deemed to be circular : roles.user
[DEBUG] 2021-05-11 20:54:21.546 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : roles.userName
[DEBUG] 2021-05-11 20:54:21.546 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : userName
[DEBUG] 2021-05-11 20:54:21.546 [http-nio-8080-exec-10] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-05-11 20:54:21.558 [http-nio-8080-exec-10] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-05-11 20:54:21.577 [http-nio-8080-exec-10] LoadPlanTreePrinter - LoadPlan(entity=com.leeannjakel.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.leeannjakel.entity.User, querySpaceUid=<gen:0>, path=com.leeannjakel.entity.User)
          - CollectionAttributeFetchImpl(collection=com.leeannjakel.entity.User.books, querySpaceUid=<gen:1>, path=com.leeannjakel.entity.User.books)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.leeannjakel.entity.Book, querySpaceUid=<gen:2>, path=com.leeannjakel.entity.User.books.<elements>)
          - CollectionAttributeFetchImpl(collection=com.leeannjakel.entity.User.roles, querySpaceUid=<gen:3>, path=com.leeannjakel.entity.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.leeannjakel.entity.Role, querySpaceUid=<gen:4>, path=com.leeannjakel.entity.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.leeannjakel.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:3>
             - CollectionQuerySpaceImpl(uid=<gen:3>, collection=com.leeannjakel.entity.User.roles)
                - SQL table alias mapping - roles1_
                - alias suffix - 1_
                - suffixed key columns - {user_id4_3_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_3_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:3> -> <gen:4>
                   - EntityQuerySpaceImpl(uid=<gen:4>, entity=com.leeannjakel.entity.Role)
                      - SQL table alias mapping - roles1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_3_2_}

[DEBUG] 2021-05-11 20:54:21.579 [http-nio-8080-exec-10] EntityLoader - Static select for entity com.leeannjakel.entity.User [NONE]: select user0_.id as id1_4_0_, user0_.email as email2_4_0_, user0_.first_name as first_na3_4_0_, user0_.last_name as last_nam4_4_0_, user0_.password as password5_4_0_, user0_.user_name as user_nam6_4_0_, roles1_.user_id as user_id4_3_1_, roles1_.id as id1_3_1_, roles1_.id as id1_3_2_, roles1_.role_name as role_nam2_3_2_, roles1_.user_id as user_id4_3_2_, roles1_.user_name as user_nam3_3_2_ from user user0_ left outer join role roles1_ on user0_.id=roles1_.user_id where user0_.id=?
[DEBUG] 2021-05-11 20:54:21.579 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1d4cb191]
[DEBUG] 2021-05-11 20:54:21.579 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : books
[DEBUG] 2021-05-11 20:54:21.579 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@65eab46c]
[DEBUG] 2021-05-11 20:54:21.579 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7a213a5]
[DEBUG] 2021-05-11 20:54:21.579 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2021-05-11 20:54:21.579 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2021-05-11 20:54:21.579 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2021-05-11 20:54:21.579 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2021-05-11 20:54:21.579 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : roles
[DEBUG] 2021-05-11 20:54:21.579 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7f1aeaf9]
[DEBUG] 2021-05-11 20:54:21.580 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5bd52be5]
[DEBUG] 2021-05-11 20:54:21.580 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : roles.roleName
[DEBUG] 2021-05-11 20:54:21.587 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : roles.user
[DEBUG] 2021-05-11 20:54:21.587 [http-nio-8080-exec-10] MetamodelGraphWalker - Property path deemed to be circular : roles.user
[DEBUG] 2021-05-11 20:54:21.589 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : roles.userName
[DEBUG] 2021-05-11 20:54:21.590 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : userName
[DEBUG] 2021-05-11 20:54:21.590 [http-nio-8080-exec-10] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-05-11 20:54:21.590 [http-nio-8080-exec-10] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-05-11 20:54:21.591 [http-nio-8080-exec-10] LoadPlanTreePrinter - LoadPlan(entity=com.leeannjakel.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.leeannjakel.entity.User, querySpaceUid=<gen:0>, path=com.leeannjakel.entity.User)
          - CollectionAttributeFetchImpl(collection=com.leeannjakel.entity.User.books, querySpaceUid=<gen:1>, path=com.leeannjakel.entity.User.books)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.leeannjakel.entity.Book, querySpaceUid=<gen:2>, path=com.leeannjakel.entity.User.books.<elements>)
          - CollectionAttributeFetchImpl(collection=com.leeannjakel.entity.User.roles, querySpaceUid=<gen:3>, path=com.leeannjakel.entity.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.leeannjakel.entity.Role, querySpaceUid=<gen:4>, path=com.leeannjakel.entity.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.leeannjakel.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:3>
             - CollectionQuerySpaceImpl(uid=<gen:3>, collection=com.leeannjakel.entity.User.roles)
                - SQL table alias mapping - roles1_
                - alias suffix - 1_
                - suffixed key columns - {user_id4_3_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_3_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:3> -> <gen:4>
                   - EntityQuerySpaceImpl(uid=<gen:4>, entity=com.leeannjakel.entity.Role)
                      - SQL table alias mapping - roles1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_3_2_}

[DEBUG] 2021-05-11 20:54:21.591 [http-nio-8080-exec-10] EntityLoader - Static select for entity com.leeannjakel.entity.User [READ]: select user0_.id as id1_4_0_, user0_.email as email2_4_0_, user0_.first_name as first_na3_4_0_, user0_.last_name as last_nam4_4_0_, user0_.password as password5_4_0_, user0_.user_name as user_nam6_4_0_, roles1_.user_id as user_id4_3_1_, roles1_.id as id1_3_1_, roles1_.id as id1_3_2_, roles1_.role_name as role_nam2_3_2_, roles1_.user_id as user_id4_3_2_, roles1_.user_name as user_nam3_3_2_ from user user0_ left outer join role roles1_ on user0_.id=roles1_.user_id where user0_.id=?
[DEBUG] 2021-05-11 20:54:21.626 [http-nio-8080-exec-10] Loader - Static select for action ACTION_MERGE on entity com.leeannjakel.entity.User: select user0_.id as id1_4_1_, user0_.email as email2_4_1_, user0_.first_name as first_na3_4_1_, user0_.last_name as last_nam4_4_1_, user0_.password as password5_4_1_, user0_.user_name as user_nam6_4_1_, books1_.user_id as user_id7_1_3_, books1_.id as id1_1_3_, books1_.id as id1_1_0_, books1_.author_id as author_i5_1_0_, books1_.genre_id as genre_id6_1_0_, books1_.isbn as isbn2_1_0_, books1_.notes as notes3_1_0_, books1_.title as title4_1_0_, books1_.user_id as user_id7_1_0_ from user user0_ left outer join book books1_ on user0_.id=books1_.user_id where user0_.id=?
[DEBUG] 2021-05-11 20:54:21.641 [http-nio-8080-exec-10] Loader - Static select for action ACTION_REFRESH on entity com.leeannjakel.entity.User: select user0_.id as id1_4_1_, user0_.email as email2_4_1_, user0_.first_name as first_na3_4_1_, user0_.last_name as last_nam4_4_1_, user0_.password as password5_4_1_, user0_.user_name as user_nam6_4_1_, books1_.user_id as user_id7_1_3_, books1_.id as id1_1_3_, books1_.id as id1_1_0_, books1_.author_id as author_i5_1_0_, books1_.genre_id as genre_id6_1_0_, books1_.isbn as isbn2_1_0_, books1_.notes as notes3_1_0_, books1_.title as title4_1_0_, books1_.user_id as user_id7_1_0_ from user user0_ left outer join book books1_ on user0_.id=books1_.user_id where user0_.id=?
[DEBUG] 2021-05-11 20:54:21.642 [http-nio-8080-exec-10] AbstractEntityPersister - Static SQL for entity: com.leeannjakel.entity.Author
[DEBUG] 2021-05-11 20:54:21.643 [http-nio-8080-exec-10] AbstractEntityPersister -  Version select: select id from author where id =?
[DEBUG] 2021-05-11 20:54:21.643 [http-nio-8080-exec-10] AbstractEntityPersister -  Snapshot select: select author_.id, author_.name as name2_0_ from author author_ where author_.id=?
[DEBUG] 2021-05-11 20:54:21.653 [http-nio-8080-exec-10] AbstractEntityPersister -  Insert 0: insert into author (name, id) values (?, ?)
[DEBUG] 2021-05-11 20:54:21.654 [http-nio-8080-exec-10] AbstractEntityPersister -  Update 0: update author set name=? where id=?
[DEBUG] 2021-05-11 20:54:21.654 [http-nio-8080-exec-10] AbstractEntityPersister -  Delete 0: delete from author where id=?
[DEBUG] 2021-05-11 20:54:21.654 [http-nio-8080-exec-10] AbstractEntityPersister -  Identity insert: insert into author (name) values (?)
[DEBUG] 2021-05-11 20:54:21.654 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7129600e]
[DEBUG] 2021-05-11 20:54:21.654 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : books
[DEBUG] 2021-05-11 20:54:21.654 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@477c5b64]
[DEBUG] 2021-05-11 20:54:21.656 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7f0aee64]
[DEBUG] 2021-05-11 20:54:21.666 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : books.author
[DEBUG] 2021-05-11 20:54:21.666 [http-nio-8080-exec-10] MetamodelGraphWalker - Property path deemed to be circular : books.author
[DEBUG] 2021-05-11 20:54:21.666 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : books.genre
[DEBUG] 2021-05-11 20:54:21.676 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7d8a5ca1]
[DEBUG] 2021-05-11 20:54:21.681 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : books.genre.books
[DEBUG] 2021-05-11 20:54:21.681 [http-nio-8080-exec-10] MetamodelGraphWalker - Property path deemed to be circular : books.genre.books
[DEBUG] 2021-05-11 20:54:21.681 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : books.genre.name
[DEBUG] 2021-05-11 20:54:21.681 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : books.isbn
[DEBUG] 2021-05-11 20:54:21.681 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : books.notes
[DEBUG] 2021-05-11 20:54:21.681 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : books.title
[DEBUG] 2021-05-11 20:54:21.681 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : books.user
[DEBUG] 2021-05-11 20:54:21.681 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5e8db39a]
[DEBUG] 2021-05-11 20:54:21.681 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : books.user.books
[DEBUG] 2021-05-11 20:54:21.681 [http-nio-8080-exec-10] MetamodelGraphWalker - Property path deemed to be circular : books.user.books
[DEBUG] 2021-05-11 20:54:21.681 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : books.user.email
[DEBUG] 2021-05-11 20:54:21.682 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : books.user.firstName
[DEBUG] 2021-05-11 20:54:21.682 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : books.user.lastName
[DEBUG] 2021-05-11 20:54:21.683 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : books.user.password
[DEBUG] 2021-05-11 20:54:21.684 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : books.user.roles
[DEBUG] 2021-05-11 20:54:21.712 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6d042d3a]
[DEBUG] 2021-05-11 20:54:21.712 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@67706a04]
[DEBUG] 2021-05-11 20:54:21.712 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : books.user.userName
[DEBUG] 2021-05-11 20:54:21.712 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2021-05-11 20:54:21.712 [http-nio-8080-exec-10] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-05-11 20:54:21.713 [http-nio-8080-exec-10] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-05-11 20:54:21.734 [http-nio-8080-exec-10] LoadPlanTreePrinter - LoadPlan(entity=com.leeannjakel.entity.Author)
    - Returns
       - EntityReturnImpl(entity=com.leeannjakel.entity.Author, querySpaceUid=<gen:0>, path=com.leeannjakel.entity.Author)
          - CollectionAttributeFetchImpl(collection=com.leeannjakel.entity.Author.books, querySpaceUid=<gen:1>, path=com.leeannjakel.entity.Author.books)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.leeannjakel.entity.Book, querySpaceUid=<gen:2>, path=com.leeannjakel.entity.Author.books.<elements>)
                - EntityAttributeFetchImpl(entity=com.leeannjakel.entity.Genre, querySpaceUid=<gen:3>, path=com.leeannjakel.entity.Author.books.<elements>.genre)
                - EntityAttributeFetchImpl(entity=com.leeannjakel.entity.User, querySpaceUid=<gen:4>, path=com.leeannjakel.entity.Author.books.<elements>.user)
                   - CollectionAttributeFetchImpl(collection=com.leeannjakel.entity.User.roles, querySpaceUid=<gen:5>, path=com.leeannjakel.entity.Author.books.<elements>.user.roles)
                      - (collection element) CollectionFetchableElementEntityGraph(entity=com.leeannjakel.entity.Role, querySpaceUid=<gen:6>, path=com.leeannjakel.entity.Author.books.<elements>.user.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.leeannjakel.entity.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(books)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=com.leeannjakel.entity.Author.books)
                - SQL table alias mapping - books1_
                - alias suffix - 1_
                - suffixed key columns - {author_i5_1_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_1_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.leeannjakel.entity.Book)
                      - SQL table alias mapping - books1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_1_2_}
                      - JOIN (JoinDefinedByMetadata(genre)) : <gen:2> -> <gen:3>
                         - EntityQuerySpaceImpl(uid=<gen:3>, entity=com.leeannjakel.entity.Genre)
                            - SQL table alias mapping - genre2_
                            - alias suffix - 3_
                            - suffixed key columns - {id1_2_3_}
                      - JOIN (JoinDefinedByMetadata(user)) : <gen:2> -> <gen:4>
                         - EntityQuerySpaceImpl(uid=<gen:4>, entity=com.leeannjakel.entity.User)
                            - SQL table alias mapping - user3_
                            - alias suffix - 4_
                            - suffixed key columns - {id1_4_4_}

[DEBUG] 2021-05-11 20:54:21.734 [http-nio-8080-exec-10] EntityLoader - Static select for entity com.leeannjakel.entity.Author [NONE]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, books1_.author_id as author_i5_1_1_, books1_.id as id1_1_1_, books1_.id as id1_1_2_, books1_.author_id as author_i5_1_2_, books1_.genre_id as genre_id6_1_2_, books1_.isbn as isbn2_1_2_, books1_.notes as notes3_1_2_, books1_.title as title4_1_2_, books1_.user_id as user_id7_1_2_, genre2_.id as id1_2_3_, genre2_.name as name2_2_3_, user3_.id as id1_4_4_, user3_.email as email2_4_4_, user3_.first_name as first_na3_4_4_, user3_.last_name as last_nam4_4_4_, user3_.password as password5_4_4_, user3_.user_name as user_nam6_4_4_ from author author0_ left outer join book books1_ on author0_.id=books1_.author_id left outer join genre genre2_ on books1_.genre_id=genre2_.id left outer join user user3_ on books1_.user_id=user3_.id where author0_.id=?
[DEBUG] 2021-05-11 20:54:21.736 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@54d20413]
[DEBUG] 2021-05-11 20:54:21.747 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : books
[DEBUG] 2021-05-11 20:54:21.761 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7a210eaf]
[DEBUG] 2021-05-11 20:54:21.769 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1e657ba5]
[DEBUG] 2021-05-11 20:54:21.769 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : books.author
[DEBUG] 2021-05-11 20:54:21.769 [http-nio-8080-exec-10] MetamodelGraphWalker - Property path deemed to be circular : books.author
[DEBUG] 2021-05-11 20:54:21.776 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : books.genre
[DEBUG] 2021-05-11 20:54:21.776 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1a823f91]
[DEBUG] 2021-05-11 20:54:21.777 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : books.genre.books
[DEBUG] 2021-05-11 20:54:21.777 [http-nio-8080-exec-10] MetamodelGraphWalker - Property path deemed to be circular : books.genre.books
[DEBUG] 2021-05-11 20:54:21.777 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : books.genre.name
[DEBUG] 2021-05-11 20:54:21.777 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : books.isbn
[DEBUG] 2021-05-11 20:54:21.777 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : books.notes
[DEBUG] 2021-05-11 20:54:21.777 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : books.title
[DEBUG] 2021-05-11 20:54:21.777 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : books.user
[DEBUG] 2021-05-11 20:54:21.777 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6d299016]
[DEBUG] 2021-05-11 20:54:21.777 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : books.user.books
[DEBUG] 2021-05-11 20:54:21.777 [http-nio-8080-exec-10] MetamodelGraphWalker - Property path deemed to be circular : books.user.books
[DEBUG] 2021-05-11 20:54:21.777 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : books.user.email
[DEBUG] 2021-05-11 20:54:21.777 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : books.user.firstName
[DEBUG] 2021-05-11 20:54:21.777 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : books.user.lastName
[DEBUG] 2021-05-11 20:54:21.777 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : books.user.password
[DEBUG] 2021-05-11 20:54:21.777 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : books.user.roles
[DEBUG] 2021-05-11 20:54:21.777 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2e328611]
[DEBUG] 2021-05-11 20:54:21.777 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7fd54a9f]
[DEBUG] 2021-05-11 20:54:21.778 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : books.user.userName
[DEBUG] 2021-05-11 20:54:21.778 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2021-05-11 20:54:21.778 [http-nio-8080-exec-10] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-05-11 20:54:21.778 [http-nio-8080-exec-10] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-05-11 20:54:21.813 [http-nio-8080-exec-10] LoadPlanTreePrinter - LoadPlan(entity=com.leeannjakel.entity.Author)
    - Returns
       - EntityReturnImpl(entity=com.leeannjakel.entity.Author, querySpaceUid=<gen:0>, path=com.leeannjakel.entity.Author)
          - CollectionAttributeFetchImpl(collection=com.leeannjakel.entity.Author.books, querySpaceUid=<gen:1>, path=com.leeannjakel.entity.Author.books)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.leeannjakel.entity.Book, querySpaceUid=<gen:2>, path=com.leeannjakel.entity.Author.books.<elements>)
                - EntityAttributeFetchImpl(entity=com.leeannjakel.entity.Genre, querySpaceUid=<gen:3>, path=com.leeannjakel.entity.Author.books.<elements>.genre)
                - EntityAttributeFetchImpl(entity=com.leeannjakel.entity.User, querySpaceUid=<gen:4>, path=com.leeannjakel.entity.Author.books.<elements>.user)
                   - CollectionAttributeFetchImpl(collection=com.leeannjakel.entity.User.roles, querySpaceUid=<gen:5>, path=com.leeannjakel.entity.Author.books.<elements>.user.roles)
                      - (collection element) CollectionFetchableElementEntityGraph(entity=com.leeannjakel.entity.Role, querySpaceUid=<gen:6>, path=com.leeannjakel.entity.Author.books.<elements>.user.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.leeannjakel.entity.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(books)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=com.leeannjakel.entity.Author.books)
                - SQL table alias mapping - books1_
                - alias suffix - 1_
                - suffixed key columns - {author_i5_1_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_1_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.leeannjakel.entity.Book)
                      - SQL table alias mapping - books1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_1_2_}
                      - JOIN (JoinDefinedByMetadata(genre)) : <gen:2> -> <gen:3>
                         - EntityQuerySpaceImpl(uid=<gen:3>, entity=com.leeannjakel.entity.Genre)
                            - SQL table alias mapping - genre2_
                            - alias suffix - 3_
                            - suffixed key columns - {id1_2_3_}
                      - JOIN (JoinDefinedByMetadata(user)) : <gen:2> -> <gen:4>
                         - EntityQuerySpaceImpl(uid=<gen:4>, entity=com.leeannjakel.entity.User)
                            - SQL table alias mapping - user3_
                            - alias suffix - 4_
                            - suffixed key columns - {id1_4_4_}

[DEBUG] 2021-05-11 20:54:21.814 [http-nio-8080-exec-10] EntityLoader - Static select for entity com.leeannjakel.entity.Author [READ]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, books1_.author_id as author_i5_1_1_, books1_.id as id1_1_1_, books1_.id as id1_1_2_, books1_.author_id as author_i5_1_2_, books1_.genre_id as genre_id6_1_2_, books1_.isbn as isbn2_1_2_, books1_.notes as notes3_1_2_, books1_.title as title4_1_2_, books1_.user_id as user_id7_1_2_, genre2_.id as id1_2_3_, genre2_.name as name2_2_3_, user3_.id as id1_4_4_, user3_.email as email2_4_4_, user3_.first_name as first_na3_4_4_, user3_.last_name as last_nam4_4_4_, user3_.password as password5_4_4_, user3_.user_name as user_nam6_4_4_ from author author0_ left outer join book books1_ on author0_.id=books1_.author_id left outer join genre genre2_ on books1_.genre_id=genre2_.id left outer join user user3_ on books1_.user_id=user3_.id where author0_.id=?
[DEBUG] 2021-05-11 20:54:21.839 [http-nio-8080-exec-10] Loader - Static select for action ACTION_MERGE on entity com.leeannjakel.entity.Author: select author0_.id as id1_0_1_, author0_.name as name2_0_1_, books1_.author_id as author_i5_1_3_, books1_.id as id1_1_3_, books1_.id as id1_1_0_, books1_.author_id as author_i5_1_0_, books1_.genre_id as genre_id6_1_0_, books1_.isbn as isbn2_1_0_, books1_.notes as notes3_1_0_, books1_.title as title4_1_0_, books1_.user_id as user_id7_1_0_ from author author0_ left outer join book books1_ on author0_.id=books1_.author_id where author0_.id=?
[DEBUG] 2021-05-11 20:54:21.856 [http-nio-8080-exec-10] Loader - Static select for action ACTION_REFRESH on entity com.leeannjakel.entity.Author: select author0_.id as id1_0_1_, author0_.name as name2_0_1_, books1_.author_id as author_i5_1_3_, books1_.id as id1_1_3_, books1_.id as id1_1_0_, books1_.author_id as author_i5_1_0_, books1_.genre_id as genre_id6_1_0_, books1_.isbn as isbn2_1_0_, books1_.notes as notes3_1_0_, books1_.title as title4_1_0_, books1_.user_id as user_id7_1_0_ from author author0_ left outer join book books1_ on author0_.id=books1_.author_id where author0_.id=?
[DEBUG] 2021-05-11 20:54:21.857 [http-nio-8080-exec-10] AbstractEntityPersister - Static SQL for entity: com.leeannjakel.entity.Genre
[DEBUG] 2021-05-11 20:54:21.857 [http-nio-8080-exec-10] AbstractEntityPersister -  Version select: select id from genre where id =?
[DEBUG] 2021-05-11 20:54:21.857 [http-nio-8080-exec-10] AbstractEntityPersister -  Snapshot select: select genre_.id, genre_.name as name2_2_ from genre genre_ where genre_.id=?
[DEBUG] 2021-05-11 20:54:21.857 [http-nio-8080-exec-10] AbstractEntityPersister -  Insert 0: insert into genre (name, id) values (?, ?)
[DEBUG] 2021-05-11 20:54:21.857 [http-nio-8080-exec-10] AbstractEntityPersister -  Update 0: update genre set name=? where id=?
[DEBUG] 2021-05-11 20:54:21.857 [http-nio-8080-exec-10] AbstractEntityPersister -  Delete 0: delete from genre where id=?
[DEBUG] 2021-05-11 20:54:21.857 [http-nio-8080-exec-10] AbstractEntityPersister -  Identity insert: insert into genre (name) values (?)
[DEBUG] 2021-05-11 20:54:21.857 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5eddcc53]
[DEBUG] 2021-05-11 20:54:21.857 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : books
[DEBUG] 2021-05-11 20:54:21.857 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7be1eb10]
[DEBUG] 2021-05-11 20:54:21.858 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2eb5c741]
[DEBUG] 2021-05-11 20:54:21.858 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2021-05-11 20:54:21.858 [http-nio-8080-exec-10] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-05-11 20:54:21.858 [http-nio-8080-exec-10] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-05-11 20:54:21.858 [http-nio-8080-exec-10] LoadPlanTreePrinter - LoadPlan(entity=com.leeannjakel.entity.Genre)
    - Returns
       - EntityReturnImpl(entity=com.leeannjakel.entity.Genre, querySpaceUid=<gen:0>, path=com.leeannjakel.entity.Genre)
          - CollectionAttributeFetchImpl(collection=com.leeannjakel.entity.Genre.books, querySpaceUid=<gen:1>, path=com.leeannjakel.entity.Genre.books)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.leeannjakel.entity.Book, querySpaceUid=<gen:2>, path=com.leeannjakel.entity.Genre.books.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.leeannjakel.entity.Genre)
          - SQL table alias mapping - genre0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

[DEBUG] 2021-05-11 20:54:21.858 [http-nio-8080-exec-10] EntityLoader - Static select for entity com.leeannjakel.entity.Genre [NONE]: select genre0_.id as id1_2_0_, genre0_.name as name2_2_0_ from genre genre0_ where genre0_.id=?
[DEBUG] 2021-05-11 20:54:21.858 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1e3a2990]
[DEBUG] 2021-05-11 20:54:21.858 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : books
[DEBUG] 2021-05-11 20:54:21.858 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@64d905d5]
[DEBUG] 2021-05-11 20:54:21.858 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@64d649c0]
[DEBUG] 2021-05-11 20:54:21.859 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2021-05-11 20:54:21.859 [http-nio-8080-exec-10] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-05-11 20:54:21.859 [http-nio-8080-exec-10] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-05-11 20:54:21.859 [http-nio-8080-exec-10] LoadPlanTreePrinter - LoadPlan(entity=com.leeannjakel.entity.Genre)
    - Returns
       - EntityReturnImpl(entity=com.leeannjakel.entity.Genre, querySpaceUid=<gen:0>, path=com.leeannjakel.entity.Genre)
          - CollectionAttributeFetchImpl(collection=com.leeannjakel.entity.Genre.books, querySpaceUid=<gen:1>, path=com.leeannjakel.entity.Genre.books)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.leeannjakel.entity.Book, querySpaceUid=<gen:2>, path=com.leeannjakel.entity.Genre.books.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.leeannjakel.entity.Genre)
          - SQL table alias mapping - genre0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

[DEBUG] 2021-05-11 20:54:21.873 [http-nio-8080-exec-10] EntityLoader - Static select for entity com.leeannjakel.entity.Genre [READ]: select genre0_.id as id1_2_0_, genre0_.name as name2_2_0_ from genre genre0_ where genre0_.id=?
[DEBUG] 2021-05-11 20:54:21.873 [http-nio-8080-exec-10] Loader - Static select for action ACTION_MERGE on entity com.leeannjakel.entity.Genre: select genre0_.id as id1_2_1_, genre0_.name as name2_2_1_, books1_.genre_id as genre_id6_1_3_, books1_.id as id1_1_3_, books1_.id as id1_1_0_, books1_.author_id as author_i5_1_0_, books1_.genre_id as genre_id6_1_0_, books1_.isbn as isbn2_1_0_, books1_.notes as notes3_1_0_, books1_.title as title4_1_0_, books1_.user_id as user_id7_1_0_ from genre genre0_ left outer join book books1_ on genre0_.id=books1_.genre_id where genre0_.id=?
[DEBUG] 2021-05-11 20:54:21.874 [http-nio-8080-exec-10] Loader - Static select for action ACTION_REFRESH on entity com.leeannjakel.entity.Genre: select genre0_.id as id1_2_1_, genre0_.name as name2_2_1_, books1_.genre_id as genre_id6_1_3_, books1_.id as id1_1_3_, books1_.id as id1_1_0_, books1_.author_id as author_i5_1_0_, books1_.genre_id as genre_id6_1_0_, books1_.isbn as isbn2_1_0_, books1_.notes as notes3_1_0_, books1_.title as title4_1_0_, books1_.user_id as user_id7_1_0_ from genre genre0_ left outer join book books1_ on genre0_.id=books1_.genre_id where genre0_.id=?
[DEBUG] 2021-05-11 20:54:21.874 [http-nio-8080-exec-10] AbstractEntityPersister - Static SQL for entity: com.leeannjakel.entity.Role
[DEBUG] 2021-05-11 20:54:21.887 [http-nio-8080-exec-10] AbstractEntityPersister -  Version select: select id from role where id =?
[DEBUG] 2021-05-11 20:54:21.887 [http-nio-8080-exec-10] AbstractEntityPersister -  Snapshot select: select role_.id, role_.role_name as role_nam2_3_, role_.user_id as user_id4_3_, role_.user_name as user_nam3_3_ from role role_ where role_.id=?
[DEBUG] 2021-05-11 20:54:21.887 [http-nio-8080-exec-10] AbstractEntityPersister -  Insert 0: insert into role (role_name, user_id, user_name, id) values (?, ?, ?, ?)
[DEBUG] 2021-05-11 20:54:21.887 [http-nio-8080-exec-10] AbstractEntityPersister -  Update 0: update role set role_name=?, user_id=?, user_name=? where id=?
[DEBUG] 2021-05-11 20:54:21.887 [http-nio-8080-exec-10] AbstractEntityPersister -  Delete 0: delete from role where id=?
[DEBUG] 2021-05-11 20:54:21.892 [http-nio-8080-exec-10] AbstractEntityPersister -  Identity insert: insert into role (role_name, user_id, user_name) values (?, ?, ?)
[DEBUG] 2021-05-11 20:54:21.892 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2b6f8a63]
[DEBUG] 2021-05-11 20:54:21.896 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : roleName
[DEBUG] 2021-05-11 20:54:21.897 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2021-05-11 20:54:21.897 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@31bb4a53]
[DEBUG] 2021-05-11 20:54:21.905 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.books
[DEBUG] 2021-05-11 20:54:21.912 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@301e3ff2]
[DEBUG] 2021-05-11 20:54:21.928 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2d7ffecd]
[DEBUG] 2021-05-11 20:54:21.929 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2021-05-11 20:54:21.929 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2021-05-11 20:54:21.929 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2021-05-11 20:54:21.929 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2021-05-11 20:54:21.929 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2021-05-11 20:54:21.930 [http-nio-8080-exec-10] MetamodelGraphWalker - Property path deemed to be circular : user.roles
[DEBUG] 2021-05-11 20:54:21.930 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.userName
[DEBUG] 2021-05-11 20:54:21.948 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : userName
[DEBUG] 2021-05-11 20:54:21.948 [http-nio-8080-exec-10] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-05-11 20:54:21.949 [http-nio-8080-exec-10] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-05-11 20:54:21.955 [http-nio-8080-exec-10] LoadPlanTreePrinter - LoadPlan(entity=com.leeannjakel.entity.Role)
    - Returns
       - EntityReturnImpl(entity=com.leeannjakel.entity.Role, querySpaceUid=<gen:0>, path=com.leeannjakel.entity.Role)
          - EntityAttributeFetchImpl(entity=com.leeannjakel.entity.User, querySpaceUid=<gen:1>, path=com.leeannjakel.entity.Role.user)
             - CollectionAttributeFetchImpl(collection=com.leeannjakel.entity.User.books, querySpaceUid=<gen:2>, path=com.leeannjakel.entity.Role.user.books)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.leeannjakel.entity.Book, querySpaceUid=<gen:3>, path=com.leeannjakel.entity.Role.user.books.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.leeannjakel.entity.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.leeannjakel.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_4_1_}

[DEBUG] 2021-05-11 20:54:21.955 [http-nio-8080-exec-10] EntityLoader - Static select for entity com.leeannjakel.entity.Role [NONE]: select role0_.id as id1_3_0_, role0_.role_name as role_nam2_3_0_, role0_.user_id as user_id4_3_0_, role0_.user_name as user_nam3_3_0_, user1_.id as id1_4_1_, user1_.email as email2_4_1_, user1_.first_name as first_na3_4_1_, user1_.last_name as last_nam4_4_1_, user1_.password as password5_4_1_, user1_.user_name as user_nam6_4_1_ from role role0_ left outer join user user1_ on role0_.user_id=user1_.id where role0_.id=?
[DEBUG] 2021-05-11 20:54:21.956 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@46fdd0e3]
[DEBUG] 2021-05-11 20:54:21.980 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : roleName
[DEBUG] 2021-05-11 20:54:21.981 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2021-05-11 20:54:21.990 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4c0c68dc]
[DEBUG] 2021-05-11 20:54:21.991 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.books
[DEBUG] 2021-05-11 20:54:21.991 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3685cff7]
[DEBUG] 2021-05-11 20:54:21.991 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5a7c5b84]
[DEBUG] 2021-05-11 20:54:22.003 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2021-05-11 20:54:22.011 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2021-05-11 20:54:22.011 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2021-05-11 20:54:22.011 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2021-05-11 20:54:22.011 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2021-05-11 20:54:22.013 [http-nio-8080-exec-10] MetamodelGraphWalker - Property path deemed to be circular : user.roles
[DEBUG] 2021-05-11 20:54:22.013 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.userName
[DEBUG] 2021-05-11 20:54:22.019 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : userName
[DEBUG] 2021-05-11 20:54:22.041 [http-nio-8080-exec-10] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-05-11 20:54:22.056 [http-nio-8080-exec-10] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-05-11 20:54:22.078 [http-nio-8080-exec-10] LoadPlanTreePrinter - LoadPlan(entity=com.leeannjakel.entity.Role)
    - Returns
       - EntityReturnImpl(entity=com.leeannjakel.entity.Role, querySpaceUid=<gen:0>, path=com.leeannjakel.entity.Role)
          - EntityAttributeFetchImpl(entity=com.leeannjakel.entity.User, querySpaceUid=<gen:1>, path=com.leeannjakel.entity.Role.user)
             - CollectionAttributeFetchImpl(collection=com.leeannjakel.entity.User.books, querySpaceUid=<gen:2>, path=com.leeannjakel.entity.Role.user.books)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.leeannjakel.entity.Book, querySpaceUid=<gen:3>, path=com.leeannjakel.entity.Role.user.books.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.leeannjakel.entity.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.leeannjakel.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_4_1_}

[DEBUG] 2021-05-11 20:54:22.078 [http-nio-8080-exec-10] EntityLoader - Static select for entity com.leeannjakel.entity.Role [READ]: select role0_.id as id1_3_0_, role0_.role_name as role_nam2_3_0_, role0_.user_id as user_id4_3_0_, role0_.user_name as user_nam3_3_0_, user1_.id as id1_4_1_, user1_.email as email2_4_1_, user1_.first_name as first_na3_4_1_, user1_.last_name as last_nam4_4_1_, user1_.password as password5_4_1_, user1_.user_name as user_nam6_4_1_ from role role0_ left outer join user user1_ on role0_.user_id=user1_.id where role0_.id=?
[DEBUG] 2021-05-11 20:54:22.078 [http-nio-8080-exec-10] Loader - Static select for action ACTION_MERGE on entity com.leeannjakel.entity.Role: select role0_.id as id1_3_0_, role0_.role_name as role_nam2_3_0_, role0_.user_id as user_id4_3_0_, role0_.user_name as user_nam3_3_0_ from role role0_ where role0_.id=?
[DEBUG] 2021-05-11 20:54:22.078 [http-nio-8080-exec-10] Loader - Static select for action ACTION_REFRESH on entity com.leeannjakel.entity.Role: select role0_.id as id1_3_0_, role0_.role_name as role_nam2_3_0_, role0_.user_id as user_id4_3_0_, role0_.user_name as user_nam3_3_0_ from role role0_ where role0_.id=?
[DEBUG] 2021-05-11 20:54:22.205 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5996a7b4]
[DEBUG] 2021-05-11 20:54:22.205 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@35042b78]
[DEBUG] 2021-05-11 20:54:22.206 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : author
[DEBUG] 2021-05-11 20:54:22.212 [http-nio-8080-exec-10] MetamodelGraphWalker - Property path deemed to be circular : author
[DEBUG] 2021-05-11 20:54:22.212 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : genre
[DEBUG] 2021-05-11 20:54:22.213 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@491344f4]
[DEBUG] 2021-05-11 20:54:22.213 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : genre.books
[DEBUG] 2021-05-11 20:54:22.213 [http-nio-8080-exec-10] MetamodelGraphWalker - Property path deemed to be circular : genre.books
[DEBUG] 2021-05-11 20:54:22.213 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : genre.name
[DEBUG] 2021-05-11 20:54:22.223 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : isbn
[DEBUG] 2021-05-11 20:54:22.223 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : notes
[DEBUG] 2021-05-11 20:54:22.224 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2021-05-11 20:54:22.224 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2021-05-11 20:54:22.233 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@331dc6cc]
[DEBUG] 2021-05-11 20:54:22.241 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.books
[DEBUG] 2021-05-11 20:54:22.241 [http-nio-8080-exec-10] MetamodelGraphWalker - Property path deemed to be circular : user.books
[DEBUG] 2021-05-11 20:54:22.242 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2021-05-11 20:54:22.242 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2021-05-11 20:54:22.245 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2021-05-11 20:54:22.245 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2021-05-11 20:54:22.245 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2021-05-11 20:54:22.245 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@62cbb1e3]
[DEBUG] 2021-05-11 20:54:22.254 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@78c37e3e]
[DEBUG] 2021-05-11 20:54:22.254 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.userName
[DEBUG] 2021-05-11 20:54:22.262 [http-nio-8080-exec-10] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-05-11 20:54:22.305 [http-nio-8080-exec-10] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-05-11 20:54:22.336 [http-nio-8080-exec-10] LoadPlanTreePrinter - LoadPlan(collection=com.leeannjakel.entity.Author.books)
    - Returns
       - CollectionReturnImpl(collection=com.leeannjakel.entity.Author.books, querySpaceUid=<gen:0>, path=[com.leeannjakel.entity.Author.books])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.leeannjakel.entity.Book, querySpaceUid=<gen:1>, path=[com.leeannjakel.entity.Author.books].<elements>)
             - EntityAttributeFetchImpl(entity=com.leeannjakel.entity.Genre, querySpaceUid=<gen:2>, path=[com.leeannjakel.entity.Author.books].<elements>.genre)
             - EntityAttributeFetchImpl(entity=com.leeannjakel.entity.User, querySpaceUid=<gen:3>, path=[com.leeannjakel.entity.Author.books].<elements>.user)
                - CollectionAttributeFetchImpl(collection=com.leeannjakel.entity.User.roles, querySpaceUid=<gen:4>, path=[com.leeannjakel.entity.Author.books].<elements>.user.roles)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.leeannjakel.entity.Role, querySpaceUid=<gen:5>, path=[com.leeannjakel.entity.Author.books].<elements>.user.roles.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.leeannjakel.entity.Author.books)
          - SQL table alias mapping - books0_
          - alias suffix - 0_
          - suffixed key columns - {author_i5_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.leeannjakel.entity.Book)
                - SQL table alias mapping - books0_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}
                - JOIN (JoinDefinedByMetadata(genre)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.leeannjakel.entity.Genre)
                      - SQL table alias mapping - genre1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_2_2_}
                - JOIN (JoinDefinedByMetadata(user)) : <gen:1> -> <gen:3>
                   - EntityQuerySpaceImpl(uid=<gen:3>, entity=com.leeannjakel.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 3_
                      - suffixed key columns - {id1_4_3_}

[DEBUG] 2021-05-11 20:54:22.341 [http-nio-8080-exec-10] CollectionLoader - Static select for collection com.leeannjakel.entity.Author.books: select books0_.author_id as author_i5_1_0_, books0_.id as id1_1_0_, books0_.id as id1_1_1_, books0_.author_id as author_i5_1_1_, books0_.genre_id as genre_id6_1_1_, books0_.isbn as isbn2_1_1_, books0_.notes as notes3_1_1_, books0_.title as title4_1_1_, books0_.user_id as user_id7_1_1_, genre1_.id as id1_2_2_, genre1_.name as name2_2_2_, user2_.id as id1_4_3_, user2_.email as email2_4_3_, user2_.first_name as first_na3_4_3_, user2_.last_name as last_nam4_4_3_, user2_.password as password5_4_3_, user2_.user_name as user_nam6_4_3_ from book books0_ left outer join genre genre1_ on books0_.genre_id=genre1_.id left outer join user user2_ on books0_.user_id=user2_.id where books0_.author_id=?
[DEBUG] 2021-05-11 20:54:22.342 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6f1a4dc]
[DEBUG] 2021-05-11 20:54:22.360 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3eabadb6]
[DEBUG] 2021-05-11 20:54:22.375 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : author
[DEBUG] 2021-05-11 20:54:22.394 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@33ac9b9c]
[DEBUG] 2021-05-11 20:54:22.395 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : author.books
[DEBUG] 2021-05-11 20:54:22.395 [http-nio-8080-exec-10] MetamodelGraphWalker - Property path deemed to be circular : author.books
[DEBUG] 2021-05-11 20:54:22.395 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : author.name
[DEBUG] 2021-05-11 20:54:22.395 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : genre
[DEBUG] 2021-05-11 20:54:22.395 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@61762962]
[DEBUG] 2021-05-11 20:54:22.395 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : genre.books
[DEBUG] 2021-05-11 20:54:22.407 [http-nio-8080-exec-10] MetamodelGraphWalker - Property path deemed to be circular : genre.books
[DEBUG] 2021-05-11 20:54:22.407 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : genre.name
[DEBUG] 2021-05-11 20:54:22.420 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : isbn
[DEBUG] 2021-05-11 20:54:22.421 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : notes
[DEBUG] 2021-05-11 20:54:22.421 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2021-05-11 20:54:22.421 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2021-05-11 20:54:22.424 [http-nio-8080-exec-10] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2021-05-11 20:54:22.424 [http-nio-8080-exec-10] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-05-11 20:54:22.425 [http-nio-8080-exec-10] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-05-11 20:54:22.440 [http-nio-8080-exec-10] LoadPlanTreePrinter - LoadPlan(collection=com.leeannjakel.entity.User.books)
    - Returns
       - CollectionReturnImpl(collection=com.leeannjakel.entity.User.books, querySpaceUid=<gen:0>, path=[com.leeannjakel.entity.User.books])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.leeannjakel.entity.Book, querySpaceUid=<gen:1>, path=[com.leeannjakel.entity.User.books].<elements>)
             - EntityAttributeFetchImpl(entity=com.leeannjakel.entity.Author, querySpaceUid=<gen:2>, path=[com.leeannjakel.entity.User.books].<elements>.author)
             - EntityAttributeFetchImpl(entity=com.leeannjakel.entity.Genre, querySpaceUid=<gen:3>, path=[com.leeannjakel.entity.User.books].<elements>.genre)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.leeannjakel.entity.User.books)
          - SQL table alias mapping - books0_
          - alias suffix - 0_
          - suffixed key columns - {user_id7_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.leeannjakel.entity.Book)
                - SQL table alias mapping - books0_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}
                - JOIN (JoinDefinedByMetadata(author)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.leeannjakel.entity.Author)
                      - SQL table alias mapping - author1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}
                - JOIN (JoinDefinedByMetadata(genre)) : <gen:1> -> <gen:3>
                   - EntityQuerySpaceImpl(uid=<gen:3>, entity=com.leeannjakel.entity.Genre)
                      - SQL table alias mapping - genre2_
                      - alias suffix - 3_
                      - suffixed key columns - {id1_2_3_}

[DEBUG] 2021-05-11 20:54:22.455 [http-nio-8080-exec-10] CollectionLoader - Static select for collection com.leeannjakel.entity.User.books: select books0_.user_id as user_id7_1_0_, books0_.id as id1_1_0_, books0_.id as id1_1_1_, books0_.author_id as author_i5_1_1_, books0_.genre_id as genre_id6_1_1_, books0_.isbn as isbn2_1_1_, books0_.notes as notes3_1_1_, books0_.title as title4_1_1_, books0_.user_id as user_id7_1_1_, author1_.id as id1_0_2_, author1_.name as name2_0_2_, genre2_.id as id1_2_3_, genre2_.name as name2_2_3_ from book books0_ left outer join author author1_ on books0_.author_id=author1_.id left outer join genre genre2_ on books0_.genre_id=genre2_.id where books0_.user_id=?
[DEBUG] 2021-05-11 20:54:22.455 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@ee162c6]
[DEBUG] 2021-05-11 20:54:22.455 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@14c08e0e]
[DEBUG] 2021-05-11 20:54:22.456 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : roleName
[DEBUG] 2021-05-11 20:54:22.456 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2021-05-11 20:54:22.456 [http-nio-8080-exec-10] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2021-05-11 20:54:22.456 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : userName
[DEBUG] 2021-05-11 20:54:22.456 [http-nio-8080-exec-10] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-05-11 20:54:22.475 [http-nio-8080-exec-10] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-05-11 20:54:22.482 [http-nio-8080-exec-10] LoadPlanTreePrinter - LoadPlan(collection=com.leeannjakel.entity.User.roles)
    - Returns
       - CollectionReturnImpl(collection=com.leeannjakel.entity.User.roles, querySpaceUid=<gen:0>, path=[com.leeannjakel.entity.User.roles])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.leeannjakel.entity.Role, querySpaceUid=<gen:1>, path=[com.leeannjakel.entity.User.roles].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.leeannjakel.entity.User.roles)
          - SQL table alias mapping - roles0_
          - alias suffix - 0_
          - suffixed key columns - {user_id4_3_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_3_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.leeannjakel.entity.Role)
                - SQL table alias mapping - roles0_
                - alias suffix - 1_
                - suffixed key columns - {id1_3_1_}

[DEBUG] 2021-05-11 20:54:22.493 [http-nio-8080-exec-10] CollectionLoader - Static select for collection com.leeannjakel.entity.User.roles: select roles0_.user_id as user_id4_3_0_, roles0_.id as id1_3_0_, roles0_.id as id1_3_1_, roles0_.role_name as role_nam2_3_1_, roles0_.user_id as user_id4_3_1_, roles0_.user_name as user_nam3_3_1_ from role roles0_ where roles0_.user_id=?
[DEBUG] 2021-05-11 20:54:22.493 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2be34cbd]
[DEBUG] 2021-05-11 20:54:22.493 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3bc31731]
[DEBUG] 2021-05-11 20:54:22.494 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : author
[DEBUG] 2021-05-11 20:54:22.494 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3e0ff18]
[DEBUG] 2021-05-11 20:54:22.494 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : author.books
[DEBUG] 2021-05-11 20:54:22.494 [http-nio-8080-exec-10] MetamodelGraphWalker - Property path deemed to be circular : author.books
[DEBUG] 2021-05-11 20:54:22.494 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : author.name
[DEBUG] 2021-05-11 20:54:22.494 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : genre
[DEBUG] 2021-05-11 20:54:22.494 [http-nio-8080-exec-10] MetamodelGraphWalker - Property path deemed to be circular : genre
[DEBUG] 2021-05-11 20:54:22.494 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : isbn
[DEBUG] 2021-05-11 20:54:22.494 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : notes
[DEBUG] 2021-05-11 20:54:22.494 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2021-05-11 20:54:22.494 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2021-05-11 20:54:22.494 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@37756e82]
[DEBUG] 2021-05-11 20:54:22.494 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.books
[DEBUG] 2021-05-11 20:54:22.494 [http-nio-8080-exec-10] MetamodelGraphWalker - Property path deemed to be circular : user.books
[DEBUG] 2021-05-11 20:54:22.494 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2021-05-11 20:54:22.494 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2021-05-11 20:54:22.518 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2021-05-11 20:54:22.541 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2021-05-11 20:54:22.542 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2021-05-11 20:54:22.547 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3fe8d67d]
[DEBUG] 2021-05-11 20:54:22.547 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@576fe400]
[DEBUG] 2021-05-11 20:54:22.549 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.userName
[DEBUG] 2021-05-11 20:54:22.559 [http-nio-8080-exec-10] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-05-11 20:54:22.559 [http-nio-8080-exec-10] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-05-11 20:54:22.564 [http-nio-8080-exec-10] LoadPlanTreePrinter - LoadPlan(collection=com.leeannjakel.entity.Genre.books)
    - Returns
       - CollectionReturnImpl(collection=com.leeannjakel.entity.Genre.books, querySpaceUid=<gen:0>, path=[com.leeannjakel.entity.Genre.books])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.leeannjakel.entity.Book, querySpaceUid=<gen:1>, path=[com.leeannjakel.entity.Genre.books].<elements>)
             - EntityAttributeFetchImpl(entity=com.leeannjakel.entity.Author, querySpaceUid=<gen:2>, path=[com.leeannjakel.entity.Genre.books].<elements>.author)
             - EntityAttributeFetchImpl(entity=com.leeannjakel.entity.User, querySpaceUid=<gen:3>, path=[com.leeannjakel.entity.Genre.books].<elements>.user)
                - CollectionAttributeFetchImpl(collection=com.leeannjakel.entity.User.roles, querySpaceUid=<gen:4>, path=[com.leeannjakel.entity.Genre.books].<elements>.user.roles)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.leeannjakel.entity.Role, querySpaceUid=<gen:5>, path=[com.leeannjakel.entity.Genre.books].<elements>.user.roles.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.leeannjakel.entity.Genre.books)
          - SQL table alias mapping - books0_
          - alias suffix - 0_
          - suffixed key columns - {genre_id6_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.leeannjakel.entity.Book)
                - SQL table alias mapping - books0_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}
                - JOIN (JoinDefinedByMetadata(author)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.leeannjakel.entity.Author)
                      - SQL table alias mapping - author1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}
                - JOIN (JoinDefinedByMetadata(user)) : <gen:1> -> <gen:3>
                   - EntityQuerySpaceImpl(uid=<gen:3>, entity=com.leeannjakel.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 3_
                      - suffixed key columns - {id1_4_3_}

[DEBUG] 2021-05-11 20:54:22.564 [http-nio-8080-exec-10] CollectionLoader - Static select for collection com.leeannjakel.entity.Genre.books: select books0_.genre_id as genre_id6_1_0_, books0_.id as id1_1_0_, books0_.id as id1_1_1_, books0_.author_id as author_i5_1_1_, books0_.genre_id as genre_id6_1_1_, books0_.isbn as isbn2_1_1_, books0_.notes as notes3_1_1_, books0_.title as title4_1_1_, books0_.user_id as user_id7_1_1_, author1_.id as id1_0_2_, author1_.name as name2_0_2_, user2_.id as id1_4_3_, user2_.email as email2_4_3_, user2_.first_name as first_na3_4_3_, user2_.last_name as last_nam4_4_3_, user2_.password as password5_4_3_, user2_.user_name as user_nam6_4_3_ from book books0_ left outer join author author1_ on books0_.author_id=author1_.id left outer join user user2_ on books0_.user_id=user2_.id where books0_.genre_id=?
[DEBUG] 2021-05-11 20:54:23.683 [http-nio-8080-exec-10] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2021-05-11 20:54:23.683 [http-nio-8080-exec-10] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2021-05-11 20:54:23.684 [http-nio-8080-exec-10] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2021-05-11 20:54:23.965 [http-nio-8080-exec-10] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2021-05-11 20:54:23.968 [http-nio-8080-exec-10] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2021-05-11 20:54:24.010 [http-nio-8080-exec-10] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2021-05-11 20:54:24.010 [http-nio-8080-exec-10] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2021-05-11 20:54:24.080 [http-nio-8080-exec-10] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@2738cde6
[DEBUG] 2021-05-11 20:54:24.129 [http-nio-8080-exec-10] SessionFactoryRegistry - Registering SessionFactory: 4342670d-2adb-4f13-9e2d-6e58e4613571 (<unnamed>)
[DEBUG] 2021-05-11 20:54:24.129 [http-nio-8080-exec-10] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2021-05-11 20:54:26.381 [http-nio-8080-exec-10] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2021-05-11 20:54:27.232 [http-nio-8080-exec-10] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from User as generatedAlias0
[DEBUG] 2021-05-11 20:54:27.645 [http-nio-8080-exec-10] QueryTranslatorFactoryInitiator - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@27e701fd
[DEBUG] 2021-05-11 20:54:28.192 [http-nio-8080-exec-10] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from com.leeannjakel.entity.User as generatedAlias0
[DEBUG] 2021-05-11 20:54:28.261 [http-nio-8080-exec-10] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2021-05-11 20:54:28.422 [http-nio-8080-exec-10] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  \-[IDENT] Node: 'leeannjakel'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'User'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

[DEBUG] 2021-05-11 20:54:28.814 [http-nio-8080-exec-10] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2021-05-11 20:54:29.092 [http-nio-8080-exec-10] FromElement - FromClause{level=1} : com.leeannjakel.entity.User (generatedAlias0) -> user0_
[DEBUG] 2021-05-11 20:54:29.096 [http-nio-8080-exec-10] FromReferenceNode - Resolved : generatedAlias0 -> user0_.id
[DEBUG] 2021-05-11 20:54:29.107 [http-nio-8080-exec-10] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2021-05-11 20:54:29.108 [http-nio-8080-exec-10] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} user0_.id ) ( FromClause{level=1} user user0_ ) )
[DEBUG] 2021-05-11 20:54:29.191 [http-nio-8080-exec-10] JoinProcessor - Using FROM fragment [user user0_]
[DEBUG] 2021-05-11 20:54:29.192 [http-nio-8080-exec-10] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2021-05-11 20:54:29.198 [http-nio-8080-exec-10] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (user)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.id as id1_4_' {alias=generatedAlias0, className=com.leeannjakel.entity.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.email as email2_4_, user0_.first_name as first_na3_4_, user0_.last_name as last_nam4_4_, user0_.password as password5_4_, user0_.user_name as user_nam6_4_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'user user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=user,tableAlias=user0_,origin=null,columns={,className=com.leeannjakel.entity.User}}

[DEBUG] 2021-05-11 20:54:29.209 [http-nio-8080-exec-10] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2021-05-11 20:54:29.241 [http-nio-8080-exec-10] QueryTranslatorImpl - HQL: select generatedAlias0 from com.leeannjakel.entity.User as generatedAlias0
[DEBUG] 2021-05-11 20:54:29.242 [http-nio-8080-exec-10] QueryTranslatorImpl - SQL: select user0_.id as id1_4_, user0_.email as email2_4_, user0_.first_name as first_na3_4_, user0_.last_name as last_nam4_4_, user0_.password as password5_4_, user0_.user_name as user_nam6_4_ from user user0_
[DEBUG] 2021-05-11 20:54:29.242 [http-nio-8080-exec-10] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2021-05-11 20:54:29.384 [http-nio-8080-exec-10] SQL - select user0_.id as id1_4_, user0_.email as email2_4_, user0_.first_name as first_na3_4_, user0_.last_name as last_nam4_4_, user0_.password as password5_4_, user0_.user_name as user_nam6_4_ from user user0_
[DEBUG] 2021-05-11 20:54:29.626 [http-nio-8080-exec-10] Loader - Result set row: 0
[DEBUG] 2021-05-11 20:54:29.643 [http-nio-8080-exec-10] Loader - Result row: EntityKey[com.leeannjakel.entity.User#1]
[DEBUG] 2021-05-11 20:54:29.721 [http-nio-8080-exec-10] Loader - Result set row: 1
[DEBUG] 2021-05-11 20:54:29.721 [http-nio-8080-exec-10] Loader - Result row: EntityKey[com.leeannjakel.entity.User#2]
[DEBUG] 2021-05-11 20:54:29.722 [http-nio-8080-exec-10] Loader - Result set row: 2
[DEBUG] 2021-05-11 20:54:29.722 [http-nio-8080-exec-10] Loader - Result row: EntityKey[com.leeannjakel.entity.User#3]
[DEBUG] 2021-05-11 20:54:29.723 [http-nio-8080-exec-10] Loader - Result set row: 3
[DEBUG] 2021-05-11 20:54:29.723 [http-nio-8080-exec-10] Loader - Result row: EntityKey[com.leeannjakel.entity.User#4]
[DEBUG] 2021-05-11 20:54:29.724 [http-nio-8080-exec-10] Loader - Result set row: 4
[DEBUG] 2021-05-11 20:54:29.724 [http-nio-8080-exec-10] Loader - Result row: EntityKey[com.leeannjakel.entity.User#5]
[DEBUG] 2021-05-11 20:54:29.724 [http-nio-8080-exec-10] Loader - Result set row: 5
[DEBUG] 2021-05-11 20:54:29.724 [http-nio-8080-exec-10] Loader - Result row: EntityKey[com.leeannjakel.entity.User#6]
[DEBUG] 2021-05-11 20:54:29.733 [http-nio-8080-exec-10] Loader - Result set row: 6
[DEBUG] 2021-05-11 20:54:29.734 [http-nio-8080-exec-10] Loader - Result row: EntityKey[com.leeannjakel.entity.User#7]
[DEBUG] 2021-05-11 20:54:29.734 [http-nio-8080-exec-10] Loader - Result set row: 7
[DEBUG] 2021-05-11 20:54:29.734 [http-nio-8080-exec-10] Loader - Result row: EntityKey[com.leeannjakel.entity.User#8]
[DEBUG] 2021-05-11 20:54:29.734 [http-nio-8080-exec-10] Loader - Result set row: 8
[DEBUG] 2021-05-11 20:54:29.734 [http-nio-8080-exec-10] Loader - Result row: EntityKey[com.leeannjakel.entity.User#9]
[DEBUG] 2021-05-11 20:54:29.734 [http-nio-8080-exec-10] Loader - Result set row: 9
[DEBUG] 2021-05-11 20:54:29.734 [http-nio-8080-exec-10] Loader - Result row: EntityKey[com.leeannjakel.entity.User#10]
[DEBUG] 2021-05-11 20:54:29.734 [http-nio-8080-exec-10] Loader - Result set row: 10
[DEBUG] 2021-05-11 20:54:29.734 [http-nio-8080-exec-10] Loader - Result row: EntityKey[com.leeannjakel.entity.User#11]
[DEBUG] 2021-05-11 20:54:29.737 [http-nio-8080-exec-10] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.User#1]
[DEBUG] 2021-05-11 20:54:29.738 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `books` : value = NOT NULL COLLECTION
[DEBUG] 2021-05-11 20:54:29.738 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`books`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:29.841 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `email` : value = email@something.com
[DEBUG] 2021-05-11 20:54:29.842 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:29.853 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `firstName` : value = LeeAnn
[DEBUG] 2021-05-11 20:54:29.854 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:29.854 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `lastName` : value = Jakel
[DEBUG] 2021-05-11 20:54:29.854 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:29.854 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `password` : value = password
[DEBUG] 2021-05-11 20:54:29.854 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:29.854 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2021-05-11 20:54:29.854 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:29.854 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `userName` : value = ljakel
[DEBUG] 2021-05-11 20:54:29.854 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:29.876 [http-nio-8080-exec-10] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.User#1]
[DEBUG] 2021-05-11 20:54:29.876 [http-nio-8080-exec-10] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.User#2]
[DEBUG] 2021-05-11 20:54:29.877 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `books` : value = NOT NULL COLLECTION
[DEBUG] 2021-05-11 20:54:29.877 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`books`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:29.890 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `email` : value = email@something.com
[DEBUG] 2021-05-11 20:54:29.890 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:29.890 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `firstName` : value = Max
[DEBUG] 2021-05-11 20:54:29.890 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:29.890 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `lastName` : value = Jakel
[DEBUG] 2021-05-11 20:54:29.890 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:29.890 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `password` : value = password
[DEBUG] 2021-05-11 20:54:29.890 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:29.890 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2021-05-11 20:54:29.890 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:29.890 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `userName` : value = mjakel
[DEBUG] 2021-05-11 20:54:29.892 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:29.892 [http-nio-8080-exec-10] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.User#2]
[DEBUG] 2021-05-11 20:54:29.892 [http-nio-8080-exec-10] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.User#3]
[DEBUG] 2021-05-11 20:54:29.892 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `books` : value = NOT NULL COLLECTION
[DEBUG] 2021-05-11 20:54:29.892 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`books`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:29.892 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `email` : value = email@something.com
[DEBUG] 2021-05-11 20:54:29.892 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:29.892 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `firstName` : value = Lisa
[DEBUG] 2021-05-11 20:54:29.893 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:29.893 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `lastName` : value = Andritsch
[DEBUG] 2021-05-11 20:54:29.893 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:29.893 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `password` : value = password
[DEBUG] 2021-05-11 20:54:29.893 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:29.893 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2021-05-11 20:54:29.893 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:29.893 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `userName` : value = lisa
[DEBUG] 2021-05-11 20:54:29.893 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:29.893 [http-nio-8080-exec-10] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.User#3]
[DEBUG] 2021-05-11 20:54:29.893 [http-nio-8080-exec-10] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.User#4]
[DEBUG] 2021-05-11 20:54:29.894 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `books` : value = NOT NULL COLLECTION
[DEBUG] 2021-05-11 20:54:29.894 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`books`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:29.894 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `email` : value = email@something.com
[DEBUG] 2021-05-11 20:54:29.894 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:29.894 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `firstName` : value = Anthony
[DEBUG] 2021-05-11 20:54:29.894 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:29.894 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `lastName` : value = Rice
[DEBUG] 2021-05-11 20:54:29.894 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:29.903 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `password` : value = password
[DEBUG] 2021-05-11 20:54:29.903 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:29.903 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2021-05-11 20:54:29.903 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:29.903 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `userName` : value = ricerocks
[DEBUG] 2021-05-11 20:54:29.903 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:29.903 [http-nio-8080-exec-10] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.User#4]
[DEBUG] 2021-05-11 20:54:29.903 [http-nio-8080-exec-10] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.User#5]
[DEBUG] 2021-05-11 20:54:29.903 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `books` : value = NOT NULL COLLECTION
[DEBUG] 2021-05-11 20:54:29.903 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`books`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:29.903 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `email` : value = email@something.com
[DEBUG] 2021-05-11 20:54:29.903 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:29.903 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `firstName` : value = Paula
[DEBUG] 2021-05-11 20:54:29.905 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:29.905 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `lastName` : value = Waite
[DEBUG] 2021-05-11 20:54:29.905 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:29.905 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `password` : value = password
[DEBUG] 2021-05-11 20:54:29.905 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:29.905 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2021-05-11 20:54:29.905 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:29.905 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `userName` : value = pwaite
[DEBUG] 2021-05-11 20:54:29.905 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:29.905 [http-nio-8080-exec-10] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.User#5]
[DEBUG] 2021-05-11 20:54:29.905 [http-nio-8080-exec-10] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.User#6]
[DEBUG] 2021-05-11 20:54:29.905 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `books` : value = NOT NULL COLLECTION
[DEBUG] 2021-05-11 20:54:29.905 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`books`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:29.905 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `email` : value = email@email.com
[DEBUG] 2021-05-11 20:54:29.905 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:29.905 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `firstName` : value = Erin
[DEBUG] 2021-05-11 20:54:29.905 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:29.905 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `lastName` : value = Jakel
[DEBUG] 2021-05-11 20:54:29.905 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:29.905 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `password` : value = March3rd
[DEBUG] 2021-05-11 20:54:29.905 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:29.905 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2021-05-11 20:54:29.906 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:29.907 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `userName` : value = eajakel
[DEBUG] 2021-05-11 20:54:29.927 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:29.929 [http-nio-8080-exec-10] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.User#6]
[DEBUG] 2021-05-11 20:54:29.929 [http-nio-8080-exec-10] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.User#7]
[DEBUG] 2021-05-11 20:54:29.930 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `books` : value = NOT NULL COLLECTION
[DEBUG] 2021-05-11 20:54:29.940 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`books`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:29.940 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `email` : value = lmkabler@madisoncollege.edu
[DEBUG] 2021-05-11 20:54:29.940 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:29.940 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `firstName` : value = LeeAnn
[DEBUG] 2021-05-11 20:54:29.940 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:29.940 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `lastName` : value = Jakel
[DEBUG] 2021-05-11 20:54:29.940 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:29.940 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `password` : value = password2
[DEBUG] 2021-05-11 20:54:29.940 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:29.940 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2021-05-11 20:54:29.940 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:29.940 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `userName` : value = lmjakel
[DEBUG] 2021-05-11 20:54:29.940 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:29.941 [http-nio-8080-exec-10] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.User#7]
[DEBUG] 2021-05-11 20:54:29.941 [http-nio-8080-exec-10] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.User#8]
[DEBUG] 2021-05-11 20:54:29.941 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `books` : value = NOT NULL COLLECTION
[DEBUG] 2021-05-11 20:54:29.941 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`books`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:29.941 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `email` : value = email@email.com
[DEBUG] 2021-05-11 20:54:29.941 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:29.941 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `firstName` : value = Beckam
[DEBUG] 2021-05-11 20:54:29.941 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:29.950 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `lastName` : value = Walters
[DEBUG] 2021-05-11 20:54:29.954 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:29.955 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `password` : value = password
[DEBUG] 2021-05-11 20:54:29.955 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:29.955 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2021-05-11 20:54:29.955 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:29.955 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `userName` : value = bwalters
[DEBUG] 2021-05-11 20:54:29.955 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:29.956 [http-nio-8080-exec-10] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.User#8]
[DEBUG] 2021-05-11 20:54:29.957 [http-nio-8080-exec-10] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.User#9]
[DEBUG] 2021-05-11 20:54:29.957 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `books` : value = NOT NULL COLLECTION
[DEBUG] 2021-05-11 20:54:29.957 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`books`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:29.957 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `email` : value = email@email.com
[DEBUG] 2021-05-11 20:54:29.957 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:29.957 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `firstName` : value = Megan 
[DEBUG] 2021-05-11 20:54:29.957 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:29.958 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `lastName` : value = Wilson
[DEBUG] 2021-05-11 20:54:29.958 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:29.974 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `password` : value = java
[DEBUG] 2021-05-11 20:54:29.988 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:29.988 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2021-05-11 20:54:29.988 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:29.988 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `userName` : value = mwilson
[DEBUG] 2021-05-11 20:54:29.988 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:29.988 [http-nio-8080-exec-10] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.User#9]
[DEBUG] 2021-05-11 20:54:29.988 [http-nio-8080-exec-10] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.User#10]
[DEBUG] 2021-05-11 20:54:29.988 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `books` : value = NOT NULL COLLECTION
[DEBUG] 2021-05-11 20:54:29.988 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`books`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:29.988 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `email` : value = puppies@pup.com
[DEBUG] 2021-05-11 20:54:29.988 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:29.988 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `firstName` : value = Faelynn
[DEBUG] 2021-05-11 20:54:29.988 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:29.989 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `lastName` : value = Jakel
[DEBUG] 2021-05-11 20:54:29.989 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:29.989 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `password` : value = puppy
[DEBUG] 2021-05-11 20:54:29.989 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:29.989 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2021-05-11 20:54:29.989 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:29.989 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `userName` : value = fjakel
[DEBUG] 2021-05-11 20:54:29.989 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:29.989 [http-nio-8080-exec-10] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.User#10]
[DEBUG] 2021-05-11 20:54:29.989 [http-nio-8080-exec-10] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.User#11]
[DEBUG] 2021-05-11 20:54:29.989 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `books` : value = NOT NULL COLLECTION
[DEBUG] 2021-05-11 20:54:29.989 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`books`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:29.989 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `email` : value = kabler@emails.com
[DEBUG] 2021-05-11 20:54:29.989 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:29.989 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `firstName` : value = Deb
[DEBUG] 2021-05-11 20:54:29.992 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:29.996 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `lastName` : value = Kabler
[DEBUG] 2021-05-11 20:54:29.998 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:29.999 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `password` : value = gramma
[DEBUG] 2021-05-11 20:54:29.999 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:29.999 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2021-05-11 20:54:29.999 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:29.999 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `userName` : value = dkabler
[DEBUG] 2021-05-11 20:54:29.999 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:29.999 [http-nio-8080-exec-10] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.User#11]
[DEBUG] 2021-05-11 20:54:30.038 [http-nio-8080-exec-10] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.leeannjakel.entity.User.roles#11]
[DEBUG] 2021-05-11 20:54:30.038 [http-nio-8080-exec-10] SQL - select roles0_.user_id as user_id4_3_0_, roles0_.id as id1_3_0_, roles0_.id as id1_3_1_, roles0_.role_name as role_nam2_3_1_, roles0_.user_id as user_id4_3_1_, roles0_.user_name as user_nam3_3_1_ from role roles0_ where roles0_.user_id=?
[DEBUG] 2021-05-11 20:54:30.095 [http-nio-8080-exec-10] ResultSetProcessorImpl - Preparing collection initializer : [com.leeannjakel.entity.User.roles#11]
[DEBUG] 2021-05-11 20:54:30.141 [http-nio-8080-exec-10] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-05-11 20:54:30.157 [http-nio-8080-exec-10] CollectionReferenceInitializerImpl - Found row of collection: [com.leeannjakel.entity.User.roles#11]
[DEBUG] 2021-05-11 20:54:30.236 [http-nio-8080-exec-10] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.Role#13]
[DEBUG] 2021-05-11 20:54:30.237 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `roleName` : value = basic_user
[DEBUG] 2021-05-11 20:54:30.253 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`roleName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:30.255 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `user` : value = 11
[DEBUG] 2021-05-11 20:54:30.256 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:30.256 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `userName` : value = dkabler
[DEBUG] 2021-05-11 20:54:30.256 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:30.256 [http-nio-8080-exec-10] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.Role#13]
[DEBUG] 2021-05-11 20:54:30.263 [http-nio-8080-exec-10] CollectionLoadContext - 1 collections were found in result set for role: com.leeannjakel.entity.User.roles
[DEBUG] 2021-05-11 20:54:30.265 [http-nio-8080-exec-10] CollectionLoadContext - Collection fully initialized: [com.leeannjakel.entity.User.roles#11]
[DEBUG] 2021-05-11 20:54:30.265 [http-nio-8080-exec-10] CollectionLoadContext - 1 collections initialized for role: com.leeannjakel.entity.User.roles
[DEBUG] 2021-05-11 20:54:30.281 [http-nio-8080-exec-10] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-05-11 20:54:30.282 [http-nio-8080-exec-10] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2021-05-11 20:54:30.282 [http-nio-8080-exec-10] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.leeannjakel.entity.User.roles#10]
[DEBUG] 2021-05-11 20:54:30.283 [http-nio-8080-exec-10] SQL - select roles0_.user_id as user_id4_3_0_, roles0_.id as id1_3_0_, roles0_.id as id1_3_1_, roles0_.role_name as role_nam2_3_1_, roles0_.user_id as user_id4_3_1_, roles0_.user_name as user_nam3_3_1_ from role roles0_ where roles0_.user_id=?
[DEBUG] 2021-05-11 20:54:30.308 [http-nio-8080-exec-10] ResultSetProcessorImpl - Preparing collection initializer : [com.leeannjakel.entity.User.roles#10]
[DEBUG] 2021-05-11 20:54:30.308 [http-nio-8080-exec-10] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-05-11 20:54:30.308 [http-nio-8080-exec-10] CollectionReferenceInitializerImpl - Found row of collection: [com.leeannjakel.entity.User.roles#10]
[DEBUG] 2021-05-11 20:54:30.321 [http-nio-8080-exec-10] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.Role#12]
[DEBUG] 2021-05-11 20:54:30.322 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `roleName` : value = basic_user
[DEBUG] 2021-05-11 20:54:30.322 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`roleName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:30.322 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `user` : value = 10
[DEBUG] 2021-05-11 20:54:30.322 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:30.322 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `userName` : value = fjakel
[DEBUG] 2021-05-11 20:54:30.322 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:30.336 [http-nio-8080-exec-10] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.Role#12]
[DEBUG] 2021-05-11 20:54:30.337 [http-nio-8080-exec-10] CollectionLoadContext - 1 collections were found in result set for role: com.leeannjakel.entity.User.roles
[DEBUG] 2021-05-11 20:54:30.337 [http-nio-8080-exec-10] CollectionLoadContext - Collection fully initialized: [com.leeannjakel.entity.User.roles#10]
[DEBUG] 2021-05-11 20:54:30.337 [http-nio-8080-exec-10] CollectionLoadContext - 1 collections initialized for role: com.leeannjakel.entity.User.roles
[DEBUG] 2021-05-11 20:54:30.337 [http-nio-8080-exec-10] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-05-11 20:54:30.349 [http-nio-8080-exec-10] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2021-05-11 20:54:30.349 [http-nio-8080-exec-10] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.leeannjakel.entity.User.roles#9]
[DEBUG] 2021-05-11 20:54:30.349 [http-nio-8080-exec-10] SQL - select roles0_.user_id as user_id4_3_0_, roles0_.id as id1_3_0_, roles0_.id as id1_3_1_, roles0_.role_name as role_nam2_3_1_, roles0_.user_id as user_id4_3_1_, roles0_.user_name as user_nam3_3_1_ from role roles0_ where roles0_.user_id=?
[DEBUG] 2021-05-11 20:54:30.370 [http-nio-8080-exec-10] ResultSetProcessorImpl - Preparing collection initializer : [com.leeannjakel.entity.User.roles#9]
[DEBUG] 2021-05-11 20:54:30.371 [http-nio-8080-exec-10] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-05-11 20:54:30.373 [http-nio-8080-exec-10] CollectionReferenceInitializerImpl - Found row of collection: [com.leeannjakel.entity.User.roles#9]
[DEBUG] 2021-05-11 20:54:30.406 [http-nio-8080-exec-10] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.Role#11]
[DEBUG] 2021-05-11 20:54:30.407 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `roleName` : value = basic_user
[DEBUG] 2021-05-11 20:54:30.407 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`roleName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:30.407 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `user` : value = 9
[DEBUG] 2021-05-11 20:54:30.408 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:30.409 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `userName` : value = mwilson
[DEBUG] 2021-05-11 20:54:30.409 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:30.409 [http-nio-8080-exec-10] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.Role#11]
[DEBUG] 2021-05-11 20:54:30.409 [http-nio-8080-exec-10] CollectionLoadContext - 1 collections were found in result set for role: com.leeannjakel.entity.User.roles
[DEBUG] 2021-05-11 20:54:30.410 [http-nio-8080-exec-10] CollectionLoadContext - Collection fully initialized: [com.leeannjakel.entity.User.roles#9]
[DEBUG] 2021-05-11 20:54:30.411 [http-nio-8080-exec-10] CollectionLoadContext - 1 collections initialized for role: com.leeannjakel.entity.User.roles
[DEBUG] 2021-05-11 20:54:30.428 [http-nio-8080-exec-10] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-05-11 20:54:30.428 [http-nio-8080-exec-10] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2021-05-11 20:54:30.428 [http-nio-8080-exec-10] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.leeannjakel.entity.User.roles#8]
[DEBUG] 2021-05-11 20:54:30.428 [http-nio-8080-exec-10] SQL - select roles0_.user_id as user_id4_3_0_, roles0_.id as id1_3_0_, roles0_.id as id1_3_1_, roles0_.role_name as role_nam2_3_1_, roles0_.user_id as user_id4_3_1_, roles0_.user_name as user_nam3_3_1_ from role roles0_ where roles0_.user_id=?
[DEBUG] 2021-05-11 20:54:30.439 [http-nio-8080-exec-10] ResultSetProcessorImpl - Preparing collection initializer : [com.leeannjakel.entity.User.roles#8]
[DEBUG] 2021-05-11 20:54:30.440 [http-nio-8080-exec-10] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-05-11 20:54:30.458 [http-nio-8080-exec-10] CollectionReferenceInitializerImpl - Found row of collection: [com.leeannjakel.entity.User.roles#8]
[DEBUG] 2021-05-11 20:54:30.458 [http-nio-8080-exec-10] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.Role#10]
[DEBUG] 2021-05-11 20:54:30.458 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `roleName` : value = basic_user
[DEBUG] 2021-05-11 20:54:30.458 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`roleName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:30.458 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `user` : value = 8
[DEBUG] 2021-05-11 20:54:30.458 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:30.458 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `userName` : value = bwalters
[DEBUG] 2021-05-11 20:54:30.458 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:30.459 [http-nio-8080-exec-10] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.Role#10]
[DEBUG] 2021-05-11 20:54:30.459 [http-nio-8080-exec-10] CollectionLoadContext - 1 collections were found in result set for role: com.leeannjakel.entity.User.roles
[DEBUG] 2021-05-11 20:54:30.461 [http-nio-8080-exec-10] CollectionLoadContext - Collection fully initialized: [com.leeannjakel.entity.User.roles#8]
[DEBUG] 2021-05-11 20:54:30.463 [http-nio-8080-exec-10] CollectionLoadContext - 1 collections initialized for role: com.leeannjakel.entity.User.roles
[DEBUG] 2021-05-11 20:54:30.463 [http-nio-8080-exec-10] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-05-11 20:54:30.463 [http-nio-8080-exec-10] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2021-05-11 20:54:30.464 [http-nio-8080-exec-10] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.leeannjakel.entity.User.roles#7]
[DEBUG] 2021-05-11 20:54:30.470 [http-nio-8080-exec-10] SQL - select roles0_.user_id as user_id4_3_0_, roles0_.id as id1_3_0_, roles0_.id as id1_3_1_, roles0_.role_name as role_nam2_3_1_, roles0_.user_id as user_id4_3_1_, roles0_.user_name as user_nam3_3_1_ from role roles0_ where roles0_.user_id=?
[DEBUG] 2021-05-11 20:54:30.473 [http-nio-8080-exec-10] ResultSetProcessorImpl - Preparing collection initializer : [com.leeannjakel.entity.User.roles#7]
[DEBUG] 2021-05-11 20:54:30.473 [http-nio-8080-exec-10] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-05-11 20:54:30.474 [http-nio-8080-exec-10] CollectionReferenceInitializerImpl - Found row of collection: [com.leeannjakel.entity.User.roles#7]
[DEBUG] 2021-05-11 20:54:30.474 [http-nio-8080-exec-10] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.Role#9]
[DEBUG] 2021-05-11 20:54:30.474 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `roleName` : value = basic_user
[DEBUG] 2021-05-11 20:54:30.474 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`roleName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:30.474 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `user` : value = 7
[DEBUG] 2021-05-11 20:54:30.474 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:30.474 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `userName` : value = lmjakel
[DEBUG] 2021-05-11 20:54:30.474 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:30.475 [http-nio-8080-exec-10] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.Role#9]
[DEBUG] 2021-05-11 20:54:30.475 [http-nio-8080-exec-10] CollectionLoadContext - 1 collections were found in result set for role: com.leeannjakel.entity.User.roles
[DEBUG] 2021-05-11 20:54:30.475 [http-nio-8080-exec-10] CollectionLoadContext - Collection fully initialized: [com.leeannjakel.entity.User.roles#7]
[DEBUG] 2021-05-11 20:54:30.475 [http-nio-8080-exec-10] CollectionLoadContext - 1 collections initialized for role: com.leeannjakel.entity.User.roles
[DEBUG] 2021-05-11 20:54:30.475 [http-nio-8080-exec-10] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-05-11 20:54:30.475 [http-nio-8080-exec-10] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2021-05-11 20:54:30.477 [http-nio-8080-exec-10] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.leeannjakel.entity.User.roles#6]
[DEBUG] 2021-05-11 20:54:30.490 [http-nio-8080-exec-10] SQL - select roles0_.user_id as user_id4_3_0_, roles0_.id as id1_3_0_, roles0_.id as id1_3_1_, roles0_.role_name as role_nam2_3_1_, roles0_.user_id as user_id4_3_1_, roles0_.user_name as user_nam3_3_1_ from role roles0_ where roles0_.user_id=?
[DEBUG] 2021-05-11 20:54:30.502 [http-nio-8080-exec-10] ResultSetProcessorImpl - Preparing collection initializer : [com.leeannjakel.entity.User.roles#6]
[DEBUG] 2021-05-11 20:54:30.503 [http-nio-8080-exec-10] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-05-11 20:54:30.503 [http-nio-8080-exec-10] CollectionReferenceInitializerImpl - Found row of collection: [com.leeannjakel.entity.User.roles#6]
[DEBUG] 2021-05-11 20:54:30.503 [http-nio-8080-exec-10] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.Role#8]
[DEBUG] 2021-05-11 20:54:30.503 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `roleName` : value = basic_user
[DEBUG] 2021-05-11 20:54:30.503 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`roleName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:30.503 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `user` : value = 6
[DEBUG] 2021-05-11 20:54:30.503 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:30.503 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `userName` : value = eajakel
[DEBUG] 2021-05-11 20:54:30.503 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:30.503 [http-nio-8080-exec-10] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.Role#8]
[DEBUG] 2021-05-11 20:54:30.503 [http-nio-8080-exec-10] CollectionLoadContext - 1 collections were found in result set for role: com.leeannjakel.entity.User.roles
[DEBUG] 2021-05-11 20:54:30.503 [http-nio-8080-exec-10] CollectionLoadContext - Collection fully initialized: [com.leeannjakel.entity.User.roles#6]
[DEBUG] 2021-05-11 20:54:30.503 [http-nio-8080-exec-10] CollectionLoadContext - 1 collections initialized for role: com.leeannjakel.entity.User.roles
[DEBUG] 2021-05-11 20:54:30.504 [http-nio-8080-exec-10] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-05-11 20:54:30.504 [http-nio-8080-exec-10] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2021-05-11 20:54:30.504 [http-nio-8080-exec-10] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.leeannjakel.entity.User.roles#5]
[DEBUG] 2021-05-11 20:54:30.506 [http-nio-8080-exec-10] SQL - select roles0_.user_id as user_id4_3_0_, roles0_.id as id1_3_0_, roles0_.id as id1_3_1_, roles0_.role_name as role_nam2_3_1_, roles0_.user_id as user_id4_3_1_, roles0_.user_name as user_nam3_3_1_ from role roles0_ where roles0_.user_id=?
[DEBUG] 2021-05-11 20:54:30.530 [http-nio-8080-exec-10] ResultSetProcessorImpl - Preparing collection initializer : [com.leeannjakel.entity.User.roles#5]
[DEBUG] 2021-05-11 20:54:30.531 [http-nio-8080-exec-10] CollectionLoadContext - 1 collections were found in result set for role: com.leeannjakel.entity.User.roles
[DEBUG] 2021-05-11 20:54:30.535 [http-nio-8080-exec-10] CollectionLoadContext - Collection fully initialized: [com.leeannjakel.entity.User.roles#5]
[DEBUG] 2021-05-11 20:54:30.535 [http-nio-8080-exec-10] CollectionLoadContext - 1 collections initialized for role: com.leeannjakel.entity.User.roles
[DEBUG] 2021-05-11 20:54:30.535 [http-nio-8080-exec-10] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-05-11 20:54:30.535 [http-nio-8080-exec-10] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2021-05-11 20:54:30.535 [http-nio-8080-exec-10] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.leeannjakel.entity.User.roles#4]
[DEBUG] 2021-05-11 20:54:30.538 [http-nio-8080-exec-10] SQL - select roles0_.user_id as user_id4_3_0_, roles0_.id as id1_3_0_, roles0_.id as id1_3_1_, roles0_.role_name as role_nam2_3_1_, roles0_.user_id as user_id4_3_1_, roles0_.user_name as user_nam3_3_1_ from role roles0_ where roles0_.user_id=?
[DEBUG] 2021-05-11 20:54:30.555 [http-nio-8080-exec-10] ResultSetProcessorImpl - Preparing collection initializer : [com.leeannjakel.entity.User.roles#4]
[DEBUG] 2021-05-11 20:54:30.556 [http-nio-8080-exec-10] CollectionLoadContext - 1 collections were found in result set for role: com.leeannjakel.entity.User.roles
[DEBUG] 2021-05-11 20:54:30.556 [http-nio-8080-exec-10] CollectionLoadContext - Collection fully initialized: [com.leeannjakel.entity.User.roles#4]
[DEBUG] 2021-05-11 20:54:30.556 [http-nio-8080-exec-10] CollectionLoadContext - 1 collections initialized for role: com.leeannjakel.entity.User.roles
[DEBUG] 2021-05-11 20:54:30.556 [http-nio-8080-exec-10] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-05-11 20:54:30.556 [http-nio-8080-exec-10] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2021-05-11 20:54:30.556 [http-nio-8080-exec-10] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.leeannjakel.entity.User.roles#3]
[DEBUG] 2021-05-11 20:54:30.556 [http-nio-8080-exec-10] SQL - select roles0_.user_id as user_id4_3_0_, roles0_.id as id1_3_0_, roles0_.id as id1_3_1_, roles0_.role_name as role_nam2_3_1_, roles0_.user_id as user_id4_3_1_, roles0_.user_name as user_nam3_3_1_ from role roles0_ where roles0_.user_id=?
[DEBUG] 2021-05-11 20:54:30.574 [http-nio-8080-exec-10] ResultSetProcessorImpl - Preparing collection initializer : [com.leeannjakel.entity.User.roles#3]
[DEBUG] 2021-05-11 20:54:30.574 [http-nio-8080-exec-10] CollectionLoadContext - 1 collections were found in result set for role: com.leeannjakel.entity.User.roles
[DEBUG] 2021-05-11 20:54:30.574 [http-nio-8080-exec-10] CollectionLoadContext - Collection fully initialized: [com.leeannjakel.entity.User.roles#3]
[DEBUG] 2021-05-11 20:54:30.574 [http-nio-8080-exec-10] CollectionLoadContext - 1 collections initialized for role: com.leeannjakel.entity.User.roles
[DEBUG] 2021-05-11 20:54:30.575 [http-nio-8080-exec-10] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-05-11 20:54:30.575 [http-nio-8080-exec-10] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2021-05-11 20:54:30.577 [http-nio-8080-exec-10] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.leeannjakel.entity.User.roles#2]
[DEBUG] 2021-05-11 20:54:30.578 [http-nio-8080-exec-10] SQL - select roles0_.user_id as user_id4_3_0_, roles0_.id as id1_3_0_, roles0_.id as id1_3_1_, roles0_.role_name as role_nam2_3_1_, roles0_.user_id as user_id4_3_1_, roles0_.user_name as user_nam3_3_1_ from role roles0_ where roles0_.user_id=?
[DEBUG] 2021-05-11 20:54:30.599 [http-nio-8080-exec-10] ResultSetProcessorImpl - Preparing collection initializer : [com.leeannjakel.entity.User.roles#2]
[DEBUG] 2021-05-11 20:54:30.600 [http-nio-8080-exec-10] CollectionLoadContext - 1 collections were found in result set for role: com.leeannjakel.entity.User.roles
[DEBUG] 2021-05-11 20:54:30.605 [http-nio-8080-exec-10] CollectionLoadContext - Collection fully initialized: [com.leeannjakel.entity.User.roles#2]
[DEBUG] 2021-05-11 20:54:30.605 [http-nio-8080-exec-10] CollectionLoadContext - 1 collections initialized for role: com.leeannjakel.entity.User.roles
[DEBUG] 2021-05-11 20:54:30.605 [http-nio-8080-exec-10] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-05-11 20:54:30.605 [http-nio-8080-exec-10] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2021-05-11 20:54:30.605 [http-nio-8080-exec-10] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.leeannjakel.entity.User.roles#1]
[DEBUG] 2021-05-11 20:54:30.605 [http-nio-8080-exec-10] SQL - select roles0_.user_id as user_id4_3_0_, roles0_.id as id1_3_0_, roles0_.id as id1_3_1_, roles0_.role_name as role_nam2_3_1_, roles0_.user_id as user_id4_3_1_, roles0_.user_name as user_nam3_3_1_ from role roles0_ where roles0_.user_id=?
[DEBUG] 2021-05-11 20:54:30.607 [http-nio-8080-exec-10] ResultSetProcessorImpl - Preparing collection initializer : [com.leeannjakel.entity.User.roles#1]
[DEBUG] 2021-05-11 20:54:30.608 [http-nio-8080-exec-10] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-05-11 20:54:30.608 [http-nio-8080-exec-10] CollectionReferenceInitializerImpl - Found row of collection: [com.leeannjakel.entity.User.roles#1]
[DEBUG] 2021-05-11 20:54:30.615 [http-nio-8080-exec-10] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.Role#7]
[DEBUG] 2021-05-11 20:54:30.615 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `roleName` : value = admin
[DEBUG] 2021-05-11 20:54:30.615 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`roleName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:30.615 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2021-05-11 20:54:30.615 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:30.615 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `userName` : value = ljakel
[DEBUG] 2021-05-11 20:54:30.615 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:30.615 [http-nio-8080-exec-10] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.Role#7]
[DEBUG] 2021-05-11 20:54:30.616 [http-nio-8080-exec-10] CollectionLoadContext - 1 collections were found in result set for role: com.leeannjakel.entity.User.roles
[DEBUG] 2021-05-11 20:54:30.616 [http-nio-8080-exec-10] CollectionLoadContext - Collection fully initialized: [com.leeannjakel.entity.User.roles#1]
[DEBUG] 2021-05-11 20:54:30.616 [http-nio-8080-exec-10] CollectionLoadContext - 1 collections initialized for role: com.leeannjakel.entity.User.roles
[DEBUG] 2021-05-11 20:54:30.616 [http-nio-8080-exec-10] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-05-11 20:54:30.616 [http-nio-8080-exec-10] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2021-05-11 20:54:30.618 [http-nio-8080-exec-10] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-05-11 20:54:57.243 [http-nio-8080-exec-1] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from User as generatedAlias0
[DEBUG] 2021-05-11 20:54:57.243 [http-nio-8080-exec-1] SQL - select user0_.id as id1_4_, user0_.email as email2_4_, user0_.first_name as first_na3_4_, user0_.last_name as last_nam4_4_, user0_.password as password5_4_, user0_.user_name as user_nam6_4_ from user user0_
[DEBUG] 2021-05-11 20:54:57.253 [http-nio-8080-exec-1] Loader - Result set row: 0
[DEBUG] 2021-05-11 20:54:57.253 [http-nio-8080-exec-1] Loader - Result row: EntityKey[com.leeannjakel.entity.User#1]
[DEBUG] 2021-05-11 20:54:57.254 [http-nio-8080-exec-1] Loader - Result set row: 1
[DEBUG] 2021-05-11 20:54:57.269 [http-nio-8080-exec-1] Loader - Result row: EntityKey[com.leeannjakel.entity.User#2]
[DEBUG] 2021-05-11 20:54:57.270 [http-nio-8080-exec-1] Loader - Result set row: 2
[DEBUG] 2021-05-11 20:54:57.271 [http-nio-8080-exec-1] Loader - Result row: EntityKey[com.leeannjakel.entity.User#3]
[DEBUG] 2021-05-11 20:54:57.271 [http-nio-8080-exec-1] Loader - Result set row: 3
[DEBUG] 2021-05-11 20:54:57.272 [http-nio-8080-exec-1] Loader - Result row: EntityKey[com.leeannjakel.entity.User#4]
[DEBUG] 2021-05-11 20:54:57.274 [http-nio-8080-exec-1] Loader - Result set row: 4
[DEBUG] 2021-05-11 20:54:57.275 [http-nio-8080-exec-1] Loader - Result row: EntityKey[com.leeannjakel.entity.User#5]
[DEBUG] 2021-05-11 20:54:57.277 [http-nio-8080-exec-1] Loader - Result set row: 5
[DEBUG] 2021-05-11 20:54:57.277 [http-nio-8080-exec-1] Loader - Result row: EntityKey[com.leeannjakel.entity.User#6]
[DEBUG] 2021-05-11 20:54:57.297 [http-nio-8080-exec-1] Loader - Result set row: 6
[DEBUG] 2021-05-11 20:54:57.297 [http-nio-8080-exec-1] Loader - Result row: EntityKey[com.leeannjakel.entity.User#7]
[DEBUG] 2021-05-11 20:54:57.302 [http-nio-8080-exec-1] Loader - Result set row: 7
[DEBUG] 2021-05-11 20:54:57.302 [http-nio-8080-exec-1] Loader - Result row: EntityKey[com.leeannjakel.entity.User#8]
[DEBUG] 2021-05-11 20:54:57.302 [http-nio-8080-exec-1] Loader - Result set row: 8
[DEBUG] 2021-05-11 20:54:57.304 [http-nio-8080-exec-1] Loader - Result row: EntityKey[com.leeannjakel.entity.User#9]
[DEBUG] 2021-05-11 20:54:57.308 [http-nio-8080-exec-1] Loader - Result set row: 9
[DEBUG] 2021-05-11 20:54:57.322 [http-nio-8080-exec-1] Loader - Result row: EntityKey[com.leeannjakel.entity.User#10]
[DEBUG] 2021-05-11 20:54:57.355 [http-nio-8080-exec-1] Loader - Result set row: 10
[DEBUG] 2021-05-11 20:54:57.371 [http-nio-8080-exec-1] Loader - Result row: EntityKey[com.leeannjakel.entity.User#11]
[DEBUG] 2021-05-11 20:54:57.383 [http-nio-8080-exec-1] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.User#1]
[DEBUG] 2021-05-11 20:54:57.383 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `books` : value = NOT NULL COLLECTION
[DEBUG] 2021-05-11 20:54:57.383 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`books`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:57.383 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `email` : value = email@something.com
[DEBUG] 2021-05-11 20:54:57.383 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:57.383 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `firstName` : value = LeeAnn
[DEBUG] 2021-05-11 20:54:57.383 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:57.383 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `lastName` : value = Jakel
[DEBUG] 2021-05-11 20:54:57.383 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:57.383 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `password` : value = password
[DEBUG] 2021-05-11 20:54:57.383 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:57.383 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2021-05-11 20:54:57.383 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:57.397 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `userName` : value = ljakel
[DEBUG] 2021-05-11 20:54:57.397 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:57.397 [http-nio-8080-exec-1] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.User#1]
[DEBUG] 2021-05-11 20:54:57.405 [http-nio-8080-exec-1] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.User#2]
[DEBUG] 2021-05-11 20:54:57.405 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `books` : value = NOT NULL COLLECTION
[DEBUG] 2021-05-11 20:54:57.405 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`books`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:57.429 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `email` : value = email@something.com
[DEBUG] 2021-05-11 20:54:57.430 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:57.430 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `firstName` : value = Max
[DEBUG] 2021-05-11 20:54:57.436 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:57.436 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `lastName` : value = Jakel
[DEBUG] 2021-05-11 20:54:57.439 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:57.446 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `password` : value = password
[DEBUG] 2021-05-11 20:54:57.446 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:57.446 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2021-05-11 20:54:57.446 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:57.446 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `userName` : value = mjakel
[DEBUG] 2021-05-11 20:54:57.446 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:57.446 [http-nio-8080-exec-1] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.User#2]
[DEBUG] 2021-05-11 20:54:57.446 [http-nio-8080-exec-1] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.User#3]
[DEBUG] 2021-05-11 20:54:57.446 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `books` : value = NOT NULL COLLECTION
[DEBUG] 2021-05-11 20:54:57.446 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`books`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:57.446 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `email` : value = email@something.com
[DEBUG] 2021-05-11 20:54:57.450 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:57.452 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `firstName` : value = Lisa
[DEBUG] 2021-05-11 20:54:57.452 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:57.452 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `lastName` : value = Andritsch
[DEBUG] 2021-05-11 20:54:57.452 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:57.452 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `password` : value = password
[DEBUG] 2021-05-11 20:54:57.452 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:57.452 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2021-05-11 20:54:57.452 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:57.474 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `userName` : value = lisa
[DEBUG] 2021-05-11 20:54:57.474 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:57.475 [http-nio-8080-exec-1] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.User#3]
[DEBUG] 2021-05-11 20:54:57.475 [http-nio-8080-exec-1] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.User#4]
[DEBUG] 2021-05-11 20:54:57.475 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `books` : value = NOT NULL COLLECTION
[DEBUG] 2021-05-11 20:54:57.475 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`books`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:57.487 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `email` : value = email@something.com
[DEBUG] 2021-05-11 20:54:57.487 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:57.494 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `firstName` : value = Anthony
[DEBUG] 2021-05-11 20:54:57.494 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:57.494 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `lastName` : value = Rice
[DEBUG] 2021-05-11 20:54:57.494 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:57.494 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `password` : value = password
[DEBUG] 2021-05-11 20:54:57.494 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:57.494 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2021-05-11 20:54:57.494 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:57.494 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `userName` : value = ricerocks
[DEBUG] 2021-05-11 20:54:57.500 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:57.509 [http-nio-8080-exec-1] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.User#4]
[DEBUG] 2021-05-11 20:54:57.509 [http-nio-8080-exec-1] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.User#5]
[DEBUG] 2021-05-11 20:54:57.509 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `books` : value = NOT NULL COLLECTION
[DEBUG] 2021-05-11 20:54:57.509 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`books`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:57.509 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `email` : value = email@something.com
[DEBUG] 2021-05-11 20:54:57.511 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:57.518 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `firstName` : value = Paula
[DEBUG] 2021-05-11 20:54:57.518 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:57.518 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `lastName` : value = Waite
[DEBUG] 2021-05-11 20:54:57.518 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:57.518 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `password` : value = password
[DEBUG] 2021-05-11 20:54:57.518 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:57.518 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2021-05-11 20:54:57.518 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:57.518 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `userName` : value = pwaite
[DEBUG] 2021-05-11 20:54:57.518 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:57.518 [http-nio-8080-exec-1] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.User#5]
[DEBUG] 2021-05-11 20:54:57.520 [http-nio-8080-exec-1] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.User#6]
[DEBUG] 2021-05-11 20:54:57.520 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `books` : value = NOT NULL COLLECTION
[DEBUG] 2021-05-11 20:54:57.520 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`books`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:57.520 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `email` : value = email@email.com
[DEBUG] 2021-05-11 20:54:57.520 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:57.520 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `firstName` : value = Erin
[DEBUG] 2021-05-11 20:54:57.520 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:57.520 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `lastName` : value = Jakel
[DEBUG] 2021-05-11 20:54:57.520 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:57.520 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `password` : value = March3rd
[DEBUG] 2021-05-11 20:54:57.521 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:57.521 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2021-05-11 20:54:57.531 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:57.531 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `userName` : value = eajakel
[DEBUG] 2021-05-11 20:54:57.531 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:57.531 [http-nio-8080-exec-1] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.User#6]
[DEBUG] 2021-05-11 20:54:57.531 [http-nio-8080-exec-1] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.User#7]
[DEBUG] 2021-05-11 20:54:57.531 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `books` : value = NOT NULL COLLECTION
[DEBUG] 2021-05-11 20:54:57.531 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`books`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:57.531 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `email` : value = lmkabler@madisoncollege.edu
[DEBUG] 2021-05-11 20:54:57.531 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:57.531 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `firstName` : value = LeeAnn
[DEBUG] 2021-05-11 20:54:57.531 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:57.537 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `lastName` : value = Jakel
[DEBUG] 2021-05-11 20:54:57.537 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:57.537 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `password` : value = password2
[DEBUG] 2021-05-11 20:54:57.537 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:57.537 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2021-05-11 20:54:57.538 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:57.538 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `userName` : value = lmjakel
[DEBUG] 2021-05-11 20:54:57.538 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:57.540 [http-nio-8080-exec-1] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.User#7]
[DEBUG] 2021-05-11 20:54:57.540 [http-nio-8080-exec-1] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.User#8]
[DEBUG] 2021-05-11 20:54:57.540 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `books` : value = NOT NULL COLLECTION
[DEBUG] 2021-05-11 20:54:57.540 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`books`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:57.540 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `email` : value = email@email.com
[DEBUG] 2021-05-11 20:54:57.540 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:57.540 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `firstName` : value = Beckam
[DEBUG] 2021-05-11 20:54:57.541 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:57.541 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `lastName` : value = Walters
[DEBUG] 2021-05-11 20:54:57.542 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:57.542 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `password` : value = password
[DEBUG] 2021-05-11 20:54:57.542 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:57.542 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2021-05-11 20:54:57.542 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:57.542 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `userName` : value = bwalters
[DEBUG] 2021-05-11 20:54:57.542 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:57.542 [http-nio-8080-exec-1] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.User#8]
[DEBUG] 2021-05-11 20:54:57.542 [http-nio-8080-exec-1] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.User#9]
[DEBUG] 2021-05-11 20:54:57.542 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `books` : value = NOT NULL COLLECTION
[DEBUG] 2021-05-11 20:54:57.542 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`books`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:57.542 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `email` : value = email@email.com
[DEBUG] 2021-05-11 20:54:57.542 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:57.542 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `firstName` : value = Megan 
[DEBUG] 2021-05-11 20:54:57.542 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:57.543 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `lastName` : value = Wilson
[DEBUG] 2021-05-11 20:54:57.543 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:57.543 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `password` : value = java
[DEBUG] 2021-05-11 20:54:57.543 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:57.543 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2021-05-11 20:54:57.543 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:57.543 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `userName` : value = mwilson
[DEBUG] 2021-05-11 20:54:57.543 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:57.543 [http-nio-8080-exec-1] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.User#9]
[DEBUG] 2021-05-11 20:54:57.543 [http-nio-8080-exec-1] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.User#10]
[DEBUG] 2021-05-11 20:54:57.543 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `books` : value = NOT NULL COLLECTION
[DEBUG] 2021-05-11 20:54:57.543 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`books`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:57.543 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `email` : value = puppies@pup.com
[DEBUG] 2021-05-11 20:54:57.543 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:57.543 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `firstName` : value = Faelynn
[DEBUG] 2021-05-11 20:54:57.543 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:57.543 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `lastName` : value = Jakel
[DEBUG] 2021-05-11 20:54:57.543 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:57.543 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `password` : value = puppy
[DEBUG] 2021-05-11 20:54:57.543 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:57.543 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2021-05-11 20:54:57.543 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:57.546 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `userName` : value = fjakel
[DEBUG] 2021-05-11 20:54:57.546 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:57.553 [http-nio-8080-exec-1] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.User#10]
[DEBUG] 2021-05-11 20:54:57.553 [http-nio-8080-exec-1] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.User#11]
[DEBUG] 2021-05-11 20:54:57.553 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `books` : value = NOT NULL COLLECTION
[DEBUG] 2021-05-11 20:54:57.553 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`books`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:57.554 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `email` : value = kabler@emails.com
[DEBUG] 2021-05-11 20:54:57.554 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:57.554 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `firstName` : value = Deb
[DEBUG] 2021-05-11 20:54:57.554 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:57.555 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `lastName` : value = Kabler
[DEBUG] 2021-05-11 20:54:57.555 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:57.555 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `password` : value = gramma
[DEBUG] 2021-05-11 20:54:57.555 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:57.555 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2021-05-11 20:54:57.555 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:57.555 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `userName` : value = dkabler
[DEBUG] 2021-05-11 20:54:57.560 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:57.560 [http-nio-8080-exec-1] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.User#11]
[DEBUG] 2021-05-11 20:54:57.563 [http-nio-8080-exec-1] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.leeannjakel.entity.User.roles#11]
[DEBUG] 2021-05-11 20:54:57.564 [http-nio-8080-exec-1] SQL - select roles0_.user_id as user_id4_3_0_, roles0_.id as id1_3_0_, roles0_.id as id1_3_1_, roles0_.role_name as role_nam2_3_1_, roles0_.user_id as user_id4_3_1_, roles0_.user_name as user_nam3_3_1_ from role roles0_ where roles0_.user_id=?
[DEBUG] 2021-05-11 20:54:57.571 [http-nio-8080-exec-1] ResultSetProcessorImpl - Preparing collection initializer : [com.leeannjakel.entity.User.roles#11]
[DEBUG] 2021-05-11 20:54:57.571 [http-nio-8080-exec-1] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-05-11 20:54:57.574 [http-nio-8080-exec-1] CollectionReferenceInitializerImpl - Found row of collection: [com.leeannjakel.entity.User.roles#11]
[DEBUG] 2021-05-11 20:54:57.574 [http-nio-8080-exec-1] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.Role#13]
[DEBUG] 2021-05-11 20:54:57.574 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `roleName` : value = basic_user
[DEBUG] 2021-05-11 20:54:57.574 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`roleName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:57.574 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `user` : value = 11
[DEBUG] 2021-05-11 20:54:57.574 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:57.574 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `userName` : value = dkabler
[DEBUG] 2021-05-11 20:54:57.574 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:57.574 [http-nio-8080-exec-1] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.Role#13]
[DEBUG] 2021-05-11 20:54:57.574 [http-nio-8080-exec-1] CollectionLoadContext - 1 collections were found in result set for role: com.leeannjakel.entity.User.roles
[DEBUG] 2021-05-11 20:54:57.574 [http-nio-8080-exec-1] CollectionLoadContext - Collection fully initialized: [com.leeannjakel.entity.User.roles#11]
[DEBUG] 2021-05-11 20:54:57.574 [http-nio-8080-exec-1] CollectionLoadContext - 1 collections initialized for role: com.leeannjakel.entity.User.roles
[DEBUG] 2021-05-11 20:54:57.574 [http-nio-8080-exec-1] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-05-11 20:54:57.575 [http-nio-8080-exec-1] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2021-05-11 20:54:57.575 [http-nio-8080-exec-1] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.leeannjakel.entity.User.roles#10]
[DEBUG] 2021-05-11 20:54:57.575 [http-nio-8080-exec-1] SQL - select roles0_.user_id as user_id4_3_0_, roles0_.id as id1_3_0_, roles0_.id as id1_3_1_, roles0_.role_name as role_nam2_3_1_, roles0_.user_id as user_id4_3_1_, roles0_.user_name as user_nam3_3_1_ from role roles0_ where roles0_.user_id=?
[DEBUG] 2021-05-11 20:54:57.585 [http-nio-8080-exec-1] ResultSetProcessorImpl - Preparing collection initializer : [com.leeannjakel.entity.User.roles#10]
[DEBUG] 2021-05-11 20:54:57.585 [http-nio-8080-exec-1] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-05-11 20:54:57.585 [http-nio-8080-exec-1] CollectionReferenceInitializerImpl - Found row of collection: [com.leeannjakel.entity.User.roles#10]
[DEBUG] 2021-05-11 20:54:57.587 [http-nio-8080-exec-1] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.Role#12]
[DEBUG] 2021-05-11 20:54:57.591 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `roleName` : value = basic_user
[DEBUG] 2021-05-11 20:54:57.591 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`roleName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:57.591 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `user` : value = 10
[DEBUG] 2021-05-11 20:54:57.591 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:57.592 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `userName` : value = fjakel
[DEBUG] 2021-05-11 20:54:57.592 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:57.601 [http-nio-8080-exec-4] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from User as generatedAlias0
[DEBUG] 2021-05-11 20:54:57.601 [http-nio-8080-exec-4] SQL - select user0_.id as id1_4_, user0_.email as email2_4_, user0_.first_name as first_na3_4_, user0_.last_name as last_nam4_4_, user0_.password as password5_4_, user0_.user_name as user_nam6_4_ from user user0_
[DEBUG] 2021-05-11 20:54:57.604 [http-nio-8080-exec-1] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.Role#12]
[DEBUG] 2021-05-11 20:54:57.604 [http-nio-8080-exec-1] CollectionLoadContext - 1 collections were found in result set for role: com.leeannjakel.entity.User.roles
[DEBUG] 2021-05-11 20:54:57.604 [http-nio-8080-exec-1] CollectionLoadContext - Collection fully initialized: [com.leeannjakel.entity.User.roles#10]
[DEBUG] 2021-05-11 20:54:57.604 [http-nio-8080-exec-1] CollectionLoadContext - 1 collections initialized for role: com.leeannjakel.entity.User.roles
[DEBUG] 2021-05-11 20:54:57.604 [http-nio-8080-exec-1] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-05-11 20:54:57.605 [http-nio-8080-exec-1] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2021-05-11 20:54:57.605 [http-nio-8080-exec-1] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.leeannjakel.entity.User.roles#9]
[DEBUG] 2021-05-11 20:54:57.614 [http-nio-8080-exec-1] SQL - select roles0_.user_id as user_id4_3_0_, roles0_.id as id1_3_0_, roles0_.id as id1_3_1_, roles0_.role_name as role_nam2_3_1_, roles0_.user_id as user_id4_3_1_, roles0_.user_name as user_nam3_3_1_ from role roles0_ where roles0_.user_id=?
[DEBUG] 2021-05-11 20:54:57.628 [http-nio-8080-exec-4] Loader - Result set row: 0
[DEBUG] 2021-05-11 20:54:57.629 [http-nio-8080-exec-4] Loader - Result row: EntityKey[com.leeannjakel.entity.User#1]
[DEBUG] 2021-05-11 20:54:57.632 [http-nio-8080-exec-1] ResultSetProcessorImpl - Preparing collection initializer : [com.leeannjakel.entity.User.roles#9]
[DEBUG] 2021-05-11 20:54:57.633 [http-nio-8080-exec-1] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-05-11 20:54:57.633 [http-nio-8080-exec-4] Loader - Result set row: 1
[DEBUG] 2021-05-11 20:54:57.633 [http-nio-8080-exec-4] Loader - Result row: EntityKey[com.leeannjakel.entity.User#2]
[DEBUG] 2021-05-11 20:54:57.641 [http-nio-8080-exec-1] CollectionReferenceInitializerImpl - Found row of collection: [com.leeannjakel.entity.User.roles#9]
[DEBUG] 2021-05-11 20:54:57.642 [http-nio-8080-exec-1] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.Role#11]
[DEBUG] 2021-05-11 20:54:57.642 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `roleName` : value = basic_user
[DEBUG] 2021-05-11 20:54:57.642 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`roleName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:57.642 [http-nio-8080-exec-4] Loader - Result set row: 2
[DEBUG] 2021-05-11 20:54:57.642 [http-nio-8080-exec-4] Loader - Result row: EntityKey[com.leeannjakel.entity.User#3]
[DEBUG] 2021-05-11 20:54:57.642 [http-nio-8080-exec-4] Loader - Result set row: 3
[DEBUG] 2021-05-11 20:54:57.642 [http-nio-8080-exec-4] Loader - Result row: EntityKey[com.leeannjakel.entity.User#4]
[DEBUG] 2021-05-11 20:54:57.642 [http-nio-8080-exec-4] Loader - Result set row: 4
[DEBUG] 2021-05-11 20:54:57.642 [http-nio-8080-exec-4] Loader - Result row: EntityKey[com.leeannjakel.entity.User#5]
[DEBUG] 2021-05-11 20:54:57.642 [http-nio-8080-exec-4] Loader - Result set row: 5
[DEBUG] 2021-05-11 20:54:57.643 [http-nio-8080-exec-4] Loader - Result row: EntityKey[com.leeannjakel.entity.User#6]
[DEBUG] 2021-05-11 20:54:57.643 [http-nio-8080-exec-4] Loader - Result set row: 6
[DEBUG] 2021-05-11 20:54:57.643 [http-nio-8080-exec-4] Loader - Result row: EntityKey[com.leeannjakel.entity.User#7]
[DEBUG] 2021-05-11 20:54:57.654 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `user` : value = 9
[DEBUG] 2021-05-11 20:54:57.655 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:57.660 [http-nio-8080-exec-4] Loader - Result set row: 7
[DEBUG] 2021-05-11 20:54:57.660 [http-nio-8080-exec-4] Loader - Result row: EntityKey[com.leeannjakel.entity.User#8]
[DEBUG] 2021-05-11 20:54:57.660 [http-nio-8080-exec-4] Loader - Result set row: 8
[DEBUG] 2021-05-11 20:54:57.660 [http-nio-8080-exec-4] Loader - Result row: EntityKey[com.leeannjakel.entity.User#9]
[DEBUG] 2021-05-11 20:54:57.661 [http-nio-8080-exec-4] Loader - Result set row: 9
[DEBUG] 2021-05-11 20:54:57.661 [http-nio-8080-exec-4] Loader - Result row: EntityKey[com.leeannjakel.entity.User#10]
[DEBUG] 2021-05-11 20:54:57.661 [http-nio-8080-exec-4] Loader - Result set row: 10
[DEBUG] 2021-05-11 20:54:57.665 [http-nio-8080-exec-4] Loader - Result row: EntityKey[com.leeannjakel.entity.User#11]
[DEBUG] 2021-05-11 20:54:57.656 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `userName` : value = mwilson
[DEBUG] 2021-05-11 20:54:57.674 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:57.676 [http-nio-8080-exec-1] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.Role#11]
[DEBUG] 2021-05-11 20:54:57.676 [http-nio-8080-exec-1] CollectionLoadContext - 1 collections were found in result set for role: com.leeannjakel.entity.User.roles
[DEBUG] 2021-05-11 20:54:57.676 [http-nio-8080-exec-1] CollectionLoadContext - Collection fully initialized: [com.leeannjakel.entity.User.roles#9]
[DEBUG] 2021-05-11 20:54:57.676 [http-nio-8080-exec-1] CollectionLoadContext - 1 collections initialized for role: com.leeannjakel.entity.User.roles
[DEBUG] 2021-05-11 20:54:57.676 [http-nio-8080-exec-1] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-05-11 20:54:57.677 [http-nio-8080-exec-4] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.User#1]
[DEBUG] 2021-05-11 20:54:57.678 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `books` : value = NOT NULL COLLECTION
[DEBUG] 2021-05-11 20:54:57.678 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`books`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:57.678 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `email` : value = email@something.com
[DEBUG] 2021-05-11 20:54:57.678 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:57.678 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `firstName` : value = LeeAnn
[DEBUG] 2021-05-11 20:54:57.678 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:57.678 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `lastName` : value = Jakel
[DEBUG] 2021-05-11 20:54:57.678 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:57.678 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `password` : value = password
[DEBUG] 2021-05-11 20:54:57.678 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:57.678 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2021-05-11 20:54:57.678 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:57.678 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `userName` : value = ljakel
[DEBUG] 2021-05-11 20:54:57.678 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:57.685 [http-nio-8080-exec-1] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2021-05-11 20:54:57.686 [http-nio-8080-exec-1] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.leeannjakel.entity.User.roles#8]
[DEBUG] 2021-05-11 20:54:57.686 [http-nio-8080-exec-1] SQL - select roles0_.user_id as user_id4_3_0_, roles0_.id as id1_3_0_, roles0_.id as id1_3_1_, roles0_.role_name as role_nam2_3_1_, roles0_.user_id as user_id4_3_1_, roles0_.user_name as user_nam3_3_1_ from role roles0_ where roles0_.user_id=?
[DEBUG] 2021-05-11 20:54:57.678 [http-nio-8080-exec-4] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.User#1]
[DEBUG] 2021-05-11 20:54:57.686 [http-nio-8080-exec-4] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.User#2]
[DEBUG] 2021-05-11 20:54:57.686 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `books` : value = NOT NULL COLLECTION
[DEBUG] 2021-05-11 20:54:57.686 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`books`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:57.686 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `email` : value = email@something.com
[DEBUG] 2021-05-11 20:54:57.686 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:57.686 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `firstName` : value = Max
[DEBUG] 2021-05-11 20:54:57.686 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:57.686 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `lastName` : value = Jakel
[DEBUG] 2021-05-11 20:54:57.686 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:57.686 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `password` : value = password
[DEBUG] 2021-05-11 20:54:57.686 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:57.686 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2021-05-11 20:54:57.686 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:57.686 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `userName` : value = mjakel
[DEBUG] 2021-05-11 20:54:57.686 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:57.686 [http-nio-8080-exec-4] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.User#2]
[DEBUG] 2021-05-11 20:54:57.687 [http-nio-8080-exec-4] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.User#3]
[DEBUG] 2021-05-11 20:54:57.687 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `books` : value = NOT NULL COLLECTION
[DEBUG] 2021-05-11 20:54:57.687 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`books`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:57.687 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `email` : value = email@something.com
[DEBUG] 2021-05-11 20:54:57.687 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:57.687 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `firstName` : value = Lisa
[DEBUG] 2021-05-11 20:54:57.687 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:57.687 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `lastName` : value = Andritsch
[DEBUG] 2021-05-11 20:54:57.687 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:57.687 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `password` : value = password
[DEBUG] 2021-05-11 20:54:57.687 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:57.687 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2021-05-11 20:54:57.687 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:57.687 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `userName` : value = lisa
[DEBUG] 2021-05-11 20:54:57.687 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:57.687 [http-nio-8080-exec-4] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.User#3]
[DEBUG] 2021-05-11 20:54:57.687 [http-nio-8080-exec-4] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.User#4]
[DEBUG] 2021-05-11 20:54:57.687 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `books` : value = NOT NULL COLLECTION
[DEBUG] 2021-05-11 20:54:57.687 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`books`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:57.687 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `email` : value = email@something.com
[DEBUG] 2021-05-11 20:54:57.687 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:57.687 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `firstName` : value = Anthony
[DEBUG] 2021-05-11 20:54:57.687 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:57.687 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `lastName` : value = Rice
[DEBUG] 2021-05-11 20:54:57.687 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:57.687 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `password` : value = password
[DEBUG] 2021-05-11 20:54:57.687 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:57.688 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2021-05-11 20:54:57.688 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:57.706 [http-nio-8080-exec-1] ResultSetProcessorImpl - Preparing collection initializer : [com.leeannjakel.entity.User.roles#8]
[DEBUG] 2021-05-11 20:54:57.706 [http-nio-8080-exec-1] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-05-11 20:54:57.707 [http-nio-8080-exec-1] CollectionReferenceInitializerImpl - Found row of collection: [com.leeannjakel.entity.User.roles#8]
[DEBUG] 2021-05-11 20:54:57.707 [http-nio-8080-exec-1] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.Role#10]
[DEBUG] 2021-05-11 20:54:57.707 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `roleName` : value = basic_user
[DEBUG] 2021-05-11 20:54:57.707 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`roleName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:57.707 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `user` : value = 8
[DEBUG] 2021-05-11 20:54:57.707 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:57.707 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `userName` : value = bwalters
[DEBUG] 2021-05-11 20:54:57.707 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:57.707 [http-nio-8080-exec-1] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.Role#10]
[DEBUG] 2021-05-11 20:54:57.707 [http-nio-8080-exec-1] CollectionLoadContext - 1 collections were found in result set for role: com.leeannjakel.entity.User.roles
[DEBUG] 2021-05-11 20:54:57.707 [http-nio-8080-exec-1] CollectionLoadContext - Collection fully initialized: [com.leeannjakel.entity.User.roles#8]
[DEBUG] 2021-05-11 20:54:57.707 [http-nio-8080-exec-1] CollectionLoadContext - 1 collections initialized for role: com.leeannjakel.entity.User.roles
[DEBUG] 2021-05-11 20:54:57.707 [http-nio-8080-exec-1] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-05-11 20:54:57.707 [http-nio-8080-exec-1] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2021-05-11 20:54:57.707 [http-nio-8080-exec-1] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.leeannjakel.entity.User.roles#7]
[DEBUG] 2021-05-11 20:54:57.708 [http-nio-8080-exec-1] SQL - select roles0_.user_id as user_id4_3_0_, roles0_.id as id1_3_0_, roles0_.id as id1_3_1_, roles0_.role_name as role_nam2_3_1_, roles0_.user_id as user_id4_3_1_, roles0_.user_name as user_nam3_3_1_ from role roles0_ where roles0_.user_id=?
[DEBUG] 2021-05-11 20:54:57.717 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `userName` : value = ricerocks
[DEBUG] 2021-05-11 20:54:57.717 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:57.717 [http-nio-8080-exec-4] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.User#4]
[DEBUG] 2021-05-11 20:54:57.717 [http-nio-8080-exec-4] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.User#5]
[DEBUG] 2021-05-11 20:54:57.717 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `books` : value = NOT NULL COLLECTION
[DEBUG] 2021-05-11 20:54:57.717 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`books`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:57.717 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `email` : value = email@something.com
[DEBUG] 2021-05-11 20:54:57.717 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:57.717 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `firstName` : value = Paula
[DEBUG] 2021-05-11 20:54:57.717 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:57.717 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `lastName` : value = Waite
[DEBUG] 2021-05-11 20:54:57.717 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:57.717 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `password` : value = password
[DEBUG] 2021-05-11 20:54:57.717 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:57.717 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2021-05-11 20:54:57.717 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:57.717 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `userName` : value = pwaite
[DEBUG] 2021-05-11 20:54:57.717 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:57.718 [http-nio-8080-exec-4] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.User#5]
[DEBUG] 2021-05-11 20:54:57.718 [http-nio-8080-exec-4] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.User#6]
[DEBUG] 2021-05-11 20:54:57.718 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `books` : value = NOT NULL COLLECTION
[DEBUG] 2021-05-11 20:54:57.718 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`books`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:57.718 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `email` : value = email@email.com
[DEBUG] 2021-05-11 20:54:57.718 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:57.718 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `firstName` : value = Erin
[DEBUG] 2021-05-11 20:54:57.718 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:57.718 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `lastName` : value = Jakel
[DEBUG] 2021-05-11 20:54:57.718 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:57.718 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `password` : value = March3rd
[DEBUG] 2021-05-11 20:54:57.718 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:57.718 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2021-05-11 20:54:57.718 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:57.718 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `userName` : value = eajakel
[DEBUG] 2021-05-11 20:54:57.718 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:57.718 [http-nio-8080-exec-4] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.User#6]
[DEBUG] 2021-05-11 20:54:57.718 [http-nio-8080-exec-4] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.User#7]
[DEBUG] 2021-05-11 20:54:57.718 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `books` : value = NOT NULL COLLECTION
[DEBUG] 2021-05-11 20:54:57.718 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`books`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:57.718 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `email` : value = lmkabler@madisoncollege.edu
[DEBUG] 2021-05-11 20:54:57.718 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:57.718 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `firstName` : value = LeeAnn
[DEBUG] 2021-05-11 20:54:57.718 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:57.718 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `lastName` : value = Jakel
[DEBUG] 2021-05-11 20:54:57.718 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:57.718 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `password` : value = password2
[DEBUG] 2021-05-11 20:54:57.718 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:57.718 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2021-05-11 20:54:57.718 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:57.718 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `userName` : value = lmjakel
[DEBUG] 2021-05-11 20:54:57.718 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:57.718 [http-nio-8080-exec-4] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.User#7]
[DEBUG] 2021-05-11 20:54:57.718 [http-nio-8080-exec-4] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.User#8]
[DEBUG] 2021-05-11 20:54:57.718 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `books` : value = NOT NULL COLLECTION
[DEBUG] 2021-05-11 20:54:57.718 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`books`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:57.718 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `email` : value = email@email.com
[DEBUG] 2021-05-11 20:54:57.718 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:57.718 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `firstName` : value = Beckam
[DEBUG] 2021-05-11 20:54:57.718 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:57.718 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `lastName` : value = Walters
[DEBUG] 2021-05-11 20:54:57.718 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:57.719 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `password` : value = password
[DEBUG] 2021-05-11 20:54:57.719 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:57.719 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2021-05-11 20:54:57.719 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:57.719 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `userName` : value = bwalters
[DEBUG] 2021-05-11 20:54:57.719 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:57.719 [http-nio-8080-exec-4] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.User#8]
[DEBUG] 2021-05-11 20:54:57.719 [http-nio-8080-exec-4] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.User#9]
[DEBUG] 2021-05-11 20:54:57.719 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `books` : value = NOT NULL COLLECTION
[DEBUG] 2021-05-11 20:54:57.719 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`books`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:57.719 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `email` : value = email@email.com
[DEBUG] 2021-05-11 20:54:57.719 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:57.719 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `firstName` : value = Megan 
[DEBUG] 2021-05-11 20:54:57.719 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:57.719 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `lastName` : value = Wilson
[DEBUG] 2021-05-11 20:54:57.719 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:57.719 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `password` : value = java
[DEBUG] 2021-05-11 20:54:57.719 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:57.719 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2021-05-11 20:54:57.719 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:57.719 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `userName` : value = mwilson
[DEBUG] 2021-05-11 20:54:57.719 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:57.719 [http-nio-8080-exec-4] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.User#9]
[DEBUG] 2021-05-11 20:54:57.719 [http-nio-8080-exec-4] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.User#10]
[DEBUG] 2021-05-11 20:54:57.719 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `books` : value = NOT NULL COLLECTION
[DEBUG] 2021-05-11 20:54:57.719 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`books`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:57.719 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `email` : value = puppies@pup.com
[DEBUG] 2021-05-11 20:54:57.719 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:57.719 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `firstName` : value = Faelynn
[DEBUG] 2021-05-11 20:54:57.719 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:57.719 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `lastName` : value = Jakel
[DEBUG] 2021-05-11 20:54:57.719 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:57.719 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `password` : value = puppy
[DEBUG] 2021-05-11 20:54:57.719 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:57.719 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2021-05-11 20:54:57.719 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:57.719 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `userName` : value = fjakel
[DEBUG] 2021-05-11 20:54:57.719 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:57.719 [http-nio-8080-exec-4] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.User#10]
[DEBUG] 2021-05-11 20:54:57.719 [http-nio-8080-exec-4] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.User#11]
[DEBUG] 2021-05-11 20:54:57.719 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `books` : value = NOT NULL COLLECTION
[DEBUG] 2021-05-11 20:54:57.720 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`books`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:57.720 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `email` : value = kabler@emails.com
[DEBUG] 2021-05-11 20:54:57.720 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:57.720 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `firstName` : value = Deb
[DEBUG] 2021-05-11 20:54:57.720 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:57.720 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `lastName` : value = Kabler
[DEBUG] 2021-05-11 20:54:57.720 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:57.720 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `password` : value = gramma
[DEBUG] 2021-05-11 20:54:57.720 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:57.720 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2021-05-11 20:54:57.720 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:57.720 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `userName` : value = dkabler
[DEBUG] 2021-05-11 20:54:57.720 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:57.720 [http-nio-8080-exec-4] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.User#11]
[DEBUG] 2021-05-11 20:54:57.749 [http-nio-8080-exec-4] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.leeannjakel.entity.User.roles#11]
[DEBUG] 2021-05-11 20:54:57.750 [http-nio-8080-exec-4] SQL - select roles0_.user_id as user_id4_3_0_, roles0_.id as id1_3_0_, roles0_.id as id1_3_1_, roles0_.role_name as role_nam2_3_1_, roles0_.user_id as user_id4_3_1_, roles0_.user_name as user_nam3_3_1_ from role roles0_ where roles0_.user_id=?
[DEBUG] 2021-05-11 20:54:57.760 [http-nio-8080-exec-1] ResultSetProcessorImpl - Preparing collection initializer : [com.leeannjakel.entity.User.roles#7]
[DEBUG] 2021-05-11 20:54:57.761 [http-nio-8080-exec-1] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-05-11 20:54:57.761 [http-nio-8080-exec-1] CollectionReferenceInitializerImpl - Found row of collection: [com.leeannjakel.entity.User.roles#7]
[DEBUG] 2021-05-11 20:54:57.761 [http-nio-8080-exec-1] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.Role#9]
[DEBUG] 2021-05-11 20:54:57.761 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `roleName` : value = basic_user
[DEBUG] 2021-05-11 20:54:57.761 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`roleName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:57.761 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `user` : value = 7
[DEBUG] 2021-05-11 20:54:57.761 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:57.762 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `userName` : value = lmjakel
[DEBUG] 2021-05-11 20:54:57.762 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:57.762 [http-nio-8080-exec-1] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.Role#9]
[DEBUG] 2021-05-11 20:54:57.762 [http-nio-8080-exec-1] CollectionLoadContext - 1 collections were found in result set for role: com.leeannjakel.entity.User.roles
[DEBUG] 2021-05-11 20:54:57.762 [http-nio-8080-exec-1] CollectionLoadContext - Collection fully initialized: [com.leeannjakel.entity.User.roles#7]
[DEBUG] 2021-05-11 20:54:57.762 [http-nio-8080-exec-1] CollectionLoadContext - 1 collections initialized for role: com.leeannjakel.entity.User.roles
[DEBUG] 2021-05-11 20:54:57.763 [http-nio-8080-exec-1] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-05-11 20:54:57.771 [http-nio-8080-exec-1] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2021-05-11 20:54:57.771 [http-nio-8080-exec-1] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.leeannjakel.entity.User.roles#6]
[DEBUG] 2021-05-11 20:54:57.771 [http-nio-8080-exec-1] SQL - select roles0_.user_id as user_id4_3_0_, roles0_.id as id1_3_0_, roles0_.id as id1_3_1_, roles0_.role_name as role_nam2_3_1_, roles0_.user_id as user_id4_3_1_, roles0_.user_name as user_nam3_3_1_ from role roles0_ where roles0_.user_id=?
[DEBUG] 2021-05-11 20:54:57.781 [http-nio-8080-exec-4] ResultSetProcessorImpl - Preparing collection initializer : [com.leeannjakel.entity.User.roles#11]
[DEBUG] 2021-05-11 20:54:57.781 [http-nio-8080-exec-4] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-05-11 20:54:57.794 [http-nio-8080-exec-1] ResultSetProcessorImpl - Preparing collection initializer : [com.leeannjakel.entity.User.roles#6]
[DEBUG] 2021-05-11 20:54:57.795 [http-nio-8080-exec-1] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-05-11 20:54:57.795 [http-nio-8080-exec-1] CollectionReferenceInitializerImpl - Found row of collection: [com.leeannjakel.entity.User.roles#6]
[DEBUG] 2021-05-11 20:54:57.801 [http-nio-8080-exec-4] CollectionReferenceInitializerImpl - Found row of collection: [com.leeannjakel.entity.User.roles#11]
[DEBUG] 2021-05-11 20:54:57.812 [http-nio-8080-exec-1] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.Role#8]
[DEBUG] 2021-05-11 20:54:57.812 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `roleName` : value = basic_user
[DEBUG] 2021-05-11 20:54:57.812 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`roleName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:57.812 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `user` : value = 6
[DEBUG] 2021-05-11 20:54:57.812 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:57.813 [http-nio-8080-exec-4] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.Role#13]
[DEBUG] 2021-05-11 20:54:57.813 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `roleName` : value = basic_user
[DEBUG] 2021-05-11 20:54:57.813 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`roleName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:57.813 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `user` : value = 11
[DEBUG] 2021-05-11 20:54:57.813 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:57.813 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `userName` : value = dkabler
[DEBUG] 2021-05-11 20:54:57.813 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:57.813 [http-nio-8080-exec-4] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.Role#13]
[DEBUG] 2021-05-11 20:54:57.813 [http-nio-8080-exec-4] CollectionLoadContext - 1 collections were found in result set for role: com.leeannjakel.entity.User.roles
[DEBUG] 2021-05-11 20:54:57.813 [http-nio-8080-exec-4] CollectionLoadContext - Collection fully initialized: [com.leeannjakel.entity.User.roles#11]
[DEBUG] 2021-05-11 20:54:57.813 [http-nio-8080-exec-4] CollectionLoadContext - 1 collections initialized for role: com.leeannjakel.entity.User.roles
[DEBUG] 2021-05-11 20:54:57.814 [http-nio-8080-exec-4] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-05-11 20:54:57.814 [http-nio-8080-exec-4] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2021-05-11 20:54:57.814 [http-nio-8080-exec-4] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.leeannjakel.entity.User.roles#10]
[DEBUG] 2021-05-11 20:54:57.814 [http-nio-8080-exec-4] SQL - select roles0_.user_id as user_id4_3_0_, roles0_.id as id1_3_0_, roles0_.id as id1_3_1_, roles0_.role_name as role_nam2_3_1_, roles0_.user_id as user_id4_3_1_, roles0_.user_name as user_nam3_3_1_ from role roles0_ where roles0_.user_id=?
[DEBUG] 2021-05-11 20:54:57.814 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `userName` : value = eajakel
[DEBUG] 2021-05-11 20:54:57.814 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:57.814 [http-nio-8080-exec-1] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.Role#8]
[DEBUG] 2021-05-11 20:54:57.814 [http-nio-8080-exec-1] CollectionLoadContext - 1 collections were found in result set for role: com.leeannjakel.entity.User.roles
[DEBUG] 2021-05-11 20:54:57.814 [http-nio-8080-exec-1] CollectionLoadContext - Collection fully initialized: [com.leeannjakel.entity.User.roles#6]
[DEBUG] 2021-05-11 20:54:57.814 [http-nio-8080-exec-1] CollectionLoadContext - 1 collections initialized for role: com.leeannjakel.entity.User.roles
[DEBUG] 2021-05-11 20:54:57.820 [http-nio-8080-exec-1] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-05-11 20:54:57.838 [http-nio-8080-exec-1] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2021-05-11 20:54:57.845 [http-nio-8080-exec-1] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.leeannjakel.entity.User.roles#5]
[DEBUG] 2021-05-11 20:54:57.845 [http-nio-8080-exec-1] SQL - select roles0_.user_id as user_id4_3_0_, roles0_.id as id1_3_0_, roles0_.id as id1_3_1_, roles0_.role_name as role_nam2_3_1_, roles0_.user_id as user_id4_3_1_, roles0_.user_name as user_nam3_3_1_ from role roles0_ where roles0_.user_id=?
[DEBUG] 2021-05-11 20:54:57.847 [http-nio-8080-exec-4] ResultSetProcessorImpl - Preparing collection initializer : [com.leeannjakel.entity.User.roles#10]
[DEBUG] 2021-05-11 20:54:57.849 [http-nio-8080-exec-4] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-05-11 20:54:57.850 [http-nio-8080-exec-4] CollectionReferenceInitializerImpl - Found row of collection: [com.leeannjakel.entity.User.roles#10]
[DEBUG] 2021-05-11 20:54:57.850 [http-nio-8080-exec-4] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.Role#12]
[DEBUG] 2021-05-11 20:54:57.850 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `roleName` : value = basic_user
[DEBUG] 2021-05-11 20:54:57.850 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`roleName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:57.850 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `user` : value = 10
[DEBUG] 2021-05-11 20:54:57.850 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:57.850 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `userName` : value = fjakel
[DEBUG] 2021-05-11 20:54:57.850 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:57.850 [http-nio-8080-exec-4] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.Role#12]
[DEBUG] 2021-05-11 20:54:57.850 [http-nio-8080-exec-4] CollectionLoadContext - 1 collections were found in result set for role: com.leeannjakel.entity.User.roles
[DEBUG] 2021-05-11 20:54:57.851 [http-nio-8080-exec-4] CollectionLoadContext - Collection fully initialized: [com.leeannjakel.entity.User.roles#10]
[DEBUG] 2021-05-11 20:54:57.851 [http-nio-8080-exec-4] CollectionLoadContext - 1 collections initialized for role: com.leeannjakel.entity.User.roles
[DEBUG] 2021-05-11 20:54:57.851 [http-nio-8080-exec-4] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-05-11 20:54:57.851 [http-nio-8080-exec-4] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2021-05-11 20:54:57.851 [http-nio-8080-exec-4] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.leeannjakel.entity.User.roles#9]
[DEBUG] 2021-05-11 20:54:57.851 [http-nio-8080-exec-4] SQL - select roles0_.user_id as user_id4_3_0_, roles0_.id as id1_3_0_, roles0_.id as id1_3_1_, roles0_.role_name as role_nam2_3_1_, roles0_.user_id as user_id4_3_1_, roles0_.user_name as user_nam3_3_1_ from role roles0_ where roles0_.user_id=?
[DEBUG] 2021-05-11 20:54:57.861 [http-nio-8080-exec-1] ResultSetProcessorImpl - Preparing collection initializer : [com.leeannjakel.entity.User.roles#5]
[DEBUG] 2021-05-11 20:54:57.861 [http-nio-8080-exec-1] CollectionLoadContext - 1 collections were found in result set for role: com.leeannjakel.entity.User.roles
[DEBUG] 2021-05-11 20:54:57.861 [http-nio-8080-exec-1] CollectionLoadContext - Collection fully initialized: [com.leeannjakel.entity.User.roles#5]
[DEBUG] 2021-05-11 20:54:57.861 [http-nio-8080-exec-1] CollectionLoadContext - 1 collections initialized for role: com.leeannjakel.entity.User.roles
[DEBUG] 2021-05-11 20:54:57.861 [http-nio-8080-exec-1] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-05-11 20:54:57.861 [http-nio-8080-exec-1] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2021-05-11 20:54:57.861 [http-nio-8080-exec-1] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.leeannjakel.entity.User.roles#4]
[DEBUG] 2021-05-11 20:54:57.861 [http-nio-8080-exec-1] SQL - select roles0_.user_id as user_id4_3_0_, roles0_.id as id1_3_0_, roles0_.id as id1_3_1_, roles0_.role_name as role_nam2_3_1_, roles0_.user_id as user_id4_3_1_, roles0_.user_name as user_nam3_3_1_ from role roles0_ where roles0_.user_id=?
[DEBUG] 2021-05-11 20:54:57.879 [http-nio-8080-exec-4] ResultSetProcessorImpl - Preparing collection initializer : [com.leeannjakel.entity.User.roles#9]
[DEBUG] 2021-05-11 20:54:57.879 [http-nio-8080-exec-4] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-05-11 20:54:57.881 [http-nio-8080-exec-1] ResultSetProcessorImpl - Preparing collection initializer : [com.leeannjakel.entity.User.roles#4]
[DEBUG] 2021-05-11 20:54:57.881 [http-nio-8080-exec-1] CollectionLoadContext - 1 collections were found in result set for role: com.leeannjakel.entity.User.roles
[DEBUG] 2021-05-11 20:54:57.881 [http-nio-8080-exec-1] CollectionLoadContext - Collection fully initialized: [com.leeannjakel.entity.User.roles#4]
[DEBUG] 2021-05-11 20:54:57.890 [http-nio-8080-exec-1] CollectionLoadContext - 1 collections initialized for role: com.leeannjakel.entity.User.roles
[DEBUG] 2021-05-11 20:54:57.890 [http-nio-8080-exec-1] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-05-11 20:54:57.891 [http-nio-8080-exec-1] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2021-05-11 20:54:57.891 [http-nio-8080-exec-1] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.leeannjakel.entity.User.roles#3]
[DEBUG] 2021-05-11 20:54:57.891 [http-nio-8080-exec-1] SQL - select roles0_.user_id as user_id4_3_0_, roles0_.id as id1_3_0_, roles0_.id as id1_3_1_, roles0_.role_name as role_nam2_3_1_, roles0_.user_id as user_id4_3_1_, roles0_.user_name as user_nam3_3_1_ from role roles0_ where roles0_.user_id=?
[DEBUG] 2021-05-11 20:54:57.887 [http-nio-8080-exec-4] CollectionReferenceInitializerImpl - Found row of collection: [com.leeannjakel.entity.User.roles#9]
[DEBUG] 2021-05-11 20:54:57.893 [http-nio-8080-exec-4] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.Role#11]
[DEBUG] 2021-05-11 20:54:57.893 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `roleName` : value = basic_user
[DEBUG] 2021-05-11 20:54:57.893 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`roleName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:57.893 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `user` : value = 9
[DEBUG] 2021-05-11 20:54:57.893 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:57.897 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `userName` : value = mwilson
[DEBUG] 2021-05-11 20:54:57.897 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:57.912 [http-nio-8080-exec-4] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.Role#11]
[DEBUG] 2021-05-11 20:54:57.912 [http-nio-8080-exec-4] CollectionLoadContext - 1 collections were found in result set for role: com.leeannjakel.entity.User.roles
[DEBUG] 2021-05-11 20:54:57.912 [http-nio-8080-exec-4] CollectionLoadContext - Collection fully initialized: [com.leeannjakel.entity.User.roles#9]
[DEBUG] 2021-05-11 20:54:57.912 [http-nio-8080-exec-4] CollectionLoadContext - 1 collections initialized for role: com.leeannjakel.entity.User.roles
[DEBUG] 2021-05-11 20:54:57.912 [http-nio-8080-exec-4] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-05-11 20:54:57.912 [http-nio-8080-exec-4] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2021-05-11 20:54:57.916 [http-nio-8080-exec-1] ResultSetProcessorImpl - Preparing collection initializer : [com.leeannjakel.entity.User.roles#3]
[DEBUG] 2021-05-11 20:54:57.916 [http-nio-8080-exec-1] CollectionLoadContext - 1 collections were found in result set for role: com.leeannjakel.entity.User.roles
[DEBUG] 2021-05-11 20:54:57.916 [http-nio-8080-exec-1] CollectionLoadContext - Collection fully initialized: [com.leeannjakel.entity.User.roles#3]
[DEBUG] 2021-05-11 20:54:57.916 [http-nio-8080-exec-1] CollectionLoadContext - 1 collections initialized for role: com.leeannjakel.entity.User.roles
[DEBUG] 2021-05-11 20:54:57.916 [http-nio-8080-exec-1] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-05-11 20:54:57.917 [http-nio-8080-exec-4] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.leeannjakel.entity.User.roles#8]
[DEBUG] 2021-05-11 20:54:57.917 [http-nio-8080-exec-4] SQL - select roles0_.user_id as user_id4_3_0_, roles0_.id as id1_3_0_, roles0_.id as id1_3_1_, roles0_.role_name as role_nam2_3_1_, roles0_.user_id as user_id4_3_1_, roles0_.user_name as user_nam3_3_1_ from role roles0_ where roles0_.user_id=?
[DEBUG] 2021-05-11 20:54:57.920 [http-nio-8080-exec-4] ResultSetProcessorImpl - Preparing collection initializer : [com.leeannjakel.entity.User.roles#8]
[DEBUG] 2021-05-11 20:54:57.920 [http-nio-8080-exec-4] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-05-11 20:54:57.925 [http-nio-8080-exec-1] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2021-05-11 20:54:57.925 [http-nio-8080-exec-1] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.leeannjakel.entity.User.roles#2]
[DEBUG] 2021-05-11 20:54:57.926 [http-nio-8080-exec-1] SQL - select roles0_.user_id as user_id4_3_0_, roles0_.id as id1_3_0_, roles0_.id as id1_3_1_, roles0_.role_name as role_nam2_3_1_, roles0_.user_id as user_id4_3_1_, roles0_.user_name as user_nam3_3_1_ from role roles0_ where roles0_.user_id=?
[DEBUG] 2021-05-11 20:54:57.927 [http-nio-8080-exec-4] CollectionReferenceInitializerImpl - Found row of collection: [com.leeannjakel.entity.User.roles#8]
[DEBUG] 2021-05-11 20:54:57.928 [http-nio-8080-exec-4] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.Role#10]
[DEBUG] 2021-05-11 20:54:57.928 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `roleName` : value = basic_user
[DEBUG] 2021-05-11 20:54:57.928 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`roleName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:57.928 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `user` : value = 8
[DEBUG] 2021-05-11 20:54:57.928 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:57.928 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `userName` : value = bwalters
[DEBUG] 2021-05-11 20:54:57.928 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:57.928 [http-nio-8080-exec-4] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.Role#10]
[DEBUG] 2021-05-11 20:54:57.928 [http-nio-8080-exec-4] CollectionLoadContext - 1 collections were found in result set for role: com.leeannjakel.entity.User.roles
[DEBUG] 2021-05-11 20:54:57.928 [http-nio-8080-exec-4] CollectionLoadContext - Collection fully initialized: [com.leeannjakel.entity.User.roles#8]
[DEBUG] 2021-05-11 20:54:57.928 [http-nio-8080-exec-4] CollectionLoadContext - 1 collections initialized for role: com.leeannjakel.entity.User.roles
[DEBUG] 2021-05-11 20:54:57.928 [http-nio-8080-exec-4] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-05-11 20:54:57.946 [http-nio-8080-exec-1] ResultSetProcessorImpl - Preparing collection initializer : [com.leeannjakel.entity.User.roles#2]
[DEBUG] 2021-05-11 20:54:57.946 [http-nio-8080-exec-4] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2021-05-11 20:54:57.953 [http-nio-8080-exec-4] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.leeannjakel.entity.User.roles#7]
[DEBUG] 2021-05-11 20:54:57.953 [http-nio-8080-exec-4] SQL - select roles0_.user_id as user_id4_3_0_, roles0_.id as id1_3_0_, roles0_.id as id1_3_1_, roles0_.role_name as role_nam2_3_1_, roles0_.user_id as user_id4_3_1_, roles0_.user_name as user_nam3_3_1_ from role roles0_ where roles0_.user_id=?
[DEBUG] 2021-05-11 20:54:57.958 [http-nio-8080-exec-1] CollectionLoadContext - 1 collections were found in result set for role: com.leeannjakel.entity.User.roles
[DEBUG] 2021-05-11 20:54:57.959 [http-nio-8080-exec-1] CollectionLoadContext - Collection fully initialized: [com.leeannjakel.entity.User.roles#2]
[DEBUG] 2021-05-11 20:54:57.959 [http-nio-8080-exec-1] CollectionLoadContext - 1 collections initialized for role: com.leeannjakel.entity.User.roles
[DEBUG] 2021-05-11 20:54:57.959 [http-nio-8080-exec-1] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-05-11 20:54:57.959 [http-nio-8080-exec-1] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2021-05-11 20:54:57.960 [http-nio-8080-exec-1] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.leeannjakel.entity.User.roles#1]
[DEBUG] 2021-05-11 20:54:57.960 [http-nio-8080-exec-1] SQL - select roles0_.user_id as user_id4_3_0_, roles0_.id as id1_3_0_, roles0_.id as id1_3_1_, roles0_.role_name as role_nam2_3_1_, roles0_.user_id as user_id4_3_1_, roles0_.user_name as user_nam3_3_1_ from role roles0_ where roles0_.user_id=?
[DEBUG] 2021-05-11 20:54:57.972 [http-nio-8080-exec-4] ResultSetProcessorImpl - Preparing collection initializer : [com.leeannjakel.entity.User.roles#7]
[DEBUG] 2021-05-11 20:54:57.973 [http-nio-8080-exec-4] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-05-11 20:54:57.986 [http-nio-8080-exec-4] CollectionReferenceInitializerImpl - Found row of collection: [com.leeannjakel.entity.User.roles#7]
[DEBUG] 2021-05-11 20:54:57.994 [http-nio-8080-exec-1] ResultSetProcessorImpl - Preparing collection initializer : [com.leeannjakel.entity.User.roles#1]
[DEBUG] 2021-05-11 20:54:57.994 [http-nio-8080-exec-1] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-05-11 20:54:57.995 [http-nio-8080-exec-1] CollectionReferenceInitializerImpl - Found row of collection: [com.leeannjakel.entity.User.roles#1]
[DEBUG] 2021-05-11 20:54:57.995 [http-nio-8080-exec-1] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.Role#7]
[DEBUG] 2021-05-11 20:54:57.995 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `roleName` : value = admin
[DEBUG] 2021-05-11 20:54:57.995 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`roleName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:57.995 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2021-05-11 20:54:57.996 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:57.996 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `userName` : value = ljakel
[DEBUG] 2021-05-11 20:54:57.996 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:57.996 [http-nio-8080-exec-1] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.Role#7]
[DEBUG] 2021-05-11 20:54:57.996 [http-nio-8080-exec-1] CollectionLoadContext - 1 collections were found in result set for role: com.leeannjakel.entity.User.roles
[DEBUG] 2021-05-11 20:54:57.996 [http-nio-8080-exec-1] CollectionLoadContext - Collection fully initialized: [com.leeannjakel.entity.User.roles#1]
[DEBUG] 2021-05-11 20:54:57.996 [http-nio-8080-exec-1] CollectionLoadContext - 1 collections initialized for role: com.leeannjakel.entity.User.roles
[DEBUG] 2021-05-11 20:54:57.996 [http-nio-8080-exec-1] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-05-11 20:54:58.000 [http-nio-8080-exec-4] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.Role#9]
[DEBUG] 2021-05-11 20:54:58.001 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `roleName` : value = basic_user
[DEBUG] 2021-05-11 20:54:58.001 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`roleName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:58.001 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `user` : value = 7
[DEBUG] 2021-05-11 20:54:58.001 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:58.001 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `userName` : value = lmjakel
[DEBUG] 2021-05-11 20:54:58.002 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:58.002 [http-nio-8080-exec-4] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.Role#9]
[DEBUG] 2021-05-11 20:54:58.002 [http-nio-8080-exec-4] CollectionLoadContext - 1 collections were found in result set for role: com.leeannjakel.entity.User.roles
[DEBUG] 2021-05-11 20:54:58.002 [http-nio-8080-exec-4] CollectionLoadContext - Collection fully initialized: [com.leeannjakel.entity.User.roles#7]
[DEBUG] 2021-05-11 20:54:58.002 [http-nio-8080-exec-4] CollectionLoadContext - 1 collections initialized for role: com.leeannjakel.entity.User.roles
[DEBUG] 2021-05-11 20:54:58.002 [http-nio-8080-exec-4] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-05-11 20:54:58.014 [http-nio-8080-exec-4] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2021-05-11 20:54:58.015 [http-nio-8080-exec-4] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.leeannjakel.entity.User.roles#6]
[DEBUG] 2021-05-11 20:54:58.015 [http-nio-8080-exec-4] SQL - select roles0_.user_id as user_id4_3_0_, roles0_.id as id1_3_0_, roles0_.id as id1_3_1_, roles0_.role_name as role_nam2_3_1_, roles0_.user_id as user_id4_3_1_, roles0_.user_name as user_nam3_3_1_ from role roles0_ where roles0_.user_id=?
[DEBUG] 2021-05-11 20:54:58.014 [http-nio-8080-exec-1] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2021-05-11 20:54:58.019 [http-nio-8080-exec-1] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-05-11 20:54:58.040 [http-nio-8080-exec-4] ResultSetProcessorImpl - Preparing collection initializer : [com.leeannjakel.entity.User.roles#6]
[DEBUG] 2021-05-11 20:54:58.040 [http-nio-8080-exec-4] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-05-11 20:54:58.042 [http-nio-8080-exec-4] CollectionReferenceInitializerImpl - Found row of collection: [com.leeannjakel.entity.User.roles#6]
[DEBUG] 2021-05-11 20:54:58.042 [http-nio-8080-exec-4] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.Role#8]
[DEBUG] 2021-05-11 20:54:58.042 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `roleName` : value = basic_user
[DEBUG] 2021-05-11 20:54:58.042 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`roleName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:58.042 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `user` : value = 6
[DEBUG] 2021-05-11 20:54:58.043 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:58.043 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `userName` : value = eajakel
[DEBUG] 2021-05-11 20:54:58.043 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:58.043 [http-nio-8080-exec-4] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.Role#8]
[DEBUG] 2021-05-11 20:54:58.043 [http-nio-8080-exec-4] CollectionLoadContext - 1 collections were found in result set for role: com.leeannjakel.entity.User.roles
[DEBUG] 2021-05-11 20:54:58.043 [http-nio-8080-exec-4] CollectionLoadContext - Collection fully initialized: [com.leeannjakel.entity.User.roles#6]
[DEBUG] 2021-05-11 20:54:58.043 [http-nio-8080-exec-4] CollectionLoadContext - 1 collections initialized for role: com.leeannjakel.entity.User.roles
[DEBUG] 2021-05-11 20:54:58.043 [http-nio-8080-exec-4] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-05-11 20:54:58.043 [http-nio-8080-exec-4] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2021-05-11 20:54:58.043 [http-nio-8080-exec-4] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.leeannjakel.entity.User.roles#5]
[DEBUG] 2021-05-11 20:54:58.043 [http-nio-8080-exec-4] SQL - select roles0_.user_id as user_id4_3_0_, roles0_.id as id1_3_0_, roles0_.id as id1_3_1_, roles0_.role_name as role_nam2_3_1_, roles0_.user_id as user_id4_3_1_, roles0_.user_name as user_nam3_3_1_ from role roles0_ where roles0_.user_id=?
[DEBUG] 2021-05-11 20:54:58.096 [http-nio-8080-exec-4] ResultSetProcessorImpl - Preparing collection initializer : [com.leeannjakel.entity.User.roles#5]
[DEBUG] 2021-05-11 20:54:58.104 [http-nio-8080-exec-4] CollectionLoadContext - 1 collections were found in result set for role: com.leeannjakel.entity.User.roles
[DEBUG] 2021-05-11 20:54:58.104 [http-nio-8080-exec-4] CollectionLoadContext - Collection fully initialized: [com.leeannjakel.entity.User.roles#5]
[DEBUG] 2021-05-11 20:54:58.104 [http-nio-8080-exec-4] CollectionLoadContext - 1 collections initialized for role: com.leeannjakel.entity.User.roles
[DEBUG] 2021-05-11 20:54:58.107 [http-nio-8080-exec-4] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-05-11 20:54:58.125 [http-nio-8080-exec-4] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2021-05-11 20:54:58.126 [http-nio-8080-exec-4] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.leeannjakel.entity.User.roles#4]
[DEBUG] 2021-05-11 20:54:58.141 [http-nio-8080-exec-4] SQL - select roles0_.user_id as user_id4_3_0_, roles0_.id as id1_3_0_, roles0_.id as id1_3_1_, roles0_.role_name as role_nam2_3_1_, roles0_.user_id as user_id4_3_1_, roles0_.user_name as user_nam3_3_1_ from role roles0_ where roles0_.user_id=?
[DEBUG] 2021-05-11 20:54:58.145 [http-nio-8080-exec-4] ResultSetProcessorImpl - Preparing collection initializer : [com.leeannjakel.entity.User.roles#4]
[DEBUG] 2021-05-11 20:54:58.145 [http-nio-8080-exec-4] CollectionLoadContext - 1 collections were found in result set for role: com.leeannjakel.entity.User.roles
[DEBUG] 2021-05-11 20:54:58.145 [http-nio-8080-exec-4] CollectionLoadContext - Collection fully initialized: [com.leeannjakel.entity.User.roles#4]
[DEBUG] 2021-05-11 20:54:58.150 [http-nio-8080-exec-4] CollectionLoadContext - 1 collections initialized for role: com.leeannjakel.entity.User.roles
[DEBUG] 2021-05-11 20:54:58.150 [http-nio-8080-exec-4] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-05-11 20:54:58.167 [http-nio-8080-exec-4] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2021-05-11 20:54:58.168 [http-nio-8080-exec-4] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.leeannjakel.entity.User.roles#3]
[DEBUG] 2021-05-11 20:54:58.169 [http-nio-8080-exec-4] SQL - select roles0_.user_id as user_id4_3_0_, roles0_.id as id1_3_0_, roles0_.id as id1_3_1_, roles0_.role_name as role_nam2_3_1_, roles0_.user_id as user_id4_3_1_, roles0_.user_name as user_nam3_3_1_ from role roles0_ where roles0_.user_id=?
[DEBUG] 2021-05-11 20:54:58.188 [http-nio-8080-exec-4] ResultSetProcessorImpl - Preparing collection initializer : [com.leeannjakel.entity.User.roles#3]
[DEBUG] 2021-05-11 20:54:58.189 [http-nio-8080-exec-4] CollectionLoadContext - 1 collections were found in result set for role: com.leeannjakel.entity.User.roles
[DEBUG] 2021-05-11 20:54:58.189 [http-nio-8080-exec-4] CollectionLoadContext - Collection fully initialized: [com.leeannjakel.entity.User.roles#3]
[DEBUG] 2021-05-11 20:54:58.189 [http-nio-8080-exec-4] CollectionLoadContext - 1 collections initialized for role: com.leeannjakel.entity.User.roles
[DEBUG] 2021-05-11 20:54:58.189 [http-nio-8080-exec-4] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-05-11 20:54:58.190 [http-nio-8080-exec-4] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2021-05-11 20:54:58.220 [http-nio-8080-exec-4] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.leeannjakel.entity.User.roles#2]
[DEBUG] 2021-05-11 20:54:58.221 [http-nio-8080-exec-4] SQL - select roles0_.user_id as user_id4_3_0_, roles0_.id as id1_3_0_, roles0_.id as id1_3_1_, roles0_.role_name as role_nam2_3_1_, roles0_.user_id as user_id4_3_1_, roles0_.user_name as user_nam3_3_1_ from role roles0_ where roles0_.user_id=?
[DEBUG] 2021-05-11 20:54:58.237 [http-nio-8080-exec-4] ResultSetProcessorImpl - Preparing collection initializer : [com.leeannjakel.entity.User.roles#2]
[DEBUG] 2021-05-11 20:54:58.260 [http-nio-8080-exec-4] CollectionLoadContext - 1 collections were found in result set for role: com.leeannjakel.entity.User.roles
[DEBUG] 2021-05-11 20:54:58.261 [http-nio-8080-exec-4] CollectionLoadContext - Collection fully initialized: [com.leeannjakel.entity.User.roles#2]
[DEBUG] 2021-05-11 20:54:58.261 [http-nio-8080-exec-4] CollectionLoadContext - 1 collections initialized for role: com.leeannjakel.entity.User.roles
[DEBUG] 2021-05-11 20:54:58.261 [http-nio-8080-exec-4] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-05-11 20:54:58.261 [http-nio-8080-exec-4] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2021-05-11 20:54:58.261 [http-nio-8080-exec-4] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.leeannjakel.entity.User.roles#1]
[DEBUG] 2021-05-11 20:54:58.261 [http-nio-8080-exec-4] SQL - select roles0_.user_id as user_id4_3_0_, roles0_.id as id1_3_0_, roles0_.id as id1_3_1_, roles0_.role_name as role_nam2_3_1_, roles0_.user_id as user_id4_3_1_, roles0_.user_name as user_nam3_3_1_ from role roles0_ where roles0_.user_id=?
[DEBUG] 2021-05-11 20:54:58.304 [http-nio-8080-exec-4] ResultSetProcessorImpl - Preparing collection initializer : [com.leeannjakel.entity.User.roles#1]
[DEBUG] 2021-05-11 20:54:58.309 [http-nio-8080-exec-4] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-05-11 20:54:58.309 [http-nio-8080-exec-4] CollectionReferenceInitializerImpl - Found row of collection: [com.leeannjakel.entity.User.roles#1]
[DEBUG] 2021-05-11 20:54:58.313 [http-nio-8080-exec-4] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.Role#7]
[DEBUG] 2021-05-11 20:54:58.313 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `roleName` : value = admin
[DEBUG] 2021-05-11 20:54:58.313 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`roleName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:58.313 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2021-05-11 20:54:58.313 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:58.313 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `userName` : value = ljakel
[DEBUG] 2021-05-11 20:54:58.313 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:58.313 [http-nio-8080-exec-4] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.Role#7]
[DEBUG] 2021-05-11 20:54:58.313 [http-nio-8080-exec-4] CollectionLoadContext - 1 collections were found in result set for role: com.leeannjakel.entity.User.roles
[DEBUG] 2021-05-11 20:54:58.313 [http-nio-8080-exec-4] CollectionLoadContext - Collection fully initialized: [com.leeannjakel.entity.User.roles#1]
[DEBUG] 2021-05-11 20:54:58.313 [http-nio-8080-exec-4] CollectionLoadContext - 1 collections initialized for role: com.leeannjakel.entity.User.roles
[DEBUG] 2021-05-11 20:54:58.313 [http-nio-8080-exec-4] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-05-11 20:54:58.313 [http-nio-8080-exec-4] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2021-05-11 20:54:58.313 [http-nio-8080-exec-4] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-05-11 20:54:58.428 [http-nio-8080-exec-1] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2021-05-11 20:54:58.428 [http-nio-8080-exec-1] TransactionImpl - begin
[DEBUG] 2021-05-11 20:54:58.414 [http-nio-8080-exec-4] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2021-05-11 20:54:58.436 [http-nio-8080-exec-4] TransactionImpl - begin
[DEBUG] 2021-05-11 20:54:58.634 [http-nio-8080-exec-4] ActionQueue - Executing identity-insert immediately
[DEBUG] 2021-05-11 20:54:58.642 [http-nio-8080-exec-1] ActionQueue - Executing identity-insert immediately
[DEBUG] 2021-05-11 20:54:58.746 [http-nio-8080-exec-4] SQL - insert into user (email, first_name, last_name, password, user_name) values (?, ?, ?, ?, ?)
[DEBUG] 2021-05-11 20:54:58.746 [http-nio-8080-exec-1] SQL - insert into user (email, first_name, last_name, password, user_name) values (?, ?, ?, ?, ?)
[DEBUG] 2021-05-11 20:54:58.877 [http-nio-8080-exec-4] IdentifierGeneratorHelper - Natively generated identity: 12
[DEBUG] 2021-05-11 20:54:58.879 [http-nio-8080-exec-1] IdentifierGeneratorHelper - Natively generated identity: 13
[DEBUG] 2021-05-11 20:54:58.882 [http-nio-8080-exec-1] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-05-11 20:54:58.895 [http-nio-8080-exec-4] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-05-11 20:54:58.921 [http-nio-8080-exec-1] ActionQueue - Executing identity-insert immediately
[DEBUG] 2021-05-11 20:54:58.921 [http-nio-8080-exec-1] SQL - insert into role (role_name, user_id, user_name) values (?, ?, ?)
[DEBUG] 2021-05-11 20:54:58.927 [http-nio-8080-exec-4] ActionQueue - Executing identity-insert immediately
[DEBUG] 2021-05-11 20:54:58.937 [http-nio-8080-exec-4] SQL - insert into role (role_name, user_id, user_name) values (?, ?, ?)
[DEBUG] 2021-05-11 20:54:58.955 [http-nio-8080-exec-4] IdentifierGeneratorHelper - Natively generated identity: 14
[DEBUG] 2021-05-11 20:54:58.955 [http-nio-8080-exec-4] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-05-11 20:54:58.956 [http-nio-8080-exec-1] IdentifierGeneratorHelper - Natively generated identity: 15
[DEBUG] 2021-05-11 20:54:58.956 [http-nio-8080-exec-1] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-05-11 20:54:59.011 [http-nio-8080-exec-4] TransactionImpl - committing
[DEBUG] 2021-05-11 20:54:59.020 [http-nio-8080-exec-4] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2021-05-11 20:54:59.041 [http-nio-8080-exec-1] TransactionImpl - committing
[DEBUG] 2021-05-11 20:54:59.042 [http-nio-8080-exec-1] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2021-05-11 20:54:59.043 [http-nio-8080-exec-1] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2021-05-11 20:54:59.053 [http-nio-8080-exec-4] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2021-05-11 20:54:59.130 [http-nio-8080-exec-1] Collections - Collection found: [com.leeannjakel.entity.User.books#13], was: [<unreferenced>] (initialized)
[DEBUG] 2021-05-11 20:54:59.131 [http-nio-8080-exec-1] Collections - Collection found: [com.leeannjakel.entity.User.roles#13], was: [<unreferenced>] (initialized)
[DEBUG] 2021-05-11 20:54:59.139 [http-nio-8080-exec-1] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
[DEBUG] 2021-05-11 20:54:59.140 [http-nio-8080-exec-1] AbstractFlushingEventListener - Flushed: 2 (re)creations, 0 updates, 0 removals to 2 collections
[DEBUG] 2021-05-11 20:54:59.140 [http-nio-8080-exec-4] Collections - Collection found: [com.leeannjakel.entity.User.books#12], was: [<unreferenced>] (initialized)
[DEBUG] 2021-05-11 20:54:59.140 [http-nio-8080-exec-4] Collections - Collection found: [com.leeannjakel.entity.User.roles#12], was: [<unreferenced>] (initialized)
[DEBUG] 2021-05-11 20:54:59.140 [http-nio-8080-exec-4] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
[DEBUG] 2021-05-11 20:54:59.140 [http-nio-8080-exec-4] AbstractFlushingEventListener - Flushed: 2 (re)creations, 0 updates, 0 removals to 2 collections
[DEBUG] 2021-05-11 20:54:59.161 [http-nio-8080-exec-1] EntityPrinter - Listing entities:
[DEBUG] 2021-05-11 20:54:59.162 [http-nio-8080-exec-1] EntityPrinter - com.leeannjakel.entity.User{firstName=LeeAnn, lastName=Jakel, password=password2, books=[], roles=[com.leeannjakel.entity.Role#15], id=13, userName=lmjakel2, email=email@email.com}
[DEBUG] 2021-05-11 20:54:59.176 [http-nio-8080-exec-4] EntityPrinter - Listing entities:
[DEBUG] 2021-05-11 20:54:59.178 [http-nio-8080-exec-1] EntityPrinter - com.leeannjakel.entity.Role{roleName=basic_user, id=15, userName=lmjakel2, user=com.leeannjakel.entity.User#13}
[DEBUG] 2021-05-11 20:54:59.179 [http-nio-8080-exec-4] EntityPrinter - com.leeannjakel.entity.User{firstName=LeeAnn, lastName=Jakel, password=password2, books=[], roles=[com.leeannjakel.entity.Role#14], id=12, userName=lmjakel2, email=email@email.com}
[DEBUG] 2021-05-11 20:54:59.187 [http-nio-8080-exec-4] EntityPrinter - com.leeannjakel.entity.Role{roleName=basic_user, id=14, userName=lmjakel2, user=com.leeannjakel.entity.User#12}
[DEBUG] 2021-05-11 20:54:59.210 [http-nio-8080-exec-4] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-05-11 20:54:59.213 [http-nio-8080-exec-4] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-05-11 20:54:59.229 [http-nio-8080-exec-1] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-05-11 20:54:59.241 [http-nio-8080-exec-1] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-05-11 20:54:59.420 [http-nio-8080-exec-4] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from User as generatedAlias0 where generatedAlias0.id=12
[DEBUG] 2021-05-11 20:54:59.435 [http-nio-8080-exec-1] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from User as generatedAlias0 where generatedAlias0.id=13
[DEBUG] 2021-05-11 20:54:59.438 [http-nio-8080-exec-4] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from com.leeannjakel.entity.User as generatedAlias0 where generatedAlias0.id=12
[DEBUG] 2021-05-11 20:54:59.443 [http-nio-8080-exec-1] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from com.leeannjakel.entity.User as generatedAlias0 where generatedAlias0.id=13
[DEBUG] 2021-05-11 20:54:59.469 [http-nio-8080-exec-4] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2021-05-11 20:54:59.474 [http-nio-8080-exec-1] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2021-05-11 20:54:59.475 [http-nio-8080-exec-1] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  \-[IDENT] Node: 'leeannjakel'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'User'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'id'
          \-[NUM_INT] Node: '13'

[DEBUG] 2021-05-11 20:54:59.475 [http-nio-8080-exec-1] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2021-05-11 20:54:59.475 [http-nio-8080-exec-1] FromElement - FromClause{level=1} : com.leeannjakel.entity.User (generatedAlias0) -> user0_
[DEBUG] 2021-05-11 20:54:59.475 [http-nio-8080-exec-1] FromReferenceNode - Resolved : generatedAlias0 -> user0_.id
[DEBUG] 2021-05-11 20:54:59.484 [http-nio-8080-exec-4] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  \-[IDENT] Node: 'leeannjakel'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'User'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'id'
          \-[NUM_INT] Node: '12'

[DEBUG] 2021-05-11 20:54:59.495 [http-nio-8080-exec-4] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2021-05-11 20:54:59.503 [http-nio-8080-exec-4] FromElement - FromClause{level=1} : com.leeannjakel.entity.User (generatedAlias0) -> user0_
[DEBUG] 2021-05-11 20:54:59.507 [http-nio-8080-exec-1] FromReferenceNode - Resolved : generatedAlias0 -> user0_.id
[DEBUG] 2021-05-11 20:54:59.505 [http-nio-8080-exec-4] FromReferenceNode - Resolved : generatedAlias0 -> user0_.id
[DEBUG] 2021-05-11 20:54:59.510 [http-nio-8080-exec-4] FromReferenceNode - Resolved : generatedAlias0 -> user0_.id
[DEBUG] 2021-05-11 20:54:59.529 [http-nio-8080-exec-1] DotNode - getDataType() : id -> org.hibernate.type.IntegerType@524636fb
[DEBUG] 2021-05-11 20:54:59.536 [http-nio-8080-exec-4] DotNode - getDataType() : id -> org.hibernate.type.IntegerType@524636fb
[DEBUG] 2021-05-11 20:54:59.540 [http-nio-8080-exec-4] FromReferenceNode - Resolved : generatedAlias0.id -> user0_.id
[DEBUG] 2021-05-11 20:54:59.541 [http-nio-8080-exec-4] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2021-05-11 20:54:59.541 [http-nio-8080-exec-4] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} user0_.id ) ( FromClause{level=1} user user0_ ) ( where ( = ( user0_.id user0_.id id ) 12 ) ) )
[DEBUG] 2021-05-11 20:54:59.539 [http-nio-8080-exec-1] FromReferenceNode - Resolved : generatedAlias0.id -> user0_.id
[DEBUG] 2021-05-11 20:54:59.543 [http-nio-8080-exec-1] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2021-05-11 20:54:59.543 [http-nio-8080-exec-1] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} user0_.id ) ( FromClause{level=1} user user0_ ) ( where ( = ( user0_.id user0_.id id ) 13 ) ) )
[DEBUG] 2021-05-11 20:54:59.544 [http-nio-8080-exec-1] JoinProcessor - Using FROM fragment [user user0_]
[DEBUG] 2021-05-11 20:54:59.544 [http-nio-8080-exec-1] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2021-05-11 20:54:59.544 [http-nio-8080-exec-1] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (user)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.id as id1_4_' {alias=generatedAlias0, className=com.leeannjakel.entity.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.email as email2_4_, user0_.first_name as first_na3_4_, user0_.last_name as last_nam4_4_, user0_.password as password5_4_, user0_.user_name as user_nam6_4_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'user user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=user,tableAlias=user0_,origin=null,columns={,className=com.leeannjakel.entity.User}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=user0_,className=com.leeannjakel.entity.User,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'user0_.id' {alias=generatedAlias0, className=com.leeannjakel.entity.User, tableAlias=user0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NUM_INT] LiteralNode: '13'

[DEBUG] 2021-05-11 20:54:59.544 [http-nio-8080-exec-1] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2021-05-11 20:54:59.544 [http-nio-8080-exec-1] QueryTranslatorImpl - HQL: select generatedAlias0 from com.leeannjakel.entity.User as generatedAlias0 where generatedAlias0.id=13
[DEBUG] 2021-05-11 20:54:59.544 [http-nio-8080-exec-1] QueryTranslatorImpl - SQL: select user0_.id as id1_4_, user0_.email as email2_4_, user0_.first_name as first_na3_4_, user0_.last_name as last_nam4_4_, user0_.password as password5_4_, user0_.user_name as user_nam6_4_ from user user0_ where user0_.id=13
[DEBUG] 2021-05-11 20:54:59.544 [http-nio-8080-exec-1] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2021-05-11 20:54:59.544 [http-nio-8080-exec-1] SQL - select user0_.id as id1_4_, user0_.email as email2_4_, user0_.first_name as first_na3_4_, user0_.last_name as last_nam4_4_, user0_.password as password5_4_, user0_.user_name as user_nam6_4_ from user user0_ where user0_.id=13
[DEBUG] 2021-05-11 20:54:59.549 [http-nio-8080-exec-4] JoinProcessor - Using FROM fragment [user user0_]
[DEBUG] 2021-05-11 20:54:59.550 [http-nio-8080-exec-4] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2021-05-11 20:54:59.550 [http-nio-8080-exec-4] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (user)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.id as id1_4_' {alias=generatedAlias0, className=com.leeannjakel.entity.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.email as email2_4_, user0_.first_name as first_na3_4_, user0_.last_name as last_nam4_4_, user0_.password as password5_4_, user0_.user_name as user_nam6_4_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'user user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=user,tableAlias=user0_,origin=null,columns={,className=com.leeannjakel.entity.User}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=user0_,className=com.leeannjakel.entity.User,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'user0_.id' {alias=generatedAlias0, className=com.leeannjakel.entity.User, tableAlias=user0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NUM_INT] LiteralNode: '12'

[DEBUG] 2021-05-11 20:54:59.578 [http-nio-8080-exec-4] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2021-05-11 20:54:59.579 [http-nio-8080-exec-4] QueryTranslatorImpl - HQL: select generatedAlias0 from com.leeannjakel.entity.User as generatedAlias0 where generatedAlias0.id=12
[DEBUG] 2021-05-11 20:54:59.579 [http-nio-8080-exec-4] QueryTranslatorImpl - SQL: select user0_.id as id1_4_, user0_.email as email2_4_, user0_.first_name as first_na3_4_, user0_.last_name as last_nam4_4_, user0_.password as password5_4_, user0_.user_name as user_nam6_4_ from user user0_ where user0_.id=12
[DEBUG] 2021-05-11 20:54:59.579 [http-nio-8080-exec-4] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2021-05-11 20:54:59.591 [http-nio-8080-exec-1] Loader - Result set row: 0
[DEBUG] 2021-05-11 20:54:59.591 [http-nio-8080-exec-1] Loader - Result row: EntityKey[com.leeannjakel.entity.User#13]
[DEBUG] 2021-05-11 20:54:59.592 [http-nio-8080-exec-1] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.User#13]
[DEBUG] 2021-05-11 20:54:59.583 [http-nio-8080-exec-4] SQL - select user0_.id as id1_4_, user0_.email as email2_4_, user0_.first_name as first_na3_4_, user0_.last_name as last_nam4_4_, user0_.password as password5_4_, user0_.user_name as user_nam6_4_ from user user0_ where user0_.id=12
[DEBUG] 2021-05-11 20:54:59.592 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `books` : value = NOT NULL COLLECTION
[DEBUG] 2021-05-11 20:54:59.601 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`books`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:59.602 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `email` : value = email@email.com
[DEBUG] 2021-05-11 20:54:59.602 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:59.602 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `firstName` : value = LeeAnn
[DEBUG] 2021-05-11 20:54:59.602 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:59.602 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `lastName` : value = Jakel
[DEBUG] 2021-05-11 20:54:59.602 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:59.602 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `password` : value = password2
[DEBUG] 2021-05-11 20:54:59.602 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:59.602 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2021-05-11 20:54:59.602 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:59.617 [http-nio-8080-exec-4] Loader - Result set row: 0
[DEBUG] 2021-05-11 20:54:59.617 [http-nio-8080-exec-4] Loader - Result row: EntityKey[com.leeannjakel.entity.User#12]
[DEBUG] 2021-05-11 20:54:59.603 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `userName` : value = lmjakel2
[DEBUG] 2021-05-11 20:54:59.618 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:59.618 [http-nio-8080-exec-1] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.User#13]
[DEBUG] 2021-05-11 20:54:59.635 [http-nio-8080-exec-1] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.leeannjakel.entity.User.roles#13]
[DEBUG] 2021-05-11 20:54:59.642 [http-nio-8080-exec-1] SQL - select roles0_.user_id as user_id4_3_0_, roles0_.id as id1_3_0_, roles0_.id as id1_3_1_, roles0_.role_name as role_nam2_3_1_, roles0_.user_id as user_id4_3_1_, roles0_.user_name as user_nam3_3_1_ from role roles0_ where roles0_.user_id=?
[DEBUG] 2021-05-11 20:54:59.650 [http-nio-8080-exec-4] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.User#12]
[DEBUG] 2021-05-11 20:54:59.650 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `books` : value = NOT NULL COLLECTION
[DEBUG] 2021-05-11 20:54:59.650 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`books`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:59.650 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `email` : value = email@email.com
[DEBUG] 2021-05-11 20:54:59.650 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:59.650 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `firstName` : value = LeeAnn
[DEBUG] 2021-05-11 20:54:59.650 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:59.650 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `lastName` : value = Jakel
[DEBUG] 2021-05-11 20:54:59.650 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:59.650 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `password` : value = password2
[DEBUG] 2021-05-11 20:54:59.650 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:59.650 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2021-05-11 20:54:59.650 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:59.650 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `userName` : value = lmjakel2
[DEBUG] 2021-05-11 20:54:59.650 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:59.650 [http-nio-8080-exec-4] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.User#12]
[DEBUG] 2021-05-11 20:54:59.651 [http-nio-8080-exec-4] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.leeannjakel.entity.User.roles#12]
[DEBUG] 2021-05-11 20:54:59.651 [http-nio-8080-exec-4] SQL - select roles0_.user_id as user_id4_3_0_, roles0_.id as id1_3_0_, roles0_.id as id1_3_1_, roles0_.role_name as role_nam2_3_1_, roles0_.user_id as user_id4_3_1_, roles0_.user_name as user_nam3_3_1_ from role roles0_ where roles0_.user_id=?
[DEBUG] 2021-05-11 20:54:59.661 [http-nio-8080-exec-1] ResultSetProcessorImpl - Preparing collection initializer : [com.leeannjakel.entity.User.roles#13]
[DEBUG] 2021-05-11 20:54:59.674 [http-nio-8080-exec-1] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-05-11 20:54:59.678 [http-nio-8080-exec-4] ResultSetProcessorImpl - Preparing collection initializer : [com.leeannjakel.entity.User.roles#12]
[DEBUG] 2021-05-11 20:54:59.679 [http-nio-8080-exec-1] CollectionReferenceInitializerImpl - Found row of collection: [com.leeannjakel.entity.User.roles#13]
[DEBUG] 2021-05-11 20:54:59.680 [http-nio-8080-exec-1] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.Role#15]
[DEBUG] 2021-05-11 20:54:59.680 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `roleName` : value = basic_user
[DEBUG] 2021-05-11 20:54:59.680 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`roleName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:59.680 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `user` : value = 13
[DEBUG] 2021-05-11 20:54:59.680 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:59.678 [http-nio-8080-exec-4] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-05-11 20:54:59.681 [http-nio-8080-exec-4] CollectionReferenceInitializerImpl - Found row of collection: [com.leeannjakel.entity.User.roles#12]
[DEBUG] 2021-05-11 20:54:59.682 [http-nio-8080-exec-4] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.Role#14]
[DEBUG] 2021-05-11 20:54:59.682 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `roleName` : value = basic_user
[DEBUG] 2021-05-11 20:54:59.682 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`roleName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:59.682 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `user` : value = 12
[DEBUG] 2021-05-11 20:54:59.682 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:59.682 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `userName` : value = lmjakel2
[DEBUG] 2021-05-11 20:54:59.682 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:59.683 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `userName` : value = lmjakel2
[DEBUG] 2021-05-11 20:54:59.683 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:54:59.683 [http-nio-8080-exec-1] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.Role#15]
[DEBUG] 2021-05-11 20:54:59.686 [http-nio-8080-exec-4] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.Role#14]
[DEBUG] 2021-05-11 20:54:59.686 [http-nio-8080-exec-4] CollectionLoadContext - 1 collections were found in result set for role: com.leeannjakel.entity.User.roles
[DEBUG] 2021-05-11 20:54:59.688 [http-nio-8080-exec-1] CollectionLoadContext - 1 collections were found in result set for role: com.leeannjakel.entity.User.roles
[DEBUG] 2021-05-11 20:54:59.699 [http-nio-8080-exec-4] CollectionLoadContext - Collection fully initialized: [com.leeannjakel.entity.User.roles#12]
[DEBUG] 2021-05-11 20:54:59.710 [http-nio-8080-exec-4] CollectionLoadContext - 1 collections initialized for role: com.leeannjakel.entity.User.roles
[DEBUG] 2021-05-11 20:54:59.711 [http-nio-8080-exec-4] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-05-11 20:54:59.711 [http-nio-8080-exec-4] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2021-05-11 20:54:59.711 [http-nio-8080-exec-4] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-05-11 20:54:59.714 [http-nio-8080-exec-1] CollectionLoadContext - Collection fully initialized: [com.leeannjakel.entity.User.roles#13]
[DEBUG] 2021-05-11 20:54:59.714 [http-nio-8080-exec-1] CollectionLoadContext - 1 collections initialized for role: com.leeannjakel.entity.User.roles
[DEBUG] 2021-05-11 20:54:59.714 [http-nio-8080-exec-1] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-05-11 20:54:59.714 [http-nio-8080-exec-1] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2021-05-11 20:54:59.714 [http-nio-8080-exec-1] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
