[DEBUG] 2021-05-06 20:04:07.630 [http-nio-8080-exec-5] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2021-05-06 20:04:07.680 [http-nio-8080-exec-5] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2021-05-06 20:04:07.713 [http-nio-8080-exec-5] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2021-05-06 20:04:08.370 [http-nio-8080-exec-5] Version - HHH000412: Hibernate Core {5.4.4.Final}
[DEBUG] 2021-05-06 20:04:08.400 [http-nio-8080-exec-5] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2021-05-06 20:04:09.865 [http-nio-8080-exec-5] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2021-05-06 20:04:09.870 [http-nio-8080-exec-5] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2021-05-06 20:04:10.002 [http-nio-8080-exec-5] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2021-05-06 20:04:12.898 [http-nio-8080-exec-5] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2021-05-06 20:04:13.416 [http-nio-8080-exec-5] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2021-05-06 20:04:13.470 [http-nio-8080-exec-5] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2021-05-06 20:04:13.977 [http-nio-8080-exec-5] Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] 2021-05-06 20:04:14.345 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@5131a73b
[DEBUG] 2021-05-06 20:04:14.350 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@5131a73b
[DEBUG] 2021-05-06 20:04:14.350 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@5131a73b
[DEBUG] 2021-05-06 20:04:14.354 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@2e4d987b
[DEBUG] 2021-05-06 20:04:14.368 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@431fe9e4
[DEBUG] 2021-05-06 20:04:14.372 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@270dd2fd
[DEBUG] 2021-05-06 20:04:14.378 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@59b3926
[DEBUG] 2021-05-06 20:04:14.379 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@59b3926
[DEBUG] 2021-05-06 20:04:14.379 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@59b3926
[DEBUG] 2021-05-06 20:04:14.380 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@4aa29336
[DEBUG] 2021-05-06 20:04:14.383 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@4aa29336
[DEBUG] 2021-05-06 20:04:14.383 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@4aa29336
[DEBUG] 2021-05-06 20:04:15.106 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@1b61ced8
[DEBUG] 2021-05-06 20:04:15.106 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@1b61ced8
[DEBUG] 2021-05-06 20:04:15.107 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1b61ced8
[DEBUG] 2021-05-06 20:04:15.119 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@47cd79e0
[DEBUG] 2021-05-06 20:04:15.123 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@47cd79e0
[DEBUG] 2021-05-06 20:04:15.123 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@47cd79e0
[DEBUG] 2021-05-06 20:04:15.130 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@57beaf21
[DEBUG] 2021-05-06 20:04:15.130 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@57beaf21
[DEBUG] 2021-05-06 20:04:15.131 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@57beaf21
[DEBUG] 2021-05-06 20:04:15.138 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@1a7b8612
[DEBUG] 2021-05-06 20:04:15.139 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@1a7b8612
[DEBUG] 2021-05-06 20:04:15.139 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1a7b8612
[DEBUG] 2021-05-06 20:04:15.145 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@5c31cb99
[DEBUG] 2021-05-06 20:04:15.145 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@5c31cb99
[DEBUG] 2021-05-06 20:04:15.146 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@5c31cb99
[DEBUG] 2021-05-06 20:04:15.148 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@879fb9d
[DEBUG] 2021-05-06 20:04:15.148 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@879fb9d
[DEBUG] 2021-05-06 20:04:15.150 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@3bd1dda1
[DEBUG] 2021-05-06 20:04:15.150 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@3bd1dda1
[DEBUG] 2021-05-06 20:04:15.157 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@37a5b2a0
[DEBUG] 2021-05-06 20:04:15.157 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@37a5b2a0
[DEBUG] 2021-05-06 20:04:15.158 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@43bdddd4
[DEBUG] 2021-05-06 20:04:15.161 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@320ea2e9
[DEBUG] 2021-05-06 20:04:15.165 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@45a55c2b
[DEBUG] 2021-05-06 20:04:15.165 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@45a55c2b
[DEBUG] 2021-05-06 20:04:15.169 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@4a613d3c
[DEBUG] 2021-05-06 20:04:15.170 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@4a613d3c
[DEBUG] 2021-05-06 20:04:15.195 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@4e01b6b3
[DEBUG] 2021-05-06 20:04:15.197 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@4e01b6b3
[DEBUG] 2021-05-06 20:04:15.200 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@5dfe5c80
[DEBUG] 2021-05-06 20:04:15.200 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@5dfe5c80
[DEBUG] 2021-05-06 20:04:15.202 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@6c726fc6
[DEBUG] 2021-05-06 20:04:15.203 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@6c726fc6
[DEBUG] 2021-05-06 20:04:15.205 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@4325ca6f
[DEBUG] 2021-05-06 20:04:15.205 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@4325ca6f
[DEBUG] 2021-05-06 20:04:15.210 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7d6018e7
[DEBUG] 2021-05-06 20:04:15.211 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7d6018e7
[DEBUG] 2021-05-06 20:04:15.214 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@22401412
[DEBUG] 2021-05-06 20:04:15.214 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@22401412
[DEBUG] 2021-05-06 20:04:15.223 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5c282f32
[DEBUG] 2021-05-06 20:04:15.224 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5c282f32
[DEBUG] 2021-05-06 20:04:15.228 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@340cde30
[DEBUG] 2021-05-06 20:04:15.228 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@340cde30
[DEBUG] 2021-05-06 20:04:15.231 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@3ae48132
[DEBUG] 2021-05-06 20:04:15.233 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@3ae48132
[DEBUG] 2021-05-06 20:04:15.244 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@438dc326
[DEBUG] 2021-05-06 20:04:15.245 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@438dc326
[DEBUG] 2021-05-06 20:04:15.245 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@438dc326
[DEBUG] 2021-05-06 20:04:15.257 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@7bf24d62
[DEBUG] 2021-05-06 20:04:15.261 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@5582a093
[DEBUG] 2021-05-06 20:04:15.261 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@5582a093
[DEBUG] 2021-05-06 20:04:15.261 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@5582a093
[DEBUG] 2021-05-06 20:04:15.264 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@6b39c33e
[DEBUG] 2021-05-06 20:04:15.265 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@763dcde3
[DEBUG] 2021-05-06 20:04:15.266 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@763dcde3
[DEBUG] 2021-05-06 20:04:15.273 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@59c6c945
[DEBUG] 2021-05-06 20:04:15.273 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@59c6c945
[DEBUG] 2021-05-06 20:04:15.275 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@1d7fc59e
[DEBUG] 2021-05-06 20:04:15.276 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1d7fc59e
[DEBUG] 2021-05-06 20:04:15.285 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@18af8c37
[DEBUG] 2021-05-06 20:04:15.285 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@18af8c37
[DEBUG] 2021-05-06 20:04:15.287 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@2453577b
[DEBUG] 2021-05-06 20:04:15.287 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@2453577b
[DEBUG] 2021-05-06 20:04:15.288 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2302d97b
[DEBUG] 2021-05-06 20:04:15.290 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@4a9043f6
[DEBUG] 2021-05-06 20:04:15.290 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@4a9043f6
[DEBUG] 2021-05-06 20:04:15.291 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@4a9043f6
[DEBUG] 2021-05-06 20:04:15.294 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@382a22f
[DEBUG] 2021-05-06 20:04:15.294 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@382a22f
[DEBUG] 2021-05-06 20:04:15.294 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@382a22f
[DEBUG] 2021-05-06 20:04:15.297 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@5719f9c8
[DEBUG] 2021-05-06 20:04:15.299 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@50de376c
[DEBUG] 2021-05-06 20:04:15.301 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@2ff0fbd9
[DEBUG] 2021-05-06 20:04:15.303 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@2ff0fbd9
[DEBUG] 2021-05-06 20:04:15.303 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@2ff0fbd9
[DEBUG] 2021-05-06 20:04:15.319 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@76f689b4
[DEBUG] 2021-05-06 20:04:15.319 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@76f689b4
[DEBUG] 2021-05-06 20:04:15.319 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@76f689b4
[DEBUG] 2021-05-06 20:04:15.321 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@1df5e39d
[DEBUG] 2021-05-06 20:04:15.327 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@9c3e5e4
[DEBUG] 2021-05-06 20:04:15.346 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@378a520d
[DEBUG] 2021-05-06 20:04:15.348 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@378a520d
[DEBUG] 2021-05-06 20:04:15.349 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@5b13ffbe
[DEBUG] 2021-05-06 20:04:15.356 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@15fc1431
[DEBUG] 2021-05-06 20:04:15.356 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@15fc1431
[DEBUG] 2021-05-06 20:04:15.368 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@37cc7071
[DEBUG] 2021-05-06 20:04:15.368 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@37cc7071
[DEBUG] 2021-05-06 20:04:15.369 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@305bb9e5
[DEBUG] 2021-05-06 20:04:15.369 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@4f484ea2
[DEBUG] 2021-05-06 20:04:15.386 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@69da48bb
[DEBUG] 2021-05-06 20:04:15.415 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@594f6d74
[DEBUG] 2021-05-06 20:04:15.415 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@594f6d74
[DEBUG] 2021-05-06 20:04:15.417 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@5bd8ec1e
[DEBUG] 2021-05-06 20:04:15.422 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@7f765591
[DEBUG] 2021-05-06 20:04:15.422 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@42d6b9b1
[DEBUG] 2021-05-06 20:04:15.422 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@4bd5518d
[DEBUG] 2021-05-06 20:04:15.422 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@5771ecf5
[DEBUG] 2021-05-06 20:04:15.428 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@1ae6f157
[DEBUG] 2021-05-06 20:04:15.428 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@6d8ac88b
[DEBUG] 2021-05-06 20:04:15.428 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@cb2b58e
[DEBUG] 2021-05-06 20:04:15.818 [http-nio-8080-exec-5] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2021-05-06 20:04:15.906 [http-nio-8080-exec-5] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2021-05-06 20:04:15.954 [http-nio-8080-exec-5] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2021-05-06 20:04:15.954 [http-nio-8080-exec-5] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2021-05-06 20:04:15.970 [http-nio-8080-exec-5] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2021-05-06 20:04:16.001 [http-nio-8080-exec-5] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2021-05-06 20:04:16.008 [http-nio-8080-exec-5] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2021-05-06 20:04:16.054 [http-nio-8080-exec-5] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2021-05-06 20:04:16.068 [http-nio-8080-exec-5] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2021-05-06 20:04:16.088 [http-nio-8080-exec-5] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2021-05-06 20:04:16.090 [http-nio-8080-exec-5] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2021-05-06 20:04:16.091 [http-nio-8080-exec-5] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2021-05-06 20:04:16.091 [http-nio-8080-exec-5] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2021-05-06 20:04:16.101 [http-nio-8080-exec-5] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2021-05-06 20:04:16.176 [http-nio-8080-exec-5] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/BookCollection
[INFO ] 2021-05-06 20:04:16.177 [http-nio-8080-exec-5] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2021-05-06 20:04:16.177 [http-nio-8080-exec-5] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2021-05-06 20:04:18.230 [http-nio-8080-exec-5] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2021-05-06 20:04:21.568 [http-nio-8080-exec-5] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.22
      major : 8
      minor : 0
[DEBUG] 2021-05-06 20:04:21.569 [http-nio-8080-exec-5] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.22 (Revision: d64b664fa93e81296a377de031b8123a67e6def2)
      major : 8
      minor : 0
[DEBUG] 2021-05-06 20:04:21.569 [http-nio-8080-exec-5] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2021-05-06 20:04:22.147 [http-nio-8080-exec-5] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[DEBUG] 2021-05-06 20:04:22.251 [http-nio-8080-exec-5] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2021-05-06 20:04:22.422 [http-nio-8080-exec-5] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2021-05-06 20:04:22.827 [http-nio-8080-exec-5] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2021-05-06 20:04:22.845 [http-nio-8080-exec-5] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@15a6b66c] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@4a89b7f2]
[DEBUG] 2021-05-06 20:04:23.135 [http-nio-8080-exec-5] AnnotationMetadataSourceProcessorImpl - Encountered a non-categorized annotated class [com.leeannjakel.entity.AuthorResponse]; ignoring
[DEBUG] 2021-05-06 20:04:23.138 [http-nio-8080-exec-5] AnnotationMetadataSourceProcessorImpl - Encountered a non-categorized annotated class [com.leeannjakel.entity.WorksAuthorsItem]; ignoring
[DEBUG] 2021-05-06 20:04:23.139 [http-nio-8080-exec-5] AnnotationMetadataSourceProcessorImpl - Encountered a non-categorized annotated class [com.leeannjakel.entity.Classifications]; ignoring
[DEBUG] 2021-05-06 20:04:23.142 [http-nio-8080-exec-5] AnnotationMetadataSourceProcessorImpl - Encountered a non-categorized annotated class [com.leeannjakel.entity.Created]; ignoring
[DEBUG] 2021-05-06 20:04:23.148 [http-nio-8080-exec-5] AnnotationMetadataSourceProcessorImpl - Encountered a non-categorized annotated class [com.leeannjakel.entity.Identifiers]; ignoring
[DEBUG] 2021-05-06 20:04:23.150 [http-nio-8080-exec-5] AnnotationMetadataSourceProcessorImpl - Encountered a non-categorized annotated class [com.leeannjakel.entity.Info]; ignoring
[DEBUG] 2021-05-06 20:04:23.151 [http-nio-8080-exec-5] AnnotationMetadataSourceProcessorImpl - Encountered a non-categorized annotated class [com.leeannjakel.entity.LanguagesItem]; ignoring
[DEBUG] 2021-05-06 20:04:23.152 [http-nio-8080-exec-5] AnnotationMetadataSourceProcessorImpl - Encountered a non-categorized annotated class [com.leeannjakel.entity.LastModified]; ignoring
[DEBUG] 2021-05-06 20:04:23.154 [http-nio-8080-exec-5] AnnotationMetadataSourceProcessorImpl - Encountered a non-categorized annotated class [com.leeannjakel.entity.Type]; ignoring
[DEBUG] 2021-05-06 20:04:23.167 [http-nio-8080-exec-5] AnnotationMetadataSourceProcessorImpl - Encountered a non-categorized annotated class [com.leeannjakel.entity.WorksItem]; ignoring
[DEBUG] 2021-05-06 20:04:23.245 [http-nio-8080-exec-5] AnnotationBinder - Binding entity from annotated class: com.leeannjakel.entity.Author
[DEBUG] 2021-05-06 20:04:23.385 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2021-05-06 20:04:23.444 [http-nio-8080-exec-5] EntityBinder - Import with entity name Author
[DEBUG] 2021-05-06 20:04:23.464 [http-nio-8080-exec-5] EntityBinder - Bind entity com.leeannjakel.entity.Author on table author
[DEBUG] 2021-05-06 20:04:23.570 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(author), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-06 20:04:23.582 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2021-05-06 20:04:23.585 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.leeannjakel.entity.Author:id]
[DEBUG] 2021-05-06 20:04:23.599 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2021-05-06 20:04:23.605 [http-nio-8080-exec-5] PropertyBinder - Building property id
[DEBUG] 2021-05-06 20:04:23.628 [http-nio-8080-exec-5] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2021-05-06 20:04:23.637 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='author'}
[DEBUG] 2021-05-06 20:04:23.639 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(author), mappingColumn=books, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-06 20:04:23.654 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(author), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-06 20:04:23.675 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(author), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-06 20:04:23.676 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(author), mappingColumn=books_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-06 20:04:23.679 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='books_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2021-05-06 20:04:23.682 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='author'}
[DEBUG] 2021-05-06 20:04:23.683 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='author'}
[DEBUG] 2021-05-06 20:04:23.691 [http-nio-8080-exec-5] CollectionBinder - Collection role: com.leeannjakel.entity.Author.books
[DEBUG] 2021-05-06 20:04:23.712 [http-nio-8080-exec-5] PropertyBinder - Building property books
[DEBUG] 2021-05-06 20:04:23.716 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(author), mappingColumn=name, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-06 20:04:23.717 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property name with lazy=false
[DEBUG] 2021-05-06 20:04:23.725 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.leeannjakel.entity.Author:name]
[DEBUG] 2021-05-06 20:04:23.725 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for name
[DEBUG] 2021-05-06 20:04:23.725 [http-nio-8080-exec-5] PropertyBinder - Building property name
[DEBUG] 2021-05-06 20:04:23.758 [http-nio-8080-exec-5] AnnotationBinder - Binding entity from annotated class: com.leeannjakel.entity.Book
[DEBUG] 2021-05-06 20:04:23.758 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2021-05-06 20:04:23.761 [http-nio-8080-exec-5] EntityBinder - Import with entity name Book
[DEBUG] 2021-05-06 20:04:23.763 [http-nio-8080-exec-5] EntityBinder - Bind entity com.leeannjakel.entity.Book on table book
[DEBUG] 2021-05-06 20:04:23.818 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-06 20:04:23.819 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2021-05-06 20:04:23.819 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.leeannjakel.entity.Book:id]
[DEBUG] 2021-05-06 20:04:23.819 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2021-05-06 20:04:23.820 [http-nio-8080-exec-5] PropertyBinder - Building property id
[DEBUG] 2021-05-06 20:04:23.820 [http-nio-8080-exec-5] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2021-05-06 20:04:23.820 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='author_id', referencedColumn='', mappedBy=''}
[DEBUG] 2021-05-06 20:04:23.820 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=author, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-06 20:04:23.824 [http-nio-8080-exec-5] PropertyBinder - Building property author
[DEBUG] 2021-05-06 20:04:23.829 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='genre_id', referencedColumn='', mappedBy=''}
[DEBUG] 2021-05-06 20:04:23.829 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=genre, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-06 20:04:23.832 [http-nio-8080-exec-5] PropertyBinder - Building property genre
[DEBUG] 2021-05-06 20:04:23.833 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=isbn, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-06 20:04:23.833 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property isbn with lazy=false
[DEBUG] 2021-05-06 20:04:23.834 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.leeannjakel.entity.Book:isbn]
[DEBUG] 2021-05-06 20:04:23.834 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for isbn
[DEBUG] 2021-05-06 20:04:23.834 [http-nio-8080-exec-5] PropertyBinder - Building property isbn
[DEBUG] 2021-05-06 20:04:23.834 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=notes, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-06 20:04:23.834 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property notes with lazy=false
[DEBUG] 2021-05-06 20:04:23.834 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.leeannjakel.entity.Book:notes]
[DEBUG] 2021-05-06 20:04:23.835 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for notes
[DEBUG] 2021-05-06 20:04:23.835 [http-nio-8080-exec-5] PropertyBinder - Building property notes
[DEBUG] 2021-05-06 20:04:23.835 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=title, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-06 20:04:23.845 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property title with lazy=false
[DEBUG] 2021-05-06 20:04:23.849 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.leeannjakel.entity.Book:title]
[DEBUG] 2021-05-06 20:04:23.849 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for title
[DEBUG] 2021-05-06 20:04:23.850 [http-nio-8080-exec-5] PropertyBinder - Building property title
[DEBUG] 2021-05-06 20:04:23.852 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
[DEBUG] 2021-05-06 20:04:23.854 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-06 20:04:23.855 [http-nio-8080-exec-5] PropertyBinder - Building property user
[DEBUG] 2021-05-06 20:04:23.855 [http-nio-8080-exec-5] AnnotationBinder - Binding entity from annotated class: com.leeannjakel.entity.Genre
[DEBUG] 2021-05-06 20:04:23.856 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2021-05-06 20:04:23.856 [http-nio-8080-exec-5] EntityBinder - Import with entity name Genre
[DEBUG] 2021-05-06 20:04:23.856 [http-nio-8080-exec-5] EntityBinder - Bind entity com.leeannjakel.entity.Genre on table genre
[DEBUG] 2021-05-06 20:04:23.897 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(genre), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-06 20:04:23.898 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2021-05-06 20:04:23.898 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.leeannjakel.entity.Genre:id]
[DEBUG] 2021-05-06 20:04:23.899 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2021-05-06 20:04:23.911 [http-nio-8080-exec-5] PropertyBinder - Building property id
[DEBUG] 2021-05-06 20:04:23.912 [http-nio-8080-exec-5] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2021-05-06 20:04:23.922 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='genre'}
[DEBUG] 2021-05-06 20:04:23.923 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(genre), mappingColumn=books, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-06 20:04:23.923 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(genre), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-06 20:04:23.923 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(genre), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-06 20:04:23.923 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(genre), mappingColumn=books_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-06 20:04:23.923 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='books_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2021-05-06 20:04:23.923 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='genre'}
[DEBUG] 2021-05-06 20:04:23.923 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='genre'}
[DEBUG] 2021-05-06 20:04:23.924 [http-nio-8080-exec-5] CollectionBinder - Collection role: com.leeannjakel.entity.Genre.books
[DEBUG] 2021-05-06 20:04:23.924 [http-nio-8080-exec-5] PropertyBinder - Building property books
[DEBUG] 2021-05-06 20:04:23.924 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(genre), mappingColumn=name, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-06 20:04:23.924 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property name with lazy=false
[DEBUG] 2021-05-06 20:04:23.924 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.leeannjakel.entity.Genre:name]
[DEBUG] 2021-05-06 20:04:23.924 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for name
[DEBUG] 2021-05-06 20:04:23.924 [http-nio-8080-exec-5] PropertyBinder - Building property name
[DEBUG] 2021-05-06 20:04:23.924 [http-nio-8080-exec-5] AnnotationBinder - Binding entity from annotated class: com.leeannjakel.entity.Role
[DEBUG] 2021-05-06 20:04:23.924 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2021-05-06 20:04:23.924 [http-nio-8080-exec-5] EntityBinder - Import with entity name Role
[DEBUG] 2021-05-06 20:04:23.924 [http-nio-8080-exec-5] EntityBinder - Bind entity com.leeannjakel.entity.Role on table role
[DEBUG] 2021-05-06 20:04:23.934 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-06 20:04:23.934 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2021-05-06 20:04:23.938 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.leeannjakel.entity.Role:id]
[DEBUG] 2021-05-06 20:04:23.938 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2021-05-06 20:04:23.954 [http-nio-8080-exec-5] PropertyBinder - Building property id
[DEBUG] 2021-05-06 20:04:23.954 [http-nio-8080-exec-5] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2021-05-06 20:04:23.964 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=role_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-06 20:04:23.970 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property roleName with lazy=false
[DEBUG] 2021-05-06 20:04:23.973 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.leeannjakel.entity.Role:roleName]
[DEBUG] 2021-05-06 20:04:23.974 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for roleName
[DEBUG] 2021-05-06 20:04:23.974 [http-nio-8080-exec-5] PropertyBinder - Building property roleName
[DEBUG] 2021-05-06 20:04:23.974 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
[DEBUG] 2021-05-06 20:04:23.974 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-06 20:04:23.974 [http-nio-8080-exec-5] PropertyBinder - Building property user
[DEBUG] 2021-05-06 20:04:23.974 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=user_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-06 20:04:23.974 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property userName with lazy=false
[DEBUG] 2021-05-06 20:04:23.975 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.leeannjakel.entity.Role:userName]
[DEBUG] 2021-05-06 20:04:23.975 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for userName
[DEBUG] 2021-05-06 20:04:23.975 [http-nio-8080-exec-5] PropertyBinder - Building property userName
[DEBUG] 2021-05-06 20:04:23.975 [http-nio-8080-exec-5] AnnotationBinder - Binding entity from annotated class: com.leeannjakel.entity.User
[DEBUG] 2021-05-06 20:04:23.975 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2021-05-06 20:04:23.975 [http-nio-8080-exec-5] EntityBinder - Import with entity name User
[DEBUG] 2021-05-06 20:04:23.987 [http-nio-8080-exec-5] EntityBinder - Bind entity com.leeannjakel.entity.User on table user
[DEBUG] 2021-05-06 20:04:24.006 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-06 20:04:24.007 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2021-05-06 20:04:24.007 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.leeannjakel.entity.User:id]
[DEBUG] 2021-05-06 20:04:24.007 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2021-05-06 20:04:24.015 [http-nio-8080-exec-5] PropertyBinder - Building property id
[DEBUG] 2021-05-06 20:04:24.025 [http-nio-8080-exec-5] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2021-05-06 20:04:24.025 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2021-05-06 20:04:24.025 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=books, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-06 20:04:24.027 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-06 20:04:24.037 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-06 20:04:24.037 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=books_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-06 20:04:24.037 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='books_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2021-05-06 20:04:24.037 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2021-05-06 20:04:24.037 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2021-05-06 20:04:24.040 [http-nio-8080-exec-5] CollectionBinder - Collection role: com.leeannjakel.entity.User.books
[DEBUG] 2021-05-06 20:04:24.040 [http-nio-8080-exec-5] PropertyBinder - Building property books
[DEBUG] 2021-05-06 20:04:24.040 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=email, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-06 20:04:24.040 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[DEBUG] 2021-05-06 20:04:24.041 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.leeannjakel.entity.User:email]
[DEBUG] 2021-05-06 20:04:24.041 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for email
[DEBUG] 2021-05-06 20:04:24.041 [http-nio-8080-exec-5] PropertyBinder - Building property email
[DEBUG] 2021-05-06 20:04:24.041 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-06 20:04:24.041 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
[DEBUG] 2021-05-06 20:04:24.041 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.leeannjakel.entity.User:firstName]
[DEBUG] 2021-05-06 20:04:24.041 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for firstName
[DEBUG] 2021-05-06 20:04:24.041 [http-nio-8080-exec-5] PropertyBinder - Building property firstName
[DEBUG] 2021-05-06 20:04:24.041 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-06 20:04:24.041 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
[DEBUG] 2021-05-06 20:04:24.041 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.leeannjakel.entity.User:lastName]
[DEBUG] 2021-05-06 20:04:24.041 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for lastName
[DEBUG] 2021-05-06 20:04:24.041 [http-nio-8080-exec-5] PropertyBinder - Building property lastName
[DEBUG] 2021-05-06 20:04:24.057 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=password, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-06 20:04:24.066 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property password with lazy=false
[DEBUG] 2021-05-06 20:04:24.066 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.leeannjakel.entity.User:password]
[DEBUG] 2021-05-06 20:04:24.070 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for password
[DEBUG] 2021-05-06 20:04:24.070 [http-nio-8080-exec-5] PropertyBinder - Building property password
[DEBUG] 2021-05-06 20:04:24.070 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2021-05-06 20:04:24.071 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=roles, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-06 20:04:24.071 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-06 20:04:24.071 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-06 20:04:24.071 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=roles_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-06 20:04:24.072 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='roles_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2021-05-06 20:04:24.072 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2021-05-06 20:04:24.072 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2021-05-06 20:04:24.072 [http-nio-8080-exec-5] CollectionBinder - Collection role: com.leeannjakel.entity.User.roles
[DEBUG] 2021-05-06 20:04:24.072 [http-nio-8080-exec-5] PropertyBinder - Building property roles
[DEBUG] 2021-05-06 20:04:24.073 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=user_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-06 20:04:24.073 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property userName with lazy=false
[DEBUG] 2021-05-06 20:04:24.073 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.leeannjakel.entity.User:userName]
[DEBUG] 2021-05-06 20:04:24.073 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for userName
[DEBUG] 2021-05-06 20:04:24.073 [http-nio-8080-exec-5] PropertyBinder - Building property userName
[DEBUG] 2021-05-06 20:04:24.079 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2021-05-06 20:04:24.080 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for name
[DEBUG] 2021-05-06 20:04:24.080 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2021-05-06 20:04:24.083 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for isbn
[DEBUG] 2021-05-06 20:04:24.084 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for notes
[DEBUG] 2021-05-06 20:04:24.084 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for title
[DEBUG] 2021-05-06 20:04:24.084 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2021-05-06 20:04:24.084 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for name
[DEBUG] 2021-05-06 20:04:24.084 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2021-05-06 20:04:24.084 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for roleName
[DEBUG] 2021-05-06 20:04:24.084 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for userName
[DEBUG] 2021-05-06 20:04:24.084 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2021-05-06 20:04:24.084 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for email
[DEBUG] 2021-05-06 20:04:24.084 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for firstName
[DEBUG] 2021-05-06 20:04:24.084 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for lastName
[DEBUG] 2021-05-06 20:04:24.084 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for password
[DEBUG] 2021-05-06 20:04:24.084 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for userName
[DEBUG] 2021-05-06 20:04:24.117 [http-nio-8080-exec-5] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [author]
[DEBUG] 2021-05-06 20:04:24.117 [http-nio-8080-exec-5] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [book]
[DEBUG] 2021-05-06 20:04:24.122 [http-nio-8080-exec-5] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [genre]
[DEBUG] 2021-05-06 20:04:24.122 [http-nio-8080-exec-5] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [role]
[DEBUG] 2021-05-06 20:04:24.122 [http-nio-8080-exec-5] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [user]
[DEBUG] 2021-05-06 20:04:24.123 [http-nio-8080-exec-5] CollectionSecondPass - Second pass for collection: com.leeannjakel.entity.Author.books
[DEBUG] 2021-05-06 20:04:24.126 [http-nio-8080-exec-5] CollectionBinder - Binding a OneToMany: com.leeannjakel.entity.Author.books through a foreign key
[DEBUG] 2021-05-06 20:04:24.127 [http-nio-8080-exec-5] CollectionBinder - Mapping collection: com.leeannjakel.entity.Author.books -> book
[DEBUG] 2021-05-06 20:04:24.134 [http-nio-8080-exec-5] TableBinder - Retrieving property com.leeannjakel.entity.Book.author
[DEBUG] 2021-05-06 20:04:24.134 [http-nio-8080-exec-5] CollectionSecondPass - Mapped collection key: author_id, one-to-many: com.leeannjakel.entity.Book
[DEBUG] 2021-05-06 20:04:24.134 [http-nio-8080-exec-5] CollectionSecondPass - Second pass for collection: com.leeannjakel.entity.Genre.books
[DEBUG] 2021-05-06 20:04:24.134 [http-nio-8080-exec-5] CollectionBinder - Binding a OneToMany: com.leeannjakel.entity.Genre.books through a foreign key
[DEBUG] 2021-05-06 20:04:24.134 [http-nio-8080-exec-5] CollectionBinder - Mapping collection: com.leeannjakel.entity.Genre.books -> book
[DEBUG] 2021-05-06 20:04:24.135 [http-nio-8080-exec-5] TableBinder - Retrieving property com.leeannjakel.entity.Book.genre
[DEBUG] 2021-05-06 20:04:24.136 [http-nio-8080-exec-5] CollectionSecondPass - Mapped collection key: genre_id, one-to-many: com.leeannjakel.entity.Book
[DEBUG] 2021-05-06 20:04:24.136 [http-nio-8080-exec-5] CollectionSecondPass - Second pass for collection: com.leeannjakel.entity.User.books
[DEBUG] 2021-05-06 20:04:24.136 [http-nio-8080-exec-5] CollectionBinder - Binding a OneToMany: com.leeannjakel.entity.User.books through a foreign key
[DEBUG] 2021-05-06 20:04:24.136 [http-nio-8080-exec-5] CollectionBinder - Mapping collection: com.leeannjakel.entity.User.books -> book
[DEBUG] 2021-05-06 20:04:24.136 [http-nio-8080-exec-5] TableBinder - Retrieving property com.leeannjakel.entity.Book.user
[DEBUG] 2021-05-06 20:04:24.136 [http-nio-8080-exec-5] CollectionSecondPass - Mapped collection key: user_id, one-to-many: com.leeannjakel.entity.Book
[DEBUG] 2021-05-06 20:04:24.136 [http-nio-8080-exec-5] CollectionSecondPass - Second pass for collection: com.leeannjakel.entity.User.roles
[DEBUG] 2021-05-06 20:04:24.136 [http-nio-8080-exec-5] CollectionBinder - Binding a OneToMany: com.leeannjakel.entity.User.roles through a foreign key
[DEBUG] 2021-05-06 20:04:24.136 [http-nio-8080-exec-5] CollectionBinder - Mapping collection: com.leeannjakel.entity.User.roles -> role
[DEBUG] 2021-05-06 20:04:24.136 [http-nio-8080-exec-5] TableBinder - Retrieving property com.leeannjakel.entity.Role.user
[DEBUG] 2021-05-06 20:04:24.138 [http-nio-8080-exec-5] CollectionSecondPass - Mapped collection key: user_id, one-to-many: com.leeannjakel.entity.Role
[DEBUG] 2021-05-06 20:04:24.138 [http-nio-8080-exec-5] InFlightMetadataCollectorImpl - Resolving reference to class: com.leeannjakel.entity.Author
[DEBUG] 2021-05-06 20:04:24.160 [http-nio-8080-exec-5] InFlightMetadataCollectorImpl - Resolving reference to class: com.leeannjakel.entity.Genre
[DEBUG] 2021-05-06 20:04:24.161 [http-nio-8080-exec-5] InFlightMetadataCollectorImpl - Resolving reference to class: com.leeannjakel.entity.User
[DEBUG] 2021-05-06 20:04:24.161 [http-nio-8080-exec-5] InFlightMetadataCollectorImpl - Resolving reference to class: com.leeannjakel.entity.User
[DEBUG] 2021-05-06 20:04:24.167 [http-nio-8080-exec-5] InFlightMetadataCollectorImpl - Resolving reference to class: com.leeannjakel.entity.Author
[DEBUG] 2021-05-06 20:04:24.167 [http-nio-8080-exec-5] InFlightMetadataCollectorImpl - Resolving reference to class: com.leeannjakel.entity.Genre
[DEBUG] 2021-05-06 20:04:24.167 [http-nio-8080-exec-5] InFlightMetadataCollectorImpl - Resolving reference to class: com.leeannjakel.entity.User
[DEBUG] 2021-05-06 20:04:24.167 [http-nio-8080-exec-5] InFlightMetadataCollectorImpl - Resolving reference to class: com.leeannjakel.entity.User
[DEBUG] 2021-05-06 20:04:24.506 [http-nio-8080-exec-5] SessionFactoryImpl - Building session factory
[DEBUG] 2021-05-06 20:04:24.520 [http-nio-8080-exec-5] Settings - SessionFactory name : null
[DEBUG] 2021-05-06 20:04:24.520 [http-nio-8080-exec-5] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2021-05-06 20:04:24.528 [http-nio-8080-exec-5] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2021-05-06 20:04:24.528 [http-nio-8080-exec-5] Settings - Statistics: disabled
[DEBUG] 2021-05-06 20:04:24.528 [http-nio-8080-exec-5] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2021-05-06 20:04:24.528 [http-nio-8080-exec-5] Settings - Default entity-mode: pojo
[DEBUG] 2021-05-06 20:04:24.528 [http-nio-8080-exec-5] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2021-05-06 20:04:24.528 [http-nio-8080-exec-5] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2021-05-06 20:04:24.530 [http-nio-8080-exec-5] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2021-05-06 20:04:24.532 [http-nio-8080-exec-5] Settings - Default batch fetch size: -1
[DEBUG] 2021-05-06 20:04:24.532 [http-nio-8080-exec-5] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2021-05-06 20:04:24.532 [http-nio-8080-exec-5] Settings - Default null ordering: NONE
[DEBUG] 2021-05-06 20:04:24.532 [http-nio-8080-exec-5] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2021-05-06 20:04:24.532 [http-nio-8080-exec-5] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2021-05-06 20:04:24.532 [http-nio-8080-exec-5] Settings - multi-tenancy strategy : NONE
[DEBUG] 2021-05-06 20:04:24.532 [http-nio-8080-exec-5] Settings - JTA Track by Thread: enabled
[DEBUG] 2021-05-06 20:04:24.532 [http-nio-8080-exec-5] Settings - Query language substitutions: {}
[DEBUG] 2021-05-06 20:04:24.532 [http-nio-8080-exec-5] Settings - Named query checking : enabled
[DEBUG] 2021-05-06 20:04:24.532 [http-nio-8080-exec-5] Settings - Second-level cache: disabled
[DEBUG] 2021-05-06 20:04:24.532 [http-nio-8080-exec-5] Settings - Second-level query cache: disabled
[DEBUG] 2021-05-06 20:04:24.532 [http-nio-8080-exec-5] Settings - Second-level query cache factory: null
[DEBUG] 2021-05-06 20:04:24.532 [http-nio-8080-exec-5] Settings - Second-level cache region prefix: null
[DEBUG] 2021-05-06 20:04:24.532 [http-nio-8080-exec-5] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2021-05-06 20:04:24.532 [http-nio-8080-exec-5] Settings - Structured second-level cache entries: disabled
[DEBUG] 2021-05-06 20:04:24.532 [http-nio-8080-exec-5] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2021-05-06 20:04:24.532 [http-nio-8080-exec-5] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2021-05-06 20:04:24.532 [http-nio-8080-exec-5] Settings - JDBC batch size: 15
[DEBUG] 2021-05-06 20:04:24.532 [http-nio-8080-exec-5] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2021-05-06 20:04:24.532 [http-nio-8080-exec-5] Settings - Scrollable result sets: enabled
[DEBUG] 2021-05-06 20:04:24.533 [http-nio-8080-exec-5] Settings - Wrap result sets: disabled
[DEBUG] 2021-05-06 20:04:24.533 [http-nio-8080-exec-5] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2021-05-06 20:04:24.533 [http-nio-8080-exec-5] Settings - JDBC result set fetch size: null
[DEBUG] 2021-05-06 20:04:24.533 [http-nio-8080-exec-5] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2021-05-06 20:04:24.533 [http-nio-8080-exec-5] Settings - Generate SQL with comments: disabled
[DEBUG] 2021-05-06 20:04:24.533 [http-nio-8080-exec-5] Settings - JPA compliance - query : 
[DEBUG] 2021-05-06 20:04:24.533 [http-nio-8080-exec-5] Settings - JPA compliance - closed-handling : 
[DEBUG] 2021-05-06 20:04:24.533 [http-nio-8080-exec-5] Settings - JPA compliance - lists : 
[DEBUG] 2021-05-06 20:04:24.533 [http-nio-8080-exec-5] Settings - JPA compliance - transactions : 
[INFO ] 2021-05-06 20:04:25.218 [http-nio-8080-exec-5] beans - HHH10005002: No explicit CDI BeanManager reference was passed to Hibernate, but CDI is available on the Hibernate ClassLoader.
[DEBUG] 2021-05-06 20:04:25.461 [http-nio-8080-exec-5] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2021-05-06 20:04:25.465 [http-nio-8080-exec-5] SessionFactoryImpl - Instantiating session factory with properties: {awt.toolkit=sun.awt.X11.XToolkit, java.specification.version=11, sun.cpu.isalist=, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=UTF-8, hibernate.c3p0.min_size=5, sun.arch.data.model=64, java.vendor.url=https://ubuntu.com/, catalina.useNaming=true, openejb.provider.default=org.apache.tomee, sun.boot.library.path=/usr/lib/jvm/java-11-openjdk-amd64/lib, com.sun.management.jmxremote.ssl=false, sun.java.command=org.apache.catalina.startup.Bootstrap start, jdk.debug=release, java.specification.vendor=Oracle Corporation, java.naming.factory.url.pkgs=org.apache.naming:org.apache.openejb.core.ivm.naming, openejb.embedder.source=ServerListener, java.version.date=2021-04-20, java.home=/usr/lib/jvm/java-11-openjdk-amd64, ignore.endorsed.dirs=, file.separator=/, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, openejb.scan.webapp.container=true, com.sun.management.jmxremote.password.file=/home/student/.cache/JetBrains/IntelliJIdea2020.3/tomcat/10a53701-4112-462e-a101-1df2054f3873/jmxremote.password, package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.naming.,org.apache.tomcat., openejb.deployments.classpath.filter.systemapps=false, jdk.tls.ephemeralDHKeySize=2048, java.util.logging.config.file=/home/student/.cache/JetBrains/IntelliJIdea2020.3/tomcat/10a53701-4112-462e-a101-1df2054f3873/conf/logging.properties, java.protocol.handler.pkgs=org.apache.catalina.webresources, connection.password=student, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, openejb.scan.webapp.container.excludes=, java.runtime.version=11.0.11+9-Ubuntu-0ubuntu2.20.04, user.name=student, org.apache.johnzon.max-string-length=8192, file.encoding=UTF-8, derby.system.home=/home/student/tomcat/bin, org.apache.catalina.security.SecurityListener.UMASK=0027, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.io.tmpdir=/home/student/tomcat/temp, tomcat.util.scan.StandardJarScanFilter.jarsToScan=log4j-taglib*.jar,log4j-web*.jar,log4javascript*.jar,slf4j-taglib*.jar, java.version=11.0.11, com.sun.management.jmxremote.port=1099, tomcat.util.scan.StandardJarScanFilter.jarsToSkip=annotations-api.jar,ant-junit*.jar,ant-launcher.jar,ant.jar,asm-*.jar,aspectj*.jar,bootstrap.jar,catalina-ant.jar,catalina-ha.jar,catalina-jmx-remote.jar,catalina-storeconfig.jar,catalina-tribes.jar,catalina-ws.jar,catalina.jar,cglib-*.jar,cobertura-*.jar,commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,commons-daemon.jar,commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,commons-math*.jar,commons-pool*.jar,dom4j-*.jar,easymock-*.jar,ecj-*.jar,el-api.jar,geronimo-spec-jaxrpc*.jar,h2*.jar,hamcrest-*.jar,hibernate*.jar,httpclient*.jar,icu4j-*.jar,jasper-el.jar,jasper.jar,jaspic-api.jar,jaxb-*.jar,jaxen-*.jar,jdom-*.jar,jetty-*.jar,jmx-tools.jar,jmx.jar,jsp-api.jar,jstl.jar,jta*.jar,junit-*.jar,junit.jar,log4j*.jar,mail*.jar,objenesis-*.jar,oraclepki.jar,oro-*.jar,servlet-api-*.jar,servlet-api.jar,slf4j*.jar,taglibs-standard-spec-*.jar,tagsoup-*.jar,tomcat-api.jar,tomcat-coyote.jar,tomcat-dbcp.jar,tomcat-i18n-*.jar,tomcat-jdbc.jar,tomcat-jni.jar,tomcat-juli-adapters.jar,tomcat-juli.jar,tomcat-util-scan.jar,tomcat-util.jar,tomcat-websocket.jar,tools.jar,websocket-api.jar,wsdl4j*.jar,xercesImpl.jar,xml-apis.jar,xmlParserAPIs-*.jar,xmlParserAPIs.jar,xom-*.jar, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.print.PSPrinterJob, sun.os.patch.level=unknown, connection.driver_class=com.mysql.cj.jdbc.Driver, tomcat.built=May 4 2019 09:17:16 UTC, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor=Ubuntu, tomee.version=7.1.1, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, tomcat.util.buf.StringCache.byte.enabled=true, sun.desktop=gnome, java.class.path=/home/student/tomcat/bin/bootstrap.jar:/home/student/tomcat/bin/tomcat-juli.jar, tomcat.version=8.5.41.0, java.vm.vendor=Ubuntu, openejb.home=/home/student/tomcat, openejb.system.apps=true, user.timezone=America/Chicago, os.name=Linux, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, openejb.base=/home/student/.cache/JetBrains/IntelliJIdea2020.3/tomcat/10a53701-4112-462e-a101-1df2054f3873, com.sun.management.jmxremote=, sun.cpu.endian=little, user.home=/home/student, hibernate.c3p0.max_statements=50, user.language=en, openejb.deployments.classpath=false, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.tomcat., openejb.loader=tomcat-system, server.loader=, com.sun.management.jmxremote.access.file=/home/student/.cache/JetBrains/IntelliJIdea2020.3/tomcat/10a53701-4112-462e-a101-1df2054f3873/jmxremote.access, hibernate.c3p0.max_size=20, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, path.separator=:, org.apache.openejb.core.security.JaccProvider=org.apache.openejb.core.security.jacc.BasicJaccProvider, common.loader="/home/student/tomcat/lib","/home/student/tomcat/lib/*.jar","/home/student/tomcat/lib","/home/student/tomcat/lib/*.jar", hibernate.connection.username=****, os.version=5.4.0-72-generic, openejb.version=7.1.1, org.apache.security.jacc.EJBMethodPermission.methodInterfaces=BusinessLocalHome,BusinessRemoteHome,BusinessRemote,BusinessLocal, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/BookCollection, java.vm.name=OpenJDK 64-Bit Server VM, openejb.scan.webapp.container.includes=.*(geronimo|mp-jwt|failsafe).*, tomee.remote.support=true, java.vendor.url.bug=https://bugs.launchpad.net/ubuntu/+source/openjdk-lts, catalina.home=/home/student/tomcat, user.dir=/home/student/tomcat/bin, bval.in-container=true, os.arch=amd64, openjpa.Log=org.apache.openejb.openjpa.JULOpenJPALogFactory, hibernate.connection.password=****, tomee.serialization.class.blacklist=-, tomee.serialization.class.whitelist=, shared.loader=, catalina.base=/home/student/.cache/JetBrains/IntelliJIdea2020.3/tomcat/10a53701-4112-462e-a101-1df2054f3873, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@345521b0, noBanner=true, java.util.logging.manager=org.apache.juli.ClassLoaderLogManager, org.apache.webbeans.logger.WebBeansLoggerFacade=org.apache.openejb.cdi.logging.ContainerJULLoggerFactory, java.vm.info=mixed mode, sharing, java.vm.version=11.0.11+9-Ubuntu-0ubuntu2.20.04, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.hostname=127.0.0.1, javax.security.jacc.PolicyConfigurationFactory.provider=org.apache.openejb.core.security.JaccProvider$Factory, connection.url=jdbc:mysql://localhost:3306/BookCollection, java.class.version=55.0, authconfigprovider.factory=false}
[DEBUG] 2021-05-06 20:04:25.731 [http-nio-8080-exec-5] ClassLoaderAccessImpl - Not known whether passed class name [com.leeannjakel.entity.Book] is safe
[DEBUG] 2021-05-06 20:04:25.734 [http-nio-8080-exec-5] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.leeannjakel.entity.Book
[DEBUG] 2021-05-06 20:04:25.851 [http-nio-8080-exec-5] ClassLoaderAccessImpl - Not known whether passed class name [com.leeannjakel.entity.User] is safe
[DEBUG] 2021-05-06 20:04:25.854 [http-nio-8080-exec-5] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.leeannjakel.entity.User
[DEBUG] 2021-05-06 20:04:25.872 [http-nio-8080-exec-5] ClassLoaderAccessImpl - Not known whether passed class name [com.leeannjakel.entity.Author] is safe
[DEBUG] 2021-05-06 20:04:25.872 [http-nio-8080-exec-5] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.leeannjakel.entity.Author
[DEBUG] 2021-05-06 20:04:25.890 [http-nio-8080-exec-5] ClassLoaderAccessImpl - Not known whether passed class name [com.leeannjakel.entity.Genre] is safe
[DEBUG] 2021-05-06 20:04:25.890 [http-nio-8080-exec-5] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.leeannjakel.entity.Genre
[DEBUG] 2021-05-06 20:04:25.898 [http-nio-8080-exec-5] ClassLoaderAccessImpl - Not known whether passed class name [com.leeannjakel.entity.Role] is safe
[DEBUG] 2021-05-06 20:04:25.899 [http-nio-8080-exec-5] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.leeannjakel.entity.Role
[DEBUG] 2021-05-06 20:04:25.924 [http-nio-8080-exec-5] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2021-05-06 20:04:25.925 [http-nio-8080-exec-5] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2021-05-06 20:04:25.926 [http-nio-8080-exec-5] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@15a6b66c] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@3e630287]
[DEBUG] 2021-05-06 20:04:26.282 [http-nio-8080-exec-5] ClassLoaderAccessImpl - Not known whether passed class name [com.leeannjakel.entity.Book] is safe
[DEBUG] 2021-05-06 20:04:26.282 [http-nio-8080-exec-5] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.leeannjakel.entity.Book
[DEBUG] 2021-05-06 20:04:26.400 [http-nio-8080-exec-5] ClassLoaderAccessImpl - Not known whether passed class name [com.leeannjakel.entity.Book] is safe
[DEBUG] 2021-05-06 20:04:26.400 [http-nio-8080-exec-5] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.leeannjakel.entity.Book
[DEBUG] 2021-05-06 20:04:28.101 [http-nio-8080-exec-5] ClassLoaderAccessImpl - Not known whether passed class name [com.leeannjakel.entity.User] is safe
[DEBUG] 2021-05-06 20:04:28.102 [http-nio-8080-exec-5] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.leeannjakel.entity.User
[DEBUG] 2021-05-06 20:04:28.123 [http-nio-8080-exec-5] ClassLoaderAccessImpl - Not known whether passed class name [com.leeannjakel.entity.User] is safe
[DEBUG] 2021-05-06 20:04:28.124 [http-nio-8080-exec-5] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.leeannjakel.entity.User
[DEBUG] 2021-05-06 20:04:28.449 [http-nio-8080-exec-5] ClassLoaderAccessImpl - Not known whether passed class name [com.leeannjakel.entity.Author] is safe
[DEBUG] 2021-05-06 20:04:28.450 [http-nio-8080-exec-5] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.leeannjakel.entity.Author
[DEBUG] 2021-05-06 20:04:28.451 [http-nio-8080-exec-5] ClassLoaderAccessImpl - Not known whether passed class name [com.leeannjakel.entity.Author] is safe
[DEBUG] 2021-05-06 20:04:28.451 [http-nio-8080-exec-5] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.leeannjakel.entity.Author
[DEBUG] 2021-05-06 20:04:28.605 [http-nio-8080-exec-5] ClassLoaderAccessImpl - Not known whether passed class name [com.leeannjakel.entity.Genre] is safe
[DEBUG] 2021-05-06 20:04:28.606 [http-nio-8080-exec-5] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.leeannjakel.entity.Genre
[DEBUG] 2021-05-06 20:04:28.607 [http-nio-8080-exec-5] ClassLoaderAccessImpl - Not known whether passed class name [com.leeannjakel.entity.Genre] is safe
[DEBUG] 2021-05-06 20:04:28.607 [http-nio-8080-exec-5] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.leeannjakel.entity.Genre
[DEBUG] 2021-05-06 20:04:28.759 [http-nio-8080-exec-5] ClassLoaderAccessImpl - Not known whether passed class name [com.leeannjakel.entity.Role] is safe
[DEBUG] 2021-05-06 20:04:28.760 [http-nio-8080-exec-5] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.leeannjakel.entity.Role
[DEBUG] 2021-05-06 20:04:28.763 [http-nio-8080-exec-5] ClassLoaderAccessImpl - Not known whether passed class name [com.leeannjakel.entity.Role] is safe
[DEBUG] 2021-05-06 20:04:28.764 [http-nio-8080-exec-5] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.leeannjakel.entity.Role
[DEBUG] 2021-05-06 20:04:28.956 [http-nio-8080-exec-5] AbstractCollectionPersister - Static SQL for collection: com.leeannjakel.entity.Author.books
[DEBUG] 2021-05-06 20:04:28.957 [http-nio-8080-exec-5] AbstractCollectionPersister -  Row insert: update book set author_id=? where id=?
[DEBUG] 2021-05-06 20:04:28.957 [http-nio-8080-exec-5] AbstractCollectionPersister -  Row update: update book set  where id=?
[DEBUG] 2021-05-06 20:04:28.957 [http-nio-8080-exec-5] AbstractCollectionPersister -  Row delete: update book set author_id=null where author_id=? and id=?
[DEBUG] 2021-05-06 20:04:28.957 [http-nio-8080-exec-5] AbstractCollectionPersister -  One-shot delete: update book set author_id=null where author_id=?
[DEBUG] 2021-05-06 20:04:28.957 [http-nio-8080-exec-5] AbstractCollectionPersister - Static SQL for collection: com.leeannjakel.entity.User.books
[DEBUG] 2021-05-06 20:04:28.958 [http-nio-8080-exec-5] AbstractCollectionPersister -  Row insert: update book set user_id=? where id=?
[DEBUG] 2021-05-06 20:04:28.958 [http-nio-8080-exec-5] AbstractCollectionPersister -  Row update: update book set  where id=?
[DEBUG] 2021-05-06 20:04:28.958 [http-nio-8080-exec-5] AbstractCollectionPersister -  Row delete: update book set user_id=null where user_id=? and id=?
[DEBUG] 2021-05-06 20:04:28.958 [http-nio-8080-exec-5] AbstractCollectionPersister -  One-shot delete: update book set user_id=null where user_id=?
[DEBUG] 2021-05-06 20:04:28.959 [http-nio-8080-exec-5] AbstractCollectionPersister - Static SQL for collection: com.leeannjakel.entity.User.roles
[DEBUG] 2021-05-06 20:04:28.959 [http-nio-8080-exec-5] AbstractCollectionPersister -  Row insert: update role set user_id=? where id=?
[DEBUG] 2021-05-06 20:04:28.959 [http-nio-8080-exec-5] AbstractCollectionPersister -  Row update: update role set  where id=?
[DEBUG] 2021-05-06 20:04:28.959 [http-nio-8080-exec-5] AbstractCollectionPersister -  Row delete: update role set user_id=null where user_id=? and id=?
[DEBUG] 2021-05-06 20:04:28.959 [http-nio-8080-exec-5] AbstractCollectionPersister -  One-shot delete: update role set user_id=null where user_id=?
[DEBUG] 2021-05-06 20:04:28.968 [http-nio-8080-exec-5] AbstractCollectionPersister - Static SQL for collection: com.leeannjakel.entity.Genre.books
[DEBUG] 2021-05-06 20:04:28.968 [http-nio-8080-exec-5] AbstractCollectionPersister -  Row insert: update book set genre_id=? where id=?
[DEBUG] 2021-05-06 20:04:28.968 [http-nio-8080-exec-5] AbstractCollectionPersister -  Row update: update book set  where id=?
[DEBUG] 2021-05-06 20:04:28.969 [http-nio-8080-exec-5] AbstractCollectionPersister -  Row delete: update book set genre_id=null where genre_id=? and id=?
[DEBUG] 2021-05-06 20:04:28.969 [http-nio-8080-exec-5] AbstractCollectionPersister -  One-shot delete: update book set genre_id=null where genre_id=?
[DEBUG] 2021-05-06 20:04:28.990 [http-nio-8080-exec-5] AbstractEntityPersister - Static SQL for entity: com.leeannjakel.entity.Book
[DEBUG] 2021-05-06 20:04:28.990 [http-nio-8080-exec-5] AbstractEntityPersister -  Version select: select id from book where id =?
[DEBUG] 2021-05-06 20:04:28.990 [http-nio-8080-exec-5] AbstractEntityPersister -  Snapshot select: select book_.id, book_.author_id as author_i5_1_, book_.genre_id as genre_id6_1_, book_.isbn as isbn2_1_, book_.notes as notes3_1_, book_.title as title4_1_, book_.user_id as user_id7_1_ from book book_ where book_.id=?
[DEBUG] 2021-05-06 20:04:28.990 [http-nio-8080-exec-5] AbstractEntityPersister -  Insert 0: insert into book (author_id, genre_id, isbn, notes, title, user_id, id) values (?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2021-05-06 20:04:28.990 [http-nio-8080-exec-5] AbstractEntityPersister -  Update 0: update book set author_id=?, genre_id=?, isbn=?, notes=?, title=?, user_id=? where id=?
[DEBUG] 2021-05-06 20:04:28.990 [http-nio-8080-exec-5] AbstractEntityPersister -  Delete 0: delete from book where id=?
[DEBUG] 2021-05-06 20:04:28.990 [http-nio-8080-exec-5] AbstractEntityPersister -  Identity insert: insert into book (author_id, genre_id, isbn, notes, title, user_id) values (?, ?, ?, ?, ?, ?)
[DEBUG] 2021-05-06 20:04:29.304 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6588a8ef]
[DEBUG] 2021-05-06 20:04:29.331 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : author
[DEBUG] 2021-05-06 20:04:29.469 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@66cc87b8]
[DEBUG] 2021-05-06 20:04:29.505 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : author.books
[DEBUG] 2021-05-06 20:04:29.505 [http-nio-8080-exec-5] MetamodelGraphWalker - Property path deemed to be circular : author.books
[DEBUG] 2021-05-06 20:04:29.505 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : author.name
[DEBUG] 2021-05-06 20:04:29.505 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : genre
[DEBUG] 2021-05-06 20:04:29.507 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@77b0566e]
[DEBUG] 2021-05-06 20:04:29.508 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : genre.books
[DEBUG] 2021-05-06 20:04:29.508 [http-nio-8080-exec-5] MetamodelGraphWalker - Property path deemed to be circular : genre.books
[DEBUG] 2021-05-06 20:04:29.508 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : genre.name
[DEBUG] 2021-05-06 20:04:29.518 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : isbn
[DEBUG] 2021-05-06 20:04:29.518 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : notes
[DEBUG] 2021-05-06 20:04:29.518 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2021-05-06 20:04:29.518 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2021-05-06 20:04:29.519 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@58702fe2]
[DEBUG] 2021-05-06 20:04:29.520 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.books
[DEBUG] 2021-05-06 20:04:29.521 [http-nio-8080-exec-5] MetamodelGraphWalker - Property path deemed to be circular : user.books
[DEBUG] 2021-05-06 20:04:29.522 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2021-05-06 20:04:29.524 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2021-05-06 20:04:29.524 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2021-05-06 20:04:29.524 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2021-05-06 20:04:29.524 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2021-05-06 20:04:29.535 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@32cba894]
[DEBUG] 2021-05-06 20:04:29.567 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@211af8ec]
[DEBUG] 2021-05-06 20:04:29.569 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.roles.roleName
[DEBUG] 2021-05-06 20:04:29.569 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2021-05-06 20:04:29.570 [http-nio-8080-exec-5] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2021-05-06 20:04:29.588 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.roles.userName
[DEBUG] 2021-05-06 20:04:29.600 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.userName
[DEBUG] 2021-05-06 20:04:29.601 [http-nio-8080-exec-5] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-05-06 20:04:29.755 [http-nio-8080-exec-5] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-05-06 20:04:29.973 [http-nio-8080-exec-5] LoadPlanTreePrinter - LoadPlan(entity=com.leeannjakel.entity.Book)
    - Returns
       - EntityReturnImpl(entity=com.leeannjakel.entity.Book, querySpaceUid=<gen:0>, path=com.leeannjakel.entity.Book)
          - EntityAttributeFetchImpl(entity=com.leeannjakel.entity.Author, querySpaceUid=<gen:1>, path=com.leeannjakel.entity.Book.author)
          - EntityAttributeFetchImpl(entity=com.leeannjakel.entity.Genre, querySpaceUid=<gen:2>, path=com.leeannjakel.entity.Book.genre)
          - EntityAttributeFetchImpl(entity=com.leeannjakel.entity.User, querySpaceUid=<gen:3>, path=com.leeannjakel.entity.Book.user)
             - CollectionAttributeFetchImpl(collection=com.leeannjakel.entity.User.roles, querySpaceUid=<gen:4>, path=com.leeannjakel.entity.Book.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.leeannjakel.entity.Role, querySpaceUid=<gen:5>, path=com.leeannjakel.entity.Book.user.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.leeannjakel.entity.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(author)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.leeannjakel.entity.Author)
                - SQL table alias mapping - author1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}
          - JOIN (JoinDefinedByMetadata(genre)) : <gen:0> -> <gen:2>
             - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.leeannjakel.entity.Genre)
                - SQL table alias mapping - genre2_
                - alias suffix - 2_
                - suffixed key columns - {id1_2_2_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=com.leeannjakel.entity.User)
                - SQL table alias mapping - user3_
                - alias suffix - 3_
                - suffixed key columns - {id1_4_3_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:3> -> <gen:4>
                   - CollectionQuerySpaceImpl(uid=<gen:4>, collection=com.leeannjakel.entity.User.roles)
                      - SQL table alias mapping - roles4_
                      - alias suffix - 4_
                      - suffixed key columns - {user_id4_3_4_}
                      - entity-element alias suffix - 5_
                      - 5_entity-element suffixed key columns - id1_3_5_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:4> -> <gen:5>
                         - EntityQuerySpaceImpl(uid=<gen:5>, entity=com.leeannjakel.entity.Role)
                            - SQL table alias mapping - roles4_
                            - alias suffix - 5_
                            - suffixed key columns - {id1_3_5_}

[DEBUG] 2021-05-06 20:04:30.039 [http-nio-8080-exec-5] EntityLoader - Static select for entity com.leeannjakel.entity.Book [NONE]: select book0_.id as id1_1_0_, book0_.author_id as author_i5_1_0_, book0_.genre_id as genre_id6_1_0_, book0_.isbn as isbn2_1_0_, book0_.notes as notes3_1_0_, book0_.title as title4_1_0_, book0_.user_id as user_id7_1_0_, author1_.id as id1_0_1_, author1_.name as name2_0_1_, genre2_.id as id1_2_2_, genre2_.name as name2_2_2_, user3_.id as id1_4_3_, user3_.email as email2_4_3_, user3_.first_name as first_na3_4_3_, user3_.last_name as last_nam4_4_3_, user3_.password as password5_4_3_, user3_.user_name as user_nam6_4_3_, roles4_.user_id as user_id4_3_4_, roles4_.id as id1_3_4_, roles4_.id as id1_3_5_, roles4_.role_name as role_nam2_3_5_, roles4_.user_id as user_id4_3_5_, roles4_.user_name as user_nam3_3_5_ from book book0_ left outer join author author1_ on book0_.author_id=author1_.id left outer join genre genre2_ on book0_.genre_id=genre2_.id left outer join user user3_ on book0_.user_id=user3_.id left outer join role roles4_ on user3_.id=roles4_.user_id where book0_.id=?
[DEBUG] 2021-05-06 20:04:30.054 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@cd98954]
[DEBUG] 2021-05-06 20:04:30.058 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : author
[DEBUG] 2021-05-06 20:04:30.061 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@37f04d37]
[DEBUG] 2021-05-06 20:04:30.098 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : author.books
[DEBUG] 2021-05-06 20:04:30.101 [http-nio-8080-exec-5] MetamodelGraphWalker - Property path deemed to be circular : author.books
[DEBUG] 2021-05-06 20:04:30.101 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : author.name
[DEBUG] 2021-05-06 20:04:30.101 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : genre
[DEBUG] 2021-05-06 20:04:30.101 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2fd20316]
[DEBUG] 2021-05-06 20:04:30.110 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : genre.books
[DEBUG] 2021-05-06 20:04:30.111 [http-nio-8080-exec-5] MetamodelGraphWalker - Property path deemed to be circular : genre.books
[DEBUG] 2021-05-06 20:04:30.112 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : genre.name
[DEBUG] 2021-05-06 20:04:30.112 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : isbn
[DEBUG] 2021-05-06 20:04:30.112 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : notes
[DEBUG] 2021-05-06 20:04:30.112 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2021-05-06 20:04:30.112 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2021-05-06 20:04:30.113 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3915a616]
[DEBUG] 2021-05-06 20:04:30.113 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.books
[DEBUG] 2021-05-06 20:04:30.113 [http-nio-8080-exec-5] MetamodelGraphWalker - Property path deemed to be circular : user.books
[DEBUG] 2021-05-06 20:04:30.113 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2021-05-06 20:04:30.113 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2021-05-06 20:04:30.113 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2021-05-06 20:04:30.113 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2021-05-06 20:04:30.113 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2021-05-06 20:04:30.114 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@64271a1c]
[DEBUG] 2021-05-06 20:04:30.155 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2606a618]
[DEBUG] 2021-05-06 20:04:30.183 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.roles.roleName
[DEBUG] 2021-05-06 20:04:30.190 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2021-05-06 20:04:30.190 [http-nio-8080-exec-5] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2021-05-06 20:04:30.190 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.roles.userName
[DEBUG] 2021-05-06 20:04:30.191 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.userName
[DEBUG] 2021-05-06 20:04:30.191 [http-nio-8080-exec-5] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-05-06 20:04:30.203 [http-nio-8080-exec-5] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-05-06 20:04:30.250 [http-nio-8080-exec-5] LoadPlanTreePrinter - LoadPlan(entity=com.leeannjakel.entity.Book)
    - Returns
       - EntityReturnImpl(entity=com.leeannjakel.entity.Book, querySpaceUid=<gen:0>, path=com.leeannjakel.entity.Book)
          - EntityAttributeFetchImpl(entity=com.leeannjakel.entity.Author, querySpaceUid=<gen:1>, path=com.leeannjakel.entity.Book.author)
          - EntityAttributeFetchImpl(entity=com.leeannjakel.entity.Genre, querySpaceUid=<gen:2>, path=com.leeannjakel.entity.Book.genre)
          - EntityAttributeFetchImpl(entity=com.leeannjakel.entity.User, querySpaceUid=<gen:3>, path=com.leeannjakel.entity.Book.user)
             - CollectionAttributeFetchImpl(collection=com.leeannjakel.entity.User.roles, querySpaceUid=<gen:4>, path=com.leeannjakel.entity.Book.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.leeannjakel.entity.Role, querySpaceUid=<gen:5>, path=com.leeannjakel.entity.Book.user.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.leeannjakel.entity.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(author)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.leeannjakel.entity.Author)
                - SQL table alias mapping - author1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}
          - JOIN (JoinDefinedByMetadata(genre)) : <gen:0> -> <gen:2>
             - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.leeannjakel.entity.Genre)
                - SQL table alias mapping - genre2_
                - alias suffix - 2_
                - suffixed key columns - {id1_2_2_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=com.leeannjakel.entity.User)
                - SQL table alias mapping - user3_
                - alias suffix - 3_
                - suffixed key columns - {id1_4_3_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:3> -> <gen:4>
                   - CollectionQuerySpaceImpl(uid=<gen:4>, collection=com.leeannjakel.entity.User.roles)
                      - SQL table alias mapping - roles4_
                      - alias suffix - 4_
                      - suffixed key columns - {user_id4_3_4_}
                      - entity-element alias suffix - 5_
                      - 5_entity-element suffixed key columns - id1_3_5_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:4> -> <gen:5>
                         - EntityQuerySpaceImpl(uid=<gen:5>, entity=com.leeannjakel.entity.Role)
                            - SQL table alias mapping - roles4_
                            - alias suffix - 5_
                            - suffixed key columns - {id1_3_5_}

[DEBUG] 2021-05-06 20:04:30.272 [http-nio-8080-exec-5] EntityLoader - Static select for entity com.leeannjakel.entity.Book [READ]: select book0_.id as id1_1_0_, book0_.author_id as author_i5_1_0_, book0_.genre_id as genre_id6_1_0_, book0_.isbn as isbn2_1_0_, book0_.notes as notes3_1_0_, book0_.title as title4_1_0_, book0_.user_id as user_id7_1_0_, author1_.id as id1_0_1_, author1_.name as name2_0_1_, genre2_.id as id1_2_2_, genre2_.name as name2_2_2_, user3_.id as id1_4_3_, user3_.email as email2_4_3_, user3_.first_name as first_na3_4_3_, user3_.last_name as last_nam4_4_3_, user3_.password as password5_4_3_, user3_.user_name as user_nam6_4_3_, roles4_.user_id as user_id4_3_4_, roles4_.id as id1_3_4_, roles4_.id as id1_3_5_, roles4_.role_name as role_nam2_3_5_, roles4_.user_id as user_id4_3_5_, roles4_.user_name as user_nam3_3_5_ from book book0_ left outer join author author1_ on book0_.author_id=author1_.id left outer join genre genre2_ on book0_.genre_id=genre2_.id left outer join user user3_ on book0_.user_id=user3_.id left outer join role roles4_ on user3_.id=roles4_.user_id where book0_.id=?
[DEBUG] 2021-05-06 20:04:30.705 [http-nio-8080-exec-5] Loader - Static select for action ACTION_MERGE on entity com.leeannjakel.entity.Book: select book0_.id as id1_1_0_, book0_.author_id as author_i5_1_0_, book0_.genre_id as genre_id6_1_0_, book0_.isbn as isbn2_1_0_, book0_.notes as notes3_1_0_, book0_.title as title4_1_0_, book0_.user_id as user_id7_1_0_ from book book0_ where book0_.id=?
[DEBUG] 2021-05-06 20:04:30.734 [http-nio-8080-exec-5] Loader - Static select for action ACTION_REFRESH on entity com.leeannjakel.entity.Book: select book0_.id as id1_1_0_, book0_.author_id as author_i5_1_0_, book0_.genre_id as genre_id6_1_0_, book0_.isbn as isbn2_1_0_, book0_.notes as notes3_1_0_, book0_.title as title4_1_0_, book0_.user_id as user_id7_1_0_ from book book0_ where book0_.id=?
[DEBUG] 2021-05-06 20:04:30.741 [http-nio-8080-exec-5] AbstractEntityPersister - Static SQL for entity: com.leeannjakel.entity.User
[DEBUG] 2021-05-06 20:04:30.741 [http-nio-8080-exec-5] AbstractEntityPersister -  Version select: select id from user where id =?
[DEBUG] 2021-05-06 20:04:30.758 [http-nio-8080-exec-5] AbstractEntityPersister -  Snapshot select: select user_.id, user_.email as email2_4_, user_.first_name as first_na3_4_, user_.last_name as last_nam4_4_, user_.password as password5_4_, user_.user_name as user_nam6_4_ from user user_ where user_.id=?
[DEBUG] 2021-05-06 20:04:30.758 [http-nio-8080-exec-5] AbstractEntityPersister -  Insert 0: insert into user (email, first_name, last_name, password, user_name, id) values (?, ?, ?, ?, ?, ?)
[DEBUG] 2021-05-06 20:04:30.758 [http-nio-8080-exec-5] AbstractEntityPersister -  Update 0: update user set email=?, first_name=?, last_name=?, password=?, user_name=? where id=?
[DEBUG] 2021-05-06 20:04:30.763 [http-nio-8080-exec-5] AbstractEntityPersister -  Delete 0: delete from user where id=?
[DEBUG] 2021-05-06 20:04:30.763 [http-nio-8080-exec-5] AbstractEntityPersister -  Identity insert: insert into user (email, first_name, last_name, password, user_name) values (?, ?, ?, ?, ?)
[DEBUG] 2021-05-06 20:04:30.764 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6a96b4cc]
[DEBUG] 2021-05-06 20:04:30.764 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : books
[DEBUG] 2021-05-06 20:04:30.764 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@26f7bb05]
[DEBUG] 2021-05-06 20:04:30.773 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5c546ca3]
[DEBUG] 2021-05-06 20:04:30.805 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2021-05-06 20:04:30.806 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2021-05-06 20:04:30.806 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2021-05-06 20:04:30.813 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2021-05-06 20:04:30.818 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : roles
[DEBUG] 2021-05-06 20:04:30.824 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3bb8331]
[DEBUG] 2021-05-06 20:04:30.836 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@d30bdfe]
[DEBUG] 2021-05-06 20:04:30.837 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : roles.roleName
[DEBUG] 2021-05-06 20:04:30.837 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : roles.user
[DEBUG] 2021-05-06 20:04:30.837 [http-nio-8080-exec-5] MetamodelGraphWalker - Property path deemed to be circular : roles.user
[DEBUG] 2021-05-06 20:04:30.837 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : roles.userName
[DEBUG] 2021-05-06 20:04:30.838 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : userName
[DEBUG] 2021-05-06 20:04:30.838 [http-nio-8080-exec-5] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-05-06 20:04:30.848 [http-nio-8080-exec-5] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-05-06 20:04:30.849 [http-nio-8080-exec-5] LoadPlanTreePrinter - LoadPlan(entity=com.leeannjakel.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.leeannjakel.entity.User, querySpaceUid=<gen:0>, path=com.leeannjakel.entity.User)
          - CollectionAttributeFetchImpl(collection=com.leeannjakel.entity.User.books, querySpaceUid=<gen:1>, path=com.leeannjakel.entity.User.books)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.leeannjakel.entity.Book, querySpaceUid=<gen:2>, path=com.leeannjakel.entity.User.books.<elements>)
          - CollectionAttributeFetchImpl(collection=com.leeannjakel.entity.User.roles, querySpaceUid=<gen:3>, path=com.leeannjakel.entity.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.leeannjakel.entity.Role, querySpaceUid=<gen:4>, path=com.leeannjakel.entity.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.leeannjakel.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:3>
             - CollectionQuerySpaceImpl(uid=<gen:3>, collection=com.leeannjakel.entity.User.roles)
                - SQL table alias mapping - roles1_
                - alias suffix - 1_
                - suffixed key columns - {user_id4_3_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_3_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:3> -> <gen:4>
                   - EntityQuerySpaceImpl(uid=<gen:4>, entity=com.leeannjakel.entity.Role)
                      - SQL table alias mapping - roles1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_3_2_}

[DEBUG] 2021-05-06 20:04:30.850 [http-nio-8080-exec-5] EntityLoader - Static select for entity com.leeannjakel.entity.User [NONE]: select user0_.id as id1_4_0_, user0_.email as email2_4_0_, user0_.first_name as first_na3_4_0_, user0_.last_name as last_nam4_4_0_, user0_.password as password5_4_0_, user0_.user_name as user_nam6_4_0_, roles1_.user_id as user_id4_3_1_, roles1_.id as id1_3_1_, roles1_.id as id1_3_2_, roles1_.role_name as role_nam2_3_2_, roles1_.user_id as user_id4_3_2_, roles1_.user_name as user_nam3_3_2_ from user user0_ left outer join role roles1_ on user0_.id=roles1_.user_id where user0_.id=?
[DEBUG] 2021-05-06 20:04:30.850 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@36b7e3da]
[DEBUG] 2021-05-06 20:04:30.850 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : books
[DEBUG] 2021-05-06 20:04:30.850 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@85412dd]
[DEBUG] 2021-05-06 20:04:30.850 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@331be801]
[DEBUG] 2021-05-06 20:04:30.870 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2021-05-06 20:04:30.870 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2021-05-06 20:04:30.870 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2021-05-06 20:04:30.870 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2021-05-06 20:04:30.870 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : roles
[DEBUG] 2021-05-06 20:04:30.870 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3abb748b]
[DEBUG] 2021-05-06 20:04:30.871 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@75bb1fc]
[DEBUG] 2021-05-06 20:04:30.891 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : roles.roleName
[DEBUG] 2021-05-06 20:04:30.891 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : roles.user
[DEBUG] 2021-05-06 20:04:30.891 [http-nio-8080-exec-5] MetamodelGraphWalker - Property path deemed to be circular : roles.user
[DEBUG] 2021-05-06 20:04:30.892 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : roles.userName
[DEBUG] 2021-05-06 20:04:30.899 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : userName
[DEBUG] 2021-05-06 20:04:30.907 [http-nio-8080-exec-5] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-05-06 20:04:30.908 [http-nio-8080-exec-5] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-05-06 20:04:30.952 [http-nio-8080-exec-5] LoadPlanTreePrinter - LoadPlan(entity=com.leeannjakel.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.leeannjakel.entity.User, querySpaceUid=<gen:0>, path=com.leeannjakel.entity.User)
          - CollectionAttributeFetchImpl(collection=com.leeannjakel.entity.User.books, querySpaceUid=<gen:1>, path=com.leeannjakel.entity.User.books)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.leeannjakel.entity.Book, querySpaceUid=<gen:2>, path=com.leeannjakel.entity.User.books.<elements>)
          - CollectionAttributeFetchImpl(collection=com.leeannjakel.entity.User.roles, querySpaceUid=<gen:3>, path=com.leeannjakel.entity.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.leeannjakel.entity.Role, querySpaceUid=<gen:4>, path=com.leeannjakel.entity.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.leeannjakel.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:3>
             - CollectionQuerySpaceImpl(uid=<gen:3>, collection=com.leeannjakel.entity.User.roles)
                - SQL table alias mapping - roles1_
                - alias suffix - 1_
                - suffixed key columns - {user_id4_3_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_3_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:3> -> <gen:4>
                   - EntityQuerySpaceImpl(uid=<gen:4>, entity=com.leeannjakel.entity.Role)
                      - SQL table alias mapping - roles1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_3_2_}

[DEBUG] 2021-05-06 20:04:30.953 [http-nio-8080-exec-5] EntityLoader - Static select for entity com.leeannjakel.entity.User [READ]: select user0_.id as id1_4_0_, user0_.email as email2_4_0_, user0_.first_name as first_na3_4_0_, user0_.last_name as last_nam4_4_0_, user0_.password as password5_4_0_, user0_.user_name as user_nam6_4_0_, roles1_.user_id as user_id4_3_1_, roles1_.id as id1_3_1_, roles1_.id as id1_3_2_, roles1_.role_name as role_nam2_3_2_, roles1_.user_id as user_id4_3_2_, roles1_.user_name as user_nam3_3_2_ from user user0_ left outer join role roles1_ on user0_.id=roles1_.user_id where user0_.id=?
[DEBUG] 2021-05-06 20:04:30.990 [http-nio-8080-exec-5] Loader - Static select for action ACTION_MERGE on entity com.leeannjakel.entity.User: select user0_.id as id1_4_1_, user0_.email as email2_4_1_, user0_.first_name as first_na3_4_1_, user0_.last_name as last_nam4_4_1_, user0_.password as password5_4_1_, user0_.user_name as user_nam6_4_1_, books1_.user_id as user_id7_1_3_, books1_.id as id1_1_3_, books1_.id as id1_1_0_, books1_.author_id as author_i5_1_0_, books1_.genre_id as genre_id6_1_0_, books1_.isbn as isbn2_1_0_, books1_.notes as notes3_1_0_, books1_.title as title4_1_0_, books1_.user_id as user_id7_1_0_ from user user0_ left outer join book books1_ on user0_.id=books1_.user_id where user0_.id=?
[DEBUG] 2021-05-06 20:04:30.991 [http-nio-8080-exec-5] Loader - Static select for action ACTION_REFRESH on entity com.leeannjakel.entity.User: select user0_.id as id1_4_1_, user0_.email as email2_4_1_, user0_.first_name as first_na3_4_1_, user0_.last_name as last_nam4_4_1_, user0_.password as password5_4_1_, user0_.user_name as user_nam6_4_1_, books1_.user_id as user_id7_1_3_, books1_.id as id1_1_3_, books1_.id as id1_1_0_, books1_.author_id as author_i5_1_0_, books1_.genre_id as genre_id6_1_0_, books1_.isbn as isbn2_1_0_, books1_.notes as notes3_1_0_, books1_.title as title4_1_0_, books1_.user_id as user_id7_1_0_ from user user0_ left outer join book books1_ on user0_.id=books1_.user_id where user0_.id=?
[DEBUG] 2021-05-06 20:04:31.002 [http-nio-8080-exec-5] AbstractEntityPersister - Static SQL for entity: com.leeannjakel.entity.Author
[DEBUG] 2021-05-06 20:04:31.002 [http-nio-8080-exec-5] AbstractEntityPersister -  Version select: select id from author where id =?
[DEBUG] 2021-05-06 20:04:31.002 [http-nio-8080-exec-5] AbstractEntityPersister -  Snapshot select: select author_.id, author_.name as name2_0_ from author author_ where author_.id=?
[DEBUG] 2021-05-06 20:04:31.002 [http-nio-8080-exec-5] AbstractEntityPersister -  Insert 0: insert into author (name, id) values (?, ?)
[DEBUG] 2021-05-06 20:04:31.002 [http-nio-8080-exec-5] AbstractEntityPersister -  Update 0: update author set name=? where id=?
[DEBUG] 2021-05-06 20:04:31.005 [http-nio-8080-exec-5] AbstractEntityPersister -  Delete 0: delete from author where id=?
[DEBUG] 2021-05-06 20:04:31.005 [http-nio-8080-exec-5] AbstractEntityPersister -  Identity insert: insert into author (name) values (?)
[DEBUG] 2021-05-06 20:04:31.010 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@29e04878]
[DEBUG] 2021-05-06 20:04:31.016 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : books
[DEBUG] 2021-05-06 20:04:31.016 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7cf44d4]
[DEBUG] 2021-05-06 20:04:31.016 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@334f2b53]
[DEBUG] 2021-05-06 20:04:31.016 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2021-05-06 20:04:31.019 [http-nio-8080-exec-5] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-05-06 20:04:31.030 [http-nio-8080-exec-5] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-05-06 20:04:31.031 [http-nio-8080-exec-5] LoadPlanTreePrinter - LoadPlan(entity=com.leeannjakel.entity.Author)
    - Returns
       - EntityReturnImpl(entity=com.leeannjakel.entity.Author, querySpaceUid=<gen:0>, path=com.leeannjakel.entity.Author)
          - CollectionAttributeFetchImpl(collection=com.leeannjakel.entity.Author.books, querySpaceUid=<gen:1>, path=com.leeannjakel.entity.Author.books)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.leeannjakel.entity.Book, querySpaceUid=<gen:2>, path=com.leeannjakel.entity.Author.books.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.leeannjakel.entity.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[DEBUG] 2021-05-06 20:04:31.039 [http-nio-8080-exec-5] EntityLoader - Static select for entity com.leeannjakel.entity.Author [NONE]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_ from author author0_ where author0_.id=?
[DEBUG] 2021-05-06 20:04:31.045 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@184706ca]
[DEBUG] 2021-05-06 20:04:31.050 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : books
[DEBUG] 2021-05-06 20:04:31.051 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@401ee975]
[DEBUG] 2021-05-06 20:04:31.052 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a414796]
[DEBUG] 2021-05-06 20:04:31.052 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2021-05-06 20:04:31.052 [http-nio-8080-exec-5] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-05-06 20:04:31.053 [http-nio-8080-exec-5] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-05-06 20:04:31.053 [http-nio-8080-exec-5] LoadPlanTreePrinter - LoadPlan(entity=com.leeannjakel.entity.Author)
    - Returns
       - EntityReturnImpl(entity=com.leeannjakel.entity.Author, querySpaceUid=<gen:0>, path=com.leeannjakel.entity.Author)
          - CollectionAttributeFetchImpl(collection=com.leeannjakel.entity.Author.books, querySpaceUid=<gen:1>, path=com.leeannjakel.entity.Author.books)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.leeannjakel.entity.Book, querySpaceUid=<gen:2>, path=com.leeannjakel.entity.Author.books.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.leeannjakel.entity.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[DEBUG] 2021-05-06 20:04:31.053 [http-nio-8080-exec-5] EntityLoader - Static select for entity com.leeannjakel.entity.Author [READ]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_ from author author0_ where author0_.id=?
[DEBUG] 2021-05-06 20:04:31.090 [http-nio-8080-exec-5] Loader - Static select for action ACTION_MERGE on entity com.leeannjakel.entity.Author: select author0_.id as id1_0_1_, author0_.name as name2_0_1_, books1_.author_id as author_i5_1_3_, books1_.id as id1_1_3_, books1_.id as id1_1_0_, books1_.author_id as author_i5_1_0_, books1_.genre_id as genre_id6_1_0_, books1_.isbn as isbn2_1_0_, books1_.notes as notes3_1_0_, books1_.title as title4_1_0_, books1_.user_id as user_id7_1_0_ from author author0_ left outer join book books1_ on author0_.id=books1_.author_id where author0_.id=?
[DEBUG] 2021-05-06 20:04:31.097 [http-nio-8080-exec-5] Loader - Static select for action ACTION_REFRESH on entity com.leeannjakel.entity.Author: select author0_.id as id1_0_1_, author0_.name as name2_0_1_, books1_.author_id as author_i5_1_3_, books1_.id as id1_1_3_, books1_.id as id1_1_0_, books1_.author_id as author_i5_1_0_, books1_.genre_id as genre_id6_1_0_, books1_.isbn as isbn2_1_0_, books1_.notes as notes3_1_0_, books1_.title as title4_1_0_, books1_.user_id as user_id7_1_0_ from author author0_ left outer join book books1_ on author0_.id=books1_.author_id where author0_.id=?
[DEBUG] 2021-05-06 20:04:31.097 [http-nio-8080-exec-5] AbstractEntityPersister - Static SQL for entity: com.leeannjakel.entity.Genre
[DEBUG] 2021-05-06 20:04:31.097 [http-nio-8080-exec-5] AbstractEntityPersister -  Version select: select id from genre where id =?
[DEBUG] 2021-05-06 20:04:31.097 [http-nio-8080-exec-5] AbstractEntityPersister -  Snapshot select: select genre_.id, genre_.name as name2_2_ from genre genre_ where genre_.id=?
[DEBUG] 2021-05-06 20:04:31.097 [http-nio-8080-exec-5] AbstractEntityPersister -  Insert 0: insert into genre (name, id) values (?, ?)
[DEBUG] 2021-05-06 20:04:31.098 [http-nio-8080-exec-5] AbstractEntityPersister -  Update 0: update genre set name=? where id=?
[DEBUG] 2021-05-06 20:04:31.107 [http-nio-8080-exec-5] AbstractEntityPersister -  Delete 0: delete from genre where id=?
[DEBUG] 2021-05-06 20:04:31.107 [http-nio-8080-exec-5] AbstractEntityPersister -  Identity insert: insert into genre (name) values (?)
[DEBUG] 2021-05-06 20:04:31.107 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2a906142]
[DEBUG] 2021-05-06 20:04:31.108 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : books
[DEBUG] 2021-05-06 20:04:31.108 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@770d2e0e]
[DEBUG] 2021-05-06 20:04:31.118 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7770ba8e]
[DEBUG] 2021-05-06 20:04:31.118 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2021-05-06 20:04:31.122 [http-nio-8080-exec-5] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-05-06 20:04:31.123 [http-nio-8080-exec-5] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-05-06 20:04:31.140 [http-nio-8080-exec-5] LoadPlanTreePrinter - LoadPlan(entity=com.leeannjakel.entity.Genre)
    - Returns
       - EntityReturnImpl(entity=com.leeannjakel.entity.Genre, querySpaceUid=<gen:0>, path=com.leeannjakel.entity.Genre)
          - CollectionAttributeFetchImpl(collection=com.leeannjakel.entity.Genre.books, querySpaceUid=<gen:1>, path=com.leeannjakel.entity.Genre.books)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.leeannjakel.entity.Book, querySpaceUid=<gen:2>, path=com.leeannjakel.entity.Genre.books.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.leeannjakel.entity.Genre)
          - SQL table alias mapping - genre0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

[DEBUG] 2021-05-06 20:04:31.153 [http-nio-8080-exec-5] EntityLoader - Static select for entity com.leeannjakel.entity.Genre [NONE]: select genre0_.id as id1_2_0_, genre0_.name as name2_2_0_ from genre genre0_ where genre0_.id=?
[DEBUG] 2021-05-06 20:04:31.163 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5ec34f53]
[DEBUG] 2021-05-06 20:04:31.163 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : books
[DEBUG] 2021-05-06 20:04:31.163 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@79671f06]
[DEBUG] 2021-05-06 20:04:31.163 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@bb17e6e]
[DEBUG] 2021-05-06 20:04:31.168 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2021-05-06 20:04:31.172 [http-nio-8080-exec-5] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-05-06 20:04:31.172 [http-nio-8080-exec-5] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-05-06 20:04:31.184 [http-nio-8080-exec-5] LoadPlanTreePrinter - LoadPlan(entity=com.leeannjakel.entity.Genre)
    - Returns
       - EntityReturnImpl(entity=com.leeannjakel.entity.Genre, querySpaceUid=<gen:0>, path=com.leeannjakel.entity.Genre)
          - CollectionAttributeFetchImpl(collection=com.leeannjakel.entity.Genre.books, querySpaceUid=<gen:1>, path=com.leeannjakel.entity.Genre.books)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.leeannjakel.entity.Book, querySpaceUid=<gen:2>, path=com.leeannjakel.entity.Genre.books.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.leeannjakel.entity.Genre)
          - SQL table alias mapping - genre0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

[DEBUG] 2021-05-06 20:04:31.184 [http-nio-8080-exec-5] EntityLoader - Static select for entity com.leeannjakel.entity.Genre [READ]: select genre0_.id as id1_2_0_, genre0_.name as name2_2_0_ from genre genre0_ where genre0_.id=?
[DEBUG] 2021-05-06 20:04:31.188 [http-nio-8080-exec-5] Loader - Static select for action ACTION_MERGE on entity com.leeannjakel.entity.Genre: select genre0_.id as id1_2_1_, genre0_.name as name2_2_1_, books1_.genre_id as genre_id6_1_3_, books1_.id as id1_1_3_, books1_.id as id1_1_0_, books1_.author_id as author_i5_1_0_, books1_.genre_id as genre_id6_1_0_, books1_.isbn as isbn2_1_0_, books1_.notes as notes3_1_0_, books1_.title as title4_1_0_, books1_.user_id as user_id7_1_0_ from genre genre0_ left outer join book books1_ on genre0_.id=books1_.genre_id where genre0_.id=?
[DEBUG] 2021-05-06 20:04:31.188 [http-nio-8080-exec-5] Loader - Static select for action ACTION_REFRESH on entity com.leeannjakel.entity.Genre: select genre0_.id as id1_2_1_, genre0_.name as name2_2_1_, books1_.genre_id as genre_id6_1_3_, books1_.id as id1_1_3_, books1_.id as id1_1_0_, books1_.author_id as author_i5_1_0_, books1_.genre_id as genre_id6_1_0_, books1_.isbn as isbn2_1_0_, books1_.notes as notes3_1_0_, books1_.title as title4_1_0_, books1_.user_id as user_id7_1_0_ from genre genre0_ left outer join book books1_ on genre0_.id=books1_.genre_id where genre0_.id=?
[DEBUG] 2021-05-06 20:04:31.205 [http-nio-8080-exec-5] AbstractEntityPersister - Static SQL for entity: com.leeannjakel.entity.Role
[DEBUG] 2021-05-06 20:04:31.217 [http-nio-8080-exec-5] AbstractEntityPersister -  Version select: select id from role where id =?
[DEBUG] 2021-05-06 20:04:31.218 [http-nio-8080-exec-5] AbstractEntityPersister -  Snapshot select: select role_.id, role_.role_name as role_nam2_3_, role_.user_id as user_id4_3_, role_.user_name as user_nam3_3_ from role role_ where role_.id=?
[DEBUG] 2021-05-06 20:04:31.218 [http-nio-8080-exec-5] AbstractEntityPersister -  Insert 0: insert into role (role_name, user_id, user_name, id) values (?, ?, ?, ?)
[DEBUG] 2021-05-06 20:04:31.218 [http-nio-8080-exec-5] AbstractEntityPersister -  Update 0: update role set role_name=?, user_id=?, user_name=? where id=?
[DEBUG] 2021-05-06 20:04:31.219 [http-nio-8080-exec-5] AbstractEntityPersister -  Delete 0: delete from role where id=?
[DEBUG] 2021-05-06 20:04:31.219 [http-nio-8080-exec-5] AbstractEntityPersister -  Identity insert: insert into role (role_name, user_id, user_name) values (?, ?, ?)
[DEBUG] 2021-05-06 20:04:31.219 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4fcc119c]
[DEBUG] 2021-05-06 20:04:31.219 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : roleName
[DEBUG] 2021-05-06 20:04:31.219 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2021-05-06 20:04:31.219 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@485528cb]
[DEBUG] 2021-05-06 20:04:31.219 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.books
[DEBUG] 2021-05-06 20:04:31.219 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6778c5de]
[DEBUG] 2021-05-06 20:04:31.219 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@32688de3]
[DEBUG] 2021-05-06 20:04:31.220 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2021-05-06 20:04:31.220 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2021-05-06 20:04:31.220 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2021-05-06 20:04:31.220 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2021-05-06 20:04:31.220 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2021-05-06 20:04:31.220 [http-nio-8080-exec-5] MetamodelGraphWalker - Property path deemed to be circular : user.roles
[DEBUG] 2021-05-06 20:04:31.220 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.userName
[DEBUG] 2021-05-06 20:04:31.220 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : userName
[DEBUG] 2021-05-06 20:04:31.220 [http-nio-8080-exec-5] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-05-06 20:04:31.230 [http-nio-8080-exec-5] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-05-06 20:04:31.234 [http-nio-8080-exec-5] LoadPlanTreePrinter - LoadPlan(entity=com.leeannjakel.entity.Role)
    - Returns
       - EntityReturnImpl(entity=com.leeannjakel.entity.Role, querySpaceUid=<gen:0>, path=com.leeannjakel.entity.Role)
          - EntityAttributeFetchImpl(entity=com.leeannjakel.entity.User, querySpaceUid=<gen:1>, path=com.leeannjakel.entity.Role.user)
             - CollectionAttributeFetchImpl(collection=com.leeannjakel.entity.User.books, querySpaceUid=<gen:2>, path=com.leeannjakel.entity.Role.user.books)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.leeannjakel.entity.Book, querySpaceUid=<gen:3>, path=com.leeannjakel.entity.Role.user.books.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.leeannjakel.entity.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.leeannjakel.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_4_1_}

[DEBUG] 2021-05-06 20:04:31.234 [http-nio-8080-exec-5] EntityLoader - Static select for entity com.leeannjakel.entity.Role [NONE]: select role0_.id as id1_3_0_, role0_.role_name as role_nam2_3_0_, role0_.user_id as user_id4_3_0_, role0_.user_name as user_nam3_3_0_, user1_.id as id1_4_1_, user1_.email as email2_4_1_, user1_.first_name as first_na3_4_1_, user1_.last_name as last_nam4_4_1_, user1_.password as password5_4_1_, user1_.user_name as user_nam6_4_1_ from role role0_ left outer join user user1_ on role0_.user_id=user1_.id where role0_.id=?
[DEBUG] 2021-05-06 20:04:31.234 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@539ae815]
[DEBUG] 2021-05-06 20:04:31.235 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : roleName
[DEBUG] 2021-05-06 20:04:31.235 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2021-05-06 20:04:31.235 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1e41a4b]
[DEBUG] 2021-05-06 20:04:31.235 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.books
[DEBUG] 2021-05-06 20:04:31.235 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@734b1ca6]
[DEBUG] 2021-05-06 20:04:31.235 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@480e1110]
[DEBUG] 2021-05-06 20:04:31.235 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2021-05-06 20:04:31.235 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2021-05-06 20:04:31.235 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2021-05-06 20:04:31.236 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2021-05-06 20:04:31.236 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2021-05-06 20:04:31.243 [http-nio-8080-exec-5] MetamodelGraphWalker - Property path deemed to be circular : user.roles
[DEBUG] 2021-05-06 20:04:31.244 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.userName
[DEBUG] 2021-05-06 20:04:31.244 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : userName
[DEBUG] 2021-05-06 20:04:31.244 [http-nio-8080-exec-5] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-05-06 20:04:31.244 [http-nio-8080-exec-5] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-05-06 20:04:31.248 [http-nio-8080-exec-5] LoadPlanTreePrinter - LoadPlan(entity=com.leeannjakel.entity.Role)
    - Returns
       - EntityReturnImpl(entity=com.leeannjakel.entity.Role, querySpaceUid=<gen:0>, path=com.leeannjakel.entity.Role)
          - EntityAttributeFetchImpl(entity=com.leeannjakel.entity.User, querySpaceUid=<gen:1>, path=com.leeannjakel.entity.Role.user)
             - CollectionAttributeFetchImpl(collection=com.leeannjakel.entity.User.books, querySpaceUid=<gen:2>, path=com.leeannjakel.entity.Role.user.books)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.leeannjakel.entity.Book, querySpaceUid=<gen:3>, path=com.leeannjakel.entity.Role.user.books.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.leeannjakel.entity.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.leeannjakel.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_4_1_}

[DEBUG] 2021-05-06 20:04:31.248 [http-nio-8080-exec-5] EntityLoader - Static select for entity com.leeannjakel.entity.Role [READ]: select role0_.id as id1_3_0_, role0_.role_name as role_nam2_3_0_, role0_.user_id as user_id4_3_0_, role0_.user_name as user_nam3_3_0_, user1_.id as id1_4_1_, user1_.email as email2_4_1_, user1_.first_name as first_na3_4_1_, user1_.last_name as last_nam4_4_1_, user1_.password as password5_4_1_, user1_.user_name as user_nam6_4_1_ from role role0_ left outer join user user1_ on role0_.user_id=user1_.id where role0_.id=?
[DEBUG] 2021-05-06 20:04:31.266 [http-nio-8080-exec-5] Loader - Static select for action ACTION_MERGE on entity com.leeannjakel.entity.Role: select role0_.id as id1_3_0_, role0_.role_name as role_nam2_3_0_, role0_.user_id as user_id4_3_0_, role0_.user_name as user_nam3_3_0_ from role role0_ where role0_.id=?
[DEBUG] 2021-05-06 20:04:31.269 [http-nio-8080-exec-5] Loader - Static select for action ACTION_REFRESH on entity com.leeannjakel.entity.Role: select role0_.id as id1_3_0_, role0_.role_name as role_nam2_3_0_, role0_.user_id as user_id4_3_0_, role0_.user_name as user_nam3_3_0_ from role role0_ where role0_.id=?
[DEBUG] 2021-05-06 20:04:31.362 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3a6ce556]
[DEBUG] 2021-05-06 20:04:31.363 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@65f66e60]
[DEBUG] 2021-05-06 20:04:31.363 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : author
[DEBUG] 2021-05-06 20:04:31.363 [http-nio-8080-exec-5] MetamodelGraphWalker - Property path deemed to be circular : author
[DEBUG] 2021-05-06 20:04:31.363 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : genre
[DEBUG] 2021-05-06 20:04:31.374 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@e69641a]
[DEBUG] 2021-05-06 20:04:31.377 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : genre.books
[DEBUG] 2021-05-06 20:04:31.377 [http-nio-8080-exec-5] MetamodelGraphWalker - Property path deemed to be circular : genre.books
[DEBUG] 2021-05-06 20:04:31.377 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : genre.name
[DEBUG] 2021-05-06 20:04:31.388 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : isbn
[DEBUG] 2021-05-06 20:04:31.389 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : notes
[DEBUG] 2021-05-06 20:04:31.389 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2021-05-06 20:04:31.389 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2021-05-06 20:04:31.391 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3ec311fa]
[DEBUG] 2021-05-06 20:04:31.392 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.books
[DEBUG] 2021-05-06 20:04:31.392 [http-nio-8080-exec-5] MetamodelGraphWalker - Property path deemed to be circular : user.books
[DEBUG] 2021-05-06 20:04:31.396 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2021-05-06 20:04:31.396 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2021-05-06 20:04:31.397 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2021-05-06 20:04:31.397 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2021-05-06 20:04:31.397 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2021-05-06 20:04:31.397 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3b96a86d]
[DEBUG] 2021-05-06 20:04:31.397 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@37d6a590]
[DEBUG] 2021-05-06 20:04:31.403 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.userName
[DEBUG] 2021-05-06 20:04:31.408 [http-nio-8080-exec-5] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-05-06 20:04:31.446 [http-nio-8080-exec-5] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-05-06 20:04:31.457 [http-nio-8080-exec-5] LoadPlanTreePrinter - LoadPlan(collection=com.leeannjakel.entity.Author.books)
    - Returns
       - CollectionReturnImpl(collection=com.leeannjakel.entity.Author.books, querySpaceUid=<gen:0>, path=[com.leeannjakel.entity.Author.books])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.leeannjakel.entity.Book, querySpaceUid=<gen:1>, path=[com.leeannjakel.entity.Author.books].<elements>)
             - EntityAttributeFetchImpl(entity=com.leeannjakel.entity.Genre, querySpaceUid=<gen:2>, path=[com.leeannjakel.entity.Author.books].<elements>.genre)
             - EntityAttributeFetchImpl(entity=com.leeannjakel.entity.User, querySpaceUid=<gen:3>, path=[com.leeannjakel.entity.Author.books].<elements>.user)
                - CollectionAttributeFetchImpl(collection=com.leeannjakel.entity.User.roles, querySpaceUid=<gen:4>, path=[com.leeannjakel.entity.Author.books].<elements>.user.roles)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.leeannjakel.entity.Role, querySpaceUid=<gen:5>, path=[com.leeannjakel.entity.Author.books].<elements>.user.roles.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.leeannjakel.entity.Author.books)
          - SQL table alias mapping - books0_
          - alias suffix - 0_
          - suffixed key columns - {author_i5_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.leeannjakel.entity.Book)
                - SQL table alias mapping - books0_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}
                - JOIN (JoinDefinedByMetadata(genre)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.leeannjakel.entity.Genre)
                      - SQL table alias mapping - genre1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_2_2_}
                - JOIN (JoinDefinedByMetadata(user)) : <gen:1> -> <gen:3>
                   - EntityQuerySpaceImpl(uid=<gen:3>, entity=com.leeannjakel.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 3_
                      - suffixed key columns - {id1_4_3_}

[DEBUG] 2021-05-06 20:04:31.481 [http-nio-8080-exec-5] CollectionLoader - Static select for collection com.leeannjakel.entity.Author.books: select books0_.author_id as author_i5_1_0_, books0_.id as id1_1_0_, books0_.id as id1_1_1_, books0_.author_id as author_i5_1_1_, books0_.genre_id as genre_id6_1_1_, books0_.isbn as isbn2_1_1_, books0_.notes as notes3_1_1_, books0_.title as title4_1_1_, books0_.user_id as user_id7_1_1_, genre1_.id as id1_2_2_, genre1_.name as name2_2_2_, user2_.id as id1_4_3_, user2_.email as email2_4_3_, user2_.first_name as first_na3_4_3_, user2_.last_name as last_nam4_4_3_, user2_.password as password5_4_3_, user2_.user_name as user_nam6_4_3_ from book books0_ left outer join genre genre1_ on books0_.genre_id=genre1_.id left outer join user user2_ on books0_.user_id=user2_.id where books0_.author_id=?
[DEBUG] 2021-05-06 20:04:31.481 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4e8fe501]
[DEBUG] 2021-05-06 20:04:31.481 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@313fdfc5]
[DEBUG] 2021-05-06 20:04:31.482 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : author
[DEBUG] 2021-05-06 20:04:31.487 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4bdfb248]
[DEBUG] 2021-05-06 20:04:31.515 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : author.books
[DEBUG] 2021-05-06 20:04:31.528 [http-nio-8080-exec-5] MetamodelGraphWalker - Property path deemed to be circular : author.books
[DEBUG] 2021-05-06 20:04:31.533 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : author.name
[DEBUG] 2021-05-06 20:04:31.540 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : genre
[DEBUG] 2021-05-06 20:04:31.569 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6e5ce4b9]
[DEBUG] 2021-05-06 20:04:31.572 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : genre.books
[DEBUG] 2021-05-06 20:04:31.573 [http-nio-8080-exec-5] MetamodelGraphWalker - Property path deemed to be circular : genre.books
[DEBUG] 2021-05-06 20:04:31.573 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : genre.name
[DEBUG] 2021-05-06 20:04:31.584 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : isbn
[DEBUG] 2021-05-06 20:04:31.584 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : notes
[DEBUG] 2021-05-06 20:04:31.584 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2021-05-06 20:04:31.584 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2021-05-06 20:04:31.584 [http-nio-8080-exec-5] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2021-05-06 20:04:31.585 [http-nio-8080-exec-5] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-05-06 20:04:31.612 [http-nio-8080-exec-5] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-05-06 20:04:31.630 [http-nio-8080-exec-5] LoadPlanTreePrinter - LoadPlan(collection=com.leeannjakel.entity.User.books)
    - Returns
       - CollectionReturnImpl(collection=com.leeannjakel.entity.User.books, querySpaceUid=<gen:0>, path=[com.leeannjakel.entity.User.books])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.leeannjakel.entity.Book, querySpaceUid=<gen:1>, path=[com.leeannjakel.entity.User.books].<elements>)
             - EntityAttributeFetchImpl(entity=com.leeannjakel.entity.Author, querySpaceUid=<gen:2>, path=[com.leeannjakel.entity.User.books].<elements>.author)
             - EntityAttributeFetchImpl(entity=com.leeannjakel.entity.Genre, querySpaceUid=<gen:3>, path=[com.leeannjakel.entity.User.books].<elements>.genre)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.leeannjakel.entity.User.books)
          - SQL table alias mapping - books0_
          - alias suffix - 0_
          - suffixed key columns - {user_id7_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.leeannjakel.entity.Book)
                - SQL table alias mapping - books0_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}
                - JOIN (JoinDefinedByMetadata(author)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.leeannjakel.entity.Author)
                      - SQL table alias mapping - author1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}
                - JOIN (JoinDefinedByMetadata(genre)) : <gen:1> -> <gen:3>
                   - EntityQuerySpaceImpl(uid=<gen:3>, entity=com.leeannjakel.entity.Genre)
                      - SQL table alias mapping - genre2_
                      - alias suffix - 3_
                      - suffixed key columns - {id1_2_3_}

[DEBUG] 2021-05-06 20:04:31.642 [http-nio-8080-exec-5] CollectionLoader - Static select for collection com.leeannjakel.entity.User.books: select books0_.user_id as user_id7_1_0_, books0_.id as id1_1_0_, books0_.id as id1_1_1_, books0_.author_id as author_i5_1_1_, books0_.genre_id as genre_id6_1_1_, books0_.isbn as isbn2_1_1_, books0_.notes as notes3_1_1_, books0_.title as title4_1_1_, books0_.user_id as user_id7_1_1_, author1_.id as id1_0_2_, author1_.name as name2_0_2_, genre2_.id as id1_2_3_, genre2_.name as name2_2_3_ from book books0_ left outer join author author1_ on books0_.author_id=author1_.id left outer join genre genre2_ on books0_.genre_id=genre2_.id where books0_.user_id=?
[DEBUG] 2021-05-06 20:04:31.642 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6de4b459]
[DEBUG] 2021-05-06 20:04:31.643 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@65559561]
[DEBUG] 2021-05-06 20:04:31.679 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : roleName
[DEBUG] 2021-05-06 20:04:31.679 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2021-05-06 20:04:31.679 [http-nio-8080-exec-5] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2021-05-06 20:04:31.680 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : userName
[DEBUG] 2021-05-06 20:04:31.680 [http-nio-8080-exec-5] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-05-06 20:04:31.694 [http-nio-8080-exec-5] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-05-06 20:04:31.733 [http-nio-8080-exec-5] LoadPlanTreePrinter - LoadPlan(collection=com.leeannjakel.entity.User.roles)
    - Returns
       - CollectionReturnImpl(collection=com.leeannjakel.entity.User.roles, querySpaceUid=<gen:0>, path=[com.leeannjakel.entity.User.roles])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.leeannjakel.entity.Role, querySpaceUid=<gen:1>, path=[com.leeannjakel.entity.User.roles].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.leeannjakel.entity.User.roles)
          - SQL table alias mapping - roles0_
          - alias suffix - 0_
          - suffixed key columns - {user_id4_3_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_3_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.leeannjakel.entity.Role)
                - SQL table alias mapping - roles0_
                - alias suffix - 1_
                - suffixed key columns - {id1_3_1_}

[DEBUG] 2021-05-06 20:04:31.733 [http-nio-8080-exec-5] CollectionLoader - Static select for collection com.leeannjakel.entity.User.roles: select roles0_.user_id as user_id4_3_0_, roles0_.id as id1_3_0_, roles0_.id as id1_3_1_, roles0_.role_name as role_nam2_3_1_, roles0_.user_id as user_id4_3_1_, roles0_.user_name as user_nam3_3_1_ from role roles0_ where roles0_.user_id=?
[DEBUG] 2021-05-06 20:04:31.733 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@713e98c]
[DEBUG] 2021-05-06 20:04:31.733 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4ea49a92]
[DEBUG] 2021-05-06 20:04:31.734 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : author
[DEBUG] 2021-05-06 20:04:31.745 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3508ef5c]
[DEBUG] 2021-05-06 20:04:31.761 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : author.books
[DEBUG] 2021-05-06 20:04:31.761 [http-nio-8080-exec-5] MetamodelGraphWalker - Property path deemed to be circular : author.books
[DEBUG] 2021-05-06 20:04:31.762 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : author.name
[DEBUG] 2021-05-06 20:04:31.762 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : genre
[DEBUG] 2021-05-06 20:04:31.762 [http-nio-8080-exec-5] MetamodelGraphWalker - Property path deemed to be circular : genre
[DEBUG] 2021-05-06 20:04:31.786 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : isbn
[DEBUG] 2021-05-06 20:04:31.786 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : notes
[DEBUG] 2021-05-06 20:04:31.787 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2021-05-06 20:04:31.787 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2021-05-06 20:04:31.787 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5875a06b]
[DEBUG] 2021-05-06 20:04:31.803 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.books
[DEBUG] 2021-05-06 20:04:31.812 [http-nio-8080-exec-5] MetamodelGraphWalker - Property path deemed to be circular : user.books
[DEBUG] 2021-05-06 20:04:31.812 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2021-05-06 20:04:31.812 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2021-05-06 20:04:31.812 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2021-05-06 20:04:31.812 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2021-05-06 20:04:31.812 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2021-05-06 20:04:31.812 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7e0943fb]
[DEBUG] 2021-05-06 20:04:31.812 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@354b6ef4]
[DEBUG] 2021-05-06 20:04:31.812 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.userName
[DEBUG] 2021-05-06 20:04:31.813 [http-nio-8080-exec-5] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-05-06 20:04:31.813 [http-nio-8080-exec-5] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-05-06 20:04:31.844 [http-nio-8080-exec-5] LoadPlanTreePrinter - LoadPlan(collection=com.leeannjakel.entity.Genre.books)
    - Returns
       - CollectionReturnImpl(collection=com.leeannjakel.entity.Genre.books, querySpaceUid=<gen:0>, path=[com.leeannjakel.entity.Genre.books])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.leeannjakel.entity.Book, querySpaceUid=<gen:1>, path=[com.leeannjakel.entity.Genre.books].<elements>)
             - EntityAttributeFetchImpl(entity=com.leeannjakel.entity.Author, querySpaceUid=<gen:2>, path=[com.leeannjakel.entity.Genre.books].<elements>.author)
             - EntityAttributeFetchImpl(entity=com.leeannjakel.entity.User, querySpaceUid=<gen:3>, path=[com.leeannjakel.entity.Genre.books].<elements>.user)
                - CollectionAttributeFetchImpl(collection=com.leeannjakel.entity.User.roles, querySpaceUid=<gen:4>, path=[com.leeannjakel.entity.Genre.books].<elements>.user.roles)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.leeannjakel.entity.Role, querySpaceUid=<gen:5>, path=[com.leeannjakel.entity.Genre.books].<elements>.user.roles.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.leeannjakel.entity.Genre.books)
          - SQL table alias mapping - books0_
          - alias suffix - 0_
          - suffixed key columns - {genre_id6_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.leeannjakel.entity.Book)
                - SQL table alias mapping - books0_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}
                - JOIN (JoinDefinedByMetadata(author)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.leeannjakel.entity.Author)
                      - SQL table alias mapping - author1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}
                - JOIN (JoinDefinedByMetadata(user)) : <gen:1> -> <gen:3>
                   - EntityQuerySpaceImpl(uid=<gen:3>, entity=com.leeannjakel.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 3_
                      - suffixed key columns - {id1_4_3_}

[DEBUG] 2021-05-06 20:04:31.845 [http-nio-8080-exec-5] CollectionLoader - Static select for collection com.leeannjakel.entity.Genre.books: select books0_.genre_id as genre_id6_1_0_, books0_.id as id1_1_0_, books0_.id as id1_1_1_, books0_.author_id as author_i5_1_1_, books0_.genre_id as genre_id6_1_1_, books0_.isbn as isbn2_1_1_, books0_.notes as notes3_1_1_, books0_.title as title4_1_1_, books0_.user_id as user_id7_1_1_, author1_.id as id1_0_2_, author1_.name as name2_0_2_, user2_.id as id1_4_3_, user2_.email as email2_4_3_, user2_.first_name as first_na3_4_3_, user2_.last_name as last_nam4_4_3_, user2_.password as password5_4_3_, user2_.user_name as user_nam6_4_3_ from book books0_ left outer join author author1_ on books0_.author_id=author1_.id left outer join user user2_ on books0_.user_id=user2_.id where books0_.genre_id=?
[DEBUG] 2021-05-06 20:04:32.752 [http-nio-8080-exec-5] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2021-05-06 20:04:32.770 [http-nio-8080-exec-5] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2021-05-06 20:04:32.780 [http-nio-8080-exec-5] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2021-05-06 20:04:33.264 [http-nio-8080-exec-5] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2021-05-06 20:04:33.283 [http-nio-8080-exec-5] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2021-05-06 20:04:33.291 [http-nio-8080-exec-5] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2021-05-06 20:04:33.292 [http-nio-8080-exec-5] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2021-05-06 20:04:33.390 [http-nio-8080-exec-5] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@182078cb
[DEBUG] 2021-05-06 20:04:33.448 [http-nio-8080-exec-5] SessionFactoryRegistry - Registering SessionFactory: 23c10b05-25e2-4de6-a266-1a6cea0d364f (<unnamed>)
[DEBUG] 2021-05-06 20:04:33.472 [http-nio-8080-exec-5] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2021-05-06 20:04:34.864 [http-nio-8080-exec-5] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2021-05-06 20:04:35.573 [http-nio-8080-exec-5] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from User as generatedAlias0 where generatedAlias0.userName=:param0
[DEBUG] 2021-05-06 20:04:35.661 [http-nio-8080-exec-5] QueryTranslatorFactoryInitiator - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@582830aa
[DEBUG] 2021-05-06 20:04:35.907 [http-nio-8080-exec-5] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from com.leeannjakel.entity.User as generatedAlias0 where generatedAlias0.userName=:param0
[DEBUG] 2021-05-06 20:04:35.955 [http-nio-8080-exec-5] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2021-05-06 20:04:36.037 [http-nio-8080-exec-5] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  \-[IDENT] Node: 'leeannjakel'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'User'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'userName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

[DEBUG] 2021-05-06 20:04:36.142 [http-nio-8080-exec-5] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2021-05-06 20:04:36.194 [http-nio-8080-exec-5] FromElement - FromClause{level=1} : com.leeannjakel.entity.User (generatedAlias0) -> user0_
[DEBUG] 2021-05-06 20:04:36.198 [http-nio-8080-exec-5] FromReferenceNode - Resolved : generatedAlias0 -> user0_.id
[DEBUG] 2021-05-06 20:04:36.211 [http-nio-8080-exec-5] FromReferenceNode - Resolved : generatedAlias0 -> user0_.id
[DEBUG] 2021-05-06 20:04:36.213 [http-nio-8080-exec-5] DotNode - getDataType() : userName -> org.hibernate.type.StringType@37a5b2a0
[DEBUG] 2021-05-06 20:04:36.219 [http-nio-8080-exec-5] FromReferenceNode - Resolved : generatedAlias0.userName -> user0_.user_name
[DEBUG] 2021-05-06 20:04:36.243 [http-nio-8080-exec-5] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2021-05-06 20:04:36.243 [http-nio-8080-exec-5] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} user0_.id ) ( FromClause{level=1} user user0_ ) ( where ( = ( user0_.user_name user0_.id userName ) ? ) ) )
[DEBUG] 2021-05-06 20:04:36.338 [http-nio-8080-exec-5] JoinProcessor - Using FROM fragment [user user0_]
[DEBUG] 2021-05-06 20:04:36.338 [http-nio-8080-exec-5] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2021-05-06 20:04:36.339 [http-nio-8080-exec-5] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (user)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.id as id1_4_' {alias=generatedAlias0, className=com.leeannjakel.entity.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.email as email2_4_, user0_.first_name as first_na3_4_, user0_.last_name as last_nam4_4_, user0_.password as password5_4_, user0_.user_name as user_nam6_4_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'user user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=user,tableAlias=user0_,origin=null,columns={,className=com.leeannjakel.entity.User}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user0_.user_name' {propertyName=userName,dereferenceType=PRIMITIVE,getPropertyPath=userName,path=generatedAlias0.userName,tableAlias=user0_,className=com.leeannjakel.entity.User,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'user0_.id' {alias=generatedAlias0, className=com.leeannjakel.entity.User, tableAlias=user0_}
          |  \-[IDENT] IdentNode: 'userName' {originalText=userName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@37a5b2a0}

[DEBUG] 2021-05-06 20:04:36.339 [http-nio-8080-exec-5] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2021-05-06 20:04:36.406 [http-nio-8080-exec-5] QueryTranslatorImpl - HQL: select generatedAlias0 from com.leeannjakel.entity.User as generatedAlias0 where generatedAlias0.userName=:param0
[DEBUG] 2021-05-06 20:04:36.407 [http-nio-8080-exec-5] QueryTranslatorImpl - SQL: select user0_.id as id1_4_, user0_.email as email2_4_, user0_.first_name as first_na3_4_, user0_.last_name as last_nam4_4_, user0_.password as password5_4_, user0_.user_name as user_nam6_4_ from user user0_ where user0_.user_name=?
[DEBUG] 2021-05-06 20:04:36.407 [http-nio-8080-exec-5] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2021-05-06 20:04:36.589 [http-nio-8080-exec-5] SQL - select user0_.id as id1_4_, user0_.email as email2_4_, user0_.first_name as first_na3_4_, user0_.last_name as last_nam4_4_, user0_.password as password5_4_, user0_.user_name as user_nam6_4_ from user user0_ where user0_.user_name=?
[DEBUG] 2021-05-06 20:04:36.795 [http-nio-8080-exec-5] Loader - Result set row: 0
[DEBUG] 2021-05-06 20:04:36.842 [http-nio-8080-exec-5] Loader - Result row: EntityKey[com.leeannjakel.entity.User#1]
[DEBUG] 2021-05-06 20:04:36.934 [http-nio-8080-exec-5] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.User#1]
[DEBUG] 2021-05-06 20:04:36.956 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `books` : value = NOT NULL COLLECTION
[DEBUG] 2021-05-06 20:04:36.956 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`books`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:04:37.003 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `email` : value = email@something.com
[DEBUG] 2021-05-06 20:04:37.015 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:04:37.015 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `firstName` : value = LeeAnn
[DEBUG] 2021-05-06 20:04:37.015 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:04:37.015 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `lastName` : value = Jakel
[DEBUG] 2021-05-06 20:04:37.015 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:04:37.015 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `password` : value = password
[DEBUG] 2021-05-06 20:04:37.015 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:04:37.015 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2021-05-06 20:04:37.015 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:04:37.015 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `userName` : value = ljakel
[DEBUG] 2021-05-06 20:04:37.015 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:04:37.025 [http-nio-8080-exec-5] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.User#1]
[DEBUG] 2021-05-06 20:04:37.040 [http-nio-8080-exec-5] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.leeannjakel.entity.User.roles#1]
[DEBUG] 2021-05-06 20:04:37.041 [http-nio-8080-exec-5] SQL - select roles0_.user_id as user_id4_3_0_, roles0_.id as id1_3_0_, roles0_.id as id1_3_1_, roles0_.role_name as role_nam2_3_1_, roles0_.user_id as user_id4_3_1_, roles0_.user_name as user_nam3_3_1_ from role roles0_ where roles0_.user_id=?
[DEBUG] 2021-05-06 20:04:37.055 [http-nio-8080-exec-5] ResultSetProcessorImpl - Preparing collection initializer : [com.leeannjakel.entity.User.roles#1]
[DEBUG] 2021-05-06 20:04:37.079 [http-nio-8080-exec-5] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-05-06 20:04:37.089 [http-nio-8080-exec-5] CollectionReferenceInitializerImpl - Found row of collection: [com.leeannjakel.entity.User.roles#1]
[DEBUG] 2021-05-06 20:04:37.106 [http-nio-8080-exec-5] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.Role#7]
[DEBUG] 2021-05-06 20:04:37.118 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `roleName` : value = admin
[DEBUG] 2021-05-06 20:04:37.119 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`roleName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:04:37.120 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2021-05-06 20:04:37.120 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:04:37.120 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `userName` : value = ljakel
[DEBUG] 2021-05-06 20:04:37.120 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:04:37.120 [http-nio-8080-exec-5] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.Role#7]
[DEBUG] 2021-05-06 20:04:37.121 [http-nio-8080-exec-5] CollectionLoadContext - 1 collections were found in result set for role: com.leeannjakel.entity.User.roles
[DEBUG] 2021-05-06 20:04:37.121 [http-nio-8080-exec-5] CollectionLoadContext - Collection fully initialized: [com.leeannjakel.entity.User.roles#1]
[DEBUG] 2021-05-06 20:04:37.121 [http-nio-8080-exec-5] CollectionLoadContext - 1 collections initialized for role: com.leeannjakel.entity.User.roles
[DEBUG] 2021-05-06 20:04:37.121 [http-nio-8080-exec-5] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-05-06 20:04:37.123 [http-nio-8080-exec-5] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2021-05-06 20:04:37.145 [http-nio-8080-exec-5] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-05-06 20:04:37.238 [http-nio-8080-exec-5] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from Book as generatedAlias0 where generatedAlias0.user=1
[DEBUG] 2021-05-06 20:04:37.240 [http-nio-8080-exec-5] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from com.leeannjakel.entity.Book as generatedAlias0 where generatedAlias0.user=1
[DEBUG] 2021-05-06 20:04:37.244 [http-nio-8080-exec-5] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2021-05-06 20:04:37.250 [http-nio-8080-exec-5] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  \-[IDENT] Node: 'leeannjakel'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'Book'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'user'
          \-[NUM_INT] Node: '1'

[DEBUG] 2021-05-06 20:04:37.250 [http-nio-8080-exec-5] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2021-05-06 20:04:37.264 [http-nio-8080-exec-5] FromElement - FromClause{level=1} : com.leeannjakel.entity.Book (generatedAlias0) -> book0_
[DEBUG] 2021-05-06 20:04:37.270 [http-nio-8080-exec-5] FromReferenceNode - Resolved : generatedAlias0 -> book0_.id
[DEBUG] 2021-05-06 20:04:37.270 [http-nio-8080-exec-5] FromReferenceNode - Resolved : generatedAlias0 -> book0_.id
[DEBUG] 2021-05-06 20:04:37.271 [http-nio-8080-exec-5] DotNode - getDataType() : user -> org.hibernate.type.ManyToOneType(com.leeannjakel.entity.User)
[DEBUG] 2021-05-06 20:04:37.271 [http-nio-8080-exec-5] DotNode - dereferenceShortcut() : property user in com.leeannjakel.entity.Book does not require a join.
[DEBUG] 2021-05-06 20:04:37.271 [http-nio-8080-exec-5] DotNode - Terminal getPropertyPath = [user]
[DEBUG] 2021-05-06 20:04:37.271 [http-nio-8080-exec-5] FromReferenceNode - Resolved : generatedAlias0.user -> book0_.user_id
[DEBUG] 2021-05-06 20:04:37.280 [http-nio-8080-exec-5] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2021-05-06 20:04:37.280 [http-nio-8080-exec-5] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} book0_.id ) ( FromClause{level=1} book book0_ ) ( where ( = ( book0_.user_id book0_.id user ) 1 ) ) )
[DEBUG] 2021-05-06 20:04:37.280 [http-nio-8080-exec-5] JoinProcessor - Using FROM fragment [book book0_]
[DEBUG] 2021-05-06 20:04:37.280 [http-nio-8080-exec-5] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2021-05-06 20:04:37.284 [http-nio-8080-exec-5] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (book)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'book0_.id as id1_1_' {alias=generatedAlias0, className=com.leeannjakel.entity.Book, tableAlias=book0_}
    |  \-[SQL_TOKEN] SqlFragment: 'book0_.author_id as author_i5_1_, book0_.genre_id as genre_id6_1_, book0_.isbn as isbn2_1_, book0_.notes as notes3_1_, book0_.title as title4_1_, book0_.user_id as user_id7_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[book0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'book book0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=book,tableAlias=book0_,origin=null,columns={,className=com.leeannjakel.entity.Book}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'book0_.user_id' {propertyName=user,dereferenceType=UNKNOWN,getPropertyPath=user,path=generatedAlias0.user,tableAlias=book0_,className=com.leeannjakel.entity.Book,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'book0_.id' {alias=generatedAlias0, className=com.leeannjakel.entity.Book, tableAlias=book0_}
          |  \-[IDENT] IdentNode: 'user' {originalText=user}
          \-[NUM_INT] LiteralNode: '1'

[DEBUG] 2021-05-06 20:04:37.284 [http-nio-8080-exec-5] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2021-05-06 20:04:37.284 [http-nio-8080-exec-5] QueryTranslatorImpl - HQL: select generatedAlias0 from com.leeannjakel.entity.Book as generatedAlias0 where generatedAlias0.user=1
[DEBUG] 2021-05-06 20:04:37.284 [http-nio-8080-exec-5] QueryTranslatorImpl - SQL: select book0_.id as id1_1_, book0_.author_id as author_i5_1_, book0_.genre_id as genre_id6_1_, book0_.isbn as isbn2_1_, book0_.notes as notes3_1_, book0_.title as title4_1_, book0_.user_id as user_id7_1_ from book book0_ where book0_.user_id=1
[DEBUG] 2021-05-06 20:04:37.284 [http-nio-8080-exec-5] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2021-05-06 20:04:37.284 [http-nio-8080-exec-5] SQL - select book0_.id as id1_1_, book0_.author_id as author_i5_1_, book0_.genre_id as genre_id6_1_, book0_.isbn as isbn2_1_, book0_.notes as notes3_1_, book0_.title as title4_1_, book0_.user_id as user_id7_1_ from book book0_ where book0_.user_id=1
[DEBUG] 2021-05-06 20:04:37.304 [http-nio-8080-exec-5] Loader - Result set row: 0
[DEBUG] 2021-05-06 20:04:37.305 [http-nio-8080-exec-5] Loader - Result row: EntityKey[com.leeannjakel.entity.Book#1]
[DEBUG] 2021-05-06 20:04:37.309 [http-nio-8080-exec-5] Loader - Result set row: 1
[DEBUG] 2021-05-06 20:04:37.309 [http-nio-8080-exec-5] Loader - Result row: EntityKey[com.leeannjakel.entity.Book#3]
[DEBUG] 2021-05-06 20:04:37.311 [http-nio-8080-exec-5] Loader - Result set row: 2
[DEBUG] 2021-05-06 20:04:37.311 [http-nio-8080-exec-5] Loader - Result row: EntityKey[com.leeannjakel.entity.Book#8]
[DEBUG] 2021-05-06 20:04:37.320 [http-nio-8080-exec-5] Loader - Result set row: 3
[DEBUG] 2021-05-06 20:04:37.320 [http-nio-8080-exec-5] Loader - Result row: EntityKey[com.leeannjakel.entity.Book#9]
[DEBUG] 2021-05-06 20:04:37.320 [http-nio-8080-exec-5] Loader - Result set row: 4
[DEBUG] 2021-05-06 20:04:37.320 [http-nio-8080-exec-5] Loader - Result row: EntityKey[com.leeannjakel.entity.Book#11]
[DEBUG] 2021-05-06 20:04:37.320 [http-nio-8080-exec-5] Loader - Result set row: 5
[DEBUG] 2021-05-06 20:04:37.320 [http-nio-8080-exec-5] Loader - Result row: EntityKey[com.leeannjakel.entity.Book#12]
[DEBUG] 2021-05-06 20:04:37.321 [http-nio-8080-exec-5] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.Book#1]
[DEBUG] 2021-05-06 20:04:37.321 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `author` : value = 1
[DEBUG] 2021-05-06 20:04:37.321 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`author`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:04:37.321 [http-nio-8080-exec-5] SQL - select author0_.id as id1_0_0_, author0_.name as name2_0_0_ from author author0_ where author0_.id=?
[DEBUG] 2021-05-06 20:04:37.340 [http-nio-8080-exec-5] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-05-06 20:04:37.342 [http-nio-8080-exec-5] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-05-06 20:04:37.342 [http-nio-8080-exec-5] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.Author#1]
[DEBUG] 2021-05-06 20:04:37.342 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `books` : value = NOT NULL COLLECTION
[DEBUG] 2021-05-06 20:04:37.342 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`books`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:04:37.351 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `name` : value = Sarah J. Maas 
[DEBUG] 2021-05-06 20:04:37.358 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:04:37.359 [http-nio-8080-exec-5] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.Author#1]
[DEBUG] 2021-05-06 20:04:37.360 [http-nio-8080-exec-5] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-05-06 20:04:37.366 [http-nio-8080-exec-5] AbstractLoadPlanBasedEntityLoader - Done entity load : com.leeannjakel.entity.Author#1
[DEBUG] 2021-05-06 20:04:37.366 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `genre` : value = 1
[DEBUG] 2021-05-06 20:04:37.366 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`genre`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:04:37.366 [http-nio-8080-exec-5] SQL - select genre0_.id as id1_2_0_, genre0_.name as name2_2_0_ from genre genre0_ where genre0_.id=?
[DEBUG] 2021-05-06 20:04:37.371 [http-nio-8080-exec-5] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-05-06 20:04:37.372 [http-nio-8080-exec-5] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-05-06 20:04:37.372 [http-nio-8080-exec-5] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.Genre#1]
[DEBUG] 2021-05-06 20:04:37.372 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `books` : value = NOT NULL COLLECTION
[DEBUG] 2021-05-06 20:04:37.372 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`books`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:04:37.372 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `name` : value = Young Adult
[DEBUG] 2021-05-06 20:04:37.372 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:04:37.372 [http-nio-8080-exec-5] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.Genre#1]
[DEBUG] 2021-05-06 20:04:37.372 [http-nio-8080-exec-5] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-05-06 20:04:37.372 [http-nio-8080-exec-5] AbstractLoadPlanBasedEntityLoader - Done entity load : com.leeannjakel.entity.Genre#1
[DEBUG] 2021-05-06 20:04:37.372 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `isbn` : value = 9781408857861
[DEBUG] 2021-05-06 20:04:37.372 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`isbn`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:04:37.372 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `notes` : value = Fantastic book, the mystery and romance is perfectly combined! Rhys is the best! Yay for night court! The 3rd book is my favorite
[DEBUG] 2021-05-06 20:04:37.372 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`notes`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:04:37.372 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `title` : value = A Court Of Thorns and Roses
[DEBUG] 2021-05-06 20:04:37.372 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:04:37.372 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2021-05-06 20:04:37.372 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:04:37.380 [http-nio-8080-exec-5] SQL - select user0_.id as id1_4_0_, user0_.email as email2_4_0_, user0_.first_name as first_na3_4_0_, user0_.last_name as last_nam4_4_0_, user0_.password as password5_4_0_, user0_.user_name as user_nam6_4_0_, roles1_.user_id as user_id4_3_1_, roles1_.id as id1_3_1_, roles1_.id as id1_3_2_, roles1_.role_name as role_nam2_3_2_, roles1_.user_id as user_id4_3_2_, roles1_.user_name as user_nam3_3_2_ from user user0_ left outer join role roles1_ on user0_.id=roles1_.user_id where user0_.id=?
[DEBUG] 2021-05-06 20:04:37.388 [http-nio-8080-exec-5] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-05-06 20:04:37.391 [http-nio-8080-exec-5] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-05-06 20:04:37.398 [http-nio-8080-exec-5] CollectionReferenceInitializerImpl - Found row of collection: [com.leeannjakel.entity.User.roles#1]
[DEBUG] 2021-05-06 20:04:37.403 [http-nio-8080-exec-5] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.User#1]
[DEBUG] 2021-05-06 20:04:37.403 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `books` : value = NOT NULL COLLECTION
[DEBUG] 2021-05-06 20:04:37.404 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`books`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:04:37.404 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `email` : value = email@something.com
[DEBUG] 2021-05-06 20:04:37.404 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:04:37.404 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `firstName` : value = LeeAnn
[DEBUG] 2021-05-06 20:04:37.404 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:04:37.404 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `lastName` : value = Jakel
[DEBUG] 2021-05-06 20:04:37.404 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:04:37.404 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `password` : value = password
[DEBUG] 2021-05-06 20:04:37.404 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:04:37.404 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2021-05-06 20:04:37.404 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:04:37.404 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `userName` : value = ljakel
[DEBUG] 2021-05-06 20:04:37.404 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:04:37.404 [http-nio-8080-exec-5] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.User#1]
[DEBUG] 2021-05-06 20:04:37.404 [http-nio-8080-exec-5] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.Role#7]
[DEBUG] 2021-05-06 20:04:37.404 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `roleName` : value = admin
[DEBUG] 2021-05-06 20:04:37.404 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`roleName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:04:37.404 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2021-05-06 20:04:37.404 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:04:37.404 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `userName` : value = ljakel
[DEBUG] 2021-05-06 20:04:37.404 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:04:37.404 [http-nio-8080-exec-5] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.Role#7]
[DEBUG] 2021-05-06 20:04:37.404 [http-nio-8080-exec-5] CollectionLoadContext - 1 collections were found in result set for role: com.leeannjakel.entity.User.roles
[DEBUG] 2021-05-06 20:04:37.404 [http-nio-8080-exec-5] CollectionLoadContext - Collection fully initialized: [com.leeannjakel.entity.User.roles#1]
[DEBUG] 2021-05-06 20:04:37.404 [http-nio-8080-exec-5] CollectionLoadContext - 1 collections initialized for role: com.leeannjakel.entity.User.roles
[DEBUG] 2021-05-06 20:04:37.414 [http-nio-8080-exec-5] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-05-06 20:04:37.414 [http-nio-8080-exec-5] AbstractLoadPlanBasedEntityLoader - Done entity load : com.leeannjakel.entity.User#1
[DEBUG] 2021-05-06 20:04:37.418 [http-nio-8080-exec-5] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.Book#1]
[DEBUG] 2021-05-06 20:04:37.418 [http-nio-8080-exec-5] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.Book#3]
[DEBUG] 2021-05-06 20:04:37.419 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `author` : value = 5
[DEBUG] 2021-05-06 20:04:37.419 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`author`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:04:37.422 [http-nio-8080-exec-5] SQL - select author0_.id as id1_0_0_, author0_.name as name2_0_0_ from author author0_ where author0_.id=?
[DEBUG] 2021-05-06 20:04:37.428 [http-nio-8080-exec-5] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-05-06 20:04:37.428 [http-nio-8080-exec-5] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-05-06 20:04:37.428 [http-nio-8080-exec-5] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.Author#5]
[DEBUG] 2021-05-06 20:04:37.428 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `books` : value = NOT NULL COLLECTION
[DEBUG] 2021-05-06 20:04:37.428 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`books`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:04:37.428 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `name` : value = Nora Roberts
[DEBUG] 2021-05-06 20:04:37.428 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:04:37.428 [http-nio-8080-exec-5] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.Author#5]
[DEBUG] 2021-05-06 20:04:37.428 [http-nio-8080-exec-5] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-05-06 20:04:37.429 [http-nio-8080-exec-5] AbstractLoadPlanBasedEntityLoader - Done entity load : com.leeannjakel.entity.Author#5
[DEBUG] 2021-05-06 20:04:37.429 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `genre` : value = 5
[DEBUG] 2021-05-06 20:04:37.429 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`genre`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:04:37.429 [http-nio-8080-exec-5] SQL - select genre0_.id as id1_2_0_, genre0_.name as name2_2_0_ from genre genre0_ where genre0_.id=?
[DEBUG] 2021-05-06 20:04:37.443 [http-nio-8080-exec-5] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-05-06 20:04:37.447 [http-nio-8080-exec-5] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-05-06 20:04:37.452 [http-nio-8080-exec-5] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.Genre#5]
[DEBUG] 2021-05-06 20:04:37.452 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `books` : value = NOT NULL COLLECTION
[DEBUG] 2021-05-06 20:04:37.452 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`books`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:04:37.454 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `name` : value = Romance
[DEBUG] 2021-05-06 20:04:37.454 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:04:37.454 [http-nio-8080-exec-5] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.Genre#5]
[DEBUG] 2021-05-06 20:04:37.454 [http-nio-8080-exec-5] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-05-06 20:04:37.454 [http-nio-8080-exec-5] AbstractLoadPlanBasedEntityLoader - Done entity load : com.leeannjakel.entity.Genre#5
[DEBUG] 2021-05-06 20:04:37.454 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `isbn` : value = 9780425259856
[DEBUG] 2021-05-06 20:04:37.454 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`isbn`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:04:37.454 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `notes` : value = null
[DEBUG] 2021-05-06 20:04:37.454 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`notes`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:04:37.457 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `title` : value = Dark Witch
[DEBUG] 2021-05-06 20:04:37.458 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:04:37.458 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2021-05-06 20:04:37.458 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:04:37.462 [http-nio-8080-exec-5] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.Book#3]
[DEBUG] 2021-05-06 20:04:37.462 [http-nio-8080-exec-5] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.Book#8]
[DEBUG] 2021-05-06 20:04:37.462 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `author` : value = 14
[DEBUG] 2021-05-06 20:04:37.462 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`author`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:04:37.462 [http-nio-8080-exec-5] SQL - select author0_.id as id1_0_0_, author0_.name as name2_0_0_ from author author0_ where author0_.id=?
[DEBUG] 2021-05-06 20:04:37.467 [http-nio-8080-exec-5] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-05-06 20:04:37.467 [http-nio-8080-exec-5] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-05-06 20:04:37.470 [http-nio-8080-exec-5] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.Author#14]
[DEBUG] 2021-05-06 20:04:37.471 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `books` : value = NOT NULL COLLECTION
[DEBUG] 2021-05-06 20:04:37.471 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`books`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:04:37.471 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `name` : value = Sarah J. Maas
[DEBUG] 2021-05-06 20:04:37.471 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:04:37.471 [http-nio-8080-exec-5] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.Author#14]
[DEBUG] 2021-05-06 20:04:37.471 [http-nio-8080-exec-5] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-05-06 20:04:37.472 [http-nio-8080-exec-5] AbstractLoadPlanBasedEntityLoader - Done entity load : com.leeannjakel.entity.Author#14
[DEBUG] 2021-05-06 20:04:37.472 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `genre` : value = 1
[DEBUG] 2021-05-06 20:04:37.472 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`genre`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:04:37.472 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `isbn` : value = 9781599906959
[DEBUG] 2021-05-06 20:04:37.472 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`isbn`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:04:37.472 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `notes` : value = 
[DEBUG] 2021-05-06 20:04:37.472 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`notes`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:04:37.472 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `title` : value = Throne of glass
[DEBUG] 2021-05-06 20:04:37.472 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:04:37.472 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2021-05-06 20:04:37.472 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:04:37.472 [http-nio-8080-exec-5] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.Book#8]
[DEBUG] 2021-05-06 20:04:37.472 [http-nio-8080-exec-5] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.Book#9]
[DEBUG] 2021-05-06 20:04:37.472 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `author` : value = 14
[DEBUG] 2021-05-06 20:04:37.472 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`author`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:04:37.487 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `genre` : value = 1
[DEBUG] 2021-05-06 20:04:37.487 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`genre`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:04:37.487 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `isbn` : value = 9781599906959
[DEBUG] 2021-05-06 20:04:37.487 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`isbn`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:04:37.487 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `notes` : value = 
[DEBUG] 2021-05-06 20:04:37.487 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`notes`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:04:37.487 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `title` : value = Throne of glass
[DEBUG] 2021-05-06 20:04:37.487 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:04:37.487 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2021-05-06 20:04:37.487 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:04:37.487 [http-nio-8080-exec-5] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.Book#9]
[DEBUG] 2021-05-06 20:04:37.487 [http-nio-8080-exec-5] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.Book#11]
[DEBUG] 2021-05-06 20:04:37.487 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `author` : value = 14
[DEBUG] 2021-05-06 20:04:37.487 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`author`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:04:37.487 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `genre` : value = 1
[DEBUG] 2021-05-06 20:04:37.487 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`genre`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:04:37.487 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `isbn` : value = 9781635574043
[DEBUG] 2021-05-06 20:04:37.487 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`isbn`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:04:37.488 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `notes` : value = woooooo
[DEBUG] 2021-05-06 20:04:37.488 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`notes`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:04:37.488 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `title` : value = Crescent City : house of earth and blood
[DEBUG] 2021-05-06 20:04:37.488 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:04:37.488 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2021-05-06 20:04:37.488 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:04:37.488 [http-nio-8080-exec-5] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.Book#11]
[DEBUG] 2021-05-06 20:04:37.488 [http-nio-8080-exec-5] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.Book#12]
[DEBUG] 2021-05-06 20:04:37.488 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `author` : value = 14
[DEBUG] 2021-05-06 20:04:37.488 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`author`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:04:37.493 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `genre` : value = 6
[DEBUG] 2021-05-06 20:04:37.493 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`genre`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:04:37.493 [http-nio-8080-exec-5] SQL - select genre0_.id as id1_2_0_, genre0_.name as name2_2_0_ from genre genre0_ where genre0_.id=?
[DEBUG] 2021-05-06 20:04:37.516 [http-nio-8080-exec-5] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-05-06 20:04:37.516 [http-nio-8080-exec-5] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-05-06 20:04:37.518 [http-nio-8080-exec-5] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.Genre#6]
[DEBUG] 2021-05-06 20:04:37.518 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `books` : value = NOT NULL COLLECTION
[DEBUG] 2021-05-06 20:04:37.519 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`books`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:04:37.519 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `name` : value = Action
[DEBUG] 2021-05-06 20:04:37.519 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:04:37.519 [http-nio-8080-exec-5] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.Genre#6]
[DEBUG] 2021-05-06 20:04:37.519 [http-nio-8080-exec-5] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-05-06 20:04:37.519 [http-nio-8080-exec-5] AbstractLoadPlanBasedEntityLoader - Done entity load : com.leeannjakel.entity.Genre#6
[DEBUG] 2021-05-06 20:04:37.519 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `isbn` : value = 9781599906959
[DEBUG] 2021-05-06 20:04:37.519 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`isbn`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:04:37.519 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `notes` : value = yay!
[DEBUG] 2021-05-06 20:04:37.519 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`notes`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:04:37.519 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `title` : value = Throne of glass
[DEBUG] 2021-05-06 20:04:37.519 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:04:37.519 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2021-05-06 20:04:37.519 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:04:37.523 [http-nio-8080-exec-5] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.Book#12]
[DEBUG] 2021-05-06 20:04:37.523 [http-nio-8080-exec-5] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-05-06 20:04:51.412 [http-nio-8080-exec-3] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from User as generatedAlias0 where generatedAlias0.userName=:param0
[DEBUG] 2021-05-06 20:04:51.413 [http-nio-8080-exec-3] SQL - select user0_.id as id1_4_, user0_.email as email2_4_, user0_.first_name as first_na3_4_, user0_.last_name as last_nam4_4_, user0_.password as password5_4_, user0_.user_name as user_nam6_4_ from user user0_ where user0_.user_name=?
[DEBUG] 2021-05-06 20:04:51.415 [http-nio-8080-exec-3] Loader - Result set row: 0
[DEBUG] 2021-05-06 20:04:51.417 [http-nio-8080-exec-3] Loader - Result row: EntityKey[com.leeannjakel.entity.User#1]
[DEBUG] 2021-05-06 20:04:51.423 [http-nio-8080-exec-3] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.User#1]
[DEBUG] 2021-05-06 20:04:51.423 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `books` : value = NOT NULL COLLECTION
[DEBUG] 2021-05-06 20:04:51.423 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`books`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:04:51.425 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `email` : value = email@something.com
[DEBUG] 2021-05-06 20:04:51.425 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:04:51.425 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `firstName` : value = LeeAnn
[DEBUG] 2021-05-06 20:04:51.426 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:04:51.426 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `lastName` : value = Jakel
[DEBUG] 2021-05-06 20:04:51.426 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:04:51.426 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `password` : value = password
[DEBUG] 2021-05-06 20:04:51.426 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:04:51.426 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2021-05-06 20:04:51.426 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:04:51.426 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `userName` : value = ljakel
[DEBUG] 2021-05-06 20:04:51.426 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:04:51.437 [http-nio-8080-exec-3] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.User#1]
[DEBUG] 2021-05-06 20:04:51.438 [http-nio-8080-exec-3] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.leeannjakel.entity.User.roles#1]
[DEBUG] 2021-05-06 20:04:51.438 [http-nio-8080-exec-3] SQL - select roles0_.user_id as user_id4_3_0_, roles0_.id as id1_3_0_, roles0_.id as id1_3_1_, roles0_.role_name as role_nam2_3_1_, roles0_.user_id as user_id4_3_1_, roles0_.user_name as user_nam3_3_1_ from role roles0_ where roles0_.user_id=?
[DEBUG] 2021-05-06 20:04:51.446 [http-nio-8080-exec-3] ResultSetProcessorImpl - Preparing collection initializer : [com.leeannjakel.entity.User.roles#1]
[DEBUG] 2021-05-06 20:04:51.446 [http-nio-8080-exec-3] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-05-06 20:04:51.447 [http-nio-8080-exec-3] CollectionReferenceInitializerImpl - Found row of collection: [com.leeannjakel.entity.User.roles#1]
[DEBUG] 2021-05-06 20:04:51.462 [http-nio-8080-exec-3] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.Role#7]
[DEBUG] 2021-05-06 20:04:51.462 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `roleName` : value = admin
[DEBUG] 2021-05-06 20:04:51.463 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`roleName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:04:51.463 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2021-05-06 20:04:51.466 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:04:51.471 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `userName` : value = ljakel
[DEBUG] 2021-05-06 20:04:51.471 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:04:51.471 [http-nio-8080-exec-3] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.Role#7]
[DEBUG] 2021-05-06 20:04:51.471 [http-nio-8080-exec-3] CollectionLoadContext - 1 collections were found in result set for role: com.leeannjakel.entity.User.roles
[DEBUG] 2021-05-06 20:04:51.471 [http-nio-8080-exec-3] CollectionLoadContext - Collection fully initialized: [com.leeannjakel.entity.User.roles#1]
[DEBUG] 2021-05-06 20:04:51.471 [http-nio-8080-exec-3] CollectionLoadContext - 1 collections initialized for role: com.leeannjakel.entity.User.roles
[DEBUG] 2021-05-06 20:04:51.472 [http-nio-8080-exec-3] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-05-06 20:04:51.472 [http-nio-8080-exec-3] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2021-05-06 20:04:51.472 [http-nio-8080-exec-3] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-05-06 20:04:51.475 [http-nio-8080-exec-3] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from Book as generatedAlias0 where generatedAlias0.user=1
[DEBUG] 2021-05-06 20:04:51.477 [http-nio-8080-exec-3] SQL - select book0_.id as id1_1_, book0_.author_id as author_i5_1_, book0_.genre_id as genre_id6_1_, book0_.isbn as isbn2_1_, book0_.notes as notes3_1_, book0_.title as title4_1_, book0_.user_id as user_id7_1_ from book book0_ where book0_.user_id=1
[DEBUG] 2021-05-06 20:04:51.506 [http-nio-8080-exec-3] Loader - Result set row: 0
[DEBUG] 2021-05-06 20:04:51.507 [http-nio-8080-exec-3] Loader - Result row: EntityKey[com.leeannjakel.entity.Book#1]
[DEBUG] 2021-05-06 20:04:51.510 [http-nio-8080-exec-3] Loader - Result set row: 1
[DEBUG] 2021-05-06 20:04:51.511 [http-nio-8080-exec-3] Loader - Result row: EntityKey[com.leeannjakel.entity.Book#3]
[DEBUG] 2021-05-06 20:04:51.511 [http-nio-8080-exec-3] Loader - Result set row: 2
[DEBUG] 2021-05-06 20:04:51.511 [http-nio-8080-exec-3] Loader - Result row: EntityKey[com.leeannjakel.entity.Book#8]
[DEBUG] 2021-05-06 20:04:51.511 [http-nio-8080-exec-3] Loader - Result set row: 3
[DEBUG] 2021-05-06 20:04:51.511 [http-nio-8080-exec-3] Loader - Result row: EntityKey[com.leeannjakel.entity.Book#9]
[DEBUG] 2021-05-06 20:04:51.511 [http-nio-8080-exec-3] Loader - Result set row: 4
[DEBUG] 2021-05-06 20:04:51.511 [http-nio-8080-exec-3] Loader - Result row: EntityKey[com.leeannjakel.entity.Book#11]
[DEBUG] 2021-05-06 20:04:51.511 [http-nio-8080-exec-3] Loader - Result set row: 5
[DEBUG] 2021-05-06 20:04:51.511 [http-nio-8080-exec-3] Loader - Result row: EntityKey[com.leeannjakel.entity.Book#12]
[DEBUG] 2021-05-06 20:04:51.511 [http-nio-8080-exec-3] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.Book#1]
[DEBUG] 2021-05-06 20:04:51.511 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `author` : value = 1
[DEBUG] 2021-05-06 20:04:51.512 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`author`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:04:51.512 [http-nio-8080-exec-3] SQL - select author0_.id as id1_0_0_, author0_.name as name2_0_0_ from author author0_ where author0_.id=?
[DEBUG] 2021-05-06 20:04:51.526 [http-nio-8080-exec-3] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-05-06 20:04:51.527 [http-nio-8080-exec-3] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-05-06 20:04:51.528 [http-nio-8080-exec-3] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.Author#1]
[DEBUG] 2021-05-06 20:04:51.528 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `books` : value = NOT NULL COLLECTION
[DEBUG] 2021-05-06 20:04:51.528 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`books`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:04:51.528 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `name` : value = Sarah J. Maas 
[DEBUG] 2021-05-06 20:04:51.528 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:04:51.528 [http-nio-8080-exec-3] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.Author#1]
[DEBUG] 2021-05-06 20:04:51.528 [http-nio-8080-exec-3] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-05-06 20:04:51.528 [http-nio-8080-exec-3] AbstractLoadPlanBasedEntityLoader - Done entity load : com.leeannjakel.entity.Author#1
[DEBUG] 2021-05-06 20:04:51.528 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `genre` : value = 1
[DEBUG] 2021-05-06 20:04:51.529 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`genre`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:04:51.529 [http-nio-8080-exec-3] SQL - select genre0_.id as id1_2_0_, genre0_.name as name2_2_0_ from genre genre0_ where genre0_.id=?
[DEBUG] 2021-05-06 20:04:51.539 [http-nio-8080-exec-3] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-05-06 20:04:51.540 [http-nio-8080-exec-3] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-05-06 20:04:51.541 [http-nio-8080-exec-3] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.Genre#1]
[DEBUG] 2021-05-06 20:04:51.541 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `books` : value = NOT NULL COLLECTION
[DEBUG] 2021-05-06 20:04:51.541 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`books`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:04:51.541 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `name` : value = Young Adult
[DEBUG] 2021-05-06 20:04:51.541 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:04:51.541 [http-nio-8080-exec-3] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.Genre#1]
[DEBUG] 2021-05-06 20:04:51.542 [http-nio-8080-exec-3] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-05-06 20:04:51.543 [http-nio-8080-exec-3] AbstractLoadPlanBasedEntityLoader - Done entity load : com.leeannjakel.entity.Genre#1
[DEBUG] 2021-05-06 20:04:51.543 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `isbn` : value = 9781408857861
[DEBUG] 2021-05-06 20:04:51.543 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`isbn`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:04:51.543 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `notes` : value = Fantastic book, the mystery and romance is perfectly combined! Rhys is the best! Yay for night court! The 3rd book is my favorite
[DEBUG] 2021-05-06 20:04:51.543 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`notes`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:04:51.543 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `title` : value = A Court Of Thorns and Roses
[DEBUG] 2021-05-06 20:04:51.543 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:04:51.543 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2021-05-06 20:04:51.543 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:04:51.546 [http-nio-8080-exec-3] SQL - select user0_.id as id1_4_0_, user0_.email as email2_4_0_, user0_.first_name as first_na3_4_0_, user0_.last_name as last_nam4_4_0_, user0_.password as password5_4_0_, user0_.user_name as user_nam6_4_0_, roles1_.user_id as user_id4_3_1_, roles1_.id as id1_3_1_, roles1_.id as id1_3_2_, roles1_.role_name as role_nam2_3_2_, roles1_.user_id as user_id4_3_2_, roles1_.user_name as user_nam3_3_2_ from user user0_ left outer join role roles1_ on user0_.id=roles1_.user_id where user0_.id=?
[DEBUG] 2021-05-06 20:04:51.550 [http-nio-8080-exec-3] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-05-06 20:04:51.555 [http-nio-8080-exec-3] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-05-06 20:04:51.570 [http-nio-8080-exec-3] CollectionReferenceInitializerImpl - Found row of collection: [com.leeannjakel.entity.User.roles#1]
[DEBUG] 2021-05-06 20:04:51.571 [http-nio-8080-exec-3] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.User#1]
[DEBUG] 2021-05-06 20:04:51.571 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `books` : value = NOT NULL COLLECTION
[DEBUG] 2021-05-06 20:04:51.571 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`books`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:04:51.572 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `email` : value = email@something.com
[DEBUG] 2021-05-06 20:04:51.572 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:04:51.572 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `firstName` : value = LeeAnn
[DEBUG] 2021-05-06 20:04:51.572 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:04:51.572 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `lastName` : value = Jakel
[DEBUG] 2021-05-06 20:04:51.572 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:04:51.572 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `password` : value = password
[DEBUG] 2021-05-06 20:04:51.572 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:04:51.572 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2021-05-06 20:04:51.573 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:04:51.573 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `userName` : value = ljakel
[DEBUG] 2021-05-06 20:04:51.573 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:04:51.573 [http-nio-8080-exec-3] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.User#1]
[DEBUG] 2021-05-06 20:04:51.574 [http-nio-8080-exec-3] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.Role#7]
[DEBUG] 2021-05-06 20:04:51.574 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `roleName` : value = admin
[DEBUG] 2021-05-06 20:04:51.574 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`roleName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:04:51.574 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2021-05-06 20:04:51.574 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:04:51.574 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `userName` : value = ljakel
[DEBUG] 2021-05-06 20:04:51.574 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:04:51.574 [http-nio-8080-exec-3] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.Role#7]
[DEBUG] 2021-05-06 20:04:51.574 [http-nio-8080-exec-3] CollectionLoadContext - 1 collections were found in result set for role: com.leeannjakel.entity.User.roles
[DEBUG] 2021-05-06 20:04:51.576 [http-nio-8080-exec-3] CollectionLoadContext - Collection fully initialized: [com.leeannjakel.entity.User.roles#1]
[DEBUG] 2021-05-06 20:04:51.576 [http-nio-8080-exec-3] CollectionLoadContext - 1 collections initialized for role: com.leeannjakel.entity.User.roles
[DEBUG] 2021-05-06 20:04:51.576 [http-nio-8080-exec-3] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-05-06 20:04:51.576 [http-nio-8080-exec-3] AbstractLoadPlanBasedEntityLoader - Done entity load : com.leeannjakel.entity.User#1
[DEBUG] 2021-05-06 20:04:51.576 [http-nio-8080-exec-3] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.Book#1]
[DEBUG] 2021-05-06 20:04:51.587 [http-nio-8080-exec-3] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.Book#3]
[DEBUG] 2021-05-06 20:04:51.587 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `author` : value = 5
[DEBUG] 2021-05-06 20:04:51.587 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`author`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:04:51.591 [http-nio-8080-exec-3] SQL - select author0_.id as id1_0_0_, author0_.name as name2_0_0_ from author author0_ where author0_.id=?
[DEBUG] 2021-05-06 20:04:51.604 [http-nio-8080-exec-3] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-05-06 20:04:51.604 [http-nio-8080-exec-3] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-05-06 20:04:51.605 [http-nio-8080-exec-3] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.Author#5]
[DEBUG] 2021-05-06 20:04:51.605 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `books` : value = NOT NULL COLLECTION
[DEBUG] 2021-05-06 20:04:51.607 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`books`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:04:51.607 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `name` : value = Nora Roberts
[DEBUG] 2021-05-06 20:04:51.607 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:04:51.607 [http-nio-8080-exec-3] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.Author#5]
[DEBUG] 2021-05-06 20:04:51.607 [http-nio-8080-exec-3] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-05-06 20:04:51.607 [http-nio-8080-exec-3] AbstractLoadPlanBasedEntityLoader - Done entity load : com.leeannjakel.entity.Author#5
[DEBUG] 2021-05-06 20:04:51.607 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `genre` : value = 5
[DEBUG] 2021-05-06 20:04:51.607 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`genre`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:04:51.607 [http-nio-8080-exec-3] SQL - select genre0_.id as id1_2_0_, genre0_.name as name2_2_0_ from genre genre0_ where genre0_.id=?
[DEBUG] 2021-05-06 20:04:51.625 [http-nio-8080-exec-3] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-05-06 20:04:51.625 [http-nio-8080-exec-3] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-05-06 20:04:51.625 [http-nio-8080-exec-3] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.Genre#5]
[DEBUG] 2021-05-06 20:04:51.625 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `books` : value = NOT NULL COLLECTION
[DEBUG] 2021-05-06 20:04:51.625 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`books`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:04:51.625 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `name` : value = Romance
[DEBUG] 2021-05-06 20:04:51.625 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:04:51.625 [http-nio-8080-exec-3] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.Genre#5]
[DEBUG] 2021-05-06 20:04:51.625 [http-nio-8080-exec-3] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-05-06 20:04:51.630 [http-nio-8080-exec-3] AbstractLoadPlanBasedEntityLoader - Done entity load : com.leeannjakel.entity.Genre#5
[DEBUG] 2021-05-06 20:04:51.630 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `isbn` : value = 9780425259856
[DEBUG] 2021-05-06 20:04:51.630 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`isbn`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:04:51.630 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `notes` : value = null
[DEBUG] 2021-05-06 20:04:51.630 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`notes`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:04:51.630 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `title` : value = Dark Witch
[DEBUG] 2021-05-06 20:04:51.630 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:04:51.630 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2021-05-06 20:04:51.630 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:04:51.630 [http-nio-8080-exec-3] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.Book#3]
[DEBUG] 2021-05-06 20:04:51.630 [http-nio-8080-exec-3] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.Book#8]
[DEBUG] 2021-05-06 20:04:51.630 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `author` : value = 14
[DEBUG] 2021-05-06 20:04:51.633 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`author`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:04:51.633 [http-nio-8080-exec-3] SQL - select author0_.id as id1_0_0_, author0_.name as name2_0_0_ from author author0_ where author0_.id=?
[DEBUG] 2021-05-06 20:04:51.638 [http-nio-8080-exec-3] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-05-06 20:04:51.638 [http-nio-8080-exec-3] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-05-06 20:04:51.639 [http-nio-8080-exec-3] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.Author#14]
[DEBUG] 2021-05-06 20:04:51.639 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `books` : value = NOT NULL COLLECTION
[DEBUG] 2021-05-06 20:04:51.642 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`books`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:04:51.642 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `name` : value = Sarah J. Maas
[DEBUG] 2021-05-06 20:04:51.642 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:04:51.642 [http-nio-8080-exec-3] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.Author#14]
[DEBUG] 2021-05-06 20:04:51.642 [http-nio-8080-exec-3] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-05-06 20:04:51.642 [http-nio-8080-exec-3] AbstractLoadPlanBasedEntityLoader - Done entity load : com.leeannjakel.entity.Author#14
[DEBUG] 2021-05-06 20:04:51.642 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `genre` : value = 1
[DEBUG] 2021-05-06 20:04:51.642 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`genre`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:04:51.642 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `isbn` : value = 9781599906959
[DEBUG] 2021-05-06 20:04:51.642 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`isbn`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:04:51.642 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `notes` : value = 
[DEBUG] 2021-05-06 20:04:51.642 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`notes`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:04:51.642 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `title` : value = Throne of glass
[DEBUG] 2021-05-06 20:04:51.642 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:04:51.642 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2021-05-06 20:04:51.642 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:04:51.643 [http-nio-8080-exec-3] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.Book#8]
[DEBUG] 2021-05-06 20:04:51.643 [http-nio-8080-exec-3] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.Book#9]
[DEBUG] 2021-05-06 20:04:51.643 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `author` : value = 14
[DEBUG] 2021-05-06 20:04:51.643 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`author`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:04:51.643 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `genre` : value = 1
[DEBUG] 2021-05-06 20:04:51.643 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`genre`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:04:51.643 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `isbn` : value = 9781599906959
[DEBUG] 2021-05-06 20:04:51.643 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`isbn`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:04:51.643 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `notes` : value = 
[DEBUG] 2021-05-06 20:04:51.644 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`notes`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:04:51.644 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `title` : value = Throne of glass
[DEBUG] 2021-05-06 20:04:51.644 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:04:51.644 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2021-05-06 20:04:51.644 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:04:51.650 [http-nio-8080-exec-3] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.Book#9]
[DEBUG] 2021-05-06 20:04:51.650 [http-nio-8080-exec-3] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.Book#11]
[DEBUG] 2021-05-06 20:04:51.650 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `author` : value = 14
[DEBUG] 2021-05-06 20:04:51.650 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`author`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:04:51.650 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `genre` : value = 1
[DEBUG] 2021-05-06 20:04:51.650 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`genre`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:04:51.650 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `isbn` : value = 9781635574043
[DEBUG] 2021-05-06 20:04:51.650 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`isbn`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:04:51.650 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `notes` : value = woooooo
[DEBUG] 2021-05-06 20:04:51.650 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`notes`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:04:51.650 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `title` : value = Crescent City : house of earth and blood
[DEBUG] 2021-05-06 20:04:51.650 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:04:51.650 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2021-05-06 20:04:51.656 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:04:51.657 [http-nio-8080-exec-3] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.Book#11]
[DEBUG] 2021-05-06 20:04:51.657 [http-nio-8080-exec-3] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.Book#12]
[DEBUG] 2021-05-06 20:04:51.657 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `author` : value = 14
[DEBUG] 2021-05-06 20:04:51.657 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`author`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:04:51.659 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `genre` : value = 6
[DEBUG] 2021-05-06 20:04:51.659 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`genre`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:04:51.659 [http-nio-8080-exec-3] SQL - select genre0_.id as id1_2_0_, genre0_.name as name2_2_0_ from genre genre0_ where genre0_.id=?
[DEBUG] 2021-05-06 20:04:51.661 [http-nio-8080-exec-3] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-05-06 20:04:51.665 [http-nio-8080-exec-3] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-05-06 20:04:51.669 [http-nio-8080-exec-3] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.Genre#6]
[DEBUG] 2021-05-06 20:04:51.676 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `books` : value = NOT NULL COLLECTION
[DEBUG] 2021-05-06 20:04:51.676 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`books`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:04:51.676 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `name` : value = Action
[DEBUG] 2021-05-06 20:04:51.676 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:04:51.676 [http-nio-8080-exec-3] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.Genre#6]
[DEBUG] 2021-05-06 20:04:51.676 [http-nio-8080-exec-3] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-05-06 20:04:51.676 [http-nio-8080-exec-3] AbstractLoadPlanBasedEntityLoader - Done entity load : com.leeannjakel.entity.Genre#6
[DEBUG] 2021-05-06 20:04:51.676 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `isbn` : value = 9781599906959
[DEBUG] 2021-05-06 20:04:51.676 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`isbn`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:04:51.676 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `notes` : value = yay!
[DEBUG] 2021-05-06 20:04:51.676 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`notes`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:04:51.677 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `title` : value = Throne of glass
[DEBUG] 2021-05-06 20:04:51.677 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:04:51.677 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2021-05-06 20:04:51.677 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:04:51.678 [http-nio-8080-exec-3] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.Book#12]
[DEBUG] 2021-05-06 20:04:51.678 [http-nio-8080-exec-3] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-05-06 20:06:37.876 [http-nio-8080-exec-1] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from User as generatedAlias0 where generatedAlias0.userName=:param0
[DEBUG] 2021-05-06 20:06:37.876 [http-nio-8080-exec-1] SQL - select user0_.id as id1_4_, user0_.email as email2_4_, user0_.first_name as first_na3_4_, user0_.last_name as last_nam4_4_, user0_.password as password5_4_, user0_.user_name as user_nam6_4_ from user user0_ where user0_.user_name=?
[DEBUG] 2021-05-06 20:06:37.895 [http-nio-8080-exec-1] Loader - Result set row: 0
[DEBUG] 2021-05-06 20:06:37.895 [http-nio-8080-exec-1] Loader - Result row: EntityKey[com.leeannjakel.entity.User#1]
[DEBUG] 2021-05-06 20:06:37.895 [http-nio-8080-exec-1] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.User#1]
[DEBUG] 2021-05-06 20:06:37.895 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `books` : value = NOT NULL COLLECTION
[DEBUG] 2021-05-06 20:06:37.895 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`books`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:06:37.895 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `email` : value = email@something.com
[DEBUG] 2021-05-06 20:06:37.895 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:06:37.895 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `firstName` : value = LeeAnn
[DEBUG] 2021-05-06 20:06:37.895 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:06:37.895 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `lastName` : value = Jakel
[DEBUG] 2021-05-06 20:06:37.895 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:06:37.895 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `password` : value = password
[DEBUG] 2021-05-06 20:06:37.896 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:06:37.896 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2021-05-06 20:06:37.896 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:06:37.896 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `userName` : value = ljakel
[DEBUG] 2021-05-06 20:06:37.896 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:06:37.896 [http-nio-8080-exec-1] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.User#1]
[DEBUG] 2021-05-06 20:06:37.898 [http-nio-8080-exec-1] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.leeannjakel.entity.User.roles#1]
[DEBUG] 2021-05-06 20:06:37.898 [http-nio-8080-exec-1] SQL - select roles0_.user_id as user_id4_3_0_, roles0_.id as id1_3_0_, roles0_.id as id1_3_1_, roles0_.role_name as role_nam2_3_1_, roles0_.user_id as user_id4_3_1_, roles0_.user_name as user_nam3_3_1_ from role roles0_ where roles0_.user_id=?
[DEBUG] 2021-05-06 20:06:37.900 [http-nio-8080-exec-1] ResultSetProcessorImpl - Preparing collection initializer : [com.leeannjakel.entity.User.roles#1]
[DEBUG] 2021-05-06 20:06:37.902 [http-nio-8080-exec-1] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-05-06 20:06:37.903 [http-nio-8080-exec-1] CollectionReferenceInitializerImpl - Found row of collection: [com.leeannjakel.entity.User.roles#1]
[DEBUG] 2021-05-06 20:06:37.913 [http-nio-8080-exec-1] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.Role#7]
[DEBUG] 2021-05-06 20:06:37.918 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `roleName` : value = admin
[DEBUG] 2021-05-06 20:06:37.918 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`roleName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:06:37.918 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2021-05-06 20:06:37.918 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:06:37.936 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `userName` : value = ljakel
[DEBUG] 2021-05-06 20:06:37.936 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:06:37.936 [http-nio-8080-exec-1] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.Role#7]
[DEBUG] 2021-05-06 20:06:37.936 [http-nio-8080-exec-1] CollectionLoadContext - 1 collections were found in result set for role: com.leeannjakel.entity.User.roles
[DEBUG] 2021-05-06 20:06:37.936 [http-nio-8080-exec-1] CollectionLoadContext - Collection fully initialized: [com.leeannjakel.entity.User.roles#1]
[DEBUG] 2021-05-06 20:06:37.936 [http-nio-8080-exec-1] CollectionLoadContext - 1 collections initialized for role: com.leeannjakel.entity.User.roles
[DEBUG] 2021-05-06 20:06:37.937 [http-nio-8080-exec-1] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-05-06 20:06:37.937 [http-nio-8080-exec-1] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2021-05-06 20:06:37.937 [http-nio-8080-exec-1] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-05-06 20:06:42.021 [http-nio-8080-exec-1] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from Author as generatedAlias0
[DEBUG] 2021-05-06 20:06:42.021 [http-nio-8080-exec-1] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from com.leeannjakel.entity.Author as generatedAlias0
[DEBUG] 2021-05-06 20:06:42.025 [http-nio-8080-exec-1] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2021-05-06 20:06:42.025 [http-nio-8080-exec-1] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  \-[IDENT] Node: 'leeannjakel'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'Author'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

[DEBUG] 2021-05-06 20:06:42.025 [http-nio-8080-exec-1] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2021-05-06 20:06:42.027 [http-nio-8080-exec-1] FromElement - FromClause{level=1} : com.leeannjakel.entity.Author (generatedAlias0) -> author0_
[DEBUG] 2021-05-06 20:06:42.027 [http-nio-8080-exec-1] FromReferenceNode - Resolved : generatedAlias0 -> author0_.id
[DEBUG] 2021-05-06 20:06:42.027 [http-nio-8080-exec-1] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2021-05-06 20:06:42.027 [http-nio-8080-exec-1] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} author0_.id ) ( FromClause{level=1} author author0_ ) )
[DEBUG] 2021-05-06 20:06:42.028 [http-nio-8080-exec-1] JoinProcessor - Using FROM fragment [author author0_]
[DEBUG] 2021-05-06 20:06:42.028 [http-nio-8080-exec-1] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2021-05-06 20:06:42.028 [http-nio-8080-exec-1] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (author)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'author0_.id as id1_0_' {alias=generatedAlias0, className=com.leeannjakel.entity.Author, tableAlias=author0_}
    |  \-[SQL_TOKEN] SqlFragment: 'author0_.name as name2_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[author0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'author author0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=author,tableAlias=author0_,origin=null,columns={,className=com.leeannjakel.entity.Author}}

[DEBUG] 2021-05-06 20:06:42.028 [http-nio-8080-exec-1] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2021-05-06 20:06:42.028 [http-nio-8080-exec-1] QueryTranslatorImpl - HQL: select generatedAlias0 from com.leeannjakel.entity.Author as generatedAlias0
[DEBUG] 2021-05-06 20:06:42.028 [http-nio-8080-exec-1] QueryTranslatorImpl - SQL: select author0_.id as id1_0_, author0_.name as name2_0_ from author author0_
[DEBUG] 2021-05-06 20:06:42.028 [http-nio-8080-exec-1] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2021-05-06 20:06:42.028 [http-nio-8080-exec-1] SQL - select author0_.id as id1_0_, author0_.name as name2_0_ from author author0_
[DEBUG] 2021-05-06 20:06:42.058 [http-nio-8080-exec-1] Loader - Result set row: 0
[DEBUG] 2021-05-06 20:06:42.058 [http-nio-8080-exec-1] Loader - Result row: EntityKey[com.leeannjakel.entity.Author#1]
[DEBUG] 2021-05-06 20:06:42.059 [http-nio-8080-exec-1] Loader - Result set row: 1
[DEBUG] 2021-05-06 20:06:42.059 [http-nio-8080-exec-1] Loader - Result row: EntityKey[com.leeannjakel.entity.Author#2]
[DEBUG] 2021-05-06 20:06:42.059 [http-nio-8080-exec-1] Loader - Result set row: 2
[DEBUG] 2021-05-06 20:06:42.059 [http-nio-8080-exec-1] Loader - Result row: EntityKey[com.leeannjakel.entity.Author#3]
[DEBUG] 2021-05-06 20:06:42.059 [http-nio-8080-exec-1] Loader - Result set row: 3
[DEBUG] 2021-05-06 20:06:42.059 [http-nio-8080-exec-1] Loader - Result row: EntityKey[com.leeannjakel.entity.Author#4]
[DEBUG] 2021-05-06 20:06:42.059 [http-nio-8080-exec-1] Loader - Result set row: 4
[DEBUG] 2021-05-06 20:06:42.059 [http-nio-8080-exec-1] Loader - Result row: EntityKey[com.leeannjakel.entity.Author#5]
[DEBUG] 2021-05-06 20:06:42.059 [http-nio-8080-exec-1] Loader - Result set row: 5
[DEBUG] 2021-05-06 20:06:42.059 [http-nio-8080-exec-1] Loader - Result row: EntityKey[com.leeannjakel.entity.Author#14]
[DEBUG] 2021-05-06 20:06:42.059 [http-nio-8080-exec-1] Loader - Result set row: 6
[DEBUG] 2021-05-06 20:06:42.059 [http-nio-8080-exec-1] Loader - Result row: EntityKey[com.leeannjakel.entity.Author#15]
[DEBUG] 2021-05-06 20:06:42.059 [http-nio-8080-exec-1] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.Author#1]
[DEBUG] 2021-05-06 20:06:42.059 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `books` : value = NOT NULL COLLECTION
[DEBUG] 2021-05-06 20:06:42.059 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`books`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:06:42.059 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `name` : value = Sarah J. Maas 
[DEBUG] 2021-05-06 20:06:42.059 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:06:42.060 [http-nio-8080-exec-1] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.Author#1]
[DEBUG] 2021-05-06 20:06:42.076 [http-nio-8080-exec-1] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.Author#2]
[DEBUG] 2021-05-06 20:06:42.076 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `books` : value = NOT NULL COLLECTION
[DEBUG] 2021-05-06 20:06:42.076 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`books`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:06:42.076 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `name` : value = Cassandra Clare
[DEBUG] 2021-05-06 20:06:42.076 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:06:42.076 [http-nio-8080-exec-1] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.Author#2]
[DEBUG] 2021-05-06 20:06:42.076 [http-nio-8080-exec-1] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.Author#3]
[DEBUG] 2021-05-06 20:06:42.076 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `books` : value = NOT NULL COLLECTION
[DEBUG] 2021-05-06 20:06:42.077 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`books`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:06:42.077 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `name` : value = Stephen King
[DEBUG] 2021-05-06 20:06:42.077 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:06:42.077 [http-nio-8080-exec-1] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.Author#3]
[DEBUG] 2021-05-06 20:06:42.077 [http-nio-8080-exec-1] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.Author#4]
[DEBUG] 2021-05-06 20:06:42.077 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `books` : value = NOT NULL COLLECTION
[DEBUG] 2021-05-06 20:06:42.077 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`books`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:06:42.077 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `name` : value = Brandon Sanderson
[DEBUG] 2021-05-06 20:06:42.077 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:06:42.077 [http-nio-8080-exec-1] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.Author#4]
[DEBUG] 2021-05-06 20:06:42.077 [http-nio-8080-exec-1] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.Author#5]
[DEBUG] 2021-05-06 20:06:42.077 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `books` : value = NOT NULL COLLECTION
[DEBUG] 2021-05-06 20:06:42.077 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`books`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:06:42.077 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `name` : value = Nora Roberts
[DEBUG] 2021-05-06 20:06:42.077 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:06:42.077 [http-nio-8080-exec-1] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.Author#5]
[DEBUG] 2021-05-06 20:06:42.077 [http-nio-8080-exec-1] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.Author#14]
[DEBUG] 2021-05-06 20:06:42.077 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `books` : value = NOT NULL COLLECTION
[DEBUG] 2021-05-06 20:06:42.077 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`books`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:06:42.077 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `name` : value = Sarah J. Maas
[DEBUG] 2021-05-06 20:06:42.077 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:06:42.077 [http-nio-8080-exec-1] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.Author#14]
[DEBUG] 2021-05-06 20:06:42.077 [http-nio-8080-exec-1] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.Author#15]
[DEBUG] 2021-05-06 20:06:42.077 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `books` : value = NOT NULL COLLECTION
[DEBUG] 2021-05-06 20:06:42.077 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`books`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:06:42.077 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `name` : value = Morgan Deane
[DEBUG] 2021-05-06 20:06:42.077 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:06:42.077 [http-nio-8080-exec-1] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.Author#15]
[DEBUG] 2021-05-06 20:06:42.083 [http-nio-8080-exec-1] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-05-06 20:06:42.105 [http-nio-8080-exec-1] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2021-05-06 20:06:42.105 [http-nio-8080-exec-1] TransactionImpl - begin
[DEBUG] 2021-05-06 20:06:42.150 [http-nio-8080-exec-1] ActionQueue - Executing identity-insert immediately
[DEBUG] 2021-05-06 20:06:42.219 [http-nio-8080-exec-1] SQL - insert into author (name) values (?)
[DEBUG] 2021-05-06 20:06:42.275 [http-nio-8080-exec-1] IdentifierGeneratorHelper - Natively generated identity: 16
[DEBUG] 2021-05-06 20:06:42.281 [http-nio-8080-exec-1] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-05-06 20:06:42.294 [http-nio-8080-exec-1] TransactionImpl - committing
[DEBUG] 2021-05-06 20:06:42.298 [http-nio-8080-exec-1] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2021-05-06 20:06:42.298 [http-nio-8080-exec-1] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2021-05-06 20:06:42.307 [http-nio-8080-exec-1] Collections - Collection found: [com.leeannjakel.entity.Author.books#16], was: [<unreferenced>] (initialized)
[DEBUG] 2021-05-06 20:06:42.330 [http-nio-8080-exec-1] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
[DEBUG] 2021-05-06 20:06:42.330 [http-nio-8080-exec-1] AbstractFlushingEventListener - Flushed: 1 (re)creations, 0 updates, 0 removals to 1 collections
[DEBUG] 2021-05-06 20:06:42.336 [http-nio-8080-exec-1] EntityPrinter - Listing entities:
[DEBUG] 2021-05-06 20:06:42.337 [http-nio-8080-exec-1] EntityPrinter - com.leeannjakel.entity.Author{books=[], name=Leigh Bardugo, id=16}
[DEBUG] 2021-05-06 20:06:42.361 [http-nio-8080-exec-1] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-05-06 20:06:42.364 [http-nio-8080-exec-1] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-05-06 20:06:42.375 [http-nio-8080-exec-1] SQL - select author0_.id as id1_0_0_, author0_.name as name2_0_0_ from author author0_ where author0_.id=?
[DEBUG] 2021-05-06 20:06:42.378 [http-nio-8080-exec-1] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-05-06 20:06:42.378 [http-nio-8080-exec-1] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-05-06 20:06:42.393 [http-nio-8080-exec-1] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.Author#16]
[DEBUG] 2021-05-06 20:06:42.393 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `books` : value = NOT NULL COLLECTION
[DEBUG] 2021-05-06 20:06:42.393 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`books`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:06:42.393 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `name` : value = Leigh Bardugo
[DEBUG] 2021-05-06 20:06:42.393 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:06:42.393 [http-nio-8080-exec-1] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.Author#16]
[DEBUG] 2021-05-06 20:06:42.393 [http-nio-8080-exec-1] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-05-06 20:06:42.393 [http-nio-8080-exec-1] AbstractLoadPlanBasedEntityLoader - Done entity load : com.leeannjakel.entity.Author#16
[DEBUG] 2021-05-06 20:06:42.393 [http-nio-8080-exec-1] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-05-06 20:06:42.397 [http-nio-8080-exec-1] SQL - select genre0_.id as id1_2_0_, genre0_.name as name2_2_0_ from genre genre0_ where genre0_.id=?
[DEBUG] 2021-05-06 20:06:42.414 [http-nio-8080-exec-1] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-05-06 20:06:42.417 [http-nio-8080-exec-1] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-05-06 20:06:42.417 [http-nio-8080-exec-1] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.Genre#1]
[DEBUG] 2021-05-06 20:06:42.418 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `books` : value = NOT NULL COLLECTION
[DEBUG] 2021-05-06 20:06:42.418 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`books`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:06:42.418 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `name` : value = Young Adult
[DEBUG] 2021-05-06 20:06:42.418 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:06:42.418 [http-nio-8080-exec-1] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.Genre#1]
[DEBUG] 2021-05-06 20:06:42.418 [http-nio-8080-exec-1] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-05-06 20:06:42.418 [http-nio-8080-exec-1] AbstractLoadPlanBasedEntityLoader - Done entity load : com.leeannjakel.entity.Genre#1
[DEBUG] 2021-05-06 20:06:42.418 [http-nio-8080-exec-1] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-05-06 20:06:42.424 [http-nio-8080-exec-1] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2021-05-06 20:06:42.424 [http-nio-8080-exec-1] TransactionImpl - begin
[DEBUG] 2021-05-06 20:06:42.425 [http-nio-8080-exec-1] ActionQueue - Executing identity-insert immediately
[DEBUG] 2021-05-06 20:06:42.426 [http-nio-8080-exec-1] SQL - insert into book (author_id, genre_id, isbn, notes, title, user_id) values (?, ?, ?, ?, ?, ?)
[DEBUG] 2021-05-06 20:06:42.445 [http-nio-8080-exec-1] IdentifierGeneratorHelper - Natively generated identity: 13
[DEBUG] 2021-05-06 20:06:42.445 [http-nio-8080-exec-1] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-05-06 20:06:42.445 [http-nio-8080-exec-1] TransactionImpl - committing
[DEBUG] 2021-05-06 20:06:42.445 [http-nio-8080-exec-1] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2021-05-06 20:06:42.445 [http-nio-8080-exec-1] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2021-05-06 20:06:42.445 [http-nio-8080-exec-1] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
[DEBUG] 2021-05-06 20:06:42.445 [http-nio-8080-exec-1] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[DEBUG] 2021-05-06 20:06:42.445 [http-nio-8080-exec-1] EntityPrinter - Listing entities:
[DEBUG] 2021-05-06 20:06:42.445 [http-nio-8080-exec-1] EntityPrinter - com.leeannjakel.entity.Book{notes=, author=com.leeannjakel.entity.Author#16, isbn=9781780622262, genre=com.leeannjakel.entity.Genre#1, id=13, title=The Grisha : Shadow and Bone, user=com.leeannjakel.entity.User#1}
[DEBUG] 2021-05-06 20:06:42.455 [http-nio-8080-exec-1] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-05-06 20:06:42.462 [http-nio-8080-exec-1] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-05-06 20:06:59.259 [http-nio-8080-exec-6] SQL - select book0_.id as id1_1_0_, book0_.author_id as author_i5_1_0_, book0_.genre_id as genre_id6_1_0_, book0_.isbn as isbn2_1_0_, book0_.notes as notes3_1_0_, book0_.title as title4_1_0_, book0_.user_id as user_id7_1_0_, author1_.id as id1_0_1_, author1_.name as name2_0_1_, genre2_.id as id1_2_2_, genre2_.name as name2_2_2_, user3_.id as id1_4_3_, user3_.email as email2_4_3_, user3_.first_name as first_na3_4_3_, user3_.last_name as last_nam4_4_3_, user3_.password as password5_4_3_, user3_.user_name as user_nam6_4_3_, roles4_.user_id as user_id4_3_4_, roles4_.id as id1_3_4_, roles4_.id as id1_3_5_, roles4_.role_name as role_nam2_3_5_, roles4_.user_id as user_id4_3_5_, roles4_.user_name as user_nam3_3_5_ from book book0_ left outer join author author1_ on book0_.author_id=author1_.id left outer join genre genre2_ on book0_.genre_id=genre2_.id left outer join user user3_ on book0_.user_id=user3_.id left outer join role roles4_ on user3_.id=roles4_.user_id where book0_.id=?
[DEBUG] 2021-05-06 20:06:59.270 [http-nio-8080-exec-6] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-05-06 20:06:59.274 [http-nio-8080-exec-6] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-05-06 20:06:59.292 [http-nio-8080-exec-6] CollectionReferenceInitializerImpl - Found row of collection: [com.leeannjakel.entity.User.roles#1]
[DEBUG] 2021-05-06 20:06:59.293 [http-nio-8080-exec-6] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.Book#13]
[DEBUG] 2021-05-06 20:06:59.293 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `author` : value = 16
[DEBUG] 2021-05-06 20:06:59.293 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`author`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:06:59.293 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `genre` : value = 1
[DEBUG] 2021-05-06 20:06:59.293 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`genre`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:06:59.293 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `isbn` : value = 9781780622262
[DEBUG] 2021-05-06 20:06:59.293 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`isbn`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:06:59.293 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `notes` : value = 
[DEBUG] 2021-05-06 20:06:59.293 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`notes`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:06:59.294 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `title` : value = The Grisha : Shadow and Bone
[DEBUG] 2021-05-06 20:06:59.294 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:06:59.294 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2021-05-06 20:06:59.294 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:06:59.298 [http-nio-8080-exec-6] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.Book#13]
[DEBUG] 2021-05-06 20:06:59.298 [http-nio-8080-exec-6] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.Author#16]
[DEBUG] 2021-05-06 20:06:59.298 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `books` : value = NOT NULL COLLECTION
[DEBUG] 2021-05-06 20:06:59.298 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`books`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:06:59.303 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `name` : value = Leigh Bardugo
[DEBUG] 2021-05-06 20:06:59.303 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:06:59.303 [http-nio-8080-exec-6] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.Author#16]
[DEBUG] 2021-05-06 20:06:59.303 [http-nio-8080-exec-6] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.Genre#1]
[DEBUG] 2021-05-06 20:06:59.303 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `books` : value = NOT NULL COLLECTION
[DEBUG] 2021-05-06 20:06:59.303 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`books`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:06:59.304 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `name` : value = Young Adult
[DEBUG] 2021-05-06 20:06:59.304 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:06:59.304 [http-nio-8080-exec-6] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.Genre#1]
[DEBUG] 2021-05-06 20:06:59.304 [http-nio-8080-exec-6] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.User#1]
[DEBUG] 2021-05-06 20:06:59.304 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `books` : value = NOT NULL COLLECTION
[DEBUG] 2021-05-06 20:06:59.304 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`books`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:06:59.304 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `email` : value = email@something.com
[DEBUG] 2021-05-06 20:06:59.304 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:06:59.304 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `firstName` : value = LeeAnn
[DEBUG] 2021-05-06 20:06:59.304 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:06:59.304 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `lastName` : value = Jakel
[DEBUG] 2021-05-06 20:06:59.304 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:06:59.304 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `password` : value = password
[DEBUG] 2021-05-06 20:06:59.304 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:06:59.304 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2021-05-06 20:06:59.304 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:06:59.304 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `userName` : value = ljakel
[DEBUG] 2021-05-06 20:06:59.307 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:06:59.307 [http-nio-8080-exec-6] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.User#1]
[DEBUG] 2021-05-06 20:06:59.307 [http-nio-8080-exec-6] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.Role#7]
[DEBUG] 2021-05-06 20:06:59.307 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `roleName` : value = admin
[DEBUG] 2021-05-06 20:06:59.307 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`roleName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:06:59.307 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2021-05-06 20:06:59.307 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:06:59.307 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `userName` : value = ljakel
[DEBUG] 2021-05-06 20:06:59.307 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:06:59.307 [http-nio-8080-exec-6] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.Role#7]
[DEBUG] 2021-05-06 20:06:59.307 [http-nio-8080-exec-6] CollectionLoadContext - 1 collections were found in result set for role: com.leeannjakel.entity.User.roles
[DEBUG] 2021-05-06 20:06:59.307 [http-nio-8080-exec-6] CollectionLoadContext - Collection fully initialized: [com.leeannjakel.entity.User.roles#1]
[DEBUG] 2021-05-06 20:06:59.307 [http-nio-8080-exec-6] CollectionLoadContext - 1 collections initialized for role: com.leeannjakel.entity.User.roles
[DEBUG] 2021-05-06 20:06:59.308 [http-nio-8080-exec-6] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-05-06 20:06:59.308 [http-nio-8080-exec-6] AbstractLoadPlanBasedEntityLoader - Done entity load : com.leeannjakel.entity.Book#13
[DEBUG] 2021-05-06 20:06:59.308 [http-nio-8080-exec-6] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-05-06 20:06:59.325 [http-nio-8080-exec-6] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from Genre as generatedAlias0 where generatedAlias0.name=:param0
[DEBUG] 2021-05-06 20:06:59.326 [http-nio-8080-exec-6] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from com.leeannjakel.entity.Genre as generatedAlias0 where generatedAlias0.name=:param0
[DEBUG] 2021-05-06 20:06:59.330 [http-nio-8080-exec-6] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2021-05-06 20:06:59.330 [http-nio-8080-exec-6] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  \-[IDENT] Node: 'leeannjakel'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'Genre'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'name'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

[DEBUG] 2021-05-06 20:06:59.334 [http-nio-8080-exec-6] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2021-05-06 20:06:59.335 [http-nio-8080-exec-6] FromElement - FromClause{level=1} : com.leeannjakel.entity.Genre (generatedAlias0) -> genre0_
[DEBUG] 2021-05-06 20:06:59.335 [http-nio-8080-exec-6] FromReferenceNode - Resolved : generatedAlias0 -> genre0_.id
[DEBUG] 2021-05-06 20:06:59.345 [http-nio-8080-exec-6] FromReferenceNode - Resolved : generatedAlias0 -> genre0_.id
[DEBUG] 2021-05-06 20:06:59.345 [http-nio-8080-exec-6] DotNode - getDataType() : name -> org.hibernate.type.StringType@37a5b2a0
[DEBUG] 2021-05-06 20:06:59.345 [http-nio-8080-exec-6] FromReferenceNode - Resolved : generatedAlias0.name -> genre0_.name
[DEBUG] 2021-05-06 20:06:59.346 [http-nio-8080-exec-6] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2021-05-06 20:06:59.346 [http-nio-8080-exec-6] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} genre0_.id ) ( FromClause{level=1} genre genre0_ ) ( where ( = ( genre0_.name genre0_.id name ) ? ) ) )
[DEBUG] 2021-05-06 20:06:59.346 [http-nio-8080-exec-6] JoinProcessor - Using FROM fragment [genre genre0_]
[DEBUG] 2021-05-06 20:06:59.346 [http-nio-8080-exec-6] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2021-05-06 20:06:59.351 [http-nio-8080-exec-6] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (genre)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'genre0_.id as id1_2_' {alias=generatedAlias0, className=com.leeannjakel.entity.Genre, tableAlias=genre0_}
    |  \-[SQL_TOKEN] SqlFragment: 'genre0_.name as name2_2_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[genre0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'genre genre0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=genre,tableAlias=genre0_,origin=null,columns={,className=com.leeannjakel.entity.Genre}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'genre0_.name' {propertyName=name,dereferenceType=PRIMITIVE,getPropertyPath=name,path=generatedAlias0.name,tableAlias=genre0_,className=com.leeannjakel.entity.Genre,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'genre0_.id' {alias=generatedAlias0, className=com.leeannjakel.entity.Genre, tableAlias=genre0_}
          |  \-[IDENT] IdentNode: 'name' {originalText=name}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@37a5b2a0}

[DEBUG] 2021-05-06 20:06:59.351 [http-nio-8080-exec-6] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2021-05-06 20:06:59.351 [http-nio-8080-exec-6] QueryTranslatorImpl - HQL: select generatedAlias0 from com.leeannjakel.entity.Genre as generatedAlias0 where generatedAlias0.name=:param0
[DEBUG] 2021-05-06 20:06:59.351 [http-nio-8080-exec-6] QueryTranslatorImpl - SQL: select genre0_.id as id1_2_, genre0_.name as name2_2_ from genre genre0_ where genre0_.name=?
[DEBUG] 2021-05-06 20:06:59.351 [http-nio-8080-exec-6] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2021-05-06 20:06:59.354 [http-nio-8080-exec-6] SQL - select genre0_.id as id1_2_, genre0_.name as name2_2_ from genre genre0_ where genre0_.name=?
[DEBUG] 2021-05-06 20:06:59.359 [http-nio-8080-exec-6] Loader - Result set row: 0
[DEBUG] 2021-05-06 20:06:59.359 [http-nio-8080-exec-6] Loader - Result row: EntityKey[com.leeannjakel.entity.Genre#1]
[DEBUG] 2021-05-06 20:06:59.360 [http-nio-8080-exec-6] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.Genre#1]
[DEBUG] 2021-05-06 20:06:59.360 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `books` : value = NOT NULL COLLECTION
[DEBUG] 2021-05-06 20:06:59.360 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`books`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:06:59.360 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `name` : value = Young Adult
[DEBUG] 2021-05-06 20:06:59.360 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:06:59.360 [http-nio-8080-exec-6] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.Genre#1]
[DEBUG] 2021-05-06 20:06:59.360 [http-nio-8080-exec-6] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-05-06 20:06:59.365 [http-nio-8080-exec-6] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2021-05-06 20:06:59.365 [http-nio-8080-exec-6] TransactionImpl - begin
[DEBUG] 2021-05-06 20:06:59.393 [http-nio-8080-exec-6] TransactionImpl - committing
[DEBUG] 2021-05-06 20:06:59.393 [http-nio-8080-exec-6] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2021-05-06 20:06:59.393 [http-nio-8080-exec-6] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2021-05-06 20:06:59.407 [http-nio-8080-exec-6] AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
[DEBUG] 2021-05-06 20:06:59.409 [http-nio-8080-exec-6] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[DEBUG] 2021-05-06 20:06:59.411 [http-nio-8080-exec-6] EntityPrinter - Listing entities:
[DEBUG] 2021-05-06 20:06:59.411 [http-nio-8080-exec-6] EntityPrinter - com.leeannjakel.entity.Book{notes=book 1 of the first series, author=com.leeannjakel.entity.Author#16, isbn=9781780622262, genre=com.leeannjakel.entity.Genre#1, id=13, title=The Grisha : Shadow and Bone, user=com.leeannjakel.entity.User#1}
[DEBUG] 2021-05-06 20:06:59.428 [http-nio-8080-exec-6] SQL - update book set author_id=?, genre_id=?, isbn=?, notes=?, title=?, user_id=? where id=?
[DEBUG] 2021-05-06 20:06:59.448 [http-nio-8080-exec-6] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-05-06 20:06:59.456 [http-nio-8080-exec-6] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-05-06 20:06:59.459 [http-nio-8080-exec-6] SQL - select book0_.id as id1_1_0_, book0_.author_id as author_i5_1_0_, book0_.genre_id as genre_id6_1_0_, book0_.isbn as isbn2_1_0_, book0_.notes as notes3_1_0_, book0_.title as title4_1_0_, book0_.user_id as user_id7_1_0_, author1_.id as id1_0_1_, author1_.name as name2_0_1_, genre2_.id as id1_2_2_, genre2_.name as name2_2_2_, user3_.id as id1_4_3_, user3_.email as email2_4_3_, user3_.first_name as first_na3_4_3_, user3_.last_name as last_nam4_4_3_, user3_.password as password5_4_3_, user3_.user_name as user_nam6_4_3_, roles4_.user_id as user_id4_3_4_, roles4_.id as id1_3_4_, roles4_.id as id1_3_5_, roles4_.role_name as role_nam2_3_5_, roles4_.user_id as user_id4_3_5_, roles4_.user_name as user_nam3_3_5_ from book book0_ left outer join author author1_ on book0_.author_id=author1_.id left outer join genre genre2_ on book0_.genre_id=genre2_.id left outer join user user3_ on book0_.user_id=user3_.id left outer join role roles4_ on user3_.id=roles4_.user_id where book0_.id=?
[DEBUG] 2021-05-06 20:06:59.475 [http-nio-8080-exec-6] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-05-06 20:06:59.475 [http-nio-8080-exec-6] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-05-06 20:06:59.480 [http-nio-8080-exec-6] CollectionReferenceInitializerImpl - Found row of collection: [com.leeannjakel.entity.User.roles#1]
[DEBUG] 2021-05-06 20:06:59.480 [http-nio-8080-exec-6] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.Book#13]
[DEBUG] 2021-05-06 20:06:59.480 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `author` : value = 16
[DEBUG] 2021-05-06 20:06:59.480 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`author`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:06:59.480 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `genre` : value = 1
[DEBUG] 2021-05-06 20:06:59.480 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`genre`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:06:59.480 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `isbn` : value = 9781780622262
[DEBUG] 2021-05-06 20:06:59.481 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`isbn`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:06:59.485 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `notes` : value = book 1 of the first series
[DEBUG] 2021-05-06 20:06:59.485 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`notes`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:06:59.485 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `title` : value = The Grisha : Shadow and Bone
[DEBUG] 2021-05-06 20:06:59.485 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:06:59.485 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2021-05-06 20:06:59.485 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:06:59.485 [http-nio-8080-exec-6] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.Book#13]
[DEBUG] 2021-05-06 20:06:59.485 [http-nio-8080-exec-6] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.Author#16]
[DEBUG] 2021-05-06 20:06:59.485 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `books` : value = NOT NULL COLLECTION
[DEBUG] 2021-05-06 20:06:59.485 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`books`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:06:59.485 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `name` : value = Leigh Bardugo
[DEBUG] 2021-05-06 20:06:59.485 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:06:59.485 [http-nio-8080-exec-6] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.Author#16]
[DEBUG] 2021-05-06 20:06:59.485 [http-nio-8080-exec-6] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.Genre#1]
[DEBUG] 2021-05-06 20:06:59.485 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `books` : value = NOT NULL COLLECTION
[DEBUG] 2021-05-06 20:06:59.485 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`books`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:06:59.485 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `name` : value = Young Adult
[DEBUG] 2021-05-06 20:06:59.485 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:06:59.485 [http-nio-8080-exec-6] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.Genre#1]
[DEBUG] 2021-05-06 20:06:59.485 [http-nio-8080-exec-6] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.User#1]
[DEBUG] 2021-05-06 20:06:59.485 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `books` : value = NOT NULL COLLECTION
[DEBUG] 2021-05-06 20:06:59.486 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`books`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:06:59.486 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `email` : value = email@something.com
[DEBUG] 2021-05-06 20:06:59.486 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:06:59.486 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `firstName` : value = LeeAnn
[DEBUG] 2021-05-06 20:06:59.486 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:06:59.486 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `lastName` : value = Jakel
[DEBUG] 2021-05-06 20:06:59.486 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:06:59.486 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `password` : value = password
[DEBUG] 2021-05-06 20:06:59.486 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:06:59.486 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2021-05-06 20:06:59.486 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:06:59.488 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `userName` : value = ljakel
[DEBUG] 2021-05-06 20:06:59.488 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:06:59.490 [http-nio-8080-exec-6] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.User#1]
[DEBUG] 2021-05-06 20:06:59.490 [http-nio-8080-exec-6] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.Role#7]
[DEBUG] 2021-05-06 20:06:59.490 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `roleName` : value = admin
[DEBUG] 2021-05-06 20:06:59.490 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`roleName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:06:59.490 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2021-05-06 20:06:59.490 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:06:59.490 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `userName` : value = ljakel
[DEBUG] 2021-05-06 20:06:59.491 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:06:59.491 [http-nio-8080-exec-6] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.Role#7]
[DEBUG] 2021-05-06 20:06:59.491 [http-nio-8080-exec-6] CollectionLoadContext - 1 collections were found in result set for role: com.leeannjakel.entity.User.roles
[DEBUG] 2021-05-06 20:06:59.491 [http-nio-8080-exec-6] CollectionLoadContext - Collection fully initialized: [com.leeannjakel.entity.User.roles#1]
[DEBUG] 2021-05-06 20:06:59.491 [http-nio-8080-exec-6] CollectionLoadContext - 1 collections initialized for role: com.leeannjakel.entity.User.roles
[DEBUG] 2021-05-06 20:06:59.491 [http-nio-8080-exec-6] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-05-06 20:06:59.491 [http-nio-8080-exec-6] AbstractLoadPlanBasedEntityLoader - Done entity load : com.leeannjakel.entity.Book#13
[DEBUG] 2021-05-06 20:06:59.491 [http-nio-8080-exec-6] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-05-06 20:07:06.202 [http-nio-8080-exec-3] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from User as generatedAlias0 where generatedAlias0.userName=:param0
[DEBUG] 2021-05-06 20:07:06.204 [http-nio-8080-exec-3] SQL - select user0_.id as id1_4_, user0_.email as email2_4_, user0_.first_name as first_na3_4_, user0_.last_name as last_nam4_4_, user0_.password as password5_4_, user0_.user_name as user_nam6_4_ from user user0_ where user0_.user_name=?
[DEBUG] 2021-05-06 20:07:06.214 [http-nio-8080-exec-3] Loader - Result set row: 0
[DEBUG] 2021-05-06 20:07:06.214 [http-nio-8080-exec-3] Loader - Result row: EntityKey[com.leeannjakel.entity.User#1]
[DEBUG] 2021-05-06 20:07:06.214 [http-nio-8080-exec-3] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.User#1]
[DEBUG] 2021-05-06 20:07:06.214 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `books` : value = NOT NULL COLLECTION
[DEBUG] 2021-05-06 20:07:06.214 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`books`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:07:06.214 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `email` : value = email@something.com
[DEBUG] 2021-05-06 20:07:06.214 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:07:06.214 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `firstName` : value = LeeAnn
[DEBUG] 2021-05-06 20:07:06.217 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:07:06.217 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `lastName` : value = Jakel
[DEBUG] 2021-05-06 20:07:06.217 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:07:06.217 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `password` : value = password
[DEBUG] 2021-05-06 20:07:06.217 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:07:06.217 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2021-05-06 20:07:06.217 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:07:06.217 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `userName` : value = ljakel
[DEBUG] 2021-05-06 20:07:06.217 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:07:06.217 [http-nio-8080-exec-3] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.User#1]
[DEBUG] 2021-05-06 20:07:06.218 [http-nio-8080-exec-3] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.leeannjakel.entity.User.roles#1]
[DEBUG] 2021-05-06 20:07:06.218 [http-nio-8080-exec-3] SQL - select roles0_.user_id as user_id4_3_0_, roles0_.id as id1_3_0_, roles0_.id as id1_3_1_, roles0_.role_name as role_nam2_3_1_, roles0_.user_id as user_id4_3_1_, roles0_.user_name as user_nam3_3_1_ from role roles0_ where roles0_.user_id=?
[DEBUG] 2021-05-06 20:07:06.225 [http-nio-8080-exec-3] ResultSetProcessorImpl - Preparing collection initializer : [com.leeannjakel.entity.User.roles#1]
[DEBUG] 2021-05-06 20:07:06.225 [http-nio-8080-exec-3] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-05-06 20:07:06.225 [http-nio-8080-exec-3] CollectionReferenceInitializerImpl - Found row of collection: [com.leeannjakel.entity.User.roles#1]
[DEBUG] 2021-05-06 20:07:06.226 [http-nio-8080-exec-3] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.Role#7]
[DEBUG] 2021-05-06 20:07:06.226 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `roleName` : value = admin
[DEBUG] 2021-05-06 20:07:06.226 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`roleName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:07:06.226 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2021-05-06 20:07:06.226 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:07:06.226 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `userName` : value = ljakel
[DEBUG] 2021-05-06 20:07:06.226 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:07:06.226 [http-nio-8080-exec-3] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.Role#7]
[DEBUG] 2021-05-06 20:07:06.226 [http-nio-8080-exec-3] CollectionLoadContext - 1 collections were found in result set for role: com.leeannjakel.entity.User.roles
[DEBUG] 2021-05-06 20:07:06.226 [http-nio-8080-exec-3] CollectionLoadContext - Collection fully initialized: [com.leeannjakel.entity.User.roles#1]
[DEBUG] 2021-05-06 20:07:06.226 [http-nio-8080-exec-3] CollectionLoadContext - 1 collections initialized for role: com.leeannjakel.entity.User.roles
[DEBUG] 2021-05-06 20:07:06.226 [http-nio-8080-exec-3] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-05-06 20:07:06.226 [http-nio-8080-exec-3] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2021-05-06 20:07:06.226 [http-nio-8080-exec-3] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-05-06 20:07:06.242 [http-nio-8080-exec-3] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from Book as generatedAlias0 where generatedAlias0.user=1
[DEBUG] 2021-05-06 20:07:06.243 [http-nio-8080-exec-3] SQL - select book0_.id as id1_1_, book0_.author_id as author_i5_1_, book0_.genre_id as genre_id6_1_, book0_.isbn as isbn2_1_, book0_.notes as notes3_1_, book0_.title as title4_1_, book0_.user_id as user_id7_1_ from book book0_ where book0_.user_id=1
[DEBUG] 2021-05-06 20:07:06.244 [http-nio-8080-exec-3] Loader - Result set row: 0
[DEBUG] 2021-05-06 20:07:06.245 [http-nio-8080-exec-3] Loader - Result row: EntityKey[com.leeannjakel.entity.Book#1]
[DEBUG] 2021-05-06 20:07:06.245 [http-nio-8080-exec-3] Loader - Result set row: 1
[DEBUG] 2021-05-06 20:07:06.256 [http-nio-8080-exec-3] Loader - Result row: EntityKey[com.leeannjakel.entity.Book#3]
[DEBUG] 2021-05-06 20:07:06.257 [http-nio-8080-exec-3] Loader - Result set row: 2
[DEBUG] 2021-05-06 20:07:06.257 [http-nio-8080-exec-3] Loader - Result row: EntityKey[com.leeannjakel.entity.Book#8]
[DEBUG] 2021-05-06 20:07:06.262 [http-nio-8080-exec-3] Loader - Result set row: 3
[DEBUG] 2021-05-06 20:07:06.262 [http-nio-8080-exec-3] Loader - Result row: EntityKey[com.leeannjakel.entity.Book#9]
[DEBUG] 2021-05-06 20:07:06.263 [http-nio-8080-exec-3] Loader - Result set row: 4
[DEBUG] 2021-05-06 20:07:06.264 [http-nio-8080-exec-3] Loader - Result row: EntityKey[com.leeannjakel.entity.Book#11]
[DEBUG] 2021-05-06 20:07:06.272 [http-nio-8080-exec-3] Loader - Result set row: 5
[DEBUG] 2021-05-06 20:07:06.274 [http-nio-8080-exec-3] Loader - Result row: EntityKey[com.leeannjakel.entity.Book#12]
[DEBUG] 2021-05-06 20:07:06.276 [http-nio-8080-exec-3] Loader - Result set row: 6
[DEBUG] 2021-05-06 20:07:06.276 [http-nio-8080-exec-3] Loader - Result row: EntityKey[com.leeannjakel.entity.Book#13]
[DEBUG] 2021-05-06 20:07:06.291 [http-nio-8080-exec-3] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.Book#1]
[DEBUG] 2021-05-06 20:07:06.291 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `author` : value = 1
[DEBUG] 2021-05-06 20:07:06.291 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`author`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:07:06.291 [http-nio-8080-exec-3] SQL - select author0_.id as id1_0_0_, author0_.name as name2_0_0_ from author author0_ where author0_.id=?
[DEBUG] 2021-05-06 20:07:06.295 [http-nio-8080-exec-3] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-05-06 20:07:06.295 [http-nio-8080-exec-3] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-05-06 20:07:06.299 [http-nio-8080-exec-3] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.Author#1]
[DEBUG] 2021-05-06 20:07:06.299 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `books` : value = NOT NULL COLLECTION
[DEBUG] 2021-05-06 20:07:06.299 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`books`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:07:06.299 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `name` : value = Sarah J. Maas 
[DEBUG] 2021-05-06 20:07:06.299 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:07:06.299 [http-nio-8080-exec-3] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.Author#1]
[DEBUG] 2021-05-06 20:07:06.299 [http-nio-8080-exec-3] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-05-06 20:07:06.300 [http-nio-8080-exec-3] AbstractLoadPlanBasedEntityLoader - Done entity load : com.leeannjakel.entity.Author#1
[DEBUG] 2021-05-06 20:07:06.300 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `genre` : value = 1
[DEBUG] 2021-05-06 20:07:06.300 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`genre`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:07:06.300 [http-nio-8080-exec-3] SQL - select genre0_.id as id1_2_0_, genre0_.name as name2_2_0_ from genre genre0_ where genre0_.id=?
[DEBUG] 2021-05-06 20:07:06.302 [http-nio-8080-exec-3] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-05-06 20:07:06.302 [http-nio-8080-exec-3] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-05-06 20:07:06.302 [http-nio-8080-exec-3] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.Genre#1]
[DEBUG] 2021-05-06 20:07:06.303 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `books` : value = NOT NULL COLLECTION
[DEBUG] 2021-05-06 20:07:06.303 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`books`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:07:06.303 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `name` : value = Young Adult
[DEBUG] 2021-05-06 20:07:06.303 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:07:06.303 [http-nio-8080-exec-3] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.Genre#1]
[DEBUG] 2021-05-06 20:07:06.303 [http-nio-8080-exec-3] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-05-06 20:07:06.303 [http-nio-8080-exec-3] AbstractLoadPlanBasedEntityLoader - Done entity load : com.leeannjakel.entity.Genre#1
[DEBUG] 2021-05-06 20:07:06.303 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `isbn` : value = 9781408857861
[DEBUG] 2021-05-06 20:07:06.303 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`isbn`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:07:06.303 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `notes` : value = Fantastic book, the mystery and romance is perfectly combined! Rhys is the best! Yay for night court! The 3rd book is my favorite
[DEBUG] 2021-05-06 20:07:06.303 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`notes`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:07:06.303 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `title` : value = A Court Of Thorns and Roses
[DEBUG] 2021-05-06 20:07:06.303 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:07:06.305 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2021-05-06 20:07:06.305 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:07:06.308 [http-nio-8080-exec-3] SQL - select user0_.id as id1_4_0_, user0_.email as email2_4_0_, user0_.first_name as first_na3_4_0_, user0_.last_name as last_nam4_4_0_, user0_.password as password5_4_0_, user0_.user_name as user_nam6_4_0_, roles1_.user_id as user_id4_3_1_, roles1_.id as id1_3_1_, roles1_.id as id1_3_2_, roles1_.role_name as role_nam2_3_2_, roles1_.user_id as user_id4_3_2_, roles1_.user_name as user_nam3_3_2_ from user user0_ left outer join role roles1_ on user0_.id=roles1_.user_id where user0_.id=?
[DEBUG] 2021-05-06 20:07:06.309 [http-nio-8080-exec-3] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-05-06 20:07:06.311 [http-nio-8080-exec-3] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-05-06 20:07:06.317 [http-nio-8080-exec-3] CollectionReferenceInitializerImpl - Found row of collection: [com.leeannjakel.entity.User.roles#1]
[DEBUG] 2021-05-06 20:07:06.317 [http-nio-8080-exec-3] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.User#1]
[DEBUG] 2021-05-06 20:07:06.317 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `books` : value = NOT NULL COLLECTION
[DEBUG] 2021-05-06 20:07:06.317 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`books`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:07:06.317 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `email` : value = email@something.com
[DEBUG] 2021-05-06 20:07:06.317 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:07:06.317 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `firstName` : value = LeeAnn
[DEBUG] 2021-05-06 20:07:06.317 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:07:06.318 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `lastName` : value = Jakel
[DEBUG] 2021-05-06 20:07:06.318 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:07:06.318 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `password` : value = password
[DEBUG] 2021-05-06 20:07:06.318 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:07:06.318 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2021-05-06 20:07:06.318 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:07:06.319 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `userName` : value = ljakel
[DEBUG] 2021-05-06 20:07:06.319 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:07:06.319 [http-nio-8080-exec-3] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.User#1]
[DEBUG] 2021-05-06 20:07:06.319 [http-nio-8080-exec-3] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.Role#7]
[DEBUG] 2021-05-06 20:07:06.319 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `roleName` : value = admin
[DEBUG] 2021-05-06 20:07:06.319 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`roleName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:07:06.319 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2021-05-06 20:07:06.319 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:07:06.319 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `userName` : value = ljakel
[DEBUG] 2021-05-06 20:07:06.319 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:07:06.319 [http-nio-8080-exec-3] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.Role#7]
[DEBUG] 2021-05-06 20:07:06.319 [http-nio-8080-exec-3] CollectionLoadContext - 1 collections were found in result set for role: com.leeannjakel.entity.User.roles
[DEBUG] 2021-05-06 20:07:06.326 [http-nio-8080-exec-3] CollectionLoadContext - Collection fully initialized: [com.leeannjakel.entity.User.roles#1]
[DEBUG] 2021-05-06 20:07:06.326 [http-nio-8080-exec-3] CollectionLoadContext - 1 collections initialized for role: com.leeannjakel.entity.User.roles
[DEBUG] 2021-05-06 20:07:06.326 [http-nio-8080-exec-3] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-05-06 20:07:06.326 [http-nio-8080-exec-3] AbstractLoadPlanBasedEntityLoader - Done entity load : com.leeannjakel.entity.User#1
[DEBUG] 2021-05-06 20:07:06.326 [http-nio-8080-exec-3] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.Book#1]
[DEBUG] 2021-05-06 20:07:06.326 [http-nio-8080-exec-3] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.Book#3]
[DEBUG] 2021-05-06 20:07:06.326 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `author` : value = 5
[DEBUG] 2021-05-06 20:07:06.326 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`author`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:07:06.327 [http-nio-8080-exec-3] SQL - select author0_.id as id1_0_0_, author0_.name as name2_0_0_ from author author0_ where author0_.id=?
[DEBUG] 2021-05-06 20:07:06.331 [http-nio-8080-exec-3] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-05-06 20:07:06.331 [http-nio-8080-exec-3] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-05-06 20:07:06.332 [http-nio-8080-exec-3] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.Author#5]
[DEBUG] 2021-05-06 20:07:06.332 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `books` : value = NOT NULL COLLECTION
[DEBUG] 2021-05-06 20:07:06.332 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`books`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:07:06.332 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `name` : value = Nora Roberts
[DEBUG] 2021-05-06 20:07:06.332 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:07:06.332 [http-nio-8080-exec-3] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.Author#5]
[DEBUG] 2021-05-06 20:07:06.332 [http-nio-8080-exec-3] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-05-06 20:07:06.332 [http-nio-8080-exec-3] AbstractLoadPlanBasedEntityLoader - Done entity load : com.leeannjakel.entity.Author#5
[DEBUG] 2021-05-06 20:07:06.333 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `genre` : value = 5
[DEBUG] 2021-05-06 20:07:06.333 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`genre`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:07:06.333 [http-nio-8080-exec-3] SQL - select genre0_.id as id1_2_0_, genre0_.name as name2_2_0_ from genre genre0_ where genre0_.id=?
[DEBUG] 2021-05-06 20:07:06.335 [http-nio-8080-exec-3] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-05-06 20:07:06.336 [http-nio-8080-exec-3] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-05-06 20:07:06.346 [http-nio-8080-exec-3] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.Genre#5]
[DEBUG] 2021-05-06 20:07:06.346 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `books` : value = NOT NULL COLLECTION
[DEBUG] 2021-05-06 20:07:06.346 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`books`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:07:06.347 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `name` : value = Romance
[DEBUG] 2021-05-06 20:07:06.347 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:07:06.350 [http-nio-8080-exec-3] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.Genre#5]
[DEBUG] 2021-05-06 20:07:06.351 [http-nio-8080-exec-3] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-05-06 20:07:06.351 [http-nio-8080-exec-3] AbstractLoadPlanBasedEntityLoader - Done entity load : com.leeannjakel.entity.Genre#5
[DEBUG] 2021-05-06 20:07:06.351 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `isbn` : value = 9780425259856
[DEBUG] 2021-05-06 20:07:06.352 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`isbn`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:07:06.352 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `notes` : value = null
[DEBUG] 2021-05-06 20:07:06.352 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`notes`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:07:06.352 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `title` : value = Dark Witch
[DEBUG] 2021-05-06 20:07:06.352 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:07:06.353 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2021-05-06 20:07:06.355 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:07:06.355 [http-nio-8080-exec-3] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.Book#3]
[DEBUG] 2021-05-06 20:07:06.355 [http-nio-8080-exec-3] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.Book#8]
[DEBUG] 2021-05-06 20:07:06.355 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `author` : value = 14
[DEBUG] 2021-05-06 20:07:06.355 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`author`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:07:06.356 [http-nio-8080-exec-3] SQL - select author0_.id as id1_0_0_, author0_.name as name2_0_0_ from author author0_ where author0_.id=?
[DEBUG] 2021-05-06 20:07:06.358 [http-nio-8080-exec-3] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-05-06 20:07:06.358 [http-nio-8080-exec-3] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-05-06 20:07:06.358 [http-nio-8080-exec-3] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.Author#14]
[DEBUG] 2021-05-06 20:07:06.358 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `books` : value = NOT NULL COLLECTION
[DEBUG] 2021-05-06 20:07:06.358 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`books`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:07:06.358 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `name` : value = Sarah J. Maas
[DEBUG] 2021-05-06 20:07:06.358 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:07:06.358 [http-nio-8080-exec-3] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.Author#14]
[DEBUG] 2021-05-06 20:07:06.362 [http-nio-8080-exec-3] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-05-06 20:07:06.362 [http-nio-8080-exec-3] AbstractLoadPlanBasedEntityLoader - Done entity load : com.leeannjakel.entity.Author#14
[DEBUG] 2021-05-06 20:07:06.363 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `genre` : value = 1
[DEBUG] 2021-05-06 20:07:06.363 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`genre`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:07:06.363 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `isbn` : value = 9781599906959
[DEBUG] 2021-05-06 20:07:06.363 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`isbn`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:07:06.363 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `notes` : value = 
[DEBUG] 2021-05-06 20:07:06.363 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`notes`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:07:06.363 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `title` : value = Throne of glass
[DEBUG] 2021-05-06 20:07:06.363 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:07:06.363 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2021-05-06 20:07:06.363 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:07:06.363 [http-nio-8080-exec-3] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.Book#8]
[DEBUG] 2021-05-06 20:07:06.363 [http-nio-8080-exec-3] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.Book#9]
[DEBUG] 2021-05-06 20:07:06.363 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `author` : value = 14
[DEBUG] 2021-05-06 20:07:06.363 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`author`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:07:06.364 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `genre` : value = 1
[DEBUG] 2021-05-06 20:07:06.365 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`genre`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:07:06.365 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `isbn` : value = 9781599906959
[DEBUG] 2021-05-06 20:07:06.365 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`isbn`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:07:06.365 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `notes` : value = 
[DEBUG] 2021-05-06 20:07:06.365 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`notes`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:07:06.365 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `title` : value = Throne of glass
[DEBUG] 2021-05-06 20:07:06.365 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:07:06.365 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2021-05-06 20:07:06.365 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:07:06.368 [http-nio-8080-exec-3] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.Book#9]
[DEBUG] 2021-05-06 20:07:06.368 [http-nio-8080-exec-3] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.Book#11]
[DEBUG] 2021-05-06 20:07:06.368 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `author` : value = 14
[DEBUG] 2021-05-06 20:07:06.368 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`author`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:07:06.368 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `genre` : value = 1
[DEBUG] 2021-05-06 20:07:06.368 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`genre`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:07:06.374 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `isbn` : value = 9781635574043
[DEBUG] 2021-05-06 20:07:06.375 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`isbn`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:07:06.375 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `notes` : value = woooooo
[DEBUG] 2021-05-06 20:07:06.375 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`notes`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:07:06.375 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `title` : value = Crescent City : house of earth and blood
[DEBUG] 2021-05-06 20:07:06.375 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:07:06.375 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2021-05-06 20:07:06.375 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:07:06.375 [http-nio-8080-exec-3] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.Book#11]
[DEBUG] 2021-05-06 20:07:06.376 [http-nio-8080-exec-3] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.Book#12]
[DEBUG] 2021-05-06 20:07:06.379 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `author` : value = 14
[DEBUG] 2021-05-06 20:07:06.379 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`author`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:07:06.379 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `genre` : value = 6
[DEBUG] 2021-05-06 20:07:06.379 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`genre`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:07:06.380 [http-nio-8080-exec-3] SQL - select genre0_.id as id1_2_0_, genre0_.name as name2_2_0_ from genre genre0_ where genre0_.id=?
[DEBUG] 2021-05-06 20:07:06.382 [http-nio-8080-exec-3] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-05-06 20:07:06.382 [http-nio-8080-exec-3] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-05-06 20:07:06.382 [http-nio-8080-exec-3] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.Genre#6]
[DEBUG] 2021-05-06 20:07:06.382 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `books` : value = NOT NULL COLLECTION
[DEBUG] 2021-05-06 20:07:06.382 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`books`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:07:06.382 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `name` : value = Action
[DEBUG] 2021-05-06 20:07:06.382 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:07:06.382 [http-nio-8080-exec-3] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.Genre#6]
[DEBUG] 2021-05-06 20:07:06.383 [http-nio-8080-exec-3] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-05-06 20:07:06.383 [http-nio-8080-exec-3] AbstractLoadPlanBasedEntityLoader - Done entity load : com.leeannjakel.entity.Genre#6
[DEBUG] 2021-05-06 20:07:06.383 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `isbn` : value = 9781599906959
[DEBUG] 2021-05-06 20:07:06.383 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`isbn`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:07:06.383 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `notes` : value = yay!
[DEBUG] 2021-05-06 20:07:06.383 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`notes`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:07:06.383 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `title` : value = Throne of glass
[DEBUG] 2021-05-06 20:07:06.383 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:07:06.383 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2021-05-06 20:07:06.383 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:07:06.383 [http-nio-8080-exec-3] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.Book#12]
[DEBUG] 2021-05-06 20:07:06.383 [http-nio-8080-exec-3] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.Book#13]
[DEBUG] 2021-05-06 20:07:06.383 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `author` : value = 16
[DEBUG] 2021-05-06 20:07:06.383 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`author`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:07:06.383 [http-nio-8080-exec-3] SQL - select author0_.id as id1_0_0_, author0_.name as name2_0_0_ from author author0_ where author0_.id=?
[DEBUG] 2021-05-06 20:07:06.384 [http-nio-8080-exec-3] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-05-06 20:07:06.384 [http-nio-8080-exec-3] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-05-06 20:07:06.384 [http-nio-8080-exec-3] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.Author#16]
[DEBUG] 2021-05-06 20:07:06.384 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `books` : value = NOT NULL COLLECTION
[DEBUG] 2021-05-06 20:07:06.384 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`books`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:07:06.384 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `name` : value = Leigh Bardugo
[DEBUG] 2021-05-06 20:07:06.385 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:07:06.385 [http-nio-8080-exec-3] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.Author#16]
[DEBUG] 2021-05-06 20:07:06.385 [http-nio-8080-exec-3] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-05-06 20:07:06.385 [http-nio-8080-exec-3] AbstractLoadPlanBasedEntityLoader - Done entity load : com.leeannjakel.entity.Author#16
[DEBUG] 2021-05-06 20:07:06.385 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `genre` : value = 1
[DEBUG] 2021-05-06 20:07:06.385 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`genre`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:07:06.385 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `isbn` : value = 9781780622262
[DEBUG] 2021-05-06 20:07:06.385 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`isbn`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:07:06.387 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `notes` : value = book 1 of the first series
[DEBUG] 2021-05-06 20:07:06.387 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`notes`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:07:06.387 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `title` : value = The Grisha : Shadow and Bone
[DEBUG] 2021-05-06 20:07:06.387 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:07:06.387 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2021-05-06 20:07:06.387 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-06 20:07:06.387 [http-nio-8080-exec-3] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.Book#13]
[DEBUG] 2021-05-06 20:07:06.387 [http-nio-8080-exec-3] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
