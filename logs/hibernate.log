[DEBUG] 2021-05-07 19:25:51.113 [http-nio-8080-exec-8] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2021-05-07 19:25:51.130 [http-nio-8080-exec-8] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2021-05-07 19:25:51.158 [http-nio-8080-exec-8] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2021-05-07 19:25:51.678 [http-nio-8080-exec-8] Version - HHH000412: Hibernate Core {5.4.4.Final}
[DEBUG] 2021-05-07 19:25:51.702 [http-nio-8080-exec-8] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2021-05-07 19:25:52.312 [http-nio-8080-exec-8] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2021-05-07 19:25:52.314 [http-nio-8080-exec-8] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2021-05-07 19:25:52.393 [http-nio-8080-exec-8] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2021-05-07 19:25:53.562 [http-nio-8080-exec-8] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2021-05-07 19:25:53.657 [http-nio-8080-exec-8] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2021-05-07 19:25:53.659 [http-nio-8080-exec-8] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2021-05-07 19:25:53.738 [http-nio-8080-exec-8] Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] 2021-05-07 19:25:53.904 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@7a8b9354
[DEBUG] 2021-05-07 19:25:53.920 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@7a8b9354
[DEBUG] 2021-05-07 19:25:53.921 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7a8b9354
[DEBUG] 2021-05-07 19:25:53.923 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@2f58a325
[DEBUG] 2021-05-07 19:25:53.923 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@2b0caadb
[DEBUG] 2021-05-07 19:25:53.927 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@4c7a8f6a
[DEBUG] 2021-05-07 19:25:53.943 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@56bd3f99
[DEBUG] 2021-05-07 19:25:53.943 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@56bd3f99
[DEBUG] 2021-05-07 19:25:53.943 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@56bd3f99
[DEBUG] 2021-05-07 19:25:53.947 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@2419c240
[DEBUG] 2021-05-07 19:25:53.947 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@2419c240
[DEBUG] 2021-05-07 19:25:53.947 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2419c240
[DEBUG] 2021-05-07 19:25:53.953 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@4899b648
[DEBUG] 2021-05-07 19:25:53.956 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@4899b648
[DEBUG] 2021-05-07 19:25:53.956 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@4899b648
[DEBUG] 2021-05-07 19:25:53.965 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@4b967b83
[DEBUG] 2021-05-07 19:25:53.966 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@4b967b83
[DEBUG] 2021-05-07 19:25:53.966 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@4b967b83
[DEBUG] 2021-05-07 19:25:53.974 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@56cdbc8
[DEBUG] 2021-05-07 19:25:53.978 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@56cdbc8
[DEBUG] 2021-05-07 19:25:53.978 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@56cdbc8
[DEBUG] 2021-05-07 19:25:53.980 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@7791973e
[DEBUG] 2021-05-07 19:25:53.980 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@7791973e
[DEBUG] 2021-05-07 19:25:53.980 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7791973e
[DEBUG] 2021-05-07 19:25:54.203 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@1fed8793
[DEBUG] 2021-05-07 19:25:54.203 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@1fed8793
[DEBUG] 2021-05-07 19:25:54.203 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1fed8793
[DEBUG] 2021-05-07 19:25:54.205 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@39823310
[DEBUG] 2021-05-07 19:25:54.205 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@39823310
[DEBUG] 2021-05-07 19:25:54.222 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@7816ea0b
[DEBUG] 2021-05-07 19:25:54.223 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@7816ea0b
[DEBUG] 2021-05-07 19:25:54.224 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@2b45f373
[DEBUG] 2021-05-07 19:25:54.225 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@2b45f373
[DEBUG] 2021-05-07 19:25:54.225 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@b382728
[DEBUG] 2021-05-07 19:25:54.226 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@7b0339e0
[DEBUG] 2021-05-07 19:25:54.227 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@523c6d16
[DEBUG] 2021-05-07 19:25:54.228 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@523c6d16
[DEBUG] 2021-05-07 19:25:54.229 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@4caf82d6
[DEBUG] 2021-05-07 19:25:54.230 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@4caf82d6
[DEBUG] 2021-05-07 19:25:54.245 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@49ce04ea
[DEBUG] 2021-05-07 19:25:54.245 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@49ce04ea
[DEBUG] 2021-05-07 19:25:54.247 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@389cbe06
[DEBUG] 2021-05-07 19:25:54.247 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@389cbe06
[DEBUG] 2021-05-07 19:25:54.249 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@5fa3145a
[DEBUG] 2021-05-07 19:25:54.250 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@5fa3145a
[DEBUG] 2021-05-07 19:25:54.259 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@1856cdf4
[DEBUG] 2021-05-07 19:25:54.260 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@1856cdf4
[DEBUG] 2021-05-07 19:25:54.264 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@6f0ff198
[DEBUG] 2021-05-07 19:25:54.264 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@6f0ff198
[DEBUG] 2021-05-07 19:25:54.268 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@616bb16d
[DEBUG] 2021-05-07 19:25:54.278 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@616bb16d
[DEBUG] 2021-05-07 19:25:54.280 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@1ef21f6b
[DEBUG] 2021-05-07 19:25:54.280 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@1ef21f6b
[DEBUG] 2021-05-07 19:25:54.282 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@3570d856
[DEBUG] 2021-05-07 19:25:54.284 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@3570d856
[DEBUG] 2021-05-07 19:25:54.291 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@67ad4ef6
[DEBUG] 2021-05-07 19:25:54.291 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@67ad4ef6
[DEBUG] 2021-05-07 19:25:54.293 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@73ce445d
[DEBUG] 2021-05-07 19:25:54.294 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@73ce445d
[DEBUG] 2021-05-07 19:25:54.294 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@73ce445d
[DEBUG] 2021-05-07 19:25:54.296 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@35fc9dd3
[DEBUG] 2021-05-07 19:25:54.298 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@2ca26cd9
[DEBUG] 2021-05-07 19:25:54.298 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@2ca26cd9
[DEBUG] 2021-05-07 19:25:54.299 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@2ca26cd9
[DEBUG] 2021-05-07 19:25:54.308 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@5c135b7
[DEBUG] 2021-05-07 19:25:54.314 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@742530ab
[DEBUG] 2021-05-07 19:25:54.314 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@742530ab
[DEBUG] 2021-05-07 19:25:54.316 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@70e1863b
[DEBUG] 2021-05-07 19:25:54.316 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@70e1863b
[DEBUG] 2021-05-07 19:25:54.317 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@ca86293
[DEBUG] 2021-05-07 19:25:54.318 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@ca86293
[DEBUG] 2021-05-07 19:25:54.319 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@165b39d7
[DEBUG] 2021-05-07 19:25:54.319 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@165b39d7
[DEBUG] 2021-05-07 19:25:54.320 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@26f099c1
[DEBUG] 2021-05-07 19:25:54.320 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@26f099c1
[DEBUG] 2021-05-07 19:25:54.322 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@599a4ef2
[DEBUG] 2021-05-07 19:25:54.324 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@24a1c5b8
[DEBUG] 2021-05-07 19:25:54.324 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@24a1c5b8
[DEBUG] 2021-05-07 19:25:54.324 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@24a1c5b8
[DEBUG] 2021-05-07 19:25:54.326 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@54a8390f
[DEBUG] 2021-05-07 19:25:54.326 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@54a8390f
[DEBUG] 2021-05-07 19:25:54.326 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@54a8390f
[DEBUG] 2021-05-07 19:25:54.328 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@6a297cc4
[DEBUG] 2021-05-07 19:25:54.334 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@73961c8e
[DEBUG] 2021-05-07 19:25:54.337 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@f13b5df
[DEBUG] 2021-05-07 19:25:54.337 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@f13b5df
[DEBUG] 2021-05-07 19:25:54.337 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@f13b5df
[DEBUG] 2021-05-07 19:25:54.339 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@66a220ff
[DEBUG] 2021-05-07 19:25:54.340 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@66a220ff
[DEBUG] 2021-05-07 19:25:54.340 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@66a220ff
[DEBUG] 2021-05-07 19:25:54.340 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@6bce7702
[DEBUG] 2021-05-07 19:25:54.341 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@48234cdc
[DEBUG] 2021-05-07 19:25:54.356 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@29d46a00
[DEBUG] 2021-05-07 19:25:54.356 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@29d46a00
[DEBUG] 2021-05-07 19:25:54.357 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@6ed7a27
[DEBUG] 2021-05-07 19:25:54.360 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@7e0de14e
[DEBUG] 2021-05-07 19:25:54.360 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7e0de14e
[DEBUG] 2021-05-07 19:25:54.369 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@6024f595
[DEBUG] 2021-05-07 19:25:54.370 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@6024f595
[DEBUG] 2021-05-07 19:25:54.376 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@7320a72d
[DEBUG] 2021-05-07 19:25:54.377 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@1e0ad864
[DEBUG] 2021-05-07 19:25:54.379 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@2f3b0594
[DEBUG] 2021-05-07 19:25:54.390 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@41351300
[DEBUG] 2021-05-07 19:25:54.390 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@41351300
[DEBUG] 2021-05-07 19:25:54.392 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@7c56a97d
[DEBUG] 2021-05-07 19:25:54.392 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@3b7779e
[DEBUG] 2021-05-07 19:25:54.392 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@1635a1f2
[DEBUG] 2021-05-07 19:25:54.392 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@138c6a1d
[DEBUG] 2021-05-07 19:25:54.392 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@5a582450
[DEBUG] 2021-05-07 19:25:54.407 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@62eba302
[DEBUG] 2021-05-07 19:25:54.410 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@596ab49c
[DEBUG] 2021-05-07 19:25:54.411 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@2946e12e
[DEBUG] 2021-05-07 19:25:54.507 [http-nio-8080-exec-8] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2021-05-07 19:25:54.508 [http-nio-8080-exec-8] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2021-05-07 19:25:54.509 [http-nio-8080-exec-8] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2021-05-07 19:25:54.511 [http-nio-8080-exec-8] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2021-05-07 19:25:54.513 [http-nio-8080-exec-8] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2021-05-07 19:25:54.514 [http-nio-8080-exec-8] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2021-05-07 19:25:54.515 [http-nio-8080-exec-8] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2021-05-07 19:25:54.517 [http-nio-8080-exec-8] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2021-05-07 19:25:54.522 [http-nio-8080-exec-8] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2021-05-07 19:25:54.523 [http-nio-8080-exec-8] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2021-05-07 19:25:54.524 [http-nio-8080-exec-8] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2021-05-07 19:25:54.524 [http-nio-8080-exec-8] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2021-05-07 19:25:54.524 [http-nio-8080-exec-8] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2021-05-07 19:25:54.525 [http-nio-8080-exec-8] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2021-05-07 19:25:54.560 [http-nio-8080-exec-8] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/BookCollection
[INFO ] 2021-05-07 19:25:54.561 [http-nio-8080-exec-8] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2021-05-07 19:25:54.562 [http-nio-8080-exec-8] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2021-05-07 19:25:55.328 [http-nio-8080-exec-8] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2021-05-07 19:25:56.495 [http-nio-8080-exec-8] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.22
      major : 8
      minor : 0
[DEBUG] 2021-05-07 19:25:56.507 [http-nio-8080-exec-8] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.22 (Revision: d64b664fa93e81296a377de031b8123a67e6def2)
      major : 8
      minor : 0
[DEBUG] 2021-05-07 19:25:56.516 [http-nio-8080-exec-8] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2021-05-07 19:25:56.830 [http-nio-8080-exec-8] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[DEBUG] 2021-05-07 19:25:56.980 [http-nio-8080-exec-8] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2021-05-07 19:25:57.228 [http-nio-8080-exec-8] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2021-05-07 19:25:57.594 [http-nio-8080-exec-8] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2021-05-07 19:25:57.627 [http-nio-8080-exec-8] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@28157f5] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@38e5d0f5]
[DEBUG] 2021-05-07 19:25:58.069 [http-nio-8080-exec-8] AnnotationMetadataSourceProcessorImpl - Encountered a non-categorized annotated class [com.leeannjakel.entity.AuthorResponse]; ignoring
[DEBUG] 2021-05-07 19:25:58.073 [http-nio-8080-exec-8] AnnotationMetadataSourceProcessorImpl - Encountered a non-categorized annotated class [com.leeannjakel.entity.WorksAuthorsItem]; ignoring
[DEBUG] 2021-05-07 19:25:58.077 [http-nio-8080-exec-8] AnnotationMetadataSourceProcessorImpl - Encountered a non-categorized annotated class [com.leeannjakel.entity.Classifications]; ignoring
[DEBUG] 2021-05-07 19:25:58.090 [http-nio-8080-exec-8] AnnotationMetadataSourceProcessorImpl - Encountered a non-categorized annotated class [com.leeannjakel.entity.Created]; ignoring
[DEBUG] 2021-05-07 19:25:58.094 [http-nio-8080-exec-8] AnnotationMetadataSourceProcessorImpl - Encountered a non-categorized annotated class [com.leeannjakel.entity.Identifiers]; ignoring
[DEBUG] 2021-05-07 19:25:58.097 [http-nio-8080-exec-8] AnnotationMetadataSourceProcessorImpl - Encountered a non-categorized annotated class [com.leeannjakel.entity.Info]; ignoring
[DEBUG] 2021-05-07 19:25:58.102 [http-nio-8080-exec-8] AnnotationMetadataSourceProcessorImpl - Encountered a non-categorized annotated class [com.leeannjakel.entity.LanguagesItem]; ignoring
[DEBUG] 2021-05-07 19:25:58.103 [http-nio-8080-exec-8] AnnotationMetadataSourceProcessorImpl - Encountered a non-categorized annotated class [com.leeannjakel.entity.LastModified]; ignoring
[DEBUG] 2021-05-07 19:25:58.110 [http-nio-8080-exec-8] AnnotationMetadataSourceProcessorImpl - Encountered a non-categorized annotated class [com.leeannjakel.entity.Type]; ignoring
[DEBUG] 2021-05-07 19:25:58.123 [http-nio-8080-exec-8] AnnotationMetadataSourceProcessorImpl - Encountered a non-categorized annotated class [com.leeannjakel.entity.WorksItem]; ignoring
[DEBUG] 2021-05-07 19:25:58.281 [http-nio-8080-exec-8] AnnotationBinder - Binding entity from annotated class: com.leeannjakel.entity.Author
[DEBUG] 2021-05-07 19:25:58.531 [http-nio-8080-exec-8] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2021-05-07 19:25:58.563 [http-nio-8080-exec-8] EntityBinder - Import with entity name Author
[DEBUG] 2021-05-07 19:25:58.582 [http-nio-8080-exec-8] EntityBinder - Bind entity com.leeannjakel.entity.Author on table author
[DEBUG] 2021-05-07 19:25:58.841 [http-nio-8080-exec-8] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(author), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-07 19:25:58.852 [http-nio-8080-exec-8] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2021-05-07 19:25:58.861 [http-nio-8080-exec-8] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.leeannjakel.entity.Author:id]
[DEBUG] 2021-05-07 19:25:58.887 [http-nio-8080-exec-8] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2021-05-07 19:25:58.906 [http-nio-8080-exec-8] PropertyBinder - Building property id
[DEBUG] 2021-05-07 19:25:58.914 [http-nio-8080-exec-8] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2021-05-07 19:25:58.938 [http-nio-8080-exec-8] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='author'}
[DEBUG] 2021-05-07 19:25:58.938 [http-nio-8080-exec-8] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(author), mappingColumn=books, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-07 19:25:58.940 [http-nio-8080-exec-8] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(author), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-07 19:25:58.965 [http-nio-8080-exec-8] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(author), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-07 19:25:58.967 [http-nio-8080-exec-8] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(author), mappingColumn=books_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-07 19:25:58.973 [http-nio-8080-exec-8] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='books_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2021-05-07 19:25:58.976 [http-nio-8080-exec-8] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='author'}
[DEBUG] 2021-05-07 19:25:58.976 [http-nio-8080-exec-8] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='author'}
[DEBUG] 2021-05-07 19:25:58.977 [http-nio-8080-exec-8] CollectionBinder - Collection role: com.leeannjakel.entity.Author.books
[DEBUG] 2021-05-07 19:25:59.019 [http-nio-8080-exec-8] PropertyBinder - Building property books
[DEBUG] 2021-05-07 19:25:59.023 [http-nio-8080-exec-8] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(author), mappingColumn=name, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-07 19:25:59.023 [http-nio-8080-exec-8] PropertyBinder - MetadataSourceProcessor property name with lazy=false
[DEBUG] 2021-05-07 19:25:59.026 [http-nio-8080-exec-8] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.leeannjakel.entity.Author:name]
[DEBUG] 2021-05-07 19:25:59.026 [http-nio-8080-exec-8] SimpleValueBinder - building SimpleValue for name
[DEBUG] 2021-05-07 19:25:59.029 [http-nio-8080-exec-8] PropertyBinder - Building property name
[DEBUG] 2021-05-07 19:25:59.037 [http-nio-8080-exec-8] AnnotationBinder - Binding entity from annotated class: com.leeannjakel.entity.Book
[DEBUG] 2021-05-07 19:25:59.038 [http-nio-8080-exec-8] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2021-05-07 19:25:59.038 [http-nio-8080-exec-8] EntityBinder - Import with entity name Book
[DEBUG] 2021-05-07 19:25:59.040 [http-nio-8080-exec-8] EntityBinder - Bind entity com.leeannjakel.entity.Book on table book
[DEBUG] 2021-05-07 19:25:59.086 [http-nio-8080-exec-8] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-07 19:25:59.090 [http-nio-8080-exec-8] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2021-05-07 19:25:59.091 [http-nio-8080-exec-8] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.leeannjakel.entity.Book:id]
[DEBUG] 2021-05-07 19:25:59.091 [http-nio-8080-exec-8] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2021-05-07 19:25:59.091 [http-nio-8080-exec-8] PropertyBinder - Building property id
[DEBUG] 2021-05-07 19:25:59.091 [http-nio-8080-exec-8] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2021-05-07 19:25:59.092 [http-nio-8080-exec-8] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='author_id', referencedColumn='', mappedBy=''}
[DEBUG] 2021-05-07 19:25:59.094 [http-nio-8080-exec-8] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=author, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-07 19:25:59.103 [http-nio-8080-exec-8] PropertyBinder - Building property author
[DEBUG] 2021-05-07 19:25:59.108 [http-nio-8080-exec-8] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='genre_id', referencedColumn='', mappedBy=''}
[DEBUG] 2021-05-07 19:25:59.108 [http-nio-8080-exec-8] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=genre, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-07 19:25:59.109 [http-nio-8080-exec-8] PropertyBinder - Building property genre
[DEBUG] 2021-05-07 19:25:59.121 [http-nio-8080-exec-8] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=isbn, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-07 19:25:59.123 [http-nio-8080-exec-8] PropertyBinder - MetadataSourceProcessor property isbn with lazy=false
[DEBUG] 2021-05-07 19:25:59.123 [http-nio-8080-exec-8] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.leeannjakel.entity.Book:isbn]
[DEBUG] 2021-05-07 19:25:59.123 [http-nio-8080-exec-8] SimpleValueBinder - building SimpleValue for isbn
[DEBUG] 2021-05-07 19:25:59.124 [http-nio-8080-exec-8] PropertyBinder - Building property isbn
[DEBUG] 2021-05-07 19:25:59.124 [http-nio-8080-exec-8] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=notes, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-07 19:25:59.124 [http-nio-8080-exec-8] PropertyBinder - MetadataSourceProcessor property notes with lazy=false
[DEBUG] 2021-05-07 19:25:59.124 [http-nio-8080-exec-8] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.leeannjakel.entity.Book:notes]
[DEBUG] 2021-05-07 19:25:59.124 [http-nio-8080-exec-8] SimpleValueBinder - building SimpleValue for notes
[DEBUG] 2021-05-07 19:25:59.124 [http-nio-8080-exec-8] PropertyBinder - Building property notes
[DEBUG] 2021-05-07 19:25:59.124 [http-nio-8080-exec-8] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=title, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-07 19:25:59.126 [http-nio-8080-exec-8] PropertyBinder - MetadataSourceProcessor property title with lazy=false
[DEBUG] 2021-05-07 19:25:59.127 [http-nio-8080-exec-8] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.leeannjakel.entity.Book:title]
[DEBUG] 2021-05-07 19:25:59.127 [http-nio-8080-exec-8] SimpleValueBinder - building SimpleValue for title
[DEBUG] 2021-05-07 19:25:59.127 [http-nio-8080-exec-8] PropertyBinder - Building property title
[DEBUG] 2021-05-07 19:25:59.127 [http-nio-8080-exec-8] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
[DEBUG] 2021-05-07 19:25:59.127 [http-nio-8080-exec-8] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-07 19:25:59.128 [http-nio-8080-exec-8] PropertyBinder - Building property user
[DEBUG] 2021-05-07 19:25:59.128 [http-nio-8080-exec-8] AnnotationBinder - Binding entity from annotated class: com.leeannjakel.entity.Genre
[DEBUG] 2021-05-07 19:25:59.128 [http-nio-8080-exec-8] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2021-05-07 19:25:59.128 [http-nio-8080-exec-8] EntityBinder - Import with entity name Genre
[DEBUG] 2021-05-07 19:25:59.128 [http-nio-8080-exec-8] EntityBinder - Bind entity com.leeannjakel.entity.Genre on table genre
[DEBUG] 2021-05-07 19:25:59.129 [http-nio-8080-exec-8] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(genre), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-07 19:25:59.129 [http-nio-8080-exec-8] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2021-05-07 19:25:59.130 [http-nio-8080-exec-8] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.leeannjakel.entity.Genre:id]
[DEBUG] 2021-05-07 19:25:59.130 [http-nio-8080-exec-8] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2021-05-07 19:25:59.130 [http-nio-8080-exec-8] PropertyBinder - Building property id
[DEBUG] 2021-05-07 19:25:59.135 [http-nio-8080-exec-8] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2021-05-07 19:25:59.136 [http-nio-8080-exec-8] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='genre'}
[DEBUG] 2021-05-07 19:25:59.136 [http-nio-8080-exec-8] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(genre), mappingColumn=books, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-07 19:25:59.136 [http-nio-8080-exec-8] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(genre), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-07 19:25:59.137 [http-nio-8080-exec-8] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(genre), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-07 19:25:59.137 [http-nio-8080-exec-8] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(genre), mappingColumn=books_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-07 19:25:59.137 [http-nio-8080-exec-8] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='books_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2021-05-07 19:25:59.137 [http-nio-8080-exec-8] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='genre'}
[DEBUG] 2021-05-07 19:25:59.137 [http-nio-8080-exec-8] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='genre'}
[DEBUG] 2021-05-07 19:25:59.137 [http-nio-8080-exec-8] CollectionBinder - Collection role: com.leeannjakel.entity.Genre.books
[DEBUG] 2021-05-07 19:25:59.137 [http-nio-8080-exec-8] PropertyBinder - Building property books
[DEBUG] 2021-05-07 19:25:59.137 [http-nio-8080-exec-8] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(genre), mappingColumn=name, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-07 19:25:59.137 [http-nio-8080-exec-8] PropertyBinder - MetadataSourceProcessor property name with lazy=false
[DEBUG] 2021-05-07 19:25:59.138 [http-nio-8080-exec-8] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.leeannjakel.entity.Genre:name]
[DEBUG] 2021-05-07 19:25:59.142 [http-nio-8080-exec-8] SimpleValueBinder - building SimpleValue for name
[DEBUG] 2021-05-07 19:25:59.142 [http-nio-8080-exec-8] PropertyBinder - Building property name
[DEBUG] 2021-05-07 19:25:59.142 [http-nio-8080-exec-8] AnnotationBinder - Binding entity from annotated class: com.leeannjakel.entity.Role
[DEBUG] 2021-05-07 19:25:59.142 [http-nio-8080-exec-8] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2021-05-07 19:25:59.142 [http-nio-8080-exec-8] EntityBinder - Import with entity name Role
[DEBUG] 2021-05-07 19:25:59.142 [http-nio-8080-exec-8] EntityBinder - Bind entity com.leeannjakel.entity.Role on table role
[DEBUG] 2021-05-07 19:25:59.147 [http-nio-8080-exec-8] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-07 19:25:59.147 [http-nio-8080-exec-8] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2021-05-07 19:25:59.149 [http-nio-8080-exec-8] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.leeannjakel.entity.Role:id]
[DEBUG] 2021-05-07 19:25:59.159 [http-nio-8080-exec-8] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2021-05-07 19:25:59.160 [http-nio-8080-exec-8] PropertyBinder - Building property id
[DEBUG] 2021-05-07 19:25:59.160 [http-nio-8080-exec-8] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2021-05-07 19:25:59.160 [http-nio-8080-exec-8] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=role_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-07 19:25:59.160 [http-nio-8080-exec-8] PropertyBinder - MetadataSourceProcessor property roleName with lazy=false
[DEBUG] 2021-05-07 19:25:59.160 [http-nio-8080-exec-8] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.leeannjakel.entity.Role:roleName]
[DEBUG] 2021-05-07 19:25:59.160 [http-nio-8080-exec-8] SimpleValueBinder - building SimpleValue for roleName
[DEBUG] 2021-05-07 19:25:59.160 [http-nio-8080-exec-8] PropertyBinder - Building property roleName
[DEBUG] 2021-05-07 19:25:59.161 [http-nio-8080-exec-8] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
[DEBUG] 2021-05-07 19:25:59.161 [http-nio-8080-exec-8] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-07 19:25:59.161 [http-nio-8080-exec-8] PropertyBinder - Building property user
[DEBUG] 2021-05-07 19:25:59.161 [http-nio-8080-exec-8] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=user_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-07 19:25:59.161 [http-nio-8080-exec-8] PropertyBinder - MetadataSourceProcessor property userName with lazy=false
[DEBUG] 2021-05-07 19:25:59.161 [http-nio-8080-exec-8] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.leeannjakel.entity.Role:userName]
[DEBUG] 2021-05-07 19:25:59.161 [http-nio-8080-exec-8] SimpleValueBinder - building SimpleValue for userName
[DEBUG] 2021-05-07 19:25:59.161 [http-nio-8080-exec-8] PropertyBinder - Building property userName
[DEBUG] 2021-05-07 19:25:59.164 [http-nio-8080-exec-8] AnnotationBinder - Binding entity from annotated class: com.leeannjakel.entity.User
[DEBUG] 2021-05-07 19:25:59.164 [http-nio-8080-exec-8] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2021-05-07 19:25:59.165 [http-nio-8080-exec-8] EntityBinder - Import with entity name User
[DEBUG] 2021-05-07 19:25:59.165 [http-nio-8080-exec-8] EntityBinder - Bind entity com.leeannjakel.entity.User on table user
[DEBUG] 2021-05-07 19:25:59.179 [http-nio-8080-exec-8] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-07 19:25:59.179 [http-nio-8080-exec-8] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2021-05-07 19:25:59.180 [http-nio-8080-exec-8] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.leeannjakel.entity.User:id]
[DEBUG] 2021-05-07 19:25:59.180 [http-nio-8080-exec-8] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2021-05-07 19:25:59.180 [http-nio-8080-exec-8] PropertyBinder - Building property id
[DEBUG] 2021-05-07 19:25:59.180 [http-nio-8080-exec-8] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2021-05-07 19:25:59.181 [http-nio-8080-exec-8] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2021-05-07 19:25:59.181 [http-nio-8080-exec-8] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=books, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-07 19:25:59.182 [http-nio-8080-exec-8] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-07 19:25:59.182 [http-nio-8080-exec-8] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-07 19:25:59.182 [http-nio-8080-exec-8] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=books_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-07 19:25:59.182 [http-nio-8080-exec-8] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='books_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2021-05-07 19:25:59.182 [http-nio-8080-exec-8] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2021-05-07 19:25:59.182 [http-nio-8080-exec-8] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2021-05-07 19:25:59.182 [http-nio-8080-exec-8] CollectionBinder - Collection role: com.leeannjakel.entity.User.books
[DEBUG] 2021-05-07 19:25:59.185 [http-nio-8080-exec-8] PropertyBinder - Building property books
[DEBUG] 2021-05-07 19:25:59.186 [http-nio-8080-exec-8] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=email, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-07 19:25:59.186 [http-nio-8080-exec-8] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[DEBUG] 2021-05-07 19:25:59.187 [http-nio-8080-exec-8] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.leeannjakel.entity.User:email]
[DEBUG] 2021-05-07 19:25:59.187 [http-nio-8080-exec-8] SimpleValueBinder - building SimpleValue for email
[DEBUG] 2021-05-07 19:25:59.188 [http-nio-8080-exec-8] PropertyBinder - Building property email
[DEBUG] 2021-05-07 19:25:59.189 [http-nio-8080-exec-8] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-07 19:25:59.189 [http-nio-8080-exec-8] PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
[DEBUG] 2021-05-07 19:25:59.189 [http-nio-8080-exec-8] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.leeannjakel.entity.User:firstName]
[DEBUG] 2021-05-07 19:25:59.190 [http-nio-8080-exec-8] SimpleValueBinder - building SimpleValue for firstName
[DEBUG] 2021-05-07 19:25:59.190 [http-nio-8080-exec-8] PropertyBinder - Building property firstName
[DEBUG] 2021-05-07 19:25:59.192 [http-nio-8080-exec-8] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-07 19:25:59.192 [http-nio-8080-exec-8] PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
[DEBUG] 2021-05-07 19:25:59.192 [http-nio-8080-exec-8] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.leeannjakel.entity.User:lastName]
[DEBUG] 2021-05-07 19:25:59.192 [http-nio-8080-exec-8] SimpleValueBinder - building SimpleValue for lastName
[DEBUG] 2021-05-07 19:25:59.192 [http-nio-8080-exec-8] PropertyBinder - Building property lastName
[DEBUG] 2021-05-07 19:25:59.192 [http-nio-8080-exec-8] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=password, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-07 19:25:59.192 [http-nio-8080-exec-8] PropertyBinder - MetadataSourceProcessor property password with lazy=false
[DEBUG] 2021-05-07 19:25:59.192 [http-nio-8080-exec-8] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.leeannjakel.entity.User:password]
[DEBUG] 2021-05-07 19:25:59.192 [http-nio-8080-exec-8] SimpleValueBinder - building SimpleValue for password
[DEBUG] 2021-05-07 19:25:59.192 [http-nio-8080-exec-8] PropertyBinder - Building property password
[DEBUG] 2021-05-07 19:25:59.193 [http-nio-8080-exec-8] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2021-05-07 19:25:59.196 [http-nio-8080-exec-8] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=roles, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-07 19:25:59.205 [http-nio-8080-exec-8] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-07 19:25:59.206 [http-nio-8080-exec-8] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-07 19:25:59.208 [http-nio-8080-exec-8] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=roles_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-07 19:25:59.208 [http-nio-8080-exec-8] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='roles_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2021-05-07 19:25:59.208 [http-nio-8080-exec-8] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2021-05-07 19:25:59.208 [http-nio-8080-exec-8] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2021-05-07 19:25:59.208 [http-nio-8080-exec-8] CollectionBinder - Collection role: com.leeannjakel.entity.User.roles
[DEBUG] 2021-05-07 19:25:59.208 [http-nio-8080-exec-8] PropertyBinder - Building property roles
[DEBUG] 2021-05-07 19:25:59.209 [http-nio-8080-exec-8] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=user_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-07 19:25:59.209 [http-nio-8080-exec-8] PropertyBinder - MetadataSourceProcessor property userName with lazy=false
[DEBUG] 2021-05-07 19:25:59.209 [http-nio-8080-exec-8] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.leeannjakel.entity.User:userName]
[DEBUG] 2021-05-07 19:25:59.209 [http-nio-8080-exec-8] SimpleValueBinder - building SimpleValue for userName
[DEBUG] 2021-05-07 19:25:59.209 [http-nio-8080-exec-8] PropertyBinder - Building property userName
[DEBUG] 2021-05-07 19:25:59.211 [http-nio-8080-exec-8] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2021-05-07 19:25:59.211 [http-nio-8080-exec-8] SimpleValueBinder - Starting fillSimpleValue for name
[DEBUG] 2021-05-07 19:25:59.211 [http-nio-8080-exec-8] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2021-05-07 19:25:59.211 [http-nio-8080-exec-8] SimpleValueBinder - Starting fillSimpleValue for isbn
[DEBUG] 2021-05-07 19:25:59.211 [http-nio-8080-exec-8] SimpleValueBinder - Starting fillSimpleValue for notes
[DEBUG] 2021-05-07 19:25:59.212 [http-nio-8080-exec-8] SimpleValueBinder - Starting fillSimpleValue for title
[DEBUG] 2021-05-07 19:25:59.212 [http-nio-8080-exec-8] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2021-05-07 19:25:59.212 [http-nio-8080-exec-8] SimpleValueBinder - Starting fillSimpleValue for name
[DEBUG] 2021-05-07 19:25:59.212 [http-nio-8080-exec-8] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2021-05-07 19:25:59.212 [http-nio-8080-exec-8] SimpleValueBinder - Starting fillSimpleValue for roleName
[DEBUG] 2021-05-07 19:25:59.212 [http-nio-8080-exec-8] SimpleValueBinder - Starting fillSimpleValue for userName
[DEBUG] 2021-05-07 19:25:59.212 [http-nio-8080-exec-8] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2021-05-07 19:25:59.212 [http-nio-8080-exec-8] SimpleValueBinder - Starting fillSimpleValue for email
[DEBUG] 2021-05-07 19:25:59.212 [http-nio-8080-exec-8] SimpleValueBinder - Starting fillSimpleValue for firstName
[DEBUG] 2021-05-07 19:25:59.212 [http-nio-8080-exec-8] SimpleValueBinder - Starting fillSimpleValue for lastName
[DEBUG] 2021-05-07 19:25:59.212 [http-nio-8080-exec-8] SimpleValueBinder - Starting fillSimpleValue for password
[DEBUG] 2021-05-07 19:25:59.212 [http-nio-8080-exec-8] SimpleValueBinder - Starting fillSimpleValue for userName
[DEBUG] 2021-05-07 19:25:59.218 [http-nio-8080-exec-8] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [author]
[DEBUG] 2021-05-07 19:25:59.219 [http-nio-8080-exec-8] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [book]
[DEBUG] 2021-05-07 19:25:59.219 [http-nio-8080-exec-8] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [genre]
[DEBUG] 2021-05-07 19:25:59.219 [http-nio-8080-exec-8] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [role]
[DEBUG] 2021-05-07 19:25:59.219 [http-nio-8080-exec-8] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [user]
[DEBUG] 2021-05-07 19:25:59.219 [http-nio-8080-exec-8] CollectionSecondPass - Second pass for collection: com.leeannjakel.entity.Author.books
[DEBUG] 2021-05-07 19:25:59.221 [http-nio-8080-exec-8] CollectionBinder - Binding a OneToMany: com.leeannjakel.entity.Author.books through a foreign key
[DEBUG] 2021-05-07 19:25:59.222 [http-nio-8080-exec-8] CollectionBinder - Mapping collection: com.leeannjakel.entity.Author.books -> book
[DEBUG] 2021-05-07 19:25:59.225 [http-nio-8080-exec-8] TableBinder - Retrieving property com.leeannjakel.entity.Book.author
[DEBUG] 2021-05-07 19:25:59.227 [http-nio-8080-exec-8] CollectionSecondPass - Mapped collection key: author_id, one-to-many: com.leeannjakel.entity.Book
[DEBUG] 2021-05-07 19:25:59.227 [http-nio-8080-exec-8] CollectionSecondPass - Second pass for collection: com.leeannjakel.entity.Genre.books
[DEBUG] 2021-05-07 19:25:59.227 [http-nio-8080-exec-8] CollectionBinder - Binding a OneToMany: com.leeannjakel.entity.Genre.books through a foreign key
[DEBUG] 2021-05-07 19:25:59.227 [http-nio-8080-exec-8] CollectionBinder - Mapping collection: com.leeannjakel.entity.Genre.books -> book
[DEBUG] 2021-05-07 19:25:59.227 [http-nio-8080-exec-8] TableBinder - Retrieving property com.leeannjakel.entity.Book.genre
[DEBUG] 2021-05-07 19:25:59.228 [http-nio-8080-exec-8] CollectionSecondPass - Mapped collection key: genre_id, one-to-many: com.leeannjakel.entity.Book
[DEBUG] 2021-05-07 19:25:59.228 [http-nio-8080-exec-8] CollectionSecondPass - Second pass for collection: com.leeannjakel.entity.User.books
[DEBUG] 2021-05-07 19:25:59.228 [http-nio-8080-exec-8] CollectionBinder - Binding a OneToMany: com.leeannjakel.entity.User.books through a foreign key
[DEBUG] 2021-05-07 19:25:59.228 [http-nio-8080-exec-8] CollectionBinder - Mapping collection: com.leeannjakel.entity.User.books -> book
[DEBUG] 2021-05-07 19:25:59.228 [http-nio-8080-exec-8] TableBinder - Retrieving property com.leeannjakel.entity.Book.user
[DEBUG] 2021-05-07 19:25:59.229 [http-nio-8080-exec-8] CollectionSecondPass - Mapped collection key: user_id, one-to-many: com.leeannjakel.entity.Book
[DEBUG] 2021-05-07 19:25:59.229 [http-nio-8080-exec-8] CollectionSecondPass - Second pass for collection: com.leeannjakel.entity.User.roles
[DEBUG] 2021-05-07 19:25:59.229 [http-nio-8080-exec-8] CollectionBinder - Binding a OneToMany: com.leeannjakel.entity.User.roles through a foreign key
[DEBUG] 2021-05-07 19:25:59.229 [http-nio-8080-exec-8] CollectionBinder - Mapping collection: com.leeannjakel.entity.User.roles -> role
[DEBUG] 2021-05-07 19:25:59.229 [http-nio-8080-exec-8] TableBinder - Retrieving property com.leeannjakel.entity.Role.user
[DEBUG] 2021-05-07 19:25:59.229 [http-nio-8080-exec-8] CollectionSecondPass - Mapped collection key: user_id, one-to-many: com.leeannjakel.entity.Role
[DEBUG] 2021-05-07 19:25:59.229 [http-nio-8080-exec-8] InFlightMetadataCollectorImpl - Resolving reference to class: com.leeannjakel.entity.Author
[DEBUG] 2021-05-07 19:25:59.233 [http-nio-8080-exec-8] InFlightMetadataCollectorImpl - Resolving reference to class: com.leeannjakel.entity.Genre
[DEBUG] 2021-05-07 19:25:59.234 [http-nio-8080-exec-8] InFlightMetadataCollectorImpl - Resolving reference to class: com.leeannjakel.entity.User
[DEBUG] 2021-05-07 19:25:59.234 [http-nio-8080-exec-8] InFlightMetadataCollectorImpl - Resolving reference to class: com.leeannjakel.entity.User
[DEBUG] 2021-05-07 19:25:59.247 [http-nio-8080-exec-8] InFlightMetadataCollectorImpl - Resolving reference to class: com.leeannjakel.entity.Author
[DEBUG] 2021-05-07 19:25:59.248 [http-nio-8080-exec-8] InFlightMetadataCollectorImpl - Resolving reference to class: com.leeannjakel.entity.Genre
[DEBUG] 2021-05-07 19:25:59.248 [http-nio-8080-exec-8] InFlightMetadataCollectorImpl - Resolving reference to class: com.leeannjakel.entity.User
[DEBUG] 2021-05-07 19:25:59.248 [http-nio-8080-exec-8] InFlightMetadataCollectorImpl - Resolving reference to class: com.leeannjakel.entity.User
[DEBUG] 2021-05-07 19:25:59.375 [http-nio-8080-exec-8] SessionFactoryImpl - Building session factory
[DEBUG] 2021-05-07 19:25:59.377 [http-nio-8080-exec-8] Settings - SessionFactory name : null
[DEBUG] 2021-05-07 19:25:59.377 [http-nio-8080-exec-8] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2021-05-07 19:25:59.377 [http-nio-8080-exec-8] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2021-05-07 19:25:59.377 [http-nio-8080-exec-8] Settings - Statistics: disabled
[DEBUG] 2021-05-07 19:25:59.377 [http-nio-8080-exec-8] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2021-05-07 19:25:59.377 [http-nio-8080-exec-8] Settings - Default entity-mode: pojo
[DEBUG] 2021-05-07 19:25:59.379 [http-nio-8080-exec-8] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2021-05-07 19:25:59.380 [http-nio-8080-exec-8] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2021-05-07 19:25:59.381 [http-nio-8080-exec-8] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2021-05-07 19:25:59.394 [http-nio-8080-exec-8] Settings - Default batch fetch size: -1
[DEBUG] 2021-05-07 19:25:59.394 [http-nio-8080-exec-8] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2021-05-07 19:25:59.394 [http-nio-8080-exec-8] Settings - Default null ordering: NONE
[DEBUG] 2021-05-07 19:25:59.394 [http-nio-8080-exec-8] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2021-05-07 19:25:59.394 [http-nio-8080-exec-8] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2021-05-07 19:25:59.394 [http-nio-8080-exec-8] Settings - multi-tenancy strategy : NONE
[DEBUG] 2021-05-07 19:25:59.394 [http-nio-8080-exec-8] Settings - JTA Track by Thread: enabled
[DEBUG] 2021-05-07 19:25:59.394 [http-nio-8080-exec-8] Settings - Query language substitutions: {}
[DEBUG] 2021-05-07 19:25:59.394 [http-nio-8080-exec-8] Settings - Named query checking : enabled
[DEBUG] 2021-05-07 19:25:59.394 [http-nio-8080-exec-8] Settings - Second-level cache: disabled
[DEBUG] 2021-05-07 19:25:59.394 [http-nio-8080-exec-8] Settings - Second-level query cache: disabled
[DEBUG] 2021-05-07 19:25:59.394 [http-nio-8080-exec-8] Settings - Second-level query cache factory: null
[DEBUG] 2021-05-07 19:25:59.394 [http-nio-8080-exec-8] Settings - Second-level cache region prefix: null
[DEBUG] 2021-05-07 19:25:59.394 [http-nio-8080-exec-8] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2021-05-07 19:25:59.394 [http-nio-8080-exec-8] Settings - Structured second-level cache entries: disabled
[DEBUG] 2021-05-07 19:25:59.395 [http-nio-8080-exec-8] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2021-05-07 19:25:59.395 [http-nio-8080-exec-8] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2021-05-07 19:25:59.395 [http-nio-8080-exec-8] Settings - JDBC batch size: 15
[DEBUG] 2021-05-07 19:25:59.395 [http-nio-8080-exec-8] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2021-05-07 19:25:59.395 [http-nio-8080-exec-8] Settings - Scrollable result sets: enabled
[DEBUG] 2021-05-07 19:25:59.395 [http-nio-8080-exec-8] Settings - Wrap result sets: disabled
[DEBUG] 2021-05-07 19:25:59.395 [http-nio-8080-exec-8] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2021-05-07 19:25:59.395 [http-nio-8080-exec-8] Settings - JDBC result set fetch size: null
[DEBUG] 2021-05-07 19:25:59.395 [http-nio-8080-exec-8] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2021-05-07 19:25:59.395 [http-nio-8080-exec-8] Settings - Generate SQL with comments: disabled
[DEBUG] 2021-05-07 19:25:59.395 [http-nio-8080-exec-8] Settings - JPA compliance - query : 
[DEBUG] 2021-05-07 19:25:59.395 [http-nio-8080-exec-8] Settings - JPA compliance - closed-handling : 
[DEBUG] 2021-05-07 19:25:59.395 [http-nio-8080-exec-8] Settings - JPA compliance - lists : 
[DEBUG] 2021-05-07 19:25:59.395 [http-nio-8080-exec-8] Settings - JPA compliance - transactions : 
[INFO ] 2021-05-07 19:25:59.604 [http-nio-8080-exec-8] beans - HHH10005002: No explicit CDI BeanManager reference was passed to Hibernate, but CDI is available on the Hibernate ClassLoader.
[DEBUG] 2021-05-07 19:25:59.733 [http-nio-8080-exec-8] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2021-05-07 19:25:59.734 [http-nio-8080-exec-8] SessionFactoryImpl - Instantiating session factory with properties: {awt.toolkit=sun.awt.X11.XToolkit, java.specification.version=11, sun.cpu.isalist=, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=UTF-8, hibernate.c3p0.min_size=5, sun.arch.data.model=64, java.vendor.url=https://ubuntu.com/, catalina.useNaming=true, openejb.provider.default=org.apache.tomee, sun.boot.library.path=/usr/lib/jvm/java-11-openjdk-amd64/lib, com.sun.management.jmxremote.ssl=false, sun.java.command=org.apache.catalina.startup.Bootstrap start, jdk.debug=release, java.specification.vendor=Oracle Corporation, java.naming.factory.url.pkgs=org.apache.naming:org.apache.openejb.core.ivm.naming, openejb.embedder.source=ServerListener, java.version.date=2021-04-20, java.home=/usr/lib/jvm/java-11-openjdk-amd64, ignore.endorsed.dirs=, file.separator=/, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, openejb.scan.webapp.container=true, com.sun.management.jmxremote.password.file=/home/student/.cache/JetBrains/IntelliJIdea2020.3/tomcat/10a53701-4112-462e-a101-1df2054f3873/jmxremote.password, package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.naming.,org.apache.tomcat., openejb.deployments.classpath.filter.systemapps=false, jdk.tls.ephemeralDHKeySize=2048, java.util.logging.config.file=/home/student/.cache/JetBrains/IntelliJIdea2020.3/tomcat/10a53701-4112-462e-a101-1df2054f3873/conf/logging.properties, java.protocol.handler.pkgs=org.apache.catalina.webresources, connection.password=student, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, openejb.scan.webapp.container.excludes=, java.runtime.version=11.0.11+9-Ubuntu-0ubuntu2.20.04, user.name=student, org.apache.johnzon.max-string-length=8192, file.encoding=UTF-8, derby.system.home=/home/student/tomcat/bin, org.apache.catalina.security.SecurityListener.UMASK=0027, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.io.tmpdir=/home/student/tomcat/temp, tomcat.util.scan.StandardJarScanFilter.jarsToScan=log4j-taglib*.jar,log4j-web*.jar,log4javascript*.jar,slf4j-taglib*.jar, java.version=11.0.11, com.sun.management.jmxremote.port=1099, tomcat.util.scan.StandardJarScanFilter.jarsToSkip=annotations-api.jar,ant-junit*.jar,ant-launcher.jar,ant.jar,asm-*.jar,aspectj*.jar,bootstrap.jar,catalina-ant.jar,catalina-ha.jar,catalina-jmx-remote.jar,catalina-storeconfig.jar,catalina-tribes.jar,catalina-ws.jar,catalina.jar,cglib-*.jar,cobertura-*.jar,commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,commons-daemon.jar,commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,commons-math*.jar,commons-pool*.jar,dom4j-*.jar,easymock-*.jar,ecj-*.jar,el-api.jar,geronimo-spec-jaxrpc*.jar,h2*.jar,hamcrest-*.jar,hibernate*.jar,httpclient*.jar,icu4j-*.jar,jasper-el.jar,jasper.jar,jaspic-api.jar,jaxb-*.jar,jaxen-*.jar,jdom-*.jar,jetty-*.jar,jmx-tools.jar,jmx.jar,jsp-api.jar,jstl.jar,jta*.jar,junit-*.jar,junit.jar,log4j*.jar,mail*.jar,objenesis-*.jar,oraclepki.jar,oro-*.jar,servlet-api-*.jar,servlet-api.jar,slf4j*.jar,taglibs-standard-spec-*.jar,tagsoup-*.jar,tomcat-api.jar,tomcat-coyote.jar,tomcat-dbcp.jar,tomcat-i18n-*.jar,tomcat-jdbc.jar,tomcat-jni.jar,tomcat-juli-adapters.jar,tomcat-juli.jar,tomcat-util-scan.jar,tomcat-util.jar,tomcat-websocket.jar,tools.jar,websocket-api.jar,wsdl4j*.jar,xercesImpl.jar,xml-apis.jar,xmlParserAPIs-*.jar,xmlParserAPIs.jar,xom-*.jar, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.print.PSPrinterJob, sun.os.patch.level=unknown, connection.driver_class=com.mysql.cj.jdbc.Driver, tomcat.built=May 4 2019 09:17:16 UTC, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor=Ubuntu, tomee.version=7.1.1, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, tomcat.util.buf.StringCache.byte.enabled=true, sun.desktop=gnome, java.class.path=/home/student/tomcat/bin/bootstrap.jar:/home/student/tomcat/bin/tomcat-juli.jar, tomcat.version=8.5.41.0, java.vm.vendor=Ubuntu, openejb.home=/home/student/tomcat, openejb.system.apps=true, user.timezone=America/Chicago, os.name=Linux, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, openejb.base=/home/student/.cache/JetBrains/IntelliJIdea2020.3/tomcat/10a53701-4112-462e-a101-1df2054f3873, com.sun.management.jmxremote=, sun.cpu.endian=little, user.home=/home/student, hibernate.c3p0.max_statements=50, user.language=en, openejb.deployments.classpath=false, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.tomcat., openejb.loader=tomcat-system, server.loader=, com.sun.management.jmxremote.access.file=/home/student/.cache/JetBrains/IntelliJIdea2020.3/tomcat/10a53701-4112-462e-a101-1df2054f3873/jmxremote.access, hibernate.c3p0.max_size=20, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, path.separator=:, org.apache.openejb.core.security.JaccProvider=org.apache.openejb.core.security.jacc.BasicJaccProvider, common.loader="/home/student/tomcat/lib","/home/student/tomcat/lib/*.jar","/home/student/tomcat/lib","/home/student/tomcat/lib/*.jar", hibernate.connection.username=****, os.version=5.4.0-72-generic, openejb.version=7.1.1, org.apache.security.jacc.EJBMethodPermission.methodInterfaces=BusinessLocalHome,BusinessRemoteHome,BusinessRemote,BusinessLocal, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/BookCollection, java.vm.name=OpenJDK 64-Bit Server VM, openejb.scan.webapp.container.includes=.*(geronimo|mp-jwt|failsafe).*, tomee.remote.support=true, java.vendor.url.bug=https://bugs.launchpad.net/ubuntu/+source/openjdk-lts, catalina.home=/home/student/tomcat, user.dir=/home/student/tomcat/bin, bval.in-container=true, os.arch=amd64, openjpa.Log=org.apache.openejb.openjpa.JULOpenJPALogFactory, hibernate.connection.password=****, tomee.serialization.class.blacklist=-, tomee.serialization.class.whitelist=, shared.loader=, catalina.base=/home/student/.cache/JetBrains/IntelliJIdea2020.3/tomcat/10a53701-4112-462e-a101-1df2054f3873, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@f451ee2, noBanner=true, java.util.logging.manager=org.apache.juli.ClassLoaderLogManager, org.apache.webbeans.logger.WebBeansLoggerFacade=org.apache.openejb.cdi.logging.ContainerJULLoggerFactory, java.vm.info=mixed mode, sharing, java.vm.version=11.0.11+9-Ubuntu-0ubuntu2.20.04, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.hostname=127.0.0.1, javax.security.jacc.PolicyConfigurationFactory.provider=org.apache.openejb.core.security.JaccProvider$Factory, connection.url=jdbc:mysql://localhost:3306/BookCollection, java.class.version=55.0, authconfigprovider.factory=false}
[DEBUG] 2021-05-07 19:25:59.868 [http-nio-8080-exec-8] ClassLoaderAccessImpl - Not known whether passed class name [com.leeannjakel.entity.Book] is safe
[DEBUG] 2021-05-07 19:25:59.868 [http-nio-8080-exec-8] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.leeannjakel.entity.Book
[DEBUG] 2021-05-07 19:25:59.995 [http-nio-8080-exec-8] ClassLoaderAccessImpl - Not known whether passed class name [com.leeannjakel.entity.User] is safe
[DEBUG] 2021-05-07 19:25:59.998 [http-nio-8080-exec-8] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.leeannjakel.entity.User
[DEBUG] 2021-05-07 19:26:00.022 [http-nio-8080-exec-8] ClassLoaderAccessImpl - Not known whether passed class name [com.leeannjakel.entity.Author] is safe
[DEBUG] 2021-05-07 19:26:00.023 [http-nio-8080-exec-8] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.leeannjakel.entity.Author
[DEBUG] 2021-05-07 19:26:00.026 [http-nio-8080-exec-8] ClassLoaderAccessImpl - Not known whether passed class name [com.leeannjakel.entity.Genre] is safe
[DEBUG] 2021-05-07 19:26:00.027 [http-nio-8080-exec-8] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.leeannjakel.entity.Genre
[DEBUG] 2021-05-07 19:26:00.030 [http-nio-8080-exec-8] ClassLoaderAccessImpl - Not known whether passed class name [com.leeannjakel.entity.Role] is safe
[DEBUG] 2021-05-07 19:26:00.030 [http-nio-8080-exec-8] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.leeannjakel.entity.Role
[DEBUG] 2021-05-07 19:26:00.052 [http-nio-8080-exec-8] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2021-05-07 19:26:00.058 [http-nio-8080-exec-8] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2021-05-07 19:26:00.058 [http-nio-8080-exec-8] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@28157f5] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@20623c83]
[DEBUG] 2021-05-07 19:26:00.370 [http-nio-8080-exec-8] ClassLoaderAccessImpl - Not known whether passed class name [com.leeannjakel.entity.Book] is safe
[DEBUG] 2021-05-07 19:26:00.370 [http-nio-8080-exec-8] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.leeannjakel.entity.Book
[DEBUG] 2021-05-07 19:26:00.499 [http-nio-8080-exec-8] ClassLoaderAccessImpl - Not known whether passed class name [com.leeannjakel.entity.Book] is safe
[DEBUG] 2021-05-07 19:26:00.502 [http-nio-8080-exec-8] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.leeannjakel.entity.Book
[DEBUG] 2021-05-07 19:26:01.481 [http-nio-8080-exec-8] ClassLoaderAccessImpl - Not known whether passed class name [com.leeannjakel.entity.User] is safe
[DEBUG] 2021-05-07 19:26:01.482 [http-nio-8080-exec-8] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.leeannjakel.entity.User
[DEBUG] 2021-05-07 19:26:01.486 [http-nio-8080-exec-8] ClassLoaderAccessImpl - Not known whether passed class name [com.leeannjakel.entity.User] is safe
[DEBUG] 2021-05-07 19:26:01.486 [http-nio-8080-exec-8] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.leeannjakel.entity.User
[DEBUG] 2021-05-07 19:26:01.649 [http-nio-8080-exec-8] ClassLoaderAccessImpl - Not known whether passed class name [com.leeannjakel.entity.Author] is safe
[DEBUG] 2021-05-07 19:26:01.651 [http-nio-8080-exec-8] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.leeannjakel.entity.Author
[DEBUG] 2021-05-07 19:26:01.653 [http-nio-8080-exec-8] ClassLoaderAccessImpl - Not known whether passed class name [com.leeannjakel.entity.Author] is safe
[DEBUG] 2021-05-07 19:26:01.661 [http-nio-8080-exec-8] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.leeannjakel.entity.Author
[DEBUG] 2021-05-07 19:26:01.737 [http-nio-8080-exec-8] ClassLoaderAccessImpl - Not known whether passed class name [com.leeannjakel.entity.Genre] is safe
[DEBUG] 2021-05-07 19:26:01.737 [http-nio-8080-exec-8] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.leeannjakel.entity.Genre
[DEBUG] 2021-05-07 19:26:01.738 [http-nio-8080-exec-8] ClassLoaderAccessImpl - Not known whether passed class name [com.leeannjakel.entity.Genre] is safe
[DEBUG] 2021-05-07 19:26:01.738 [http-nio-8080-exec-8] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.leeannjakel.entity.Genre
[DEBUG] 2021-05-07 19:26:01.776 [http-nio-8080-exec-8] ClassLoaderAccessImpl - Not known whether passed class name [com.leeannjakel.entity.Role] is safe
[DEBUG] 2021-05-07 19:26:01.777 [http-nio-8080-exec-8] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.leeannjakel.entity.Role
[DEBUG] 2021-05-07 19:26:01.778 [http-nio-8080-exec-8] ClassLoaderAccessImpl - Not known whether passed class name [com.leeannjakel.entity.Role] is safe
[DEBUG] 2021-05-07 19:26:01.778 [http-nio-8080-exec-8] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.leeannjakel.entity.Role
[DEBUG] 2021-05-07 19:26:01.858 [http-nio-8080-exec-8] AbstractCollectionPersister - Static SQL for collection: com.leeannjakel.entity.Author.books
[DEBUG] 2021-05-07 19:26:01.859 [http-nio-8080-exec-8] AbstractCollectionPersister -  Row insert: update book set author_id=? where id=?
[DEBUG] 2021-05-07 19:26:01.859 [http-nio-8080-exec-8] AbstractCollectionPersister -  Row update: update book set  where id=?
[DEBUG] 2021-05-07 19:26:01.859 [http-nio-8080-exec-8] AbstractCollectionPersister -  Row delete: update book set author_id=null where author_id=? and id=?
[DEBUG] 2021-05-07 19:26:01.859 [http-nio-8080-exec-8] AbstractCollectionPersister -  One-shot delete: update book set author_id=null where author_id=?
[DEBUG] 2021-05-07 19:26:01.859 [http-nio-8080-exec-8] AbstractCollectionPersister - Static SQL for collection: com.leeannjakel.entity.User.books
[DEBUG] 2021-05-07 19:26:01.859 [http-nio-8080-exec-8] AbstractCollectionPersister -  Row insert: update book set user_id=? where id=?
[DEBUG] 2021-05-07 19:26:01.859 [http-nio-8080-exec-8] AbstractCollectionPersister -  Row update: update book set  where id=?
[DEBUG] 2021-05-07 19:26:01.859 [http-nio-8080-exec-8] AbstractCollectionPersister -  Row delete: update book set user_id=null where user_id=? and id=?
[DEBUG] 2021-05-07 19:26:01.859 [http-nio-8080-exec-8] AbstractCollectionPersister -  One-shot delete: update book set user_id=null where user_id=?
[DEBUG] 2021-05-07 19:26:01.860 [http-nio-8080-exec-8] AbstractCollectionPersister - Static SQL for collection: com.leeannjakel.entity.User.roles
[DEBUG] 2021-05-07 19:26:01.860 [http-nio-8080-exec-8] AbstractCollectionPersister -  Row insert: update role set user_id=? where id=?
[DEBUG] 2021-05-07 19:26:01.860 [http-nio-8080-exec-8] AbstractCollectionPersister -  Row update: update role set  where id=?
[DEBUG] 2021-05-07 19:26:01.860 [http-nio-8080-exec-8] AbstractCollectionPersister -  Row delete: update role set user_id=null where user_id=? and id=?
[DEBUG] 2021-05-07 19:26:01.860 [http-nio-8080-exec-8] AbstractCollectionPersister -  One-shot delete: update role set user_id=null where user_id=?
[DEBUG] 2021-05-07 19:26:01.861 [http-nio-8080-exec-8] AbstractCollectionPersister - Static SQL for collection: com.leeannjakel.entity.Genre.books
[DEBUG] 2021-05-07 19:26:01.861 [http-nio-8080-exec-8] AbstractCollectionPersister -  Row insert: update book set genre_id=? where id=?
[DEBUG] 2021-05-07 19:26:01.861 [http-nio-8080-exec-8] AbstractCollectionPersister -  Row update: update book set  where id=?
[DEBUG] 2021-05-07 19:26:01.861 [http-nio-8080-exec-8] AbstractCollectionPersister -  Row delete: update book set genre_id=null where genre_id=? and id=?
[DEBUG] 2021-05-07 19:26:01.861 [http-nio-8080-exec-8] AbstractCollectionPersister -  One-shot delete: update book set genre_id=null where genre_id=?
[DEBUG] 2021-05-07 19:26:01.868 [http-nio-8080-exec-8] AbstractEntityPersister - Static SQL for entity: com.leeannjakel.entity.Book
[DEBUG] 2021-05-07 19:26:01.868 [http-nio-8080-exec-8] AbstractEntityPersister -  Version select: select id from book where id =?
[DEBUG] 2021-05-07 19:26:01.868 [http-nio-8080-exec-8] AbstractEntityPersister -  Snapshot select: select book_.id, book_.author_id as author_i5_1_, book_.genre_id as genre_id6_1_, book_.isbn as isbn2_1_, book_.notes as notes3_1_, book_.title as title4_1_, book_.user_id as user_id7_1_ from book book_ where book_.id=?
[DEBUG] 2021-05-07 19:26:01.868 [http-nio-8080-exec-8] AbstractEntityPersister -  Insert 0: insert into book (author_id, genre_id, isbn, notes, title, user_id, id) values (?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2021-05-07 19:26:01.868 [http-nio-8080-exec-8] AbstractEntityPersister -  Update 0: update book set author_id=?, genre_id=?, isbn=?, notes=?, title=?, user_id=? where id=?
[DEBUG] 2021-05-07 19:26:01.868 [http-nio-8080-exec-8] AbstractEntityPersister -  Delete 0: delete from book where id=?
[DEBUG] 2021-05-07 19:26:01.868 [http-nio-8080-exec-8] AbstractEntityPersister -  Identity insert: insert into book (author_id, genre_id, isbn, notes, title, user_id) values (?, ?, ?, ?, ?, ?)
[DEBUG] 2021-05-07 19:26:01.980 [http-nio-8080-exec-8] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1bab8412]
[DEBUG] 2021-05-07 19:26:01.982 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : author
[DEBUG] 2021-05-07 19:26:02.003 [http-nio-8080-exec-8] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7c7398cd]
[DEBUG] 2021-05-07 19:26:02.020 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : author.books
[DEBUG] 2021-05-07 19:26:02.020 [http-nio-8080-exec-8] MetamodelGraphWalker - Property path deemed to be circular : author.books
[DEBUG] 2021-05-07 19:26:02.020 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : author.name
[DEBUG] 2021-05-07 19:26:02.020 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : genre
[DEBUG] 2021-05-07 19:26:02.026 [http-nio-8080-exec-8] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5306d5f5]
[DEBUG] 2021-05-07 19:26:02.031 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : genre.books
[DEBUG] 2021-05-07 19:26:02.032 [http-nio-8080-exec-8] MetamodelGraphWalker - Property path deemed to be circular : genre.books
[DEBUG] 2021-05-07 19:26:02.037 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : genre.name
[DEBUG] 2021-05-07 19:26:02.039 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : isbn
[DEBUG] 2021-05-07 19:26:02.039 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : notes
[DEBUG] 2021-05-07 19:26:02.039 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2021-05-07 19:26:02.039 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2021-05-07 19:26:02.039 [http-nio-8080-exec-8] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@62631040]
[DEBUG] 2021-05-07 19:26:02.044 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : user.books
[DEBUG] 2021-05-07 19:26:02.045 [http-nio-8080-exec-8] MetamodelGraphWalker - Property path deemed to be circular : user.books
[DEBUG] 2021-05-07 19:26:02.045 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2021-05-07 19:26:02.045 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2021-05-07 19:26:02.045 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2021-05-07 19:26:02.045 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2021-05-07 19:26:02.045 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2021-05-07 19:26:02.049 [http-nio-8080-exec-8] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@68e956a6]
[DEBUG] 2021-05-07 19:26:02.055 [http-nio-8080-exec-8] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@fbc53aa]
[DEBUG] 2021-05-07 19:26:02.065 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : user.roles.roleName
[DEBUG] 2021-05-07 19:26:02.065 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2021-05-07 19:26:02.065 [http-nio-8080-exec-8] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2021-05-07 19:26:02.070 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : user.roles.userName
[DEBUG] 2021-05-07 19:26:02.072 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : user.userName
[DEBUG] 2021-05-07 19:26:02.073 [http-nio-8080-exec-8] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-05-07 19:26:02.128 [http-nio-8080-exec-8] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-05-07 19:26:02.166 [http-nio-8080-exec-8] LoadPlanTreePrinter - LoadPlan(entity=com.leeannjakel.entity.Book)
    - Returns
       - EntityReturnImpl(entity=com.leeannjakel.entity.Book, querySpaceUid=<gen:0>, path=com.leeannjakel.entity.Book)
          - EntityAttributeFetchImpl(entity=com.leeannjakel.entity.Author, querySpaceUid=<gen:1>, path=com.leeannjakel.entity.Book.author)
          - EntityAttributeFetchImpl(entity=com.leeannjakel.entity.Genre, querySpaceUid=<gen:2>, path=com.leeannjakel.entity.Book.genre)
          - EntityAttributeFetchImpl(entity=com.leeannjakel.entity.User, querySpaceUid=<gen:3>, path=com.leeannjakel.entity.Book.user)
             - CollectionAttributeFetchImpl(collection=com.leeannjakel.entity.User.roles, querySpaceUid=<gen:4>, path=com.leeannjakel.entity.Book.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.leeannjakel.entity.Role, querySpaceUid=<gen:5>, path=com.leeannjakel.entity.Book.user.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.leeannjakel.entity.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(author)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.leeannjakel.entity.Author)
                - SQL table alias mapping - author1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}
          - JOIN (JoinDefinedByMetadata(genre)) : <gen:0> -> <gen:2>
             - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.leeannjakel.entity.Genre)
                - SQL table alias mapping - genre2_
                - alias suffix - 2_
                - suffixed key columns - {id1_2_2_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=com.leeannjakel.entity.User)
                - SQL table alias mapping - user3_
                - alias suffix - 3_
                - suffixed key columns - {id1_4_3_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:3> -> <gen:4>
                   - CollectionQuerySpaceImpl(uid=<gen:4>, collection=com.leeannjakel.entity.User.roles)
                      - SQL table alias mapping - roles4_
                      - alias suffix - 4_
                      - suffixed key columns - {user_id4_3_4_}
                      - entity-element alias suffix - 5_
                      - 5_entity-element suffixed key columns - id1_3_5_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:4> -> <gen:5>
                         - EntityQuerySpaceImpl(uid=<gen:5>, entity=com.leeannjakel.entity.Role)
                            - SQL table alias mapping - roles4_
                            - alias suffix - 5_
                            - suffixed key columns - {id1_3_5_}

[DEBUG] 2021-05-07 19:26:02.173 [http-nio-8080-exec-8] EntityLoader - Static select for entity com.leeannjakel.entity.Book [NONE]: select book0_.id as id1_1_0_, book0_.author_id as author_i5_1_0_, book0_.genre_id as genre_id6_1_0_, book0_.isbn as isbn2_1_0_, book0_.notes as notes3_1_0_, book0_.title as title4_1_0_, book0_.user_id as user_id7_1_0_, author1_.id as id1_0_1_, author1_.name as name2_0_1_, genre2_.id as id1_2_2_, genre2_.name as name2_2_2_, user3_.id as id1_4_3_, user3_.email as email2_4_3_, user3_.first_name as first_na3_4_3_, user3_.last_name as last_nam4_4_3_, user3_.password as password5_4_3_, user3_.user_name as user_nam6_4_3_, roles4_.user_id as user_id4_3_4_, roles4_.id as id1_3_4_, roles4_.id as id1_3_5_, roles4_.role_name as role_nam2_3_5_, roles4_.user_id as user_id4_3_5_, roles4_.user_name as user_nam3_3_5_ from book book0_ left outer join author author1_ on book0_.author_id=author1_.id left outer join genre genre2_ on book0_.genre_id=genre2_.id left outer join user user3_ on book0_.user_id=user3_.id left outer join role roles4_ on user3_.id=roles4_.user_id where book0_.id=?
[DEBUG] 2021-05-07 19:26:02.176 [http-nio-8080-exec-8] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@43fcb8d3]
[DEBUG] 2021-05-07 19:26:02.176 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : author
[DEBUG] 2021-05-07 19:26:02.176 [http-nio-8080-exec-8] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@b6686c2]
[DEBUG] 2021-05-07 19:26:02.192 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : author.books
[DEBUG] 2021-05-07 19:26:02.203 [http-nio-8080-exec-8] MetamodelGraphWalker - Property path deemed to be circular : author.books
[DEBUG] 2021-05-07 19:26:02.210 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : author.name
[DEBUG] 2021-05-07 19:26:02.211 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : genre
[DEBUG] 2021-05-07 19:26:02.211 [http-nio-8080-exec-8] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@32dd82c4]
[DEBUG] 2021-05-07 19:26:02.211 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : genre.books
[DEBUG] 2021-05-07 19:26:02.211 [http-nio-8080-exec-8] MetamodelGraphWalker - Property path deemed to be circular : genre.books
[DEBUG] 2021-05-07 19:26:02.211 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : genre.name
[DEBUG] 2021-05-07 19:26:02.211 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : isbn
[DEBUG] 2021-05-07 19:26:02.211 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : notes
[DEBUG] 2021-05-07 19:26:02.211 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2021-05-07 19:26:02.211 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2021-05-07 19:26:02.211 [http-nio-8080-exec-8] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2d5281cf]
[DEBUG] 2021-05-07 19:26:02.211 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : user.books
[DEBUG] 2021-05-07 19:26:02.227 [http-nio-8080-exec-8] MetamodelGraphWalker - Property path deemed to be circular : user.books
[DEBUG] 2021-05-07 19:26:02.228 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2021-05-07 19:26:02.228 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2021-05-07 19:26:02.228 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2021-05-07 19:26:02.228 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2021-05-07 19:26:02.228 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2021-05-07 19:26:02.228 [http-nio-8080-exec-8] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6bcb9d75]
[DEBUG] 2021-05-07 19:26:02.228 [http-nio-8080-exec-8] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@13202675]
[DEBUG] 2021-05-07 19:26:02.244 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : user.roles.roleName
[DEBUG] 2021-05-07 19:26:02.244 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2021-05-07 19:26:02.244 [http-nio-8080-exec-8] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2021-05-07 19:26:02.244 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : user.roles.userName
[DEBUG] 2021-05-07 19:26:02.244 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : user.userName
[DEBUG] 2021-05-07 19:26:02.244 [http-nio-8080-exec-8] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-05-07 19:26:02.245 [http-nio-8080-exec-8] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-05-07 19:26:02.263 [http-nio-8080-exec-8] LoadPlanTreePrinter - LoadPlan(entity=com.leeannjakel.entity.Book)
    - Returns
       - EntityReturnImpl(entity=com.leeannjakel.entity.Book, querySpaceUid=<gen:0>, path=com.leeannjakel.entity.Book)
          - EntityAttributeFetchImpl(entity=com.leeannjakel.entity.Author, querySpaceUid=<gen:1>, path=com.leeannjakel.entity.Book.author)
          - EntityAttributeFetchImpl(entity=com.leeannjakel.entity.Genre, querySpaceUid=<gen:2>, path=com.leeannjakel.entity.Book.genre)
          - EntityAttributeFetchImpl(entity=com.leeannjakel.entity.User, querySpaceUid=<gen:3>, path=com.leeannjakel.entity.Book.user)
             - CollectionAttributeFetchImpl(collection=com.leeannjakel.entity.User.roles, querySpaceUid=<gen:4>, path=com.leeannjakel.entity.Book.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.leeannjakel.entity.Role, querySpaceUid=<gen:5>, path=com.leeannjakel.entity.Book.user.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.leeannjakel.entity.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(author)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.leeannjakel.entity.Author)
                - SQL table alias mapping - author1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}
          - JOIN (JoinDefinedByMetadata(genre)) : <gen:0> -> <gen:2>
             - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.leeannjakel.entity.Genre)
                - SQL table alias mapping - genre2_
                - alias suffix - 2_
                - suffixed key columns - {id1_2_2_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=com.leeannjakel.entity.User)
                - SQL table alias mapping - user3_
                - alias suffix - 3_
                - suffixed key columns - {id1_4_3_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:3> -> <gen:4>
                   - CollectionQuerySpaceImpl(uid=<gen:4>, collection=com.leeannjakel.entity.User.roles)
                      - SQL table alias mapping - roles4_
                      - alias suffix - 4_
                      - suffixed key columns - {user_id4_3_4_}
                      - entity-element alias suffix - 5_
                      - 5_entity-element suffixed key columns - id1_3_5_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:4> -> <gen:5>
                         - EntityQuerySpaceImpl(uid=<gen:5>, entity=com.leeannjakel.entity.Role)
                            - SQL table alias mapping - roles4_
                            - alias suffix - 5_
                            - suffixed key columns - {id1_3_5_}

[DEBUG] 2021-05-07 19:26:02.278 [http-nio-8080-exec-8] EntityLoader - Static select for entity com.leeannjakel.entity.Book [READ]: select book0_.id as id1_1_0_, book0_.author_id as author_i5_1_0_, book0_.genre_id as genre_id6_1_0_, book0_.isbn as isbn2_1_0_, book0_.notes as notes3_1_0_, book0_.title as title4_1_0_, book0_.user_id as user_id7_1_0_, author1_.id as id1_0_1_, author1_.name as name2_0_1_, genre2_.id as id1_2_2_, genre2_.name as name2_2_2_, user3_.id as id1_4_3_, user3_.email as email2_4_3_, user3_.first_name as first_na3_4_3_, user3_.last_name as last_nam4_4_3_, user3_.password as password5_4_3_, user3_.user_name as user_nam6_4_3_, roles4_.user_id as user_id4_3_4_, roles4_.id as id1_3_4_, roles4_.id as id1_3_5_, roles4_.role_name as role_nam2_3_5_, roles4_.user_id as user_id4_3_5_, roles4_.user_name as user_nam3_3_5_ from book book0_ left outer join author author1_ on book0_.author_id=author1_.id left outer join genre genre2_ on book0_.genre_id=genre2_.id left outer join user user3_ on book0_.user_id=user3_.id left outer join role roles4_ on user3_.id=roles4_.user_id where book0_.id=?
[DEBUG] 2021-05-07 19:26:02.338 [http-nio-8080-exec-8] Loader - Static select for action ACTION_MERGE on entity com.leeannjakel.entity.Book: select book0_.id as id1_1_0_, book0_.author_id as author_i5_1_0_, book0_.genre_id as genre_id6_1_0_, book0_.isbn as isbn2_1_0_, book0_.notes as notes3_1_0_, book0_.title as title4_1_0_, book0_.user_id as user_id7_1_0_ from book book0_ where book0_.id=?
[DEBUG] 2021-05-07 19:26:02.338 [http-nio-8080-exec-8] Loader - Static select for action ACTION_REFRESH on entity com.leeannjakel.entity.Book: select book0_.id as id1_1_0_, book0_.author_id as author_i5_1_0_, book0_.genre_id as genre_id6_1_0_, book0_.isbn as isbn2_1_0_, book0_.notes as notes3_1_0_, book0_.title as title4_1_0_, book0_.user_id as user_id7_1_0_ from book book0_ where book0_.id=?
[DEBUG] 2021-05-07 19:26:02.338 [http-nio-8080-exec-8] AbstractEntityPersister - Static SQL for entity: com.leeannjakel.entity.User
[DEBUG] 2021-05-07 19:26:02.338 [http-nio-8080-exec-8] AbstractEntityPersister -  Version select: select id from user where id =?
[DEBUG] 2021-05-07 19:26:02.338 [http-nio-8080-exec-8] AbstractEntityPersister -  Snapshot select: select user_.id, user_.email as email2_4_, user_.first_name as first_na3_4_, user_.last_name as last_nam4_4_, user_.password as password5_4_, user_.user_name as user_nam6_4_ from user user_ where user_.id=?
[DEBUG] 2021-05-07 19:26:02.339 [http-nio-8080-exec-8] AbstractEntityPersister -  Insert 0: insert into user (email, first_name, last_name, password, user_name, id) values (?, ?, ?, ?, ?, ?)
[DEBUG] 2021-05-07 19:26:02.339 [http-nio-8080-exec-8] AbstractEntityPersister -  Update 0: update user set email=?, first_name=?, last_name=?, password=?, user_name=? where id=?
[DEBUG] 2021-05-07 19:26:02.339 [http-nio-8080-exec-8] AbstractEntityPersister -  Delete 0: delete from user where id=?
[DEBUG] 2021-05-07 19:26:02.339 [http-nio-8080-exec-8] AbstractEntityPersister -  Identity insert: insert into user (email, first_name, last_name, password, user_name) values (?, ?, ?, ?, ?)
[DEBUG] 2021-05-07 19:26:02.339 [http-nio-8080-exec-8] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7461c810]
[DEBUG] 2021-05-07 19:26:02.339 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : books
[DEBUG] 2021-05-07 19:26:02.339 [http-nio-8080-exec-8] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4210d0af]
[DEBUG] 2021-05-07 19:26:02.339 [http-nio-8080-exec-8] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3320476a]
[DEBUG] 2021-05-07 19:26:02.346 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2021-05-07 19:26:02.346 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2021-05-07 19:26:02.346 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2021-05-07 19:26:02.346 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2021-05-07 19:26:02.346 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : roles
[DEBUG] 2021-05-07 19:26:02.347 [http-nio-8080-exec-8] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@49fb2856]
[DEBUG] 2021-05-07 19:26:02.347 [http-nio-8080-exec-8] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7a202294]
[DEBUG] 2021-05-07 19:26:02.348 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : roles.roleName
[DEBUG] 2021-05-07 19:26:02.348 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : roles.user
[DEBUG] 2021-05-07 19:26:02.348 [http-nio-8080-exec-8] MetamodelGraphWalker - Property path deemed to be circular : roles.user
[DEBUG] 2021-05-07 19:26:02.348 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : roles.userName
[DEBUG] 2021-05-07 19:26:02.349 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : userName
[DEBUG] 2021-05-07 19:26:02.349 [http-nio-8080-exec-8] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-05-07 19:26:02.352 [http-nio-8080-exec-8] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-05-07 19:26:02.356 [http-nio-8080-exec-8] LoadPlanTreePrinter - LoadPlan(entity=com.leeannjakel.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.leeannjakel.entity.User, querySpaceUid=<gen:0>, path=com.leeannjakel.entity.User)
          - CollectionAttributeFetchImpl(collection=com.leeannjakel.entity.User.books, querySpaceUid=<gen:1>, path=com.leeannjakel.entity.User.books)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.leeannjakel.entity.Book, querySpaceUid=<gen:2>, path=com.leeannjakel.entity.User.books.<elements>)
          - CollectionAttributeFetchImpl(collection=com.leeannjakel.entity.User.roles, querySpaceUid=<gen:3>, path=com.leeannjakel.entity.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.leeannjakel.entity.Role, querySpaceUid=<gen:4>, path=com.leeannjakel.entity.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.leeannjakel.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:3>
             - CollectionQuerySpaceImpl(uid=<gen:3>, collection=com.leeannjakel.entity.User.roles)
                - SQL table alias mapping - roles1_
                - alias suffix - 1_
                - suffixed key columns - {user_id4_3_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_3_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:3> -> <gen:4>
                   - EntityQuerySpaceImpl(uid=<gen:4>, entity=com.leeannjakel.entity.Role)
                      - SQL table alias mapping - roles1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_3_2_}

[DEBUG] 2021-05-07 19:26:02.356 [http-nio-8080-exec-8] EntityLoader - Static select for entity com.leeannjakel.entity.User [NONE]: select user0_.id as id1_4_0_, user0_.email as email2_4_0_, user0_.first_name as first_na3_4_0_, user0_.last_name as last_nam4_4_0_, user0_.password as password5_4_0_, user0_.user_name as user_nam6_4_0_, roles1_.user_id as user_id4_3_1_, roles1_.id as id1_3_1_, roles1_.id as id1_3_2_, roles1_.role_name as role_nam2_3_2_, roles1_.user_id as user_id4_3_2_, roles1_.user_name as user_nam3_3_2_ from user user0_ left outer join role roles1_ on user0_.id=roles1_.user_id where user0_.id=?
[DEBUG] 2021-05-07 19:26:02.357 [http-nio-8080-exec-8] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1f722b41]
[DEBUG] 2021-05-07 19:26:02.357 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : books
[DEBUG] 2021-05-07 19:26:02.357 [http-nio-8080-exec-8] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@527ccd41]
[DEBUG] 2021-05-07 19:26:02.357 [http-nio-8080-exec-8] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@52b7cc1]
[DEBUG] 2021-05-07 19:26:02.357 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2021-05-07 19:26:02.357 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2021-05-07 19:26:02.357 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2021-05-07 19:26:02.357 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2021-05-07 19:26:02.357 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : roles
[DEBUG] 2021-05-07 19:26:02.357 [http-nio-8080-exec-8] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@b0d7706]
[DEBUG] 2021-05-07 19:26:02.357 [http-nio-8080-exec-8] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@34df898]
[DEBUG] 2021-05-07 19:26:02.358 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : roles.roleName
[DEBUG] 2021-05-07 19:26:02.358 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : roles.user
[DEBUG] 2021-05-07 19:26:02.358 [http-nio-8080-exec-8] MetamodelGraphWalker - Property path deemed to be circular : roles.user
[DEBUG] 2021-05-07 19:26:02.358 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : roles.userName
[DEBUG] 2021-05-07 19:26:02.358 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : userName
[DEBUG] 2021-05-07 19:26:02.358 [http-nio-8080-exec-8] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-05-07 19:26:02.358 [http-nio-8080-exec-8] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-05-07 19:26:02.360 [http-nio-8080-exec-8] LoadPlanTreePrinter - LoadPlan(entity=com.leeannjakel.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.leeannjakel.entity.User, querySpaceUid=<gen:0>, path=com.leeannjakel.entity.User)
          - CollectionAttributeFetchImpl(collection=com.leeannjakel.entity.User.books, querySpaceUid=<gen:1>, path=com.leeannjakel.entity.User.books)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.leeannjakel.entity.Book, querySpaceUid=<gen:2>, path=com.leeannjakel.entity.User.books.<elements>)
          - CollectionAttributeFetchImpl(collection=com.leeannjakel.entity.User.roles, querySpaceUid=<gen:3>, path=com.leeannjakel.entity.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.leeannjakel.entity.Role, querySpaceUid=<gen:4>, path=com.leeannjakel.entity.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.leeannjakel.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:3>
             - CollectionQuerySpaceImpl(uid=<gen:3>, collection=com.leeannjakel.entity.User.roles)
                - SQL table alias mapping - roles1_
                - alias suffix - 1_
                - suffixed key columns - {user_id4_3_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_3_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:3> -> <gen:4>
                   - EntityQuerySpaceImpl(uid=<gen:4>, entity=com.leeannjakel.entity.Role)
                      - SQL table alias mapping - roles1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_3_2_}

[DEBUG] 2021-05-07 19:26:02.360 [http-nio-8080-exec-8] EntityLoader - Static select for entity com.leeannjakel.entity.User [READ]: select user0_.id as id1_4_0_, user0_.email as email2_4_0_, user0_.first_name as first_na3_4_0_, user0_.last_name as last_nam4_4_0_, user0_.password as password5_4_0_, user0_.user_name as user_nam6_4_0_, roles1_.user_id as user_id4_3_1_, roles1_.id as id1_3_1_, roles1_.id as id1_3_2_, roles1_.role_name as role_nam2_3_2_, roles1_.user_id as user_id4_3_2_, roles1_.user_name as user_nam3_3_2_ from user user0_ left outer join role roles1_ on user0_.id=roles1_.user_id where user0_.id=?
[DEBUG] 2021-05-07 19:26:02.362 [http-nio-8080-exec-8] Loader - Static select for action ACTION_MERGE on entity com.leeannjakel.entity.User: select user0_.id as id1_4_1_, user0_.email as email2_4_1_, user0_.first_name as first_na3_4_1_, user0_.last_name as last_nam4_4_1_, user0_.password as password5_4_1_, user0_.user_name as user_nam6_4_1_, books1_.user_id as user_id7_1_3_, books1_.id as id1_1_3_, books1_.id as id1_1_0_, books1_.author_id as author_i5_1_0_, books1_.genre_id as genre_id6_1_0_, books1_.isbn as isbn2_1_0_, books1_.notes as notes3_1_0_, books1_.title as title4_1_0_, books1_.user_id as user_id7_1_0_ from user user0_ left outer join book books1_ on user0_.id=books1_.user_id where user0_.id=?
[DEBUG] 2021-05-07 19:26:02.364 [http-nio-8080-exec-8] Loader - Static select for action ACTION_REFRESH on entity com.leeannjakel.entity.User: select user0_.id as id1_4_1_, user0_.email as email2_4_1_, user0_.first_name as first_na3_4_1_, user0_.last_name as last_nam4_4_1_, user0_.password as password5_4_1_, user0_.user_name as user_nam6_4_1_, books1_.user_id as user_id7_1_3_, books1_.id as id1_1_3_, books1_.id as id1_1_0_, books1_.author_id as author_i5_1_0_, books1_.genre_id as genre_id6_1_0_, books1_.isbn as isbn2_1_0_, books1_.notes as notes3_1_0_, books1_.title as title4_1_0_, books1_.user_id as user_id7_1_0_ from user user0_ left outer join book books1_ on user0_.id=books1_.user_id where user0_.id=?
[DEBUG] 2021-05-07 19:26:02.364 [http-nio-8080-exec-8] AbstractEntityPersister - Static SQL for entity: com.leeannjakel.entity.Author
[DEBUG] 2021-05-07 19:26:02.364 [http-nio-8080-exec-8] AbstractEntityPersister -  Version select: select id from author where id =?
[DEBUG] 2021-05-07 19:26:02.364 [http-nio-8080-exec-8] AbstractEntityPersister -  Snapshot select: select author_.id, author_.name as name2_0_ from author author_ where author_.id=?
[DEBUG] 2021-05-07 19:26:02.364 [http-nio-8080-exec-8] AbstractEntityPersister -  Insert 0: insert into author (name, id) values (?, ?)
[DEBUG] 2021-05-07 19:26:02.364 [http-nio-8080-exec-8] AbstractEntityPersister -  Update 0: update author set name=? where id=?
[DEBUG] 2021-05-07 19:26:02.364 [http-nio-8080-exec-8] AbstractEntityPersister -  Delete 0: delete from author where id=?
[DEBUG] 2021-05-07 19:26:02.364 [http-nio-8080-exec-8] AbstractEntityPersister -  Identity insert: insert into author (name) values (?)
[DEBUG] 2021-05-07 19:26:02.364 [http-nio-8080-exec-8] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@266654be]
[DEBUG] 2021-05-07 19:26:02.364 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : books
[DEBUG] 2021-05-07 19:26:02.365 [http-nio-8080-exec-8] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6746a575]
[DEBUG] 2021-05-07 19:26:02.365 [http-nio-8080-exec-8] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7f6c33bc]
[DEBUG] 2021-05-07 19:26:02.365 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2021-05-07 19:26:02.365 [http-nio-8080-exec-8] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-05-07 19:26:02.365 [http-nio-8080-exec-8] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-05-07 19:26:02.365 [http-nio-8080-exec-8] LoadPlanTreePrinter - LoadPlan(entity=com.leeannjakel.entity.Author)
    - Returns
       - EntityReturnImpl(entity=com.leeannjakel.entity.Author, querySpaceUid=<gen:0>, path=com.leeannjakel.entity.Author)
          - CollectionAttributeFetchImpl(collection=com.leeannjakel.entity.Author.books, querySpaceUid=<gen:1>, path=com.leeannjakel.entity.Author.books)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.leeannjakel.entity.Book, querySpaceUid=<gen:2>, path=com.leeannjakel.entity.Author.books.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.leeannjakel.entity.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[DEBUG] 2021-05-07 19:26:02.366 [http-nio-8080-exec-8] EntityLoader - Static select for entity com.leeannjakel.entity.Author [NONE]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_ from author author0_ where author0_.id=?
[DEBUG] 2021-05-07 19:26:02.366 [http-nio-8080-exec-8] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6bbb4b4b]
[DEBUG] 2021-05-07 19:26:02.368 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : books
[DEBUG] 2021-05-07 19:26:02.368 [http-nio-8080-exec-8] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@638fb170]
[DEBUG] 2021-05-07 19:26:02.368 [http-nio-8080-exec-8] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7de08f6e]
[DEBUG] 2021-05-07 19:26:02.368 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2021-05-07 19:26:02.368 [http-nio-8080-exec-8] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-05-07 19:26:02.369 [http-nio-8080-exec-8] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-05-07 19:26:02.369 [http-nio-8080-exec-8] LoadPlanTreePrinter - LoadPlan(entity=com.leeannjakel.entity.Author)
    - Returns
       - EntityReturnImpl(entity=com.leeannjakel.entity.Author, querySpaceUid=<gen:0>, path=com.leeannjakel.entity.Author)
          - CollectionAttributeFetchImpl(collection=com.leeannjakel.entity.Author.books, querySpaceUid=<gen:1>, path=com.leeannjakel.entity.Author.books)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.leeannjakel.entity.Book, querySpaceUid=<gen:2>, path=com.leeannjakel.entity.Author.books.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.leeannjakel.entity.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[DEBUG] 2021-05-07 19:26:02.370 [http-nio-8080-exec-8] EntityLoader - Static select for entity com.leeannjakel.entity.Author [READ]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_ from author author0_ where author0_.id=?
[DEBUG] 2021-05-07 19:26:02.372 [http-nio-8080-exec-8] Loader - Static select for action ACTION_MERGE on entity com.leeannjakel.entity.Author: select author0_.id as id1_0_1_, author0_.name as name2_0_1_, books1_.author_id as author_i5_1_3_, books1_.id as id1_1_3_, books1_.id as id1_1_0_, books1_.author_id as author_i5_1_0_, books1_.genre_id as genre_id6_1_0_, books1_.isbn as isbn2_1_0_, books1_.notes as notes3_1_0_, books1_.title as title4_1_0_, books1_.user_id as user_id7_1_0_ from author author0_ left outer join book books1_ on author0_.id=books1_.author_id where author0_.id=?
[DEBUG] 2021-05-07 19:26:02.376 [http-nio-8080-exec-8] Loader - Static select for action ACTION_REFRESH on entity com.leeannjakel.entity.Author: select author0_.id as id1_0_1_, author0_.name as name2_0_1_, books1_.author_id as author_i5_1_3_, books1_.id as id1_1_3_, books1_.id as id1_1_0_, books1_.author_id as author_i5_1_0_, books1_.genre_id as genre_id6_1_0_, books1_.isbn as isbn2_1_0_, books1_.notes as notes3_1_0_, books1_.title as title4_1_0_, books1_.user_id as user_id7_1_0_ from author author0_ left outer join book books1_ on author0_.id=books1_.author_id where author0_.id=?
[DEBUG] 2021-05-07 19:26:02.376 [http-nio-8080-exec-8] AbstractEntityPersister - Static SQL for entity: com.leeannjakel.entity.Genre
[DEBUG] 2021-05-07 19:26:02.376 [http-nio-8080-exec-8] AbstractEntityPersister -  Version select: select id from genre where id =?
[DEBUG] 2021-05-07 19:26:02.376 [http-nio-8080-exec-8] AbstractEntityPersister -  Snapshot select: select genre_.id, genre_.name as name2_2_ from genre genre_ where genre_.id=?
[DEBUG] 2021-05-07 19:26:02.376 [http-nio-8080-exec-8] AbstractEntityPersister -  Insert 0: insert into genre (name, id) values (?, ?)
[DEBUG] 2021-05-07 19:26:02.376 [http-nio-8080-exec-8] AbstractEntityPersister -  Update 0: update genre set name=? where id=?
[DEBUG] 2021-05-07 19:26:02.376 [http-nio-8080-exec-8] AbstractEntityPersister -  Delete 0: delete from genre where id=?
[DEBUG] 2021-05-07 19:26:02.377 [http-nio-8080-exec-8] AbstractEntityPersister -  Identity insert: insert into genre (name) values (?)
[DEBUG] 2021-05-07 19:26:02.377 [http-nio-8080-exec-8] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4c30728a]
[DEBUG] 2021-05-07 19:26:02.377 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : books
[DEBUG] 2021-05-07 19:26:02.377 [http-nio-8080-exec-8] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@65947fa5]
[DEBUG] 2021-05-07 19:26:02.377 [http-nio-8080-exec-8] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1c761786]
[DEBUG] 2021-05-07 19:26:02.377 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2021-05-07 19:26:02.377 [http-nio-8080-exec-8] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-05-07 19:26:02.378 [http-nio-8080-exec-8] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-05-07 19:26:02.379 [http-nio-8080-exec-8] LoadPlanTreePrinter - LoadPlan(entity=com.leeannjakel.entity.Genre)
    - Returns
       - EntityReturnImpl(entity=com.leeannjakel.entity.Genre, querySpaceUid=<gen:0>, path=com.leeannjakel.entity.Genre)
          - CollectionAttributeFetchImpl(collection=com.leeannjakel.entity.Genre.books, querySpaceUid=<gen:1>, path=com.leeannjakel.entity.Genre.books)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.leeannjakel.entity.Book, querySpaceUid=<gen:2>, path=com.leeannjakel.entity.Genre.books.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.leeannjakel.entity.Genre)
          - SQL table alias mapping - genre0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

[DEBUG] 2021-05-07 19:26:02.379 [http-nio-8080-exec-8] EntityLoader - Static select for entity com.leeannjakel.entity.Genre [NONE]: select genre0_.id as id1_2_0_, genre0_.name as name2_2_0_ from genre genre0_ where genre0_.id=?
[DEBUG] 2021-05-07 19:26:02.379 [http-nio-8080-exec-8] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@531d92a0]
[DEBUG] 2021-05-07 19:26:02.379 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : books
[DEBUG] 2021-05-07 19:26:02.379 [http-nio-8080-exec-8] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1c99628f]
[DEBUG] 2021-05-07 19:26:02.392 [http-nio-8080-exec-8] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@30ff9cbd]
[DEBUG] 2021-05-07 19:26:02.392 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2021-05-07 19:26:02.392 [http-nio-8080-exec-8] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-05-07 19:26:02.393 [http-nio-8080-exec-8] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-05-07 19:26:02.396 [http-nio-8080-exec-8] LoadPlanTreePrinter - LoadPlan(entity=com.leeannjakel.entity.Genre)
    - Returns
       - EntityReturnImpl(entity=com.leeannjakel.entity.Genre, querySpaceUid=<gen:0>, path=com.leeannjakel.entity.Genre)
          - CollectionAttributeFetchImpl(collection=com.leeannjakel.entity.Genre.books, querySpaceUid=<gen:1>, path=com.leeannjakel.entity.Genre.books)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.leeannjakel.entity.Book, querySpaceUid=<gen:2>, path=com.leeannjakel.entity.Genre.books.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.leeannjakel.entity.Genre)
          - SQL table alias mapping - genre0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

[DEBUG] 2021-05-07 19:26:02.396 [http-nio-8080-exec-8] EntityLoader - Static select for entity com.leeannjakel.entity.Genre [READ]: select genre0_.id as id1_2_0_, genre0_.name as name2_2_0_ from genre genre0_ where genre0_.id=?
[DEBUG] 2021-05-07 19:26:02.398 [http-nio-8080-exec-8] Loader - Static select for action ACTION_MERGE on entity com.leeannjakel.entity.Genre: select genre0_.id as id1_2_1_, genre0_.name as name2_2_1_, books1_.genre_id as genre_id6_1_3_, books1_.id as id1_1_3_, books1_.id as id1_1_0_, books1_.author_id as author_i5_1_0_, books1_.genre_id as genre_id6_1_0_, books1_.isbn as isbn2_1_0_, books1_.notes as notes3_1_0_, books1_.title as title4_1_0_, books1_.user_id as user_id7_1_0_ from genre genre0_ left outer join book books1_ on genre0_.id=books1_.genre_id where genre0_.id=?
[DEBUG] 2021-05-07 19:26:02.398 [http-nio-8080-exec-8] Loader - Static select for action ACTION_REFRESH on entity com.leeannjakel.entity.Genre: select genre0_.id as id1_2_1_, genre0_.name as name2_2_1_, books1_.genre_id as genre_id6_1_3_, books1_.id as id1_1_3_, books1_.id as id1_1_0_, books1_.author_id as author_i5_1_0_, books1_.genre_id as genre_id6_1_0_, books1_.isbn as isbn2_1_0_, books1_.notes as notes3_1_0_, books1_.title as title4_1_0_, books1_.user_id as user_id7_1_0_ from genre genre0_ left outer join book books1_ on genre0_.id=books1_.genre_id where genre0_.id=?
[DEBUG] 2021-05-07 19:26:02.398 [http-nio-8080-exec-8] AbstractEntityPersister - Static SQL for entity: com.leeannjakel.entity.Role
[DEBUG] 2021-05-07 19:26:02.398 [http-nio-8080-exec-8] AbstractEntityPersister -  Version select: select id from role where id =?
[DEBUG] 2021-05-07 19:26:02.398 [http-nio-8080-exec-8] AbstractEntityPersister -  Snapshot select: select role_.id, role_.role_name as role_nam2_3_, role_.user_id as user_id4_3_, role_.user_name as user_nam3_3_ from role role_ where role_.id=?
[DEBUG] 2021-05-07 19:26:02.398 [http-nio-8080-exec-8] AbstractEntityPersister -  Insert 0: insert into role (role_name, user_id, user_name, id) values (?, ?, ?, ?)
[DEBUG] 2021-05-07 19:26:02.398 [http-nio-8080-exec-8] AbstractEntityPersister -  Update 0: update role set role_name=?, user_id=?, user_name=? where id=?
[DEBUG] 2021-05-07 19:26:02.398 [http-nio-8080-exec-8] AbstractEntityPersister -  Delete 0: delete from role where id=?
[DEBUG] 2021-05-07 19:26:02.398 [http-nio-8080-exec-8] AbstractEntityPersister -  Identity insert: insert into role (role_name, user_id, user_name) values (?, ?, ?)
[DEBUG] 2021-05-07 19:26:02.401 [http-nio-8080-exec-8] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f488090]
[DEBUG] 2021-05-07 19:26:02.401 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : roleName
[DEBUG] 2021-05-07 19:26:02.401 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2021-05-07 19:26:02.401 [http-nio-8080-exec-8] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@30f50abd]
[DEBUG] 2021-05-07 19:26:02.401 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : user.books
[DEBUG] 2021-05-07 19:26:02.401 [http-nio-8080-exec-8] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3724317e]
[DEBUG] 2021-05-07 19:26:02.401 [http-nio-8080-exec-8] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2c9effbe]
[DEBUG] 2021-05-07 19:26:02.401 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2021-05-07 19:26:02.401 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2021-05-07 19:26:02.401 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2021-05-07 19:26:02.401 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2021-05-07 19:26:02.401 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2021-05-07 19:26:02.402 [http-nio-8080-exec-8] MetamodelGraphWalker - Property path deemed to be circular : user.roles
[DEBUG] 2021-05-07 19:26:02.402 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : user.userName
[DEBUG] 2021-05-07 19:26:02.402 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : userName
[DEBUG] 2021-05-07 19:26:02.402 [http-nio-8080-exec-8] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-05-07 19:26:02.402 [http-nio-8080-exec-8] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-05-07 19:26:02.402 [http-nio-8080-exec-8] LoadPlanTreePrinter - LoadPlan(entity=com.leeannjakel.entity.Role)
    - Returns
       - EntityReturnImpl(entity=com.leeannjakel.entity.Role, querySpaceUid=<gen:0>, path=com.leeannjakel.entity.Role)
          - EntityAttributeFetchImpl(entity=com.leeannjakel.entity.User, querySpaceUid=<gen:1>, path=com.leeannjakel.entity.Role.user)
             - CollectionAttributeFetchImpl(collection=com.leeannjakel.entity.User.books, querySpaceUid=<gen:2>, path=com.leeannjakel.entity.Role.user.books)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.leeannjakel.entity.Book, querySpaceUid=<gen:3>, path=com.leeannjakel.entity.Role.user.books.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.leeannjakel.entity.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.leeannjakel.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_4_1_}

[DEBUG] 2021-05-07 19:26:02.402 [http-nio-8080-exec-8] EntityLoader - Static select for entity com.leeannjakel.entity.Role [NONE]: select role0_.id as id1_3_0_, role0_.role_name as role_nam2_3_0_, role0_.user_id as user_id4_3_0_, role0_.user_name as user_nam3_3_0_, user1_.id as id1_4_1_, user1_.email as email2_4_1_, user1_.first_name as first_na3_4_1_, user1_.last_name as last_nam4_4_1_, user1_.password as password5_4_1_, user1_.user_name as user_nam6_4_1_ from role role0_ left outer join user user1_ on role0_.user_id=user1_.id where role0_.id=?
[DEBUG] 2021-05-07 19:26:02.412 [http-nio-8080-exec-8] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3426a872]
[DEBUG] 2021-05-07 19:26:02.412 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : roleName
[DEBUG] 2021-05-07 19:26:02.412 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2021-05-07 19:26:02.412 [http-nio-8080-exec-8] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4548587f]
[DEBUG] 2021-05-07 19:26:02.413 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : user.books
[DEBUG] 2021-05-07 19:26:02.413 [http-nio-8080-exec-8] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1f9462e3]
[DEBUG] 2021-05-07 19:26:02.413 [http-nio-8080-exec-8] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@455a2973]
[DEBUG] 2021-05-07 19:26:02.413 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2021-05-07 19:26:02.413 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2021-05-07 19:26:02.413 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2021-05-07 19:26:02.413 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2021-05-07 19:26:02.413 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2021-05-07 19:26:02.413 [http-nio-8080-exec-8] MetamodelGraphWalker - Property path deemed to be circular : user.roles
[DEBUG] 2021-05-07 19:26:02.413 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : user.userName
[DEBUG] 2021-05-07 19:26:02.413 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : userName
[DEBUG] 2021-05-07 19:26:02.413 [http-nio-8080-exec-8] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-05-07 19:26:02.413 [http-nio-8080-exec-8] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-05-07 19:26:02.416 [http-nio-8080-exec-8] LoadPlanTreePrinter - LoadPlan(entity=com.leeannjakel.entity.Role)
    - Returns
       - EntityReturnImpl(entity=com.leeannjakel.entity.Role, querySpaceUid=<gen:0>, path=com.leeannjakel.entity.Role)
          - EntityAttributeFetchImpl(entity=com.leeannjakel.entity.User, querySpaceUid=<gen:1>, path=com.leeannjakel.entity.Role.user)
             - CollectionAttributeFetchImpl(collection=com.leeannjakel.entity.User.books, querySpaceUid=<gen:2>, path=com.leeannjakel.entity.Role.user.books)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.leeannjakel.entity.Book, querySpaceUid=<gen:3>, path=com.leeannjakel.entity.Role.user.books.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.leeannjakel.entity.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.leeannjakel.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_4_1_}

[DEBUG] 2021-05-07 19:26:02.418 [http-nio-8080-exec-8] EntityLoader - Static select for entity com.leeannjakel.entity.Role [READ]: select role0_.id as id1_3_0_, role0_.role_name as role_nam2_3_0_, role0_.user_id as user_id4_3_0_, role0_.user_name as user_nam3_3_0_, user1_.id as id1_4_1_, user1_.email as email2_4_1_, user1_.first_name as first_na3_4_1_, user1_.last_name as last_nam4_4_1_, user1_.password as password5_4_1_, user1_.user_name as user_nam6_4_1_ from role role0_ left outer join user user1_ on role0_.user_id=user1_.id where role0_.id=?
[DEBUG] 2021-05-07 19:26:02.419 [http-nio-8080-exec-8] Loader - Static select for action ACTION_MERGE on entity com.leeannjakel.entity.Role: select role0_.id as id1_3_0_, role0_.role_name as role_nam2_3_0_, role0_.user_id as user_id4_3_0_, role0_.user_name as user_nam3_3_0_ from role role0_ where role0_.id=?
[DEBUG] 2021-05-07 19:26:02.424 [http-nio-8080-exec-8] Loader - Static select for action ACTION_REFRESH on entity com.leeannjakel.entity.Role: select role0_.id as id1_3_0_, role0_.role_name as role_nam2_3_0_, role0_.user_id as user_id4_3_0_, role0_.user_name as user_nam3_3_0_ from role role0_ where role0_.id=?
[DEBUG] 2021-05-07 19:26:02.433 [http-nio-8080-exec-8] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@17bb8edf]
[DEBUG] 2021-05-07 19:26:02.433 [http-nio-8080-exec-8] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@117efb6]
[DEBUG] 2021-05-07 19:26:02.433 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : author
[DEBUG] 2021-05-07 19:26:02.433 [http-nio-8080-exec-8] MetamodelGraphWalker - Property path deemed to be circular : author
[DEBUG] 2021-05-07 19:26:02.433 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : genre
[DEBUG] 2021-05-07 19:26:02.434 [http-nio-8080-exec-8] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@42974f9e]
[DEBUG] 2021-05-07 19:26:02.434 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : genre.books
[DEBUG] 2021-05-07 19:26:02.434 [http-nio-8080-exec-8] MetamodelGraphWalker - Property path deemed to be circular : genre.books
[DEBUG] 2021-05-07 19:26:02.434 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : genre.name
[DEBUG] 2021-05-07 19:26:02.445 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : isbn
[DEBUG] 2021-05-07 19:26:02.446 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : notes
[DEBUG] 2021-05-07 19:26:02.446 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2021-05-07 19:26:02.446 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2021-05-07 19:26:02.448 [http-nio-8080-exec-8] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@34eaf1a]
[DEBUG] 2021-05-07 19:26:02.449 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : user.books
[DEBUG] 2021-05-07 19:26:02.449 [http-nio-8080-exec-8] MetamodelGraphWalker - Property path deemed to be circular : user.books
[DEBUG] 2021-05-07 19:26:02.449 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2021-05-07 19:26:02.449 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2021-05-07 19:26:02.450 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2021-05-07 19:26:02.450 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2021-05-07 19:26:02.450 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2021-05-07 19:26:02.451 [http-nio-8080-exec-8] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7de28fa4]
[DEBUG] 2021-05-07 19:26:02.451 [http-nio-8080-exec-8] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1ad79877]
[DEBUG] 2021-05-07 19:26:02.452 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : user.userName
[DEBUG] 2021-05-07 19:26:02.454 [http-nio-8080-exec-8] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-05-07 19:26:02.462 [http-nio-8080-exec-8] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-05-07 19:26:02.466 [http-nio-8080-exec-8] LoadPlanTreePrinter - LoadPlan(collection=com.leeannjakel.entity.Author.books)
    - Returns
       - CollectionReturnImpl(collection=com.leeannjakel.entity.Author.books, querySpaceUid=<gen:0>, path=[com.leeannjakel.entity.Author.books])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.leeannjakel.entity.Book, querySpaceUid=<gen:1>, path=[com.leeannjakel.entity.Author.books].<elements>)
             - EntityAttributeFetchImpl(entity=com.leeannjakel.entity.Genre, querySpaceUid=<gen:2>, path=[com.leeannjakel.entity.Author.books].<elements>.genre)
             - EntityAttributeFetchImpl(entity=com.leeannjakel.entity.User, querySpaceUid=<gen:3>, path=[com.leeannjakel.entity.Author.books].<elements>.user)
                - CollectionAttributeFetchImpl(collection=com.leeannjakel.entity.User.roles, querySpaceUid=<gen:4>, path=[com.leeannjakel.entity.Author.books].<elements>.user.roles)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.leeannjakel.entity.Role, querySpaceUid=<gen:5>, path=[com.leeannjakel.entity.Author.books].<elements>.user.roles.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.leeannjakel.entity.Author.books)
          - SQL table alias mapping - books0_
          - alias suffix - 0_
          - suffixed key columns - {author_i5_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.leeannjakel.entity.Book)
                - SQL table alias mapping - books0_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}
                - JOIN (JoinDefinedByMetadata(genre)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.leeannjakel.entity.Genre)
                      - SQL table alias mapping - genre1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_2_2_}
                - JOIN (JoinDefinedByMetadata(user)) : <gen:1> -> <gen:3>
                   - EntityQuerySpaceImpl(uid=<gen:3>, entity=com.leeannjakel.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 3_
                      - suffixed key columns - {id1_4_3_}

[DEBUG] 2021-05-07 19:26:02.467 [http-nio-8080-exec-8] CollectionLoader - Static select for collection com.leeannjakel.entity.Author.books: select books0_.author_id as author_i5_1_0_, books0_.id as id1_1_0_, books0_.id as id1_1_1_, books0_.author_id as author_i5_1_1_, books0_.genre_id as genre_id6_1_1_, books0_.isbn as isbn2_1_1_, books0_.notes as notes3_1_1_, books0_.title as title4_1_1_, books0_.user_id as user_id7_1_1_, genre1_.id as id1_2_2_, genre1_.name as name2_2_2_, user2_.id as id1_4_3_, user2_.email as email2_4_3_, user2_.first_name as first_na3_4_3_, user2_.last_name as last_nam4_4_3_, user2_.password as password5_4_3_, user2_.user_name as user_nam6_4_3_ from book books0_ left outer join genre genre1_ on books0_.genre_id=genre1_.id left outer join user user2_ on books0_.user_id=user2_.id where books0_.author_id=?
[DEBUG] 2021-05-07 19:26:02.467 [http-nio-8080-exec-8] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2cd4af83]
[DEBUG] 2021-05-07 19:26:02.467 [http-nio-8080-exec-8] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@66aecf6e]
[DEBUG] 2021-05-07 19:26:02.467 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : author
[DEBUG] 2021-05-07 19:26:02.467 [http-nio-8080-exec-8] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@656a6124]
[DEBUG] 2021-05-07 19:26:02.467 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : author.books
[DEBUG] 2021-05-07 19:26:02.468 [http-nio-8080-exec-8] MetamodelGraphWalker - Property path deemed to be circular : author.books
[DEBUG] 2021-05-07 19:26:02.469 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : author.name
[DEBUG] 2021-05-07 19:26:02.470 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : genre
[DEBUG] 2021-05-07 19:26:02.470 [http-nio-8080-exec-8] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7649e6ab]
[DEBUG] 2021-05-07 19:26:02.470 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : genre.books
[DEBUG] 2021-05-07 19:26:02.470 [http-nio-8080-exec-8] MetamodelGraphWalker - Property path deemed to be circular : genre.books
[DEBUG] 2021-05-07 19:26:02.470 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : genre.name
[DEBUG] 2021-05-07 19:26:02.474 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : isbn
[DEBUG] 2021-05-07 19:26:02.474 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : notes
[DEBUG] 2021-05-07 19:26:02.474 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2021-05-07 19:26:02.474 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2021-05-07 19:26:02.474 [http-nio-8080-exec-8] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2021-05-07 19:26:02.474 [http-nio-8080-exec-8] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-05-07 19:26:02.474 [http-nio-8080-exec-8] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-05-07 19:26:02.475 [http-nio-8080-exec-8] LoadPlanTreePrinter - LoadPlan(collection=com.leeannjakel.entity.User.books)
    - Returns
       - CollectionReturnImpl(collection=com.leeannjakel.entity.User.books, querySpaceUid=<gen:0>, path=[com.leeannjakel.entity.User.books])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.leeannjakel.entity.Book, querySpaceUid=<gen:1>, path=[com.leeannjakel.entity.User.books].<elements>)
             - EntityAttributeFetchImpl(entity=com.leeannjakel.entity.Author, querySpaceUid=<gen:2>, path=[com.leeannjakel.entity.User.books].<elements>.author)
             - EntityAttributeFetchImpl(entity=com.leeannjakel.entity.Genre, querySpaceUid=<gen:3>, path=[com.leeannjakel.entity.User.books].<elements>.genre)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.leeannjakel.entity.User.books)
          - SQL table alias mapping - books0_
          - alias suffix - 0_
          - suffixed key columns - {user_id7_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.leeannjakel.entity.Book)
                - SQL table alias mapping - books0_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}
                - JOIN (JoinDefinedByMetadata(author)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.leeannjakel.entity.Author)
                      - SQL table alias mapping - author1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}
                - JOIN (JoinDefinedByMetadata(genre)) : <gen:1> -> <gen:3>
                   - EntityQuerySpaceImpl(uid=<gen:3>, entity=com.leeannjakel.entity.Genre)
                      - SQL table alias mapping - genre2_
                      - alias suffix - 3_
                      - suffixed key columns - {id1_2_3_}

[DEBUG] 2021-05-07 19:26:02.475 [http-nio-8080-exec-8] CollectionLoader - Static select for collection com.leeannjakel.entity.User.books: select books0_.user_id as user_id7_1_0_, books0_.id as id1_1_0_, books0_.id as id1_1_1_, books0_.author_id as author_i5_1_1_, books0_.genre_id as genre_id6_1_1_, books0_.isbn as isbn2_1_1_, books0_.notes as notes3_1_1_, books0_.title as title4_1_1_, books0_.user_id as user_id7_1_1_, author1_.id as id1_0_2_, author1_.name as name2_0_2_, genre2_.id as id1_2_3_, genre2_.name as name2_2_3_ from book books0_ left outer join author author1_ on books0_.author_id=author1_.id left outer join genre genre2_ on books0_.genre_id=genre2_.id where books0_.user_id=?
[DEBUG] 2021-05-07 19:26:02.475 [http-nio-8080-exec-8] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@77fc2e80]
[DEBUG] 2021-05-07 19:26:02.475 [http-nio-8080-exec-8] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7a64e2f0]
[DEBUG] 2021-05-07 19:26:02.476 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : roleName
[DEBUG] 2021-05-07 19:26:02.476 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2021-05-07 19:26:02.476 [http-nio-8080-exec-8] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2021-05-07 19:26:02.476 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : userName
[DEBUG] 2021-05-07 19:26:02.476 [http-nio-8080-exec-8] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-05-07 19:26:02.485 [http-nio-8080-exec-8] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-05-07 19:26:02.490 [http-nio-8080-exec-8] LoadPlanTreePrinter - LoadPlan(collection=com.leeannjakel.entity.User.roles)
    - Returns
       - CollectionReturnImpl(collection=com.leeannjakel.entity.User.roles, querySpaceUid=<gen:0>, path=[com.leeannjakel.entity.User.roles])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.leeannjakel.entity.Role, querySpaceUid=<gen:1>, path=[com.leeannjakel.entity.User.roles].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.leeannjakel.entity.User.roles)
          - SQL table alias mapping - roles0_
          - alias suffix - 0_
          - suffixed key columns - {user_id4_3_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_3_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.leeannjakel.entity.Role)
                - SQL table alias mapping - roles0_
                - alias suffix - 1_
                - suffixed key columns - {id1_3_1_}

[DEBUG] 2021-05-07 19:26:02.490 [http-nio-8080-exec-8] CollectionLoader - Static select for collection com.leeannjakel.entity.User.roles: select roles0_.user_id as user_id4_3_0_, roles0_.id as id1_3_0_, roles0_.id as id1_3_1_, roles0_.role_name as role_nam2_3_1_, roles0_.user_id as user_id4_3_1_, roles0_.user_name as user_nam3_3_1_ from role roles0_ where roles0_.user_id=?
[DEBUG] 2021-05-07 19:26:02.490 [http-nio-8080-exec-8] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5c3913f3]
[DEBUG] 2021-05-07 19:26:02.490 [http-nio-8080-exec-8] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@19719e6]
[DEBUG] 2021-05-07 19:26:02.490 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : author
[DEBUG] 2021-05-07 19:26:02.490 [http-nio-8080-exec-8] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@288322e9]
[DEBUG] 2021-05-07 19:26:02.490 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : author.books
[DEBUG] 2021-05-07 19:26:02.490 [http-nio-8080-exec-8] MetamodelGraphWalker - Property path deemed to be circular : author.books
[DEBUG] 2021-05-07 19:26:02.490 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : author.name
[DEBUG] 2021-05-07 19:26:02.490 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : genre
[DEBUG] 2021-05-07 19:26:02.490 [http-nio-8080-exec-8] MetamodelGraphWalker - Property path deemed to be circular : genre
[DEBUG] 2021-05-07 19:26:02.490 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : isbn
[DEBUG] 2021-05-07 19:26:02.490 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : notes
[DEBUG] 2021-05-07 19:26:02.490 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2021-05-07 19:26:02.491 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2021-05-07 19:26:02.491 [http-nio-8080-exec-8] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@57b5b7f2]
[DEBUG] 2021-05-07 19:26:02.491 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : user.books
[DEBUG] 2021-05-07 19:26:02.491 [http-nio-8080-exec-8] MetamodelGraphWalker - Property path deemed to be circular : user.books
[DEBUG] 2021-05-07 19:26:02.491 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2021-05-07 19:26:02.491 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2021-05-07 19:26:02.491 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2021-05-07 19:26:02.491 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2021-05-07 19:26:02.491 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2021-05-07 19:26:02.491 [http-nio-8080-exec-8] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@52551e5e]
[DEBUG] 2021-05-07 19:26:02.491 [http-nio-8080-exec-8] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5105b1d4]
[DEBUG] 2021-05-07 19:26:02.491 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : user.userName
[DEBUG] 2021-05-07 19:26:02.491 [http-nio-8080-exec-8] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-05-07 19:26:02.491 [http-nio-8080-exec-8] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-05-07 19:26:02.492 [http-nio-8080-exec-8] LoadPlanTreePrinter - LoadPlan(collection=com.leeannjakel.entity.Genre.books)
    - Returns
       - CollectionReturnImpl(collection=com.leeannjakel.entity.Genre.books, querySpaceUid=<gen:0>, path=[com.leeannjakel.entity.Genre.books])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.leeannjakel.entity.Book, querySpaceUid=<gen:1>, path=[com.leeannjakel.entity.Genre.books].<elements>)
             - EntityAttributeFetchImpl(entity=com.leeannjakel.entity.Author, querySpaceUid=<gen:2>, path=[com.leeannjakel.entity.Genre.books].<elements>.author)
             - EntityAttributeFetchImpl(entity=com.leeannjakel.entity.User, querySpaceUid=<gen:3>, path=[com.leeannjakel.entity.Genre.books].<elements>.user)
                - CollectionAttributeFetchImpl(collection=com.leeannjakel.entity.User.roles, querySpaceUid=<gen:4>, path=[com.leeannjakel.entity.Genre.books].<elements>.user.roles)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.leeannjakel.entity.Role, querySpaceUid=<gen:5>, path=[com.leeannjakel.entity.Genre.books].<elements>.user.roles.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.leeannjakel.entity.Genre.books)
          - SQL table alias mapping - books0_
          - alias suffix - 0_
          - suffixed key columns - {genre_id6_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.leeannjakel.entity.Book)
                - SQL table alias mapping - books0_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}
                - JOIN (JoinDefinedByMetadata(author)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.leeannjakel.entity.Author)
                      - SQL table alias mapping - author1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}
                - JOIN (JoinDefinedByMetadata(user)) : <gen:1> -> <gen:3>
                   - EntityQuerySpaceImpl(uid=<gen:3>, entity=com.leeannjakel.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 3_
                      - suffixed key columns - {id1_4_3_}

[DEBUG] 2021-05-07 19:26:02.492 [http-nio-8080-exec-8] CollectionLoader - Static select for collection com.leeannjakel.entity.Genre.books: select books0_.genre_id as genre_id6_1_0_, books0_.id as id1_1_0_, books0_.id as id1_1_1_, books0_.author_id as author_i5_1_1_, books0_.genre_id as genre_id6_1_1_, books0_.isbn as isbn2_1_1_, books0_.notes as notes3_1_1_, books0_.title as title4_1_1_, books0_.user_id as user_id7_1_1_, author1_.id as id1_0_2_, author1_.name as name2_0_2_, user2_.id as id1_4_3_, user2_.email as email2_4_3_, user2_.first_name as first_na3_4_3_, user2_.last_name as last_nam4_4_3_, user2_.password as password5_4_3_, user2_.user_name as user_nam6_4_3_ from book books0_ left outer join author author1_ on books0_.author_id=author1_.id left outer join user user2_ on books0_.user_id=user2_.id where books0_.genre_id=?
[DEBUG] 2021-05-07 19:26:02.813 [http-nio-8080-exec-8] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2021-05-07 19:26:02.813 [http-nio-8080-exec-8] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2021-05-07 19:26:02.814 [http-nio-8080-exec-8] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2021-05-07 19:26:02.861 [http-nio-8080-exec-8] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2021-05-07 19:26:02.861 [http-nio-8080-exec-8] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2021-05-07 19:26:02.863 [http-nio-8080-exec-8] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2021-05-07 19:26:02.863 [http-nio-8080-exec-8] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2021-05-07 19:26:02.881 [http-nio-8080-exec-8] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@32d748dc
[DEBUG] 2021-05-07 19:26:02.887 [http-nio-8080-exec-8] SessionFactoryRegistry - Registering SessionFactory: 5926ef28-e6ff-46da-a266-dfd483d64968 (<unnamed>)
[DEBUG] 2021-05-07 19:26:02.887 [http-nio-8080-exec-8] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2021-05-07 19:26:03.156 [http-nio-8080-exec-8] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2021-05-07 19:26:03.266 [http-nio-8080-exec-8] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from User as generatedAlias0
[DEBUG] 2021-05-07 19:26:03.324 [http-nio-8080-exec-8] QueryTranslatorFactoryInitiator - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@2d2f8b53
[DEBUG] 2021-05-07 19:26:03.437 [http-nio-8080-exec-8] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from com.leeannjakel.entity.User as generatedAlias0
[DEBUG] 2021-05-07 19:26:03.455 [http-nio-8080-exec-8] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2021-05-07 19:26:03.491 [http-nio-8080-exec-8] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  \-[IDENT] Node: 'leeannjakel'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'User'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

[DEBUG] 2021-05-07 19:26:03.583 [http-nio-8080-exec-8] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2021-05-07 19:26:03.658 [http-nio-8080-exec-8] FromElement - FromClause{level=1} : com.leeannjakel.entity.User (generatedAlias0) -> user0_
[DEBUG] 2021-05-07 19:26:03.659 [http-nio-8080-exec-8] FromReferenceNode - Resolved : generatedAlias0 -> user0_.id
[DEBUG] 2021-05-07 19:26:03.661 [http-nio-8080-exec-8] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2021-05-07 19:26:03.662 [http-nio-8080-exec-8] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} user0_.id ) ( FromClause{level=1} user user0_ ) )
[DEBUG] 2021-05-07 19:26:03.693 [http-nio-8080-exec-8] JoinProcessor - Using FROM fragment [user user0_]
[DEBUG] 2021-05-07 19:26:03.693 [http-nio-8080-exec-8] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2021-05-07 19:26:03.694 [http-nio-8080-exec-8] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (user)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.id as id1_4_' {alias=generatedAlias0, className=com.leeannjakel.entity.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.email as email2_4_, user0_.first_name as first_na3_4_, user0_.last_name as last_nam4_4_, user0_.password as password5_4_, user0_.user_name as user_nam6_4_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'user user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=user,tableAlias=user0_,origin=null,columns={,className=com.leeannjakel.entity.User}}

[DEBUG] 2021-05-07 19:26:03.694 [http-nio-8080-exec-8] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2021-05-07 19:26:03.714 [http-nio-8080-exec-8] QueryTranslatorImpl - HQL: select generatedAlias0 from com.leeannjakel.entity.User as generatedAlias0
[DEBUG] 2021-05-07 19:26:03.714 [http-nio-8080-exec-8] QueryTranslatorImpl - SQL: select user0_.id as id1_4_, user0_.email as email2_4_, user0_.first_name as first_na3_4_, user0_.last_name as last_nam4_4_, user0_.password as password5_4_, user0_.user_name as user_nam6_4_ from user user0_
[DEBUG] 2021-05-07 19:26:03.714 [http-nio-8080-exec-8] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2021-05-07 19:26:03.945 [http-nio-8080-exec-8] SQL - select user0_.id as id1_4_, user0_.email as email2_4_, user0_.first_name as first_na3_4_, user0_.last_name as last_nam4_4_, user0_.password as password5_4_, user0_.user_name as user_nam6_4_ from user user0_
[DEBUG] 2021-05-07 19:26:04.201 [http-nio-8080-exec-8] Loader - Result set row: 0
[DEBUG] 2021-05-07 19:26:04.231 [http-nio-8080-exec-8] Loader - Result row: EntityKey[com.leeannjakel.entity.User#1]
[DEBUG] 2021-05-07 19:26:04.271 [http-nio-8080-exec-8] Loader - Result set row: 1
[DEBUG] 2021-05-07 19:26:04.274 [http-nio-8080-exec-8] Loader - Result row: EntityKey[com.leeannjakel.entity.User#2]
[DEBUG] 2021-05-07 19:26:04.275 [http-nio-8080-exec-8] Loader - Result set row: 2
[DEBUG] 2021-05-07 19:26:04.276 [http-nio-8080-exec-8] Loader - Result row: EntityKey[com.leeannjakel.entity.User#3]
[DEBUG] 2021-05-07 19:26:04.276 [http-nio-8080-exec-8] Loader - Result set row: 3
[DEBUG] 2021-05-07 19:26:04.276 [http-nio-8080-exec-8] Loader - Result row: EntityKey[com.leeannjakel.entity.User#4]
[DEBUG] 2021-05-07 19:26:04.278 [http-nio-8080-exec-8] Loader - Result set row: 4
[DEBUG] 2021-05-07 19:26:04.279 [http-nio-8080-exec-8] Loader - Result row: EntityKey[com.leeannjakel.entity.User#5]
[DEBUG] 2021-05-07 19:26:04.279 [http-nio-8080-exec-8] Loader - Result set row: 5
[DEBUG] 2021-05-07 19:26:04.279 [http-nio-8080-exec-8] Loader - Result row: EntityKey[com.leeannjakel.entity.User#6]
[DEBUG] 2021-05-07 19:26:04.288 [http-nio-8080-exec-8] Loader - Result set row: 6
[DEBUG] 2021-05-07 19:26:04.288 [http-nio-8080-exec-8] Loader - Result row: EntityKey[com.leeannjakel.entity.User#7]
[DEBUG] 2021-05-07 19:26:04.299 [http-nio-8080-exec-8] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.User#1]
[DEBUG] 2021-05-07 19:26:04.300 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `books` : value = NOT NULL COLLECTION
[DEBUG] 2021-05-07 19:26:04.300 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`books`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-07 19:26:04.357 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `email` : value = email@something.com
[DEBUG] 2021-05-07 19:26:04.359 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-07 19:26:04.360 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `firstName` : value = LeeAnn
[DEBUG] 2021-05-07 19:26:04.360 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-07 19:26:04.360 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `lastName` : value = Jakel
[DEBUG] 2021-05-07 19:26:04.360 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-07 19:26:04.360 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `password` : value = password
[DEBUG] 2021-05-07 19:26:04.360 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-07 19:26:04.360 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2021-05-07 19:26:04.360 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-07 19:26:04.360 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `userName` : value = ljakel
[DEBUG] 2021-05-07 19:26:04.360 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-07 19:26:04.361 [http-nio-8080-exec-8] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.User#1]
[DEBUG] 2021-05-07 19:26:04.361 [http-nio-8080-exec-8] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.User#2]
[DEBUG] 2021-05-07 19:26:04.361 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `books` : value = NOT NULL COLLECTION
[DEBUG] 2021-05-07 19:26:04.362 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`books`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-07 19:26:04.362 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `email` : value = email@something.com
[DEBUG] 2021-05-07 19:26:04.362 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-07 19:26:04.362 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `firstName` : value = Max
[DEBUG] 2021-05-07 19:26:04.362 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-07 19:26:04.362 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `lastName` : value = Jakel
[DEBUG] 2021-05-07 19:26:04.362 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-07 19:26:04.362 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `password` : value = password
[DEBUG] 2021-05-07 19:26:04.362 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-07 19:26:04.362 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2021-05-07 19:26:04.365 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-07 19:26:04.365 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `userName` : value = mjakel
[DEBUG] 2021-05-07 19:26:04.369 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-07 19:26:04.369 [http-nio-8080-exec-8] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.User#2]
[DEBUG] 2021-05-07 19:26:04.369 [http-nio-8080-exec-8] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.User#3]
[DEBUG] 2021-05-07 19:26:04.369 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `books` : value = NOT NULL COLLECTION
[DEBUG] 2021-05-07 19:26:04.369 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`books`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-07 19:26:04.369 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `email` : value = email@something.com
[DEBUG] 2021-05-07 19:26:04.369 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-07 19:26:04.369 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `firstName` : value = Lisa
[DEBUG] 2021-05-07 19:26:04.369 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-07 19:26:04.369 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `lastName` : value = Andritsch
[DEBUG] 2021-05-07 19:26:04.369 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-07 19:26:04.369 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `password` : value = password
[DEBUG] 2021-05-07 19:26:04.369 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-07 19:26:04.369 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2021-05-07 19:26:04.369 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-07 19:26:04.369 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `userName` : value = lisa
[DEBUG] 2021-05-07 19:26:04.369 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-07 19:26:04.369 [http-nio-8080-exec-8] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.User#3]
[DEBUG] 2021-05-07 19:26:04.369 [http-nio-8080-exec-8] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.User#4]
[DEBUG] 2021-05-07 19:26:04.369 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `books` : value = NOT NULL COLLECTION
[DEBUG] 2021-05-07 19:26:04.369 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`books`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-07 19:26:04.369 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `email` : value = email@something.com
[DEBUG] 2021-05-07 19:26:04.369 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-07 19:26:04.369 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `firstName` : value = Anthony
[DEBUG] 2021-05-07 19:26:04.369 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-07 19:26:04.369 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `lastName` : value = Rice
[DEBUG] 2021-05-07 19:26:04.369 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-07 19:26:04.369 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `password` : value = password
[DEBUG] 2021-05-07 19:26:04.369 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-07 19:26:04.369 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2021-05-07 19:26:04.369 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-07 19:26:04.370 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `userName` : value = ricerocks
[DEBUG] 2021-05-07 19:26:04.370 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-07 19:26:04.370 [http-nio-8080-exec-8] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.User#4]
[DEBUG] 2021-05-07 19:26:04.370 [http-nio-8080-exec-8] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.User#5]
[DEBUG] 2021-05-07 19:26:04.370 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `books` : value = NOT NULL COLLECTION
[DEBUG] 2021-05-07 19:26:04.370 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`books`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-07 19:26:04.370 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `email` : value = email@something.com
[DEBUG] 2021-05-07 19:26:04.370 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-07 19:26:04.370 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `firstName` : value = Paula
[DEBUG] 2021-05-07 19:26:04.370 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-07 19:26:04.370 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `lastName` : value = Waite
[DEBUG] 2021-05-07 19:26:04.370 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-07 19:26:04.370 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `password` : value = password
[DEBUG] 2021-05-07 19:26:04.370 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-07 19:26:04.370 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2021-05-07 19:26:04.370 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-07 19:26:04.370 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `userName` : value = pwaite
[DEBUG] 2021-05-07 19:26:04.370 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-07 19:26:04.370 [http-nio-8080-exec-8] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.User#5]
[DEBUG] 2021-05-07 19:26:04.370 [http-nio-8080-exec-8] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.User#6]
[DEBUG] 2021-05-07 19:26:04.370 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `books` : value = NOT NULL COLLECTION
[DEBUG] 2021-05-07 19:26:04.370 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`books`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-07 19:26:04.370 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `email` : value = email@email.com
[DEBUG] 2021-05-07 19:26:04.370 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-07 19:26:04.370 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `firstName` : value = Erin
[DEBUG] 2021-05-07 19:26:04.370 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-07 19:26:04.370 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `lastName` : value = Jakel
[DEBUG] 2021-05-07 19:26:04.370 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-07 19:26:04.370 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `password` : value = March3rd
[DEBUG] 2021-05-07 19:26:04.370 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-07 19:26:04.370 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2021-05-07 19:26:04.370 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-07 19:26:04.370 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `userName` : value = eajakel
[DEBUG] 2021-05-07 19:26:04.370 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-07 19:26:04.371 [http-nio-8080-exec-8] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.User#6]
[DEBUG] 2021-05-07 19:26:04.371 [http-nio-8080-exec-8] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.User#7]
[DEBUG] 2021-05-07 19:26:04.371 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `books` : value = NOT NULL COLLECTION
[DEBUG] 2021-05-07 19:26:04.373 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`books`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-07 19:26:04.373 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `email` : value = lmkabler@madisoncollege.edu
[DEBUG] 2021-05-07 19:26:04.373 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-07 19:26:04.373 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `firstName` : value = LeeAnn
[DEBUG] 2021-05-07 19:26:04.374 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-07 19:26:04.375 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `lastName` : value = Jakel
[DEBUG] 2021-05-07 19:26:04.375 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-07 19:26:04.375 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `password` : value = password2
[DEBUG] 2021-05-07 19:26:04.380 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-07 19:26:04.381 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2021-05-07 19:26:04.381 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-07 19:26:04.381 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `userName` : value = lmjakel
[DEBUG] 2021-05-07 19:26:04.381 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-07 19:26:04.381 [http-nio-8080-exec-8] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.User#7]
[DEBUG] 2021-05-07 19:26:04.391 [http-nio-8080-exec-8] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.leeannjakel.entity.User.roles#7]
[DEBUG] 2021-05-07 19:26:04.392 [http-nio-8080-exec-8] SQL - select roles0_.user_id as user_id4_3_0_, roles0_.id as id1_3_0_, roles0_.id as id1_3_1_, roles0_.role_name as role_nam2_3_1_, roles0_.user_id as user_id4_3_1_, roles0_.user_name as user_nam3_3_1_ from role roles0_ where roles0_.user_id=?
[DEBUG] 2021-05-07 19:26:04.415 [http-nio-8080-exec-8] ResultSetProcessorImpl - Preparing collection initializer : [com.leeannjakel.entity.User.roles#7]
[DEBUG] 2021-05-07 19:26:04.423 [http-nio-8080-exec-8] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-05-07 19:26:04.435 [http-nio-8080-exec-8] CollectionReferenceInitializerImpl - Found row of collection: [com.leeannjakel.entity.User.roles#7]
[DEBUG] 2021-05-07 19:26:04.448 [http-nio-8080-exec-8] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.Role#9]
[DEBUG] 2021-05-07 19:26:04.448 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `roleName` : value = basic_user
[DEBUG] 2021-05-07 19:26:04.448 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`roleName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-07 19:26:04.448 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `user` : value = 7
[DEBUG] 2021-05-07 19:26:04.448 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-07 19:26:04.448 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `userName` : value = lmjakel
[DEBUG] 2021-05-07 19:26:04.448 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-07 19:26:04.448 [http-nio-8080-exec-8] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.Role#9]
[DEBUG] 2021-05-07 19:26:04.449 [http-nio-8080-exec-8] CollectionLoadContext - 1 collections were found in result set for role: com.leeannjakel.entity.User.roles
[DEBUG] 2021-05-07 19:26:04.450 [http-nio-8080-exec-8] CollectionLoadContext - Collection fully initialized: [com.leeannjakel.entity.User.roles#7]
[DEBUG] 2021-05-07 19:26:04.450 [http-nio-8080-exec-8] CollectionLoadContext - 1 collections initialized for role: com.leeannjakel.entity.User.roles
[DEBUG] 2021-05-07 19:26:04.450 [http-nio-8080-exec-8] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-05-07 19:26:04.450 [http-nio-8080-exec-8] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2021-05-07 19:26:04.450 [http-nio-8080-exec-8] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.leeannjakel.entity.User.roles#6]
[DEBUG] 2021-05-07 19:26:04.450 [http-nio-8080-exec-8] SQL - select roles0_.user_id as user_id4_3_0_, roles0_.id as id1_3_0_, roles0_.id as id1_3_1_, roles0_.role_name as role_nam2_3_1_, roles0_.user_id as user_id4_3_1_, roles0_.user_name as user_nam3_3_1_ from role roles0_ where roles0_.user_id=?
[DEBUG] 2021-05-07 19:26:04.454 [http-nio-8080-exec-8] ResultSetProcessorImpl - Preparing collection initializer : [com.leeannjakel.entity.User.roles#6]
[DEBUG] 2021-05-07 19:26:04.454 [http-nio-8080-exec-8] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-05-07 19:26:04.454 [http-nio-8080-exec-8] CollectionReferenceInitializerImpl - Found row of collection: [com.leeannjakel.entity.User.roles#6]
[DEBUG] 2021-05-07 19:26:04.455 [http-nio-8080-exec-8] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.Role#8]
[DEBUG] 2021-05-07 19:26:04.455 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `roleName` : value = basic_user
[DEBUG] 2021-05-07 19:26:04.455 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`roleName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-07 19:26:04.455 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `user` : value = 6
[DEBUG] 2021-05-07 19:26:04.455 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-07 19:26:04.455 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `userName` : value = eajakel
[DEBUG] 2021-05-07 19:26:04.455 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-07 19:26:04.455 [http-nio-8080-exec-8] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.Role#8]
[DEBUG] 2021-05-07 19:26:04.455 [http-nio-8080-exec-8] CollectionLoadContext - 1 collections were found in result set for role: com.leeannjakel.entity.User.roles
[DEBUG] 2021-05-07 19:26:04.455 [http-nio-8080-exec-8] CollectionLoadContext - Collection fully initialized: [com.leeannjakel.entity.User.roles#6]
[DEBUG] 2021-05-07 19:26:04.455 [http-nio-8080-exec-8] CollectionLoadContext - 1 collections initialized for role: com.leeannjakel.entity.User.roles
[DEBUG] 2021-05-07 19:26:04.455 [http-nio-8080-exec-8] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-05-07 19:26:04.456 [http-nio-8080-exec-8] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2021-05-07 19:26:04.459 [http-nio-8080-exec-8] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.leeannjakel.entity.User.roles#5]
[DEBUG] 2021-05-07 19:26:04.459 [http-nio-8080-exec-8] SQL - select roles0_.user_id as user_id4_3_0_, roles0_.id as id1_3_0_, roles0_.id as id1_3_1_, roles0_.role_name as role_nam2_3_1_, roles0_.user_id as user_id4_3_1_, roles0_.user_name as user_nam3_3_1_ from role roles0_ where roles0_.user_id=?
[DEBUG] 2021-05-07 19:26:04.461 [http-nio-8080-exec-8] ResultSetProcessorImpl - Preparing collection initializer : [com.leeannjakel.entity.User.roles#5]
[DEBUG] 2021-05-07 19:26:04.461 [http-nio-8080-exec-8] CollectionLoadContext - 1 collections were found in result set for role: com.leeannjakel.entity.User.roles
[DEBUG] 2021-05-07 19:26:04.461 [http-nio-8080-exec-8] CollectionLoadContext - Collection fully initialized: [com.leeannjakel.entity.User.roles#5]
[DEBUG] 2021-05-07 19:26:04.461 [http-nio-8080-exec-8] CollectionLoadContext - 1 collections initialized for role: com.leeannjakel.entity.User.roles
[DEBUG] 2021-05-07 19:26:04.462 [http-nio-8080-exec-8] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-05-07 19:26:04.462 [http-nio-8080-exec-8] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2021-05-07 19:26:04.462 [http-nio-8080-exec-8] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.leeannjakel.entity.User.roles#4]
[DEBUG] 2021-05-07 19:26:04.462 [http-nio-8080-exec-8] SQL - select roles0_.user_id as user_id4_3_0_, roles0_.id as id1_3_0_, roles0_.id as id1_3_1_, roles0_.role_name as role_nam2_3_1_, roles0_.user_id as user_id4_3_1_, roles0_.user_name as user_nam3_3_1_ from role roles0_ where roles0_.user_id=?
[DEBUG] 2021-05-07 19:26:04.463 [http-nio-8080-exec-8] ResultSetProcessorImpl - Preparing collection initializer : [com.leeannjakel.entity.User.roles#4]
[DEBUG] 2021-05-07 19:26:04.464 [http-nio-8080-exec-8] CollectionLoadContext - 1 collections were found in result set for role: com.leeannjakel.entity.User.roles
[DEBUG] 2021-05-07 19:26:04.464 [http-nio-8080-exec-8] CollectionLoadContext - Collection fully initialized: [com.leeannjakel.entity.User.roles#4]
[DEBUG] 2021-05-07 19:26:04.464 [http-nio-8080-exec-8] CollectionLoadContext - 1 collections initialized for role: com.leeannjakel.entity.User.roles
[DEBUG] 2021-05-07 19:26:04.464 [http-nio-8080-exec-8] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-05-07 19:26:04.464 [http-nio-8080-exec-8] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2021-05-07 19:26:04.464 [http-nio-8080-exec-8] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.leeannjakel.entity.User.roles#3]
[DEBUG] 2021-05-07 19:26:04.464 [http-nio-8080-exec-8] SQL - select roles0_.user_id as user_id4_3_0_, roles0_.id as id1_3_0_, roles0_.id as id1_3_1_, roles0_.role_name as role_nam2_3_1_, roles0_.user_id as user_id4_3_1_, roles0_.user_name as user_nam3_3_1_ from role roles0_ where roles0_.user_id=?
[DEBUG] 2021-05-07 19:26:04.466 [http-nio-8080-exec-8] ResultSetProcessorImpl - Preparing collection initializer : [com.leeannjakel.entity.User.roles#3]
[DEBUG] 2021-05-07 19:26:04.473 [http-nio-8080-exec-8] CollectionLoadContext - 1 collections were found in result set for role: com.leeannjakel.entity.User.roles
[DEBUG] 2021-05-07 19:26:04.473 [http-nio-8080-exec-8] CollectionLoadContext - Collection fully initialized: [com.leeannjakel.entity.User.roles#3]
[DEBUG] 2021-05-07 19:26:04.473 [http-nio-8080-exec-8] CollectionLoadContext - 1 collections initialized for role: com.leeannjakel.entity.User.roles
[DEBUG] 2021-05-07 19:26:04.473 [http-nio-8080-exec-8] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-05-07 19:26:04.474 [http-nio-8080-exec-8] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2021-05-07 19:26:04.474 [http-nio-8080-exec-8] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.leeannjakel.entity.User.roles#2]
[DEBUG] 2021-05-07 19:26:04.474 [http-nio-8080-exec-8] SQL - select roles0_.user_id as user_id4_3_0_, roles0_.id as id1_3_0_, roles0_.id as id1_3_1_, roles0_.role_name as role_nam2_3_1_, roles0_.user_id as user_id4_3_1_, roles0_.user_name as user_nam3_3_1_ from role roles0_ where roles0_.user_id=?
[DEBUG] 2021-05-07 19:26:04.480 [http-nio-8080-exec-8] ResultSetProcessorImpl - Preparing collection initializer : [com.leeannjakel.entity.User.roles#2]
[DEBUG] 2021-05-07 19:26:04.481 [http-nio-8080-exec-8] CollectionLoadContext - 1 collections were found in result set for role: com.leeannjakel.entity.User.roles
[DEBUG] 2021-05-07 19:26:04.482 [http-nio-8080-exec-8] CollectionLoadContext - Collection fully initialized: [com.leeannjakel.entity.User.roles#2]
[DEBUG] 2021-05-07 19:26:04.482 [http-nio-8080-exec-8] CollectionLoadContext - 1 collections initialized for role: com.leeannjakel.entity.User.roles
[DEBUG] 2021-05-07 19:26:04.482 [http-nio-8080-exec-8] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-05-07 19:26:04.483 [http-nio-8080-exec-8] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2021-05-07 19:26:04.483 [http-nio-8080-exec-8] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.leeannjakel.entity.User.roles#1]
[DEBUG] 2021-05-07 19:26:04.483 [http-nio-8080-exec-8] SQL - select roles0_.user_id as user_id4_3_0_, roles0_.id as id1_3_0_, roles0_.id as id1_3_1_, roles0_.role_name as role_nam2_3_1_, roles0_.user_id as user_id4_3_1_, roles0_.user_name as user_nam3_3_1_ from role roles0_ where roles0_.user_id=?
[DEBUG] 2021-05-07 19:26:04.488 [http-nio-8080-exec-8] ResultSetProcessorImpl - Preparing collection initializer : [com.leeannjakel.entity.User.roles#1]
[DEBUG] 2021-05-07 19:26:04.488 [http-nio-8080-exec-8] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-05-07 19:26:04.498 [http-nio-8080-exec-8] CollectionReferenceInitializerImpl - Found row of collection: [com.leeannjakel.entity.User.roles#1]
[DEBUG] 2021-05-07 19:26:04.502 [http-nio-8080-exec-8] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.Role#7]
[DEBUG] 2021-05-07 19:26:04.504 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `roleName` : value = admin
[DEBUG] 2021-05-07 19:26:04.505 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`roleName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-07 19:26:04.505 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2021-05-07 19:26:04.505 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-07 19:26:04.510 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `userName` : value = ljakel
[DEBUG] 2021-05-07 19:26:04.510 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-07 19:26:04.510 [http-nio-8080-exec-8] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.Role#7]
[DEBUG] 2021-05-07 19:26:04.510 [http-nio-8080-exec-8] CollectionLoadContext - 1 collections were found in result set for role: com.leeannjakel.entity.User.roles
[DEBUG] 2021-05-07 19:26:04.510 [http-nio-8080-exec-8] CollectionLoadContext - Collection fully initialized: [com.leeannjakel.entity.User.roles#1]
[DEBUG] 2021-05-07 19:26:04.510 [http-nio-8080-exec-8] CollectionLoadContext - 1 collections initialized for role: com.leeannjakel.entity.User.roles
[DEBUG] 2021-05-07 19:26:04.511 [http-nio-8080-exec-8] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-05-07 19:26:04.511 [http-nio-8080-exec-8] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2021-05-07 19:26:04.518 [http-nio-8080-exec-8] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-05-07 19:26:04.648 [http-nio-8080-exec-8] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2021-05-07 19:26:04.649 [http-nio-8080-exec-8] TransactionImpl - begin
[DEBUG] 2021-05-07 19:26:04.723 [http-nio-8080-exec-8] ActionQueue - Executing identity-insert immediately
[DEBUG] 2021-05-07 19:26:04.785 [http-nio-8080-exec-8] SQL - insert into user (email, first_name, last_name, password, user_name) values (?, ?, ?, ?, ?)
[DEBUG] 2021-05-07 19:26:04.856 [http-nio-8080-exec-8] IdentifierGeneratorHelper - Natively generated identity: 8
[DEBUG] 2021-05-07 19:26:04.856 [http-nio-8080-exec-8] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-05-07 19:26:04.881 [http-nio-8080-exec-8] ActionQueue - Executing identity-insert immediately
[DEBUG] 2021-05-07 19:26:04.885 [http-nio-8080-exec-8] SQL - insert into role (role_name, user_id, user_name) values (?, ?, ?)
[DEBUG] 2021-05-07 19:26:04.896 [http-nio-8080-exec-8] IdentifierGeneratorHelper - Natively generated identity: 10
[DEBUG] 2021-05-07 19:26:04.896 [http-nio-8080-exec-8] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-05-07 19:26:04.903 [http-nio-8080-exec-8] TransactionImpl - committing
[DEBUG] 2021-05-07 19:26:04.910 [http-nio-8080-exec-8] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2021-05-07 19:26:04.911 [http-nio-8080-exec-8] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2021-05-07 19:26:04.953 [http-nio-8080-exec-8] Collections - Collection found: [com.leeannjakel.entity.User.books#8], was: [<unreferenced>] (initialized)
[DEBUG] 2021-05-07 19:26:04.953 [http-nio-8080-exec-8] Collections - Collection found: [com.leeannjakel.entity.User.roles#8], was: [<unreferenced>] (initialized)
[DEBUG] 2021-05-07 19:26:04.964 [http-nio-8080-exec-8] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
[DEBUG] 2021-05-07 19:26:04.965 [http-nio-8080-exec-8] AbstractFlushingEventListener - Flushed: 2 (re)creations, 0 updates, 0 removals to 2 collections
[DEBUG] 2021-05-07 19:26:04.974 [http-nio-8080-exec-8] EntityPrinter - Listing entities:
[DEBUG] 2021-05-07 19:26:04.975 [http-nio-8080-exec-8] EntityPrinter - com.leeannjakel.entity.Role{roleName=basic_user, id=10, userName=bwalters, user=com.leeannjakel.entity.User#8}
[DEBUG] 2021-05-07 19:26:04.975 [http-nio-8080-exec-8] EntityPrinter - com.leeannjakel.entity.User{firstName=Beckam, lastName=Walters, password=password, books=[], roles=[com.leeannjakel.entity.Role#10], id=8, userName=bwalters, email=email@email.com}
[DEBUG] 2021-05-07 19:26:04.991 [http-nio-8080-exec-8] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-05-07 19:26:04.995 [http-nio-8080-exec-8] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-05-07 19:26:05.065 [http-nio-8080-exec-8] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from User as generatedAlias0 where generatedAlias0.id=8
[DEBUG] 2021-05-07 19:26:05.071 [http-nio-8080-exec-8] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from com.leeannjakel.entity.User as generatedAlias0 where generatedAlias0.id=8
[DEBUG] 2021-05-07 19:26:05.080 [http-nio-8080-exec-8] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2021-05-07 19:26:05.081 [http-nio-8080-exec-8] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  \-[IDENT] Node: 'leeannjakel'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'User'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'id'
          \-[NUM_INT] Node: '8'

[DEBUG] 2021-05-07 19:26:05.081 [http-nio-8080-exec-8] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2021-05-07 19:26:05.082 [http-nio-8080-exec-8] FromElement - FromClause{level=1} : com.leeannjakel.entity.User (generatedAlias0) -> user0_
[DEBUG] 2021-05-07 19:26:05.082 [http-nio-8080-exec-8] FromReferenceNode - Resolved : generatedAlias0 -> user0_.id
[DEBUG] 2021-05-07 19:26:05.085 [http-nio-8080-exec-8] FromReferenceNode - Resolved : generatedAlias0 -> user0_.id
[DEBUG] 2021-05-07 19:26:05.091 [http-nio-8080-exec-8] DotNode - getDataType() : id -> org.hibernate.type.IntegerType@4b967b83
[DEBUG] 2021-05-07 19:26:05.103 [http-nio-8080-exec-8] FromReferenceNode - Resolved : generatedAlias0.id -> user0_.id
[DEBUG] 2021-05-07 19:26:05.112 [http-nio-8080-exec-8] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2021-05-07 19:26:05.112 [http-nio-8080-exec-8] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} user0_.id ) ( FromClause{level=1} user user0_ ) ( where ( = ( user0_.id user0_.id id ) 8 ) ) )
[DEBUG] 2021-05-07 19:26:05.113 [http-nio-8080-exec-8] JoinProcessor - Using FROM fragment [user user0_]
[DEBUG] 2021-05-07 19:26:05.113 [http-nio-8080-exec-8] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2021-05-07 19:26:05.114 [http-nio-8080-exec-8] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (user)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.id as id1_4_' {alias=generatedAlias0, className=com.leeannjakel.entity.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.email as email2_4_, user0_.first_name as first_na3_4_, user0_.last_name as last_nam4_4_, user0_.password as password5_4_, user0_.user_name as user_nam6_4_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'user user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=user,tableAlias=user0_,origin=null,columns={,className=com.leeannjakel.entity.User}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=user0_,className=com.leeannjakel.entity.User,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'user0_.id' {alias=generatedAlias0, className=com.leeannjakel.entity.User, tableAlias=user0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NUM_INT] LiteralNode: '8'

[DEBUG] 2021-05-07 19:26:05.114 [http-nio-8080-exec-8] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2021-05-07 19:26:05.123 [http-nio-8080-exec-8] QueryTranslatorImpl - HQL: select generatedAlias0 from com.leeannjakel.entity.User as generatedAlias0 where generatedAlias0.id=8
[DEBUG] 2021-05-07 19:26:05.123 [http-nio-8080-exec-8] QueryTranslatorImpl - SQL: select user0_.id as id1_4_, user0_.email as email2_4_, user0_.first_name as first_na3_4_, user0_.last_name as last_nam4_4_, user0_.password as password5_4_, user0_.user_name as user_nam6_4_ from user user0_ where user0_.id=8
[DEBUG] 2021-05-07 19:26:05.123 [http-nio-8080-exec-8] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2021-05-07 19:26:05.129 [http-nio-8080-exec-8] SQL - select user0_.id as id1_4_, user0_.email as email2_4_, user0_.first_name as first_na3_4_, user0_.last_name as last_nam4_4_, user0_.password as password5_4_, user0_.user_name as user_nam6_4_ from user user0_ where user0_.id=8
[DEBUG] 2021-05-07 19:26:05.134 [http-nio-8080-exec-8] Loader - Result set row: 0
[DEBUG] 2021-05-07 19:26:05.138 [http-nio-8080-exec-8] Loader - Result row: EntityKey[com.leeannjakel.entity.User#8]
[DEBUG] 2021-05-07 19:26:05.139 [http-nio-8080-exec-8] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.User#8]
[DEBUG] 2021-05-07 19:26:05.139 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `books` : value = NOT NULL COLLECTION
[DEBUG] 2021-05-07 19:26:05.139 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`books`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-07 19:26:05.139 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `email` : value = email@email.com
[DEBUG] 2021-05-07 19:26:05.139 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-07 19:26:05.139 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `firstName` : value = Beckam
[DEBUG] 2021-05-07 19:26:05.139 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-07 19:26:05.139 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `lastName` : value = Walters
[DEBUG] 2021-05-07 19:26:05.139 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-07 19:26:05.139 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `password` : value = password
[DEBUG] 2021-05-07 19:26:05.139 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-07 19:26:05.139 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2021-05-07 19:26:05.139 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-07 19:26:05.139 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `userName` : value = bwalters
[DEBUG] 2021-05-07 19:26:05.139 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-07 19:26:05.139 [http-nio-8080-exec-8] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.User#8]
[DEBUG] 2021-05-07 19:26:05.139 [http-nio-8080-exec-8] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.leeannjakel.entity.User.roles#8]
[DEBUG] 2021-05-07 19:26:05.139 [http-nio-8080-exec-8] SQL - select roles0_.user_id as user_id4_3_0_, roles0_.id as id1_3_0_, roles0_.id as id1_3_1_, roles0_.role_name as role_nam2_3_1_, roles0_.user_id as user_id4_3_1_, roles0_.user_name as user_nam3_3_1_ from role roles0_ where roles0_.user_id=?
[DEBUG] 2021-05-07 19:26:05.141 [http-nio-8080-exec-8] ResultSetProcessorImpl - Preparing collection initializer : [com.leeannjakel.entity.User.roles#8]
[DEBUG] 2021-05-07 19:26:05.143 [http-nio-8080-exec-8] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-05-07 19:26:05.144 [http-nio-8080-exec-8] CollectionReferenceInitializerImpl - Found row of collection: [com.leeannjakel.entity.User.roles#8]
[DEBUG] 2021-05-07 19:26:05.144 [http-nio-8080-exec-8] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.Role#10]
[DEBUG] 2021-05-07 19:26:05.144 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `roleName` : value = basic_user
[DEBUG] 2021-05-07 19:26:05.153 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`roleName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-07 19:26:05.154 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `user` : value = 8
[DEBUG] 2021-05-07 19:26:05.154 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-07 19:26:05.154 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `userName` : value = bwalters
[DEBUG] 2021-05-07 19:26:05.157 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-07 19:26:05.157 [http-nio-8080-exec-8] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.Role#10]
[DEBUG] 2021-05-07 19:26:05.157 [http-nio-8080-exec-8] CollectionLoadContext - 1 collections were found in result set for role: com.leeannjakel.entity.User.roles
[DEBUG] 2021-05-07 19:26:05.157 [http-nio-8080-exec-8] CollectionLoadContext - Collection fully initialized: [com.leeannjakel.entity.User.roles#8]
[DEBUG] 2021-05-07 19:26:05.157 [http-nio-8080-exec-8] CollectionLoadContext - 1 collections initialized for role: com.leeannjakel.entity.User.roles
[DEBUG] 2021-05-07 19:26:05.157 [http-nio-8080-exec-8] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-05-07 19:26:05.157 [http-nio-8080-exec-8] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2021-05-07 19:26:05.158 [http-nio-8080-exec-8] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
