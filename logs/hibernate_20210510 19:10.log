[DEBUG] 2021-05-10 19:09:57.918 [http-nio-8080-exec-3] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2021-05-10 19:09:57.998 [http-nio-8080-exec-3] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2021-05-10 19:09:58.022 [http-nio-8080-exec-3] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2021-05-10 19:09:58.675 [http-nio-8080-exec-3] Version - HHH000412: Hibernate Core {5.4.4.Final}
[DEBUG] 2021-05-10 19:09:58.683 [http-nio-8080-exec-3] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2021-05-10 19:09:59.587 [http-nio-8080-exec-3] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2021-05-10 19:09:59.601 [http-nio-8080-exec-3] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2021-05-10 19:09:59.851 [http-nio-8080-exec-3] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2021-05-10 19:10:02.492 [http-nio-8080-exec-3] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2021-05-10 19:10:02.567 [http-nio-8080-exec-3] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2021-05-10 19:10:02.569 [http-nio-8080-exec-3] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2021-05-10 19:10:02.708 [http-nio-8080-exec-3] Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] 2021-05-10 19:10:02.885 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@43736c4b
[DEBUG] 2021-05-10 19:10:02.886 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@43736c4b
[DEBUG] 2021-05-10 19:10:02.886 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@43736c4b
[DEBUG] 2021-05-10 19:10:02.888 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@7cb27a3d
[DEBUG] 2021-05-10 19:10:02.897 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@290fa2d0
[DEBUG] 2021-05-10 19:10:02.898 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@6df460c6
[DEBUG] 2021-05-10 19:10:02.912 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@6cc0d97c
[DEBUG] 2021-05-10 19:10:02.913 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@6cc0d97c
[DEBUG] 2021-05-10 19:10:02.913 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@6cc0d97c
[DEBUG] 2021-05-10 19:10:02.917 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@791b5d29
[DEBUG] 2021-05-10 19:10:02.918 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@791b5d29
[DEBUG] 2021-05-10 19:10:02.918 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@791b5d29
[DEBUG] 2021-05-10 19:10:02.919 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@4b00fa27
[DEBUG] 2021-05-10 19:10:02.920 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@4b00fa27
[DEBUG] 2021-05-10 19:10:02.921 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@4b00fa27
[DEBUG] 2021-05-10 19:10:02.926 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@552649c2
[DEBUG] 2021-05-10 19:10:02.926 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@552649c2
[DEBUG] 2021-05-10 19:10:02.926 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@552649c2
[DEBUG] 2021-05-10 19:10:02.928 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@453c7ab5
[DEBUG] 2021-05-10 19:10:02.928 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@453c7ab5
[DEBUG] 2021-05-10 19:10:02.928 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@453c7ab5
[DEBUG] 2021-05-10 19:10:02.930 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@70ffc7ba
[DEBUG] 2021-05-10 19:10:02.930 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@70ffc7ba
[DEBUG] 2021-05-10 19:10:02.931 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@70ffc7ba
[DEBUG] 2021-05-10 19:10:02.935 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@27e38b13
[DEBUG] 2021-05-10 19:10:02.935 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@27e38b13
[DEBUG] 2021-05-10 19:10:02.936 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@27e38b13
[DEBUG] 2021-05-10 19:10:02.938 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1452ec48
[DEBUG] 2021-05-10 19:10:02.938 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1452ec48
[DEBUG] 2021-05-10 19:10:02.939 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@18423564
[DEBUG] 2021-05-10 19:10:02.939 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@18423564
[DEBUG] 2021-05-10 19:10:02.941 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@3877ba98
[DEBUG] 2021-05-10 19:10:02.941 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@3877ba98
[DEBUG] 2021-05-10 19:10:02.941 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@36e73c54
[DEBUG] 2021-05-10 19:10:02.942 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@3f83faff
[DEBUG] 2021-05-10 19:10:02.943 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@53f64a2b
[DEBUG] 2021-05-10 19:10:02.944 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@53f64a2b
[DEBUG] 2021-05-10 19:10:02.956 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@7335b37d
[DEBUG] 2021-05-10 19:10:02.957 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@7335b37d
[DEBUG] 2021-05-10 19:10:02.989 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@5ea2b123
[DEBUG] 2021-05-10 19:10:02.990 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@5ea2b123
[DEBUG] 2021-05-10 19:10:03.004 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@277f6942
[DEBUG] 2021-05-10 19:10:03.005 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@277f6942
[DEBUG] 2021-05-10 19:10:03.011 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@7287417a
[DEBUG] 2021-05-10 19:10:03.012 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@7287417a
[DEBUG] 2021-05-10 19:10:03.206 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@129f7f87
[DEBUG] 2021-05-10 19:10:03.206 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@129f7f87
[DEBUG] 2021-05-10 19:10:03.223 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7435ba4b
[DEBUG] 2021-05-10 19:10:03.223 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7435ba4b
[DEBUG] 2021-05-10 19:10:03.235 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@607e6a7d
[DEBUG] 2021-05-10 19:10:03.235 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@607e6a7d
[DEBUG] 2021-05-10 19:10:03.238 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@58f3d354
[DEBUG] 2021-05-10 19:10:03.239 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@58f3d354
[DEBUG] 2021-05-10 19:10:03.247 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@76b47ecb
[DEBUG] 2021-05-10 19:10:03.247 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@76b47ecb
[DEBUG] 2021-05-10 19:10:03.249 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@4561833d
[DEBUG] 2021-05-10 19:10:03.250 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@4561833d
[DEBUG] 2021-05-10 19:10:03.263 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@67f2c2f6
[DEBUG] 2021-05-10 19:10:03.264 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@67f2c2f6
[DEBUG] 2021-05-10 19:10:03.266 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@67f2c2f6
[DEBUG] 2021-05-10 19:10:03.271 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1c94aeb4
[DEBUG] 2021-05-10 19:10:03.283 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@e2d956b
[DEBUG] 2021-05-10 19:10:03.283 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@e2d956b
[DEBUG] 2021-05-10 19:10:03.286 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@e2d956b
[DEBUG] 2021-05-10 19:10:03.288 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@418d1a42
[DEBUG] 2021-05-10 19:10:03.292 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@378fafd5
[DEBUG] 2021-05-10 19:10:03.293 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@378fafd5
[DEBUG] 2021-05-10 19:10:03.295 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@5d8fa375
[DEBUG] 2021-05-10 19:10:03.295 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@5d8fa375
[DEBUG] 2021-05-10 19:10:03.296 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@699cf80f
[DEBUG] 2021-05-10 19:10:03.296 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@699cf80f
[DEBUG] 2021-05-10 19:10:03.297 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@2ebd2e4
[DEBUG] 2021-05-10 19:10:03.298 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@2ebd2e4
[DEBUG] 2021-05-10 19:10:03.299 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1f4fe9c0
[DEBUG] 2021-05-10 19:10:03.300 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1f4fe9c0
[DEBUG] 2021-05-10 19:10:03.301 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@798df014
[DEBUG] 2021-05-10 19:10:03.303 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@1f16fd8d
[DEBUG] 2021-05-10 19:10:03.303 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@1f16fd8d
[DEBUG] 2021-05-10 19:10:03.304 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@1f16fd8d
[DEBUG] 2021-05-10 19:10:03.317 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@63496808
[DEBUG] 2021-05-10 19:10:03.317 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@63496808
[DEBUG] 2021-05-10 19:10:03.318 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@63496808
[DEBUG] 2021-05-10 19:10:03.319 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@6a02b047
[DEBUG] 2021-05-10 19:10:03.320 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@f7a4252
[DEBUG] 2021-05-10 19:10:03.324 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@6d71c24d
[DEBUG] 2021-05-10 19:10:03.324 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@6d71c24d
[DEBUG] 2021-05-10 19:10:03.324 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@6d71c24d
[DEBUG] 2021-05-10 19:10:03.336 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@50720f5f
[DEBUG] 2021-05-10 19:10:03.337 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@50720f5f
[DEBUG] 2021-05-10 19:10:03.337 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@50720f5f
[DEBUG] 2021-05-10 19:10:03.337 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@7f51fbf3
[DEBUG] 2021-05-10 19:10:03.339 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@3939e332
[DEBUG] 2021-05-10 19:10:03.362 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@31a5c908
[DEBUG] 2021-05-10 19:10:03.363 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@31a5c908
[DEBUG] 2021-05-10 19:10:03.363 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@160b520e
[DEBUG] 2021-05-10 19:10:03.366 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@3123f999
[DEBUG] 2021-05-10 19:10:03.366 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@3123f999
[DEBUG] 2021-05-10 19:10:03.382 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@3b9d1149
[DEBUG] 2021-05-10 19:10:03.382 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@3b9d1149
[DEBUG] 2021-05-10 19:10:03.384 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@66488683
[DEBUG] 2021-05-10 19:10:03.388 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@5ac91f6f
[DEBUG] 2021-05-10 19:10:03.392 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@2001a554
[DEBUG] 2021-05-10 19:10:03.421 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@abb466f
[DEBUG] 2021-05-10 19:10:03.423 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@abb466f
[DEBUG] 2021-05-10 19:10:03.427 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@6052d95e
[DEBUG] 2021-05-10 19:10:03.430 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@7879d067
[DEBUG] 2021-05-10 19:10:03.430 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@72d21005
[DEBUG] 2021-05-10 19:10:03.430 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@11f3d558
[DEBUG] 2021-05-10 19:10:03.437 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@679d7611
[DEBUG] 2021-05-10 19:10:03.439 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@5151686d
[DEBUG] 2021-05-10 19:10:03.439 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@33e1087a
[DEBUG] 2021-05-10 19:10:03.440 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@3cb7524b
[DEBUG] 2021-05-10 19:10:03.694 [http-nio-8080-exec-3] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2021-05-10 19:10:03.696 [http-nio-8080-exec-3] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2021-05-10 19:10:03.698 [http-nio-8080-exec-3] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2021-05-10 19:10:03.698 [http-nio-8080-exec-3] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2021-05-10 19:10:03.701 [http-nio-8080-exec-3] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2021-05-10 19:10:03.703 [http-nio-8080-exec-3] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2021-05-10 19:10:03.704 [http-nio-8080-exec-3] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2021-05-10 19:10:03.707 [http-nio-8080-exec-3] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2021-05-10 19:10:03.709 [http-nio-8080-exec-3] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2021-05-10 19:10:03.710 [http-nio-8080-exec-3] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2021-05-10 19:10:03.713 [http-nio-8080-exec-3] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2021-05-10 19:10:03.714 [http-nio-8080-exec-3] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2021-05-10 19:10:03.714 [http-nio-8080-exec-3] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2021-05-10 19:10:03.720 [http-nio-8080-exec-3] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2021-05-10 19:10:03.768 [http-nio-8080-exec-3] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/BookCollection
[INFO ] 2021-05-10 19:10:03.768 [http-nio-8080-exec-3] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2021-05-10 19:10:03.769 [http-nio-8080-exec-3] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2021-05-10 19:10:05.118 [http-nio-8080-exec-3] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2021-05-10 19:10:07.088 [http-nio-8080-exec-3] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.22
      major : 8
      minor : 0
[DEBUG] 2021-05-10 19:10:07.111 [http-nio-8080-exec-3] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.22 (Revision: d64b664fa93e81296a377de031b8123a67e6def2)
      major : 8
      minor : 0
[DEBUG] 2021-05-10 19:10:07.112 [http-nio-8080-exec-3] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2021-05-10 19:10:07.403 [http-nio-8080-exec-3] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[DEBUG] 2021-05-10 19:10:07.567 [http-nio-8080-exec-3] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2021-05-10 19:10:08.006 [http-nio-8080-exec-3] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2021-05-10 19:10:08.264 [http-nio-8080-exec-3] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2021-05-10 19:10:08.283 [http-nio-8080-exec-3] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@77ff446a] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@705b5eca]
[DEBUG] 2021-05-10 19:10:08.468 [http-nio-8080-exec-3] AnnotationMetadataSourceProcessorImpl - Encountered a non-categorized annotated class [com.leeannjakel.entity.AuthorResponse]; ignoring
[DEBUG] 2021-05-10 19:10:08.478 [http-nio-8080-exec-3] AnnotationMetadataSourceProcessorImpl - Encountered a non-categorized annotated class [com.leeannjakel.entity.WorksAuthorsItem]; ignoring
[DEBUG] 2021-05-10 19:10:08.479 [http-nio-8080-exec-3] AnnotationMetadataSourceProcessorImpl - Encountered a non-categorized annotated class [com.leeannjakel.entity.Classifications]; ignoring
[DEBUG] 2021-05-10 19:10:08.480 [http-nio-8080-exec-3] AnnotationMetadataSourceProcessorImpl - Encountered a non-categorized annotated class [com.leeannjakel.entity.Created]; ignoring
[DEBUG] 2021-05-10 19:10:08.481 [http-nio-8080-exec-3] AnnotationMetadataSourceProcessorImpl - Encountered a non-categorized annotated class [com.leeannjakel.entity.Identifiers]; ignoring
[DEBUG] 2021-05-10 19:10:08.486 [http-nio-8080-exec-3] AnnotationMetadataSourceProcessorImpl - Encountered a non-categorized annotated class [com.leeannjakel.entity.Info]; ignoring
[DEBUG] 2021-05-10 19:10:08.494 [http-nio-8080-exec-3] AnnotationMetadataSourceProcessorImpl - Encountered a non-categorized annotated class [com.leeannjakel.entity.LanguagesItem]; ignoring
[DEBUG] 2021-05-10 19:10:08.498 [http-nio-8080-exec-3] AnnotationMetadataSourceProcessorImpl - Encountered a non-categorized annotated class [com.leeannjakel.entity.LastModified]; ignoring
[DEBUG] 2021-05-10 19:10:08.500 [http-nio-8080-exec-3] AnnotationMetadataSourceProcessorImpl - Encountered a non-categorized annotated class [com.leeannjakel.entity.Type]; ignoring
[DEBUG] 2021-05-10 19:10:08.505 [http-nio-8080-exec-3] AnnotationMetadataSourceProcessorImpl - Encountered a non-categorized annotated class [com.leeannjakel.entity.WorksItem]; ignoring
[DEBUG] 2021-05-10 19:10:08.615 [http-nio-8080-exec-3] AnnotationBinder - Binding entity from annotated class: com.leeannjakel.entity.Author
[DEBUG] 2021-05-10 19:10:08.682 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2021-05-10 19:10:08.704 [http-nio-8080-exec-3] EntityBinder - Import with entity name Author
[DEBUG] 2021-05-10 19:10:08.714 [http-nio-8080-exec-3] EntityBinder - Bind entity com.leeannjakel.entity.Author on table author
[DEBUG] 2021-05-10 19:10:08.905 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(author), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-10 19:10:08.941 [http-nio-8080-exec-3] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2021-05-10 19:10:08.954 [http-nio-8080-exec-3] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.leeannjakel.entity.Author:id]
[DEBUG] 2021-05-10 19:10:08.971 [http-nio-8080-exec-3] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2021-05-10 19:10:09.004 [http-nio-8080-exec-3] PropertyBinder - Building property id
[DEBUG] 2021-05-10 19:10:09.053 [http-nio-8080-exec-3] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2021-05-10 19:10:09.070 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='author'}
[DEBUG] 2021-05-10 19:10:09.071 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(author), mappingColumn=books, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-10 19:10:09.089 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(author), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-10 19:10:09.185 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(author), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-10 19:10:09.187 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(author), mappingColumn=books_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-10 19:10:09.191 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='books_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2021-05-10 19:10:09.217 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='author'}
[DEBUG] 2021-05-10 19:10:09.219 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='author'}
[DEBUG] 2021-05-10 19:10:09.220 [http-nio-8080-exec-3] CollectionBinder - Collection role: com.leeannjakel.entity.Author.books
[DEBUG] 2021-05-10 19:10:09.251 [http-nio-8080-exec-3] PropertyBinder - Building property books
[DEBUG] 2021-05-10 19:10:09.254 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(author), mappingColumn=name, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-10 19:10:09.254 [http-nio-8080-exec-3] PropertyBinder - MetadataSourceProcessor property name with lazy=false
[DEBUG] 2021-05-10 19:10:09.257 [http-nio-8080-exec-3] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.leeannjakel.entity.Author:name]
[DEBUG] 2021-05-10 19:10:09.260 [http-nio-8080-exec-3] SimpleValueBinder - building SimpleValue for name
[DEBUG] 2021-05-10 19:10:09.261 [http-nio-8080-exec-3] PropertyBinder - Building property name
[DEBUG] 2021-05-10 19:10:09.280 [http-nio-8080-exec-3] AnnotationBinder - Binding entity from annotated class: com.leeannjakel.entity.Book
[DEBUG] 2021-05-10 19:10:09.299 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2021-05-10 19:10:09.304 [http-nio-8080-exec-3] EntityBinder - Import with entity name Book
[DEBUG] 2021-05-10 19:10:09.310 [http-nio-8080-exec-3] EntityBinder - Bind entity com.leeannjakel.entity.Book on table book
[DEBUG] 2021-05-10 19:10:09.370 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-10 19:10:09.370 [http-nio-8080-exec-3] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2021-05-10 19:10:09.377 [http-nio-8080-exec-3] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.leeannjakel.entity.Book:id]
[DEBUG] 2021-05-10 19:10:09.377 [http-nio-8080-exec-3] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2021-05-10 19:10:09.377 [http-nio-8080-exec-3] PropertyBinder - Building property id
[DEBUG] 2021-05-10 19:10:09.377 [http-nio-8080-exec-3] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2021-05-10 19:10:09.380 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='author_id', referencedColumn='', mappedBy=''}
[DEBUG] 2021-05-10 19:10:09.380 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=author, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-10 19:10:09.399 [http-nio-8080-exec-3] PropertyBinder - Building property author
[DEBUG] 2021-05-10 19:10:09.406 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='genre_id', referencedColumn='', mappedBy=''}
[DEBUG] 2021-05-10 19:10:09.406 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=genre, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-10 19:10:09.410 [http-nio-8080-exec-3] PropertyBinder - Building property genre
[DEBUG] 2021-05-10 19:10:09.411 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=isbn, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-10 19:10:09.414 [http-nio-8080-exec-3] PropertyBinder - MetadataSourceProcessor property isbn with lazy=false
[DEBUG] 2021-05-10 19:10:09.415 [http-nio-8080-exec-3] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.leeannjakel.entity.Book:isbn]
[DEBUG] 2021-05-10 19:10:09.415 [http-nio-8080-exec-3] SimpleValueBinder - building SimpleValue for isbn
[DEBUG] 2021-05-10 19:10:09.415 [http-nio-8080-exec-3] PropertyBinder - Building property isbn
[DEBUG] 2021-05-10 19:10:09.415 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=notes, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-10 19:10:09.415 [http-nio-8080-exec-3] PropertyBinder - MetadataSourceProcessor property notes with lazy=false
[DEBUG] 2021-05-10 19:10:09.415 [http-nio-8080-exec-3] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.leeannjakel.entity.Book:notes]
[DEBUG] 2021-05-10 19:10:09.415 [http-nio-8080-exec-3] SimpleValueBinder - building SimpleValue for notes
[DEBUG] 2021-05-10 19:10:09.415 [http-nio-8080-exec-3] PropertyBinder - Building property notes
[DEBUG] 2021-05-10 19:10:09.415 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=title, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-10 19:10:09.418 [http-nio-8080-exec-3] PropertyBinder - MetadataSourceProcessor property title with lazy=false
[DEBUG] 2021-05-10 19:10:09.419 [http-nio-8080-exec-3] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.leeannjakel.entity.Book:title]
[DEBUG] 2021-05-10 19:10:09.419 [http-nio-8080-exec-3] SimpleValueBinder - building SimpleValue for title
[DEBUG] 2021-05-10 19:10:09.419 [http-nio-8080-exec-3] PropertyBinder - Building property title
[DEBUG] 2021-05-10 19:10:09.420 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
[DEBUG] 2021-05-10 19:10:09.432 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-10 19:10:09.432 [http-nio-8080-exec-3] PropertyBinder - Building property user
[DEBUG] 2021-05-10 19:10:09.432 [http-nio-8080-exec-3] AnnotationBinder - Binding entity from annotated class: com.leeannjakel.entity.Genre
[DEBUG] 2021-05-10 19:10:09.432 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2021-05-10 19:10:09.433 [http-nio-8080-exec-3] EntityBinder - Import with entity name Genre
[DEBUG] 2021-05-10 19:10:09.433 [http-nio-8080-exec-3] EntityBinder - Bind entity com.leeannjakel.entity.Genre on table genre
[DEBUG] 2021-05-10 19:10:09.434 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(genre), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-10 19:10:09.441 [http-nio-8080-exec-3] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2021-05-10 19:10:09.441 [http-nio-8080-exec-3] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.leeannjakel.entity.Genre:id]
[DEBUG] 2021-05-10 19:10:09.441 [http-nio-8080-exec-3] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2021-05-10 19:10:09.441 [http-nio-8080-exec-3] PropertyBinder - Building property id
[DEBUG] 2021-05-10 19:10:09.441 [http-nio-8080-exec-3] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2021-05-10 19:10:09.442 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='genre'}
[DEBUG] 2021-05-10 19:10:09.442 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(genre), mappingColumn=books, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-10 19:10:09.442 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(genre), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-10 19:10:09.442 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(genre), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-10 19:10:09.442 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(genre), mappingColumn=books_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-10 19:10:09.442 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='books_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2021-05-10 19:10:09.442 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='genre'}
[DEBUG] 2021-05-10 19:10:09.442 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='genre'}
[DEBUG] 2021-05-10 19:10:09.442 [http-nio-8080-exec-3] CollectionBinder - Collection role: com.leeannjakel.entity.Genre.books
[DEBUG] 2021-05-10 19:10:09.443 [http-nio-8080-exec-3] PropertyBinder - Building property books
[DEBUG] 2021-05-10 19:10:09.454 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(genre), mappingColumn=name, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-10 19:10:09.454 [http-nio-8080-exec-3] PropertyBinder - MetadataSourceProcessor property name with lazy=false
[DEBUG] 2021-05-10 19:10:09.454 [http-nio-8080-exec-3] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.leeannjakel.entity.Genre:name]
[DEBUG] 2021-05-10 19:10:09.454 [http-nio-8080-exec-3] SimpleValueBinder - building SimpleValue for name
[DEBUG] 2021-05-10 19:10:09.454 [http-nio-8080-exec-3] PropertyBinder - Building property name
[DEBUG] 2021-05-10 19:10:09.454 [http-nio-8080-exec-3] AnnotationBinder - Binding entity from annotated class: com.leeannjakel.entity.Role
[DEBUG] 2021-05-10 19:10:09.455 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2021-05-10 19:10:09.460 [http-nio-8080-exec-3] EntityBinder - Import with entity name Role
[DEBUG] 2021-05-10 19:10:09.460 [http-nio-8080-exec-3] EntityBinder - Bind entity com.leeannjakel.entity.Role on table role
[DEBUG] 2021-05-10 19:10:09.463 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-10 19:10:09.464 [http-nio-8080-exec-3] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2021-05-10 19:10:09.464 [http-nio-8080-exec-3] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.leeannjakel.entity.Role:id]
[DEBUG] 2021-05-10 19:10:09.464 [http-nio-8080-exec-3] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2021-05-10 19:10:09.464 [http-nio-8080-exec-3] PropertyBinder - Building property id
[DEBUG] 2021-05-10 19:10:09.464 [http-nio-8080-exec-3] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2021-05-10 19:10:09.464 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=role_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-10 19:10:09.464 [http-nio-8080-exec-3] PropertyBinder - MetadataSourceProcessor property roleName with lazy=false
[DEBUG] 2021-05-10 19:10:09.464 [http-nio-8080-exec-3] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.leeannjakel.entity.Role:roleName]
[DEBUG] 2021-05-10 19:10:09.464 [http-nio-8080-exec-3] SimpleValueBinder - building SimpleValue for roleName
[DEBUG] 2021-05-10 19:10:09.464 [http-nio-8080-exec-3] PropertyBinder - Building property roleName
[DEBUG] 2021-05-10 19:10:09.465 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
[DEBUG] 2021-05-10 19:10:09.465 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-10 19:10:09.465 [http-nio-8080-exec-3] PropertyBinder - Building property user
[DEBUG] 2021-05-10 19:10:09.465 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=user_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-10 19:10:09.465 [http-nio-8080-exec-3] PropertyBinder - MetadataSourceProcessor property userName with lazy=false
[DEBUG] 2021-05-10 19:10:09.465 [http-nio-8080-exec-3] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.leeannjakel.entity.Role:userName]
[DEBUG] 2021-05-10 19:10:09.465 [http-nio-8080-exec-3] SimpleValueBinder - building SimpleValue for userName
[DEBUG] 2021-05-10 19:10:09.465 [http-nio-8080-exec-3] PropertyBinder - Building property userName
[DEBUG] 2021-05-10 19:10:09.465 [http-nio-8080-exec-3] AnnotationBinder - Binding entity from annotated class: com.leeannjakel.entity.User
[DEBUG] 2021-05-10 19:10:09.465 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2021-05-10 19:10:09.466 [http-nio-8080-exec-3] EntityBinder - Import with entity name User
[DEBUG] 2021-05-10 19:10:09.466 [http-nio-8080-exec-3] EntityBinder - Bind entity com.leeannjakel.entity.User on table user
[DEBUG] 2021-05-10 19:10:09.502 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-10 19:10:09.502 [http-nio-8080-exec-3] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2021-05-10 19:10:09.502 [http-nio-8080-exec-3] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.leeannjakel.entity.User:id]
[DEBUG] 2021-05-10 19:10:09.502 [http-nio-8080-exec-3] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2021-05-10 19:10:09.502 [http-nio-8080-exec-3] PropertyBinder - Building property id
[DEBUG] 2021-05-10 19:10:09.503 [http-nio-8080-exec-3] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2021-05-10 19:10:09.503 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2021-05-10 19:10:09.506 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=books, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-10 19:10:09.507 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-10 19:10:09.507 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-10 19:10:09.508 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=books_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-10 19:10:09.508 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='books_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2021-05-10 19:10:09.508 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2021-05-10 19:10:09.508 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2021-05-10 19:10:09.508 [http-nio-8080-exec-3] CollectionBinder - Collection role: com.leeannjakel.entity.User.books
[DEBUG] 2021-05-10 19:10:09.509 [http-nio-8080-exec-3] PropertyBinder - Building property books
[DEBUG] 2021-05-10 19:10:09.509 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=email, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-10 19:10:09.509 [http-nio-8080-exec-3] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[DEBUG] 2021-05-10 19:10:09.509 [http-nio-8080-exec-3] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.leeannjakel.entity.User:email]
[DEBUG] 2021-05-10 19:10:09.509 [http-nio-8080-exec-3] SimpleValueBinder - building SimpleValue for email
[DEBUG] 2021-05-10 19:10:09.510 [http-nio-8080-exec-3] PropertyBinder - Building property email
[DEBUG] 2021-05-10 19:10:09.510 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-10 19:10:09.510 [http-nio-8080-exec-3] PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
[DEBUG] 2021-05-10 19:10:09.510 [http-nio-8080-exec-3] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.leeannjakel.entity.User:firstName]
[DEBUG] 2021-05-10 19:10:09.513 [http-nio-8080-exec-3] SimpleValueBinder - building SimpleValue for firstName
[DEBUG] 2021-05-10 19:10:09.514 [http-nio-8080-exec-3] PropertyBinder - Building property firstName
[DEBUG] 2021-05-10 19:10:09.541 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-10 19:10:09.541 [http-nio-8080-exec-3] PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
[DEBUG] 2021-05-10 19:10:09.541 [http-nio-8080-exec-3] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.leeannjakel.entity.User:lastName]
[DEBUG] 2021-05-10 19:10:09.541 [http-nio-8080-exec-3] SimpleValueBinder - building SimpleValue for lastName
[DEBUG] 2021-05-10 19:10:09.542 [http-nio-8080-exec-3] PropertyBinder - Building property lastName
[DEBUG] 2021-05-10 19:10:09.542 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=password, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-10 19:10:09.542 [http-nio-8080-exec-3] PropertyBinder - MetadataSourceProcessor property password with lazy=false
[DEBUG] 2021-05-10 19:10:09.542 [http-nio-8080-exec-3] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.leeannjakel.entity.User:password]
[DEBUG] 2021-05-10 19:10:09.542 [http-nio-8080-exec-3] SimpleValueBinder - building SimpleValue for password
[DEBUG] 2021-05-10 19:10:09.542 [http-nio-8080-exec-3] PropertyBinder - Building property password
[DEBUG] 2021-05-10 19:10:09.543 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2021-05-10 19:10:09.550 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=roles, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-10 19:10:09.551 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-10 19:10:09.551 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-10 19:10:09.551 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=roles_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-10 19:10:09.551 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='roles_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2021-05-10 19:10:09.551 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2021-05-10 19:10:09.551 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2021-05-10 19:10:09.559 [http-nio-8080-exec-3] CollectionBinder - Collection role: com.leeannjakel.entity.User.roles
[DEBUG] 2021-05-10 19:10:09.559 [http-nio-8080-exec-3] PropertyBinder - Building property roles
[DEBUG] 2021-05-10 19:10:09.560 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=user_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-10 19:10:09.560 [http-nio-8080-exec-3] PropertyBinder - MetadataSourceProcessor property userName with lazy=false
[DEBUG] 2021-05-10 19:10:09.561 [http-nio-8080-exec-3] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.leeannjakel.entity.User:userName]
[DEBUG] 2021-05-10 19:10:09.561 [http-nio-8080-exec-3] SimpleValueBinder - building SimpleValue for userName
[DEBUG] 2021-05-10 19:10:09.561 [http-nio-8080-exec-3] PropertyBinder - Building property userName
[DEBUG] 2021-05-10 19:10:09.584 [http-nio-8080-exec-3] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2021-05-10 19:10:09.584 [http-nio-8080-exec-3] SimpleValueBinder - Starting fillSimpleValue for name
[DEBUG] 2021-05-10 19:10:09.584 [http-nio-8080-exec-3] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2021-05-10 19:10:09.585 [http-nio-8080-exec-3] SimpleValueBinder - Starting fillSimpleValue for isbn
[DEBUG] 2021-05-10 19:10:09.585 [http-nio-8080-exec-3] SimpleValueBinder - Starting fillSimpleValue for notes
[DEBUG] 2021-05-10 19:10:09.586 [http-nio-8080-exec-3] SimpleValueBinder - Starting fillSimpleValue for title
[DEBUG] 2021-05-10 19:10:09.587 [http-nio-8080-exec-3] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2021-05-10 19:10:09.597 [http-nio-8080-exec-3] SimpleValueBinder - Starting fillSimpleValue for name
[DEBUG] 2021-05-10 19:10:09.597 [http-nio-8080-exec-3] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2021-05-10 19:10:09.597 [http-nio-8080-exec-3] SimpleValueBinder - Starting fillSimpleValue for roleName
[DEBUG] 2021-05-10 19:10:09.597 [http-nio-8080-exec-3] SimpleValueBinder - Starting fillSimpleValue for userName
[DEBUG] 2021-05-10 19:10:09.598 [http-nio-8080-exec-3] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2021-05-10 19:10:09.598 [http-nio-8080-exec-3] SimpleValueBinder - Starting fillSimpleValue for email
[DEBUG] 2021-05-10 19:10:09.598 [http-nio-8080-exec-3] SimpleValueBinder - Starting fillSimpleValue for firstName
[DEBUG] 2021-05-10 19:10:09.598 [http-nio-8080-exec-3] SimpleValueBinder - Starting fillSimpleValue for lastName
[DEBUG] 2021-05-10 19:10:09.598 [http-nio-8080-exec-3] SimpleValueBinder - Starting fillSimpleValue for password
[DEBUG] 2021-05-10 19:10:09.598 [http-nio-8080-exec-3] SimpleValueBinder - Starting fillSimpleValue for userName
[DEBUG] 2021-05-10 19:10:09.628 [http-nio-8080-exec-3] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [author]
[DEBUG] 2021-05-10 19:10:09.629 [http-nio-8080-exec-3] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [book]
[DEBUG] 2021-05-10 19:10:09.633 [http-nio-8080-exec-3] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [genre]
[DEBUG] 2021-05-10 19:10:09.634 [http-nio-8080-exec-3] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [role]
[DEBUG] 2021-05-10 19:10:09.634 [http-nio-8080-exec-3] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [user]
[DEBUG] 2021-05-10 19:10:09.634 [http-nio-8080-exec-3] CollectionSecondPass - Second pass for collection: com.leeannjakel.entity.Author.books
[DEBUG] 2021-05-10 19:10:09.635 [http-nio-8080-exec-3] CollectionBinder - Binding a OneToMany: com.leeannjakel.entity.Author.books through a foreign key
[DEBUG] 2021-05-10 19:10:09.641 [http-nio-8080-exec-3] CollectionBinder - Mapping collection: com.leeannjakel.entity.Author.books -> book
[DEBUG] 2021-05-10 19:10:09.654 [http-nio-8080-exec-3] TableBinder - Retrieving property com.leeannjakel.entity.Book.author
[DEBUG] 2021-05-10 19:10:09.655 [http-nio-8080-exec-3] CollectionSecondPass - Mapped collection key: author_id, one-to-many: com.leeannjakel.entity.Book
[DEBUG] 2021-05-10 19:10:09.655 [http-nio-8080-exec-3] CollectionSecondPass - Second pass for collection: com.leeannjakel.entity.Genre.books
[DEBUG] 2021-05-10 19:10:09.655 [http-nio-8080-exec-3] CollectionBinder - Binding a OneToMany: com.leeannjakel.entity.Genre.books through a foreign key
[DEBUG] 2021-05-10 19:10:09.655 [http-nio-8080-exec-3] CollectionBinder - Mapping collection: com.leeannjakel.entity.Genre.books -> book
[DEBUG] 2021-05-10 19:10:09.655 [http-nio-8080-exec-3] TableBinder - Retrieving property com.leeannjakel.entity.Book.genre
[DEBUG] 2021-05-10 19:10:09.661 [http-nio-8080-exec-3] CollectionSecondPass - Mapped collection key: genre_id, one-to-many: com.leeannjakel.entity.Book
[DEBUG] 2021-05-10 19:10:09.661 [http-nio-8080-exec-3] CollectionSecondPass - Second pass for collection: com.leeannjakel.entity.User.books
[DEBUG] 2021-05-10 19:10:09.661 [http-nio-8080-exec-3] CollectionBinder - Binding a OneToMany: com.leeannjakel.entity.User.books through a foreign key
[DEBUG] 2021-05-10 19:10:09.661 [http-nio-8080-exec-3] CollectionBinder - Mapping collection: com.leeannjakel.entity.User.books -> book
[DEBUG] 2021-05-10 19:10:09.670 [http-nio-8080-exec-3] TableBinder - Retrieving property com.leeannjakel.entity.Book.user
[DEBUG] 2021-05-10 19:10:09.671 [http-nio-8080-exec-3] CollectionSecondPass - Mapped collection key: user_id, one-to-many: com.leeannjakel.entity.Book
[DEBUG] 2021-05-10 19:10:09.671 [http-nio-8080-exec-3] CollectionSecondPass - Second pass for collection: com.leeannjakel.entity.User.roles
[DEBUG] 2021-05-10 19:10:09.671 [http-nio-8080-exec-3] CollectionBinder - Binding a OneToMany: com.leeannjakel.entity.User.roles through a foreign key
[DEBUG] 2021-05-10 19:10:09.671 [http-nio-8080-exec-3] CollectionBinder - Mapping collection: com.leeannjakel.entity.User.roles -> role
[DEBUG] 2021-05-10 19:10:09.671 [http-nio-8080-exec-3] TableBinder - Retrieving property com.leeannjakel.entity.Role.user
[DEBUG] 2021-05-10 19:10:09.671 [http-nio-8080-exec-3] CollectionSecondPass - Mapped collection key: user_id, one-to-many: com.leeannjakel.entity.Role
[DEBUG] 2021-05-10 19:10:09.672 [http-nio-8080-exec-3] InFlightMetadataCollectorImpl - Resolving reference to class: com.leeannjakel.entity.Author
[DEBUG] 2021-05-10 19:10:09.688 [http-nio-8080-exec-3] InFlightMetadataCollectorImpl - Resolving reference to class: com.leeannjakel.entity.Genre
[DEBUG] 2021-05-10 19:10:09.690 [http-nio-8080-exec-3] InFlightMetadataCollectorImpl - Resolving reference to class: com.leeannjakel.entity.User
[DEBUG] 2021-05-10 19:10:09.690 [http-nio-8080-exec-3] InFlightMetadataCollectorImpl - Resolving reference to class: com.leeannjakel.entity.User
[DEBUG] 2021-05-10 19:10:09.698 [http-nio-8080-exec-3] InFlightMetadataCollectorImpl - Resolving reference to class: com.leeannjakel.entity.Author
[DEBUG] 2021-05-10 19:10:09.698 [http-nio-8080-exec-3] InFlightMetadataCollectorImpl - Resolving reference to class: com.leeannjakel.entity.Genre
[DEBUG] 2021-05-10 19:10:09.699 [http-nio-8080-exec-3] InFlightMetadataCollectorImpl - Resolving reference to class: com.leeannjakel.entity.User
[DEBUG] 2021-05-10 19:10:09.700 [http-nio-8080-exec-3] InFlightMetadataCollectorImpl - Resolving reference to class: com.leeannjakel.entity.User
[DEBUG] 2021-05-10 19:10:10.105 [http-nio-8080-exec-3] SessionFactoryImpl - Building session factory
[DEBUG] 2021-05-10 19:10:10.117 [http-nio-8080-exec-3] Settings - SessionFactory name : null
[DEBUG] 2021-05-10 19:10:10.117 [http-nio-8080-exec-3] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2021-05-10 19:10:10.117 [http-nio-8080-exec-3] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2021-05-10 19:10:10.117 [http-nio-8080-exec-3] Settings - Statistics: disabled
[DEBUG] 2021-05-10 19:10:10.117 [http-nio-8080-exec-3] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2021-05-10 19:10:10.117 [http-nio-8080-exec-3] Settings - Default entity-mode: pojo
[DEBUG] 2021-05-10 19:10:10.118 [http-nio-8080-exec-3] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2021-05-10 19:10:10.122 [http-nio-8080-exec-3] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2021-05-10 19:10:10.123 [http-nio-8080-exec-3] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2021-05-10 19:10:10.125 [http-nio-8080-exec-3] Settings - Default batch fetch size: -1
[DEBUG] 2021-05-10 19:10:10.127 [http-nio-8080-exec-3] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2021-05-10 19:10:10.127 [http-nio-8080-exec-3] Settings - Default null ordering: NONE
[DEBUG] 2021-05-10 19:10:10.127 [http-nio-8080-exec-3] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2021-05-10 19:10:10.127 [http-nio-8080-exec-3] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2021-05-10 19:10:10.127 [http-nio-8080-exec-3] Settings - multi-tenancy strategy : NONE
[DEBUG] 2021-05-10 19:10:10.127 [http-nio-8080-exec-3] Settings - JTA Track by Thread: enabled
[DEBUG] 2021-05-10 19:10:10.127 [http-nio-8080-exec-3] Settings - Query language substitutions: {}
[DEBUG] 2021-05-10 19:10:10.127 [http-nio-8080-exec-3] Settings - Named query checking : enabled
[DEBUG] 2021-05-10 19:10:10.127 [http-nio-8080-exec-3] Settings - Second-level cache: disabled
[DEBUG] 2021-05-10 19:10:10.127 [http-nio-8080-exec-3] Settings - Second-level query cache: disabled
[DEBUG] 2021-05-10 19:10:10.127 [http-nio-8080-exec-3] Settings - Second-level query cache factory: null
[DEBUG] 2021-05-10 19:10:10.127 [http-nio-8080-exec-3] Settings - Second-level cache region prefix: null
[DEBUG] 2021-05-10 19:10:10.127 [http-nio-8080-exec-3] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2021-05-10 19:10:10.128 [http-nio-8080-exec-3] Settings - Structured second-level cache entries: disabled
[DEBUG] 2021-05-10 19:10:10.128 [http-nio-8080-exec-3] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2021-05-10 19:10:10.128 [http-nio-8080-exec-3] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2021-05-10 19:10:10.128 [http-nio-8080-exec-3] Settings - JDBC batch size: 15
[DEBUG] 2021-05-10 19:10:10.138 [http-nio-8080-exec-3] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2021-05-10 19:10:10.138 [http-nio-8080-exec-3] Settings - Scrollable result sets: enabled
[DEBUG] 2021-05-10 19:10:10.138 [http-nio-8080-exec-3] Settings - Wrap result sets: disabled
[DEBUG] 2021-05-10 19:10:10.138 [http-nio-8080-exec-3] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2021-05-10 19:10:10.138 [http-nio-8080-exec-3] Settings - JDBC result set fetch size: null
[DEBUG] 2021-05-10 19:10:10.138 [http-nio-8080-exec-3] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2021-05-10 19:10:10.138 [http-nio-8080-exec-3] Settings - Generate SQL with comments: disabled
[DEBUG] 2021-05-10 19:10:10.139 [http-nio-8080-exec-3] Settings - JPA compliance - query : 
[DEBUG] 2021-05-10 19:10:10.139 [http-nio-8080-exec-3] Settings - JPA compliance - closed-handling : 
[DEBUG] 2021-05-10 19:10:10.139 [http-nio-8080-exec-3] Settings - JPA compliance - lists : 
[DEBUG] 2021-05-10 19:10:10.139 [http-nio-8080-exec-3] Settings - JPA compliance - transactions : 
[INFO ] 2021-05-10 19:10:10.826 [http-nio-8080-exec-3] beans - HHH10005002: No explicit CDI BeanManager reference was passed to Hibernate, but CDI is available on the Hibernate ClassLoader.
[DEBUG] 2021-05-10 19:10:11.064 [http-nio-8080-exec-3] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2021-05-10 19:10:11.065 [http-nio-8080-exec-3] SessionFactoryImpl - Instantiating session factory with properties: {awt.toolkit=sun.awt.X11.XToolkit, java.specification.version=11, sun.cpu.isalist=, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=UTF-8, hibernate.c3p0.min_size=5, sun.arch.data.model=64, java.vendor.url=https://ubuntu.com/, catalina.useNaming=true, openejb.provider.default=org.apache.tomee, sun.boot.library.path=/usr/lib/jvm/java-11-openjdk-amd64/lib, com.sun.management.jmxremote.ssl=false, sun.java.command=org.apache.catalina.startup.Bootstrap start, jdk.debug=release, java.specification.vendor=Oracle Corporation, java.naming.factory.url.pkgs=org.apache.naming:org.apache.openejb.core.ivm.naming, openejb.embedder.source=ServerListener, java.version.date=2021-04-20, java.home=/usr/lib/jvm/java-11-openjdk-amd64, ignore.endorsed.dirs=, file.separator=/, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, openejb.scan.webapp.container=true, com.sun.management.jmxremote.password.file=/home/student/.cache/JetBrains/IntelliJIdea2020.3/tomcat/10a53701-4112-462e-a101-1df2054f3873/jmxremote.password, package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.naming.,org.apache.tomcat., openejb.deployments.classpath.filter.systemapps=false, jdk.tls.ephemeralDHKeySize=2048, java.util.logging.config.file=/home/student/.cache/JetBrains/IntelliJIdea2020.3/tomcat/10a53701-4112-462e-a101-1df2054f3873/conf/logging.properties, java.protocol.handler.pkgs=org.apache.catalina.webresources, connection.password=student, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, openejb.scan.webapp.container.excludes=, java.runtime.version=11.0.11+9-Ubuntu-0ubuntu2.20.04, user.name=student, org.apache.johnzon.max-string-length=8192, file.encoding=UTF-8, derby.system.home=/home/student/tomcat/bin, org.apache.catalina.security.SecurityListener.UMASK=0027, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.io.tmpdir=/home/student/tomcat/temp, tomcat.util.scan.StandardJarScanFilter.jarsToScan=log4j-taglib*.jar,log4j-web*.jar,log4javascript*.jar,slf4j-taglib*.jar, java.version=11.0.11, com.sun.management.jmxremote.port=1099, tomcat.util.scan.StandardJarScanFilter.jarsToSkip=annotations-api.jar,ant-junit*.jar,ant-launcher.jar,ant.jar,asm-*.jar,aspectj*.jar,bootstrap.jar,catalina-ant.jar,catalina-ha.jar,catalina-jmx-remote.jar,catalina-storeconfig.jar,catalina-tribes.jar,catalina-ws.jar,catalina.jar,cglib-*.jar,cobertura-*.jar,commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,commons-daemon.jar,commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,commons-math*.jar,commons-pool*.jar,dom4j-*.jar,easymock-*.jar,ecj-*.jar,el-api.jar,geronimo-spec-jaxrpc*.jar,h2*.jar,hamcrest-*.jar,hibernate*.jar,httpclient*.jar,icu4j-*.jar,jasper-el.jar,jasper.jar,jaspic-api.jar,jaxb-*.jar,jaxen-*.jar,jdom-*.jar,jetty-*.jar,jmx-tools.jar,jmx.jar,jsp-api.jar,jstl.jar,jta*.jar,junit-*.jar,junit.jar,log4j*.jar,mail*.jar,objenesis-*.jar,oraclepki.jar,oro-*.jar,servlet-api-*.jar,servlet-api.jar,slf4j*.jar,taglibs-standard-spec-*.jar,tagsoup-*.jar,tomcat-api.jar,tomcat-coyote.jar,tomcat-dbcp.jar,tomcat-i18n-*.jar,tomcat-jdbc.jar,tomcat-jni.jar,tomcat-juli-adapters.jar,tomcat-juli.jar,tomcat-util-scan.jar,tomcat-util.jar,tomcat-websocket.jar,tools.jar,websocket-api.jar,wsdl4j*.jar,xercesImpl.jar,xml-apis.jar,xmlParserAPIs-*.jar,xmlParserAPIs.jar,xom-*.jar, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.print.PSPrinterJob, sun.os.patch.level=unknown, connection.driver_class=com.mysql.cj.jdbc.Driver, tomcat.built=May 4 2019 09:17:16 UTC, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor=Ubuntu, tomee.version=7.1.1, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, tomcat.util.buf.StringCache.byte.enabled=true, sun.desktop=gnome, java.class.path=/home/student/tomcat/bin/bootstrap.jar:/home/student/tomcat/bin/tomcat-juli.jar, tomcat.version=8.5.41.0, java.vm.vendor=Ubuntu, openejb.home=/home/student/tomcat, openejb.system.apps=true, user.timezone=America/Chicago, os.name=Linux, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, openejb.base=/home/student/.cache/JetBrains/IntelliJIdea2020.3/tomcat/10a53701-4112-462e-a101-1df2054f3873, com.sun.management.jmxremote=, sun.cpu.endian=little, user.home=/home/student, hibernate.c3p0.max_statements=50, user.language=en, openejb.deployments.classpath=false, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.tomcat., openejb.loader=tomcat-system, server.loader=, com.sun.management.jmxremote.access.file=/home/student/.cache/JetBrains/IntelliJIdea2020.3/tomcat/10a53701-4112-462e-a101-1df2054f3873/jmxremote.access, hibernate.c3p0.max_size=20, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, path.separator=:, org.apache.openejb.core.security.JaccProvider=org.apache.openejb.core.security.jacc.BasicJaccProvider, common.loader="/home/student/tomcat/lib","/home/student/tomcat/lib/*.jar","/home/student/tomcat/lib","/home/student/tomcat/lib/*.jar", hibernate.connection.username=****, os.version=5.4.0-72-generic, openejb.version=7.1.1, org.apache.security.jacc.EJBMethodPermission.methodInterfaces=BusinessLocalHome,BusinessRemoteHome,BusinessRemote,BusinessLocal, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/BookCollection, java.vm.name=OpenJDK 64-Bit Server VM, openejb.scan.webapp.container.includes=.*(geronimo|mp-jwt|failsafe).*, tomee.remote.support=true, java.vendor.url.bug=https://bugs.launchpad.net/ubuntu/+source/openjdk-lts, catalina.home=/home/student/tomcat, user.dir=/home/student/tomcat/bin, bval.in-container=true, os.arch=amd64, openjpa.Log=org.apache.openejb.openjpa.JULOpenJPALogFactory, hibernate.connection.password=****, tomee.serialization.class.blacklist=-, tomee.serialization.class.whitelist=, shared.loader=, catalina.base=/home/student/.cache/JetBrains/IntelliJIdea2020.3/tomcat/10a53701-4112-462e-a101-1df2054f3873, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@5ca1e4c7, noBanner=true, java.util.logging.manager=org.apache.juli.ClassLoaderLogManager, org.apache.webbeans.logger.WebBeansLoggerFacade=org.apache.openejb.cdi.logging.ContainerJULLoggerFactory, java.vm.info=mixed mode, sharing, java.vm.version=11.0.11+9-Ubuntu-0ubuntu2.20.04, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.hostname=127.0.0.1, javax.security.jacc.PolicyConfigurationFactory.provider=org.apache.openejb.core.security.JaccProvider$Factory, connection.url=jdbc:mysql://localhost:3306/BookCollection, java.class.version=55.0, authconfigprovider.factory=false}
[DEBUG] 2021-05-10 19:10:11.303 [http-nio-8080-exec-3] ClassLoaderAccessImpl - Not known whether passed class name [com.leeannjakel.entity.Book] is safe
[DEBUG] 2021-05-10 19:10:11.310 [http-nio-8080-exec-3] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.leeannjakel.entity.Book
[DEBUG] 2021-05-10 19:10:11.400 [http-nio-8080-exec-3] ClassLoaderAccessImpl - Not known whether passed class name [com.leeannjakel.entity.User] is safe
[DEBUG] 2021-05-10 19:10:11.400 [http-nio-8080-exec-3] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.leeannjakel.entity.User
[DEBUG] 2021-05-10 19:10:11.406 [http-nio-8080-exec-3] ClassLoaderAccessImpl - Not known whether passed class name [com.leeannjakel.entity.Author] is safe
[DEBUG] 2021-05-10 19:10:11.406 [http-nio-8080-exec-3] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.leeannjakel.entity.Author
[DEBUG] 2021-05-10 19:10:11.413 [http-nio-8080-exec-3] ClassLoaderAccessImpl - Not known whether passed class name [com.leeannjakel.entity.Genre] is safe
[DEBUG] 2021-05-10 19:10:11.413 [http-nio-8080-exec-3] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.leeannjakel.entity.Genre
[DEBUG] 2021-05-10 19:10:11.428 [http-nio-8080-exec-3] ClassLoaderAccessImpl - Not known whether passed class name [com.leeannjakel.entity.Role] is safe
[DEBUG] 2021-05-10 19:10:11.428 [http-nio-8080-exec-3] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.leeannjakel.entity.Role
[DEBUG] 2021-05-10 19:10:11.440 [http-nio-8080-exec-3] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2021-05-10 19:10:11.441 [http-nio-8080-exec-3] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2021-05-10 19:10:11.441 [http-nio-8080-exec-3] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@77ff446a] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@54c37206]
[DEBUG] 2021-05-10 19:10:11.667 [http-nio-8080-exec-3] ClassLoaderAccessImpl - Not known whether passed class name [com.leeannjakel.entity.Book] is safe
[DEBUG] 2021-05-10 19:10:11.668 [http-nio-8080-exec-3] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.leeannjakel.entity.Book
[DEBUG] 2021-05-10 19:10:11.783 [http-nio-8080-exec-3] ClassLoaderAccessImpl - Not known whether passed class name [com.leeannjakel.entity.Book] is safe
[DEBUG] 2021-05-10 19:10:11.783 [http-nio-8080-exec-3] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.leeannjakel.entity.Book
[DEBUG] 2021-05-10 19:10:12.775 [http-nio-8080-exec-3] ClassLoaderAccessImpl - Not known whether passed class name [com.leeannjakel.entity.User] is safe
[DEBUG] 2021-05-10 19:10:12.775 [http-nio-8080-exec-3] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.leeannjakel.entity.User
[DEBUG] 2021-05-10 19:10:12.777 [http-nio-8080-exec-3] ClassLoaderAccessImpl - Not known whether passed class name [com.leeannjakel.entity.User] is safe
[DEBUG] 2021-05-10 19:10:12.777 [http-nio-8080-exec-3] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.leeannjakel.entity.User
[DEBUG] 2021-05-10 19:10:12.923 [http-nio-8080-exec-3] ClassLoaderAccessImpl - Not known whether passed class name [com.leeannjakel.entity.Author] is safe
[DEBUG] 2021-05-10 19:10:12.923 [http-nio-8080-exec-3] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.leeannjakel.entity.Author
[DEBUG] 2021-05-10 19:10:12.924 [http-nio-8080-exec-3] ClassLoaderAccessImpl - Not known whether passed class name [com.leeannjakel.entity.Author] is safe
[DEBUG] 2021-05-10 19:10:12.924 [http-nio-8080-exec-3] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.leeannjakel.entity.Author
[DEBUG] 2021-05-10 19:10:13.047 [http-nio-8080-exec-3] ClassLoaderAccessImpl - Not known whether passed class name [com.leeannjakel.entity.Genre] is safe
[DEBUG] 2021-05-10 19:10:13.047 [http-nio-8080-exec-3] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.leeannjakel.entity.Genre
[DEBUG] 2021-05-10 19:10:13.048 [http-nio-8080-exec-3] ClassLoaderAccessImpl - Not known whether passed class name [com.leeannjakel.entity.Genre] is safe
[DEBUG] 2021-05-10 19:10:13.048 [http-nio-8080-exec-3] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.leeannjakel.entity.Genre
[DEBUG] 2021-05-10 19:10:13.135 [http-nio-8080-exec-3] ClassLoaderAccessImpl - Not known whether passed class name [com.leeannjakel.entity.Role] is safe
[DEBUG] 2021-05-10 19:10:13.136 [http-nio-8080-exec-3] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.leeannjakel.entity.Role
[DEBUG] 2021-05-10 19:10:13.136 [http-nio-8080-exec-3] ClassLoaderAccessImpl - Not known whether passed class name [com.leeannjakel.entity.Role] is safe
[DEBUG] 2021-05-10 19:10:13.136 [http-nio-8080-exec-3] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.leeannjakel.entity.Role
[DEBUG] 2021-05-10 19:10:13.263 [http-nio-8080-exec-3] AbstractCollectionPersister - Static SQL for collection: com.leeannjakel.entity.Author.books
[DEBUG] 2021-05-10 19:10:13.264 [http-nio-8080-exec-3] AbstractCollectionPersister -  Row insert: update book set author_id=? where id=?
[DEBUG] 2021-05-10 19:10:13.265 [http-nio-8080-exec-3] AbstractCollectionPersister -  Row update: update book set  where id=?
[DEBUG] 2021-05-10 19:10:13.265 [http-nio-8080-exec-3] AbstractCollectionPersister -  Row delete: update book set author_id=null where author_id=? and id=?
[DEBUG] 2021-05-10 19:10:13.265 [http-nio-8080-exec-3] AbstractCollectionPersister -  One-shot delete: update book set author_id=null where author_id=?
[DEBUG] 2021-05-10 19:10:13.266 [http-nio-8080-exec-3] AbstractCollectionPersister - Static SQL for collection: com.leeannjakel.entity.User.books
[DEBUG] 2021-05-10 19:10:13.266 [http-nio-8080-exec-3] AbstractCollectionPersister -  Row insert: update book set user_id=? where id=?
[DEBUG] 2021-05-10 19:10:13.266 [http-nio-8080-exec-3] AbstractCollectionPersister -  Row update: update book set  where id=?
[DEBUG] 2021-05-10 19:10:13.266 [http-nio-8080-exec-3] AbstractCollectionPersister -  Row delete: update book set user_id=null where user_id=? and id=?
[DEBUG] 2021-05-10 19:10:13.266 [http-nio-8080-exec-3] AbstractCollectionPersister -  One-shot delete: update book set user_id=null where user_id=?
[DEBUG] 2021-05-10 19:10:13.267 [http-nio-8080-exec-3] AbstractCollectionPersister - Static SQL for collection: com.leeannjakel.entity.User.roles
[DEBUG] 2021-05-10 19:10:13.267 [http-nio-8080-exec-3] AbstractCollectionPersister -  Row insert: update role set user_id=? where id=?
[DEBUG] 2021-05-10 19:10:13.267 [http-nio-8080-exec-3] AbstractCollectionPersister -  Row update: update role set  where id=?
[DEBUG] 2021-05-10 19:10:13.267 [http-nio-8080-exec-3] AbstractCollectionPersister -  Row delete: update role set user_id=null where user_id=? and id=?
[DEBUG] 2021-05-10 19:10:13.267 [http-nio-8080-exec-3] AbstractCollectionPersister -  One-shot delete: update role set user_id=null where user_id=?
[DEBUG] 2021-05-10 19:10:13.267 [http-nio-8080-exec-3] AbstractCollectionPersister - Static SQL for collection: com.leeannjakel.entity.Genre.books
[DEBUG] 2021-05-10 19:10:13.268 [http-nio-8080-exec-3] AbstractCollectionPersister -  Row insert: update book set genre_id=? where id=?
[DEBUG] 2021-05-10 19:10:13.268 [http-nio-8080-exec-3] AbstractCollectionPersister -  Row update: update book set  where id=?
[DEBUG] 2021-05-10 19:10:13.268 [http-nio-8080-exec-3] AbstractCollectionPersister -  Row delete: update book set genre_id=null where genre_id=? and id=?
[DEBUG] 2021-05-10 19:10:13.268 [http-nio-8080-exec-3] AbstractCollectionPersister -  One-shot delete: update book set genre_id=null where genre_id=?
[DEBUG] 2021-05-10 19:10:13.295 [http-nio-8080-exec-3] AbstractEntityPersister - Static SQL for entity: com.leeannjakel.entity.Book
[DEBUG] 2021-05-10 19:10:13.296 [http-nio-8080-exec-3] AbstractEntityPersister -  Version select: select id from book where id =?
[DEBUG] 2021-05-10 19:10:13.296 [http-nio-8080-exec-3] AbstractEntityPersister -  Snapshot select: select book_.id, book_.author_id as author_i5_1_, book_.genre_id as genre_id6_1_, book_.isbn as isbn2_1_, book_.notes as notes3_1_, book_.title as title4_1_, book_.user_id as user_id7_1_ from book book_ where book_.id=?
[DEBUG] 2021-05-10 19:10:13.296 [http-nio-8080-exec-3] AbstractEntityPersister -  Insert 0: insert into book (author_id, genre_id, isbn, notes, title, user_id, id) values (?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2021-05-10 19:10:13.296 [http-nio-8080-exec-3] AbstractEntityPersister -  Update 0: update book set author_id=?, genre_id=?, isbn=?, notes=?, title=?, user_id=? where id=?
[DEBUG] 2021-05-10 19:10:13.296 [http-nio-8080-exec-3] AbstractEntityPersister -  Delete 0: delete from book where id=?
[DEBUG] 2021-05-10 19:10:13.296 [http-nio-8080-exec-3] AbstractEntityPersister -  Identity insert: insert into book (author_id, genre_id, isbn, notes, title, user_id) values (?, ?, ?, ?, ?, ?)
[DEBUG] 2021-05-10 19:10:13.471 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@10a7e802]
[DEBUG] 2021-05-10 19:10:13.476 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : author
[DEBUG] 2021-05-10 19:10:13.494 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4e90bb3]
[DEBUG] 2021-05-10 19:10:13.504 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : author.books
[DEBUG] 2021-05-10 19:10:13.505 [http-nio-8080-exec-3] MetamodelGraphWalker - Property path deemed to be circular : author.books
[DEBUG] 2021-05-10 19:10:13.505 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : author.name
[DEBUG] 2021-05-10 19:10:13.505 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : genre
[DEBUG] 2021-05-10 19:10:13.507 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6a50477e]
[DEBUG] 2021-05-10 19:10:13.508 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : genre.books
[DEBUG] 2021-05-10 19:10:13.510 [http-nio-8080-exec-3] MetamodelGraphWalker - Property path deemed to be circular : genre.books
[DEBUG] 2021-05-10 19:10:13.511 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : genre.name
[DEBUG] 2021-05-10 19:10:13.514 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : isbn
[DEBUG] 2021-05-10 19:10:13.514 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : notes
[DEBUG] 2021-05-10 19:10:13.514 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2021-05-10 19:10:13.514 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2021-05-10 19:10:13.514 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@11b8efc0]
[DEBUG] 2021-05-10 19:10:13.533 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.books
[DEBUG] 2021-05-10 19:10:13.533 [http-nio-8080-exec-3] MetamodelGraphWalker - Property path deemed to be circular : user.books
[DEBUG] 2021-05-10 19:10:13.533 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2021-05-10 19:10:13.533 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2021-05-10 19:10:13.533 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2021-05-10 19:10:13.533 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2021-05-10 19:10:13.533 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2021-05-10 19:10:13.546 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@697cbc3b]
[DEBUG] 2021-05-10 19:10:13.551 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2dfa9878]
[DEBUG] 2021-05-10 19:10:13.553 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.roles.roleName
[DEBUG] 2021-05-10 19:10:13.554 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2021-05-10 19:10:13.554 [http-nio-8080-exec-3] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2021-05-10 19:10:13.555 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.roles.userName
[DEBUG] 2021-05-10 19:10:13.555 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.userName
[DEBUG] 2021-05-10 19:10:13.556 [http-nio-8080-exec-3] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-05-10 19:10:13.599 [http-nio-8080-exec-3] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-05-10 19:10:13.618 [http-nio-8080-exec-3] LoadPlanTreePrinter - LoadPlan(entity=com.leeannjakel.entity.Book)
    - Returns
       - EntityReturnImpl(entity=com.leeannjakel.entity.Book, querySpaceUid=<gen:0>, path=com.leeannjakel.entity.Book)
          - EntityAttributeFetchImpl(entity=com.leeannjakel.entity.Author, querySpaceUid=<gen:1>, path=com.leeannjakel.entity.Book.author)
          - EntityAttributeFetchImpl(entity=com.leeannjakel.entity.Genre, querySpaceUid=<gen:2>, path=com.leeannjakel.entity.Book.genre)
          - EntityAttributeFetchImpl(entity=com.leeannjakel.entity.User, querySpaceUid=<gen:3>, path=com.leeannjakel.entity.Book.user)
             - CollectionAttributeFetchImpl(collection=com.leeannjakel.entity.User.roles, querySpaceUid=<gen:4>, path=com.leeannjakel.entity.Book.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.leeannjakel.entity.Role, querySpaceUid=<gen:5>, path=com.leeannjakel.entity.Book.user.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.leeannjakel.entity.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(author)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.leeannjakel.entity.Author)
                - SQL table alias mapping - author1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}
          - JOIN (JoinDefinedByMetadata(genre)) : <gen:0> -> <gen:2>
             - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.leeannjakel.entity.Genre)
                - SQL table alias mapping - genre2_
                - alias suffix - 2_
                - suffixed key columns - {id1_2_2_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=com.leeannjakel.entity.User)
                - SQL table alias mapping - user3_
                - alias suffix - 3_
                - suffixed key columns - {id1_4_3_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:3> -> <gen:4>
                   - CollectionQuerySpaceImpl(uid=<gen:4>, collection=com.leeannjakel.entity.User.roles)
                      - SQL table alias mapping - roles4_
                      - alias suffix - 4_
                      - suffixed key columns - {user_id4_3_4_}
                      - entity-element alias suffix - 5_
                      - 5_entity-element suffixed key columns - id1_3_5_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:4> -> <gen:5>
                         - EntityQuerySpaceImpl(uid=<gen:5>, entity=com.leeannjakel.entity.Role)
                            - SQL table alias mapping - roles4_
                            - alias suffix - 5_
                            - suffixed key columns - {id1_3_5_}

[DEBUG] 2021-05-10 19:10:13.624 [http-nio-8080-exec-3] EntityLoader - Static select for entity com.leeannjakel.entity.Book [NONE]: select book0_.id as id1_1_0_, book0_.author_id as author_i5_1_0_, book0_.genre_id as genre_id6_1_0_, book0_.isbn as isbn2_1_0_, book0_.notes as notes3_1_0_, book0_.title as title4_1_0_, book0_.user_id as user_id7_1_0_, author1_.id as id1_0_1_, author1_.name as name2_0_1_, genre2_.id as id1_2_2_, genre2_.name as name2_2_2_, user3_.id as id1_4_3_, user3_.email as email2_4_3_, user3_.first_name as first_na3_4_3_, user3_.last_name as last_nam4_4_3_, user3_.password as password5_4_3_, user3_.user_name as user_nam6_4_3_, roles4_.user_id as user_id4_3_4_, roles4_.id as id1_3_4_, roles4_.id as id1_3_5_, roles4_.role_name as role_nam2_3_5_, roles4_.user_id as user_id4_3_5_, roles4_.user_name as user_nam3_3_5_ from book book0_ left outer join author author1_ on book0_.author_id=author1_.id left outer join genre genre2_ on book0_.genre_id=genre2_.id left outer join user user3_ on book0_.user_id=user3_.id left outer join role roles4_ on user3_.id=roles4_.user_id where book0_.id=?
[DEBUG] 2021-05-10 19:10:13.628 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5f7ddbe7]
[DEBUG] 2021-05-10 19:10:13.630 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : author
[DEBUG] 2021-05-10 19:10:13.630 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@63eeee9d]
[DEBUG] 2021-05-10 19:10:13.630 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : author.books
[DEBUG] 2021-05-10 19:10:13.632 [http-nio-8080-exec-3] MetamodelGraphWalker - Property path deemed to be circular : author.books
[DEBUG] 2021-05-10 19:10:13.632 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : author.name
[DEBUG] 2021-05-10 19:10:13.632 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : genre
[DEBUG] 2021-05-10 19:10:13.634 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2de04b79]
[DEBUG] 2021-05-10 19:10:13.634 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : genre.books
[DEBUG] 2021-05-10 19:10:13.634 [http-nio-8080-exec-3] MetamodelGraphWalker - Property path deemed to be circular : genre.books
[DEBUG] 2021-05-10 19:10:13.634 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : genre.name
[DEBUG] 2021-05-10 19:10:13.634 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : isbn
[DEBUG] 2021-05-10 19:10:13.634 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : notes
[DEBUG] 2021-05-10 19:10:13.634 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2021-05-10 19:10:13.634 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2021-05-10 19:10:13.635 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@61032aff]
[DEBUG] 2021-05-10 19:10:13.635 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.books
[DEBUG] 2021-05-10 19:10:13.638 [http-nio-8080-exec-3] MetamodelGraphWalker - Property path deemed to be circular : user.books
[DEBUG] 2021-05-10 19:10:13.638 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2021-05-10 19:10:13.638 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2021-05-10 19:10:13.638 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2021-05-10 19:10:13.638 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2021-05-10 19:10:13.638 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2021-05-10 19:10:13.638 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4aaf2f60]
[DEBUG] 2021-05-10 19:10:13.638 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@527c6d60]
[DEBUG] 2021-05-10 19:10:13.638 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.roles.roleName
[DEBUG] 2021-05-10 19:10:13.638 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2021-05-10 19:10:13.639 [http-nio-8080-exec-3] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2021-05-10 19:10:13.639 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.roles.userName
[DEBUG] 2021-05-10 19:10:13.639 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.userName
[DEBUG] 2021-05-10 19:10:13.639 [http-nio-8080-exec-3] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-05-10 19:10:13.640 [http-nio-8080-exec-3] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-05-10 19:10:13.642 [http-nio-8080-exec-3] LoadPlanTreePrinter - LoadPlan(entity=com.leeannjakel.entity.Book)
    - Returns
       - EntityReturnImpl(entity=com.leeannjakel.entity.Book, querySpaceUid=<gen:0>, path=com.leeannjakel.entity.Book)
          - EntityAttributeFetchImpl(entity=com.leeannjakel.entity.Author, querySpaceUid=<gen:1>, path=com.leeannjakel.entity.Book.author)
          - EntityAttributeFetchImpl(entity=com.leeannjakel.entity.Genre, querySpaceUid=<gen:2>, path=com.leeannjakel.entity.Book.genre)
          - EntityAttributeFetchImpl(entity=com.leeannjakel.entity.User, querySpaceUid=<gen:3>, path=com.leeannjakel.entity.Book.user)
             - CollectionAttributeFetchImpl(collection=com.leeannjakel.entity.User.roles, querySpaceUid=<gen:4>, path=com.leeannjakel.entity.Book.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.leeannjakel.entity.Role, querySpaceUid=<gen:5>, path=com.leeannjakel.entity.Book.user.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.leeannjakel.entity.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(author)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.leeannjakel.entity.Author)
                - SQL table alias mapping - author1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}
          - JOIN (JoinDefinedByMetadata(genre)) : <gen:0> -> <gen:2>
             - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.leeannjakel.entity.Genre)
                - SQL table alias mapping - genre2_
                - alias suffix - 2_
                - suffixed key columns - {id1_2_2_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=com.leeannjakel.entity.User)
                - SQL table alias mapping - user3_
                - alias suffix - 3_
                - suffixed key columns - {id1_4_3_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:3> -> <gen:4>
                   - CollectionQuerySpaceImpl(uid=<gen:4>, collection=com.leeannjakel.entity.User.roles)
                      - SQL table alias mapping - roles4_
                      - alias suffix - 4_
                      - suffixed key columns - {user_id4_3_4_}
                      - entity-element alias suffix - 5_
                      - 5_entity-element suffixed key columns - id1_3_5_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:4> -> <gen:5>
                         - EntityQuerySpaceImpl(uid=<gen:5>, entity=com.leeannjakel.entity.Role)
                            - SQL table alias mapping - roles4_
                            - alias suffix - 5_
                            - suffixed key columns - {id1_3_5_}

[DEBUG] 2021-05-10 19:10:13.646 [http-nio-8080-exec-3] EntityLoader - Static select for entity com.leeannjakel.entity.Book [READ]: select book0_.id as id1_1_0_, book0_.author_id as author_i5_1_0_, book0_.genre_id as genre_id6_1_0_, book0_.isbn as isbn2_1_0_, book0_.notes as notes3_1_0_, book0_.title as title4_1_0_, book0_.user_id as user_id7_1_0_, author1_.id as id1_0_1_, author1_.name as name2_0_1_, genre2_.id as id1_2_2_, genre2_.name as name2_2_2_, user3_.id as id1_4_3_, user3_.email as email2_4_3_, user3_.first_name as first_na3_4_3_, user3_.last_name as last_nam4_4_3_, user3_.password as password5_4_3_, user3_.user_name as user_nam6_4_3_, roles4_.user_id as user_id4_3_4_, roles4_.id as id1_3_4_, roles4_.id as id1_3_5_, roles4_.role_name as role_nam2_3_5_, roles4_.user_id as user_id4_3_5_, roles4_.user_name as user_nam3_3_5_ from book book0_ left outer join author author1_ on book0_.author_id=author1_.id left outer join genre genre2_ on book0_.genre_id=genre2_.id left outer join user user3_ on book0_.user_id=user3_.id left outer join role roles4_ on user3_.id=roles4_.user_id where book0_.id=?
[DEBUG] 2021-05-10 19:10:13.700 [http-nio-8080-exec-3] Loader - Static select for action ACTION_MERGE on entity com.leeannjakel.entity.Book: select book0_.id as id1_1_0_, book0_.author_id as author_i5_1_0_, book0_.genre_id as genre_id6_1_0_, book0_.isbn as isbn2_1_0_, book0_.notes as notes3_1_0_, book0_.title as title4_1_0_, book0_.user_id as user_id7_1_0_ from book book0_ where book0_.id=?
[DEBUG] 2021-05-10 19:10:13.700 [http-nio-8080-exec-3] Loader - Static select for action ACTION_REFRESH on entity com.leeannjakel.entity.Book: select book0_.id as id1_1_0_, book0_.author_id as author_i5_1_0_, book0_.genre_id as genre_id6_1_0_, book0_.isbn as isbn2_1_0_, book0_.notes as notes3_1_0_, book0_.title as title4_1_0_, book0_.user_id as user_id7_1_0_ from book book0_ where book0_.id=?
[DEBUG] 2021-05-10 19:10:13.701 [http-nio-8080-exec-3] AbstractEntityPersister - Static SQL for entity: com.leeannjakel.entity.User
[DEBUG] 2021-05-10 19:10:13.701 [http-nio-8080-exec-3] AbstractEntityPersister -  Version select: select id from user where id =?
[DEBUG] 2021-05-10 19:10:13.701 [http-nio-8080-exec-3] AbstractEntityPersister -  Snapshot select: select user_.id, user_.email as email2_4_, user_.first_name as first_na3_4_, user_.last_name as last_nam4_4_, user_.password as password5_4_, user_.user_name as user_nam6_4_ from user user_ where user_.id=?
[DEBUG] 2021-05-10 19:10:13.701 [http-nio-8080-exec-3] AbstractEntityPersister -  Insert 0: insert into user (email, first_name, last_name, password, user_name, id) values (?, ?, ?, ?, ?, ?)
[DEBUG] 2021-05-10 19:10:13.701 [http-nio-8080-exec-3] AbstractEntityPersister -  Update 0: update user set email=?, first_name=?, last_name=?, password=?, user_name=? where id=?
[DEBUG] 2021-05-10 19:10:13.701 [http-nio-8080-exec-3] AbstractEntityPersister -  Delete 0: delete from user where id=?
[DEBUG] 2021-05-10 19:10:13.701 [http-nio-8080-exec-3] AbstractEntityPersister -  Identity insert: insert into user (email, first_name, last_name, password, user_name) values (?, ?, ?, ?, ?)
[DEBUG] 2021-05-10 19:10:13.701 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3a93bdec]
[DEBUG] 2021-05-10 19:10:13.701 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : books
[DEBUG] 2021-05-10 19:10:13.701 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4946ffed]
[DEBUG] 2021-05-10 19:10:13.701 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@564af8e1]
[DEBUG] 2021-05-10 19:10:13.704 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2021-05-10 19:10:13.704 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2021-05-10 19:10:13.704 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2021-05-10 19:10:13.704 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2021-05-10 19:10:13.704 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : roles
[DEBUG] 2021-05-10 19:10:13.704 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@71914319]
[DEBUG] 2021-05-10 19:10:13.705 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@15228db6]
[DEBUG] 2021-05-10 19:10:13.705 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : roles.roleName
[DEBUG] 2021-05-10 19:10:13.705 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : roles.user
[DEBUG] 2021-05-10 19:10:13.705 [http-nio-8080-exec-3] MetamodelGraphWalker - Property path deemed to be circular : roles.user
[DEBUG] 2021-05-10 19:10:13.705 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : roles.userName
[DEBUG] 2021-05-10 19:10:13.705 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : userName
[DEBUG] 2021-05-10 19:10:13.705 [http-nio-8080-exec-3] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-05-10 19:10:13.707 [http-nio-8080-exec-3] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-05-10 19:10:13.709 [http-nio-8080-exec-3] LoadPlanTreePrinter - LoadPlan(entity=com.leeannjakel.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.leeannjakel.entity.User, querySpaceUid=<gen:0>, path=com.leeannjakel.entity.User)
          - CollectionAttributeFetchImpl(collection=com.leeannjakel.entity.User.books, querySpaceUid=<gen:1>, path=com.leeannjakel.entity.User.books)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.leeannjakel.entity.Book, querySpaceUid=<gen:2>, path=com.leeannjakel.entity.User.books.<elements>)
          - CollectionAttributeFetchImpl(collection=com.leeannjakel.entity.User.roles, querySpaceUid=<gen:3>, path=com.leeannjakel.entity.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.leeannjakel.entity.Role, querySpaceUid=<gen:4>, path=com.leeannjakel.entity.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.leeannjakel.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:3>
             - CollectionQuerySpaceImpl(uid=<gen:3>, collection=com.leeannjakel.entity.User.roles)
                - SQL table alias mapping - roles1_
                - alias suffix - 1_
                - suffixed key columns - {user_id4_3_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_3_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:3> -> <gen:4>
                   - EntityQuerySpaceImpl(uid=<gen:4>, entity=com.leeannjakel.entity.Role)
                      - SQL table alias mapping - roles1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_3_2_}

[DEBUG] 2021-05-10 19:10:13.709 [http-nio-8080-exec-3] EntityLoader - Static select for entity com.leeannjakel.entity.User [NONE]: select user0_.id as id1_4_0_, user0_.email as email2_4_0_, user0_.first_name as first_na3_4_0_, user0_.last_name as last_nam4_4_0_, user0_.password as password5_4_0_, user0_.user_name as user_nam6_4_0_, roles1_.user_id as user_id4_3_1_, roles1_.id as id1_3_1_, roles1_.id as id1_3_2_, roles1_.role_name as role_nam2_3_2_, roles1_.user_id as user_id4_3_2_, roles1_.user_name as user_nam3_3_2_ from user user0_ left outer join role roles1_ on user0_.id=roles1_.user_id where user0_.id=?
[DEBUG] 2021-05-10 19:10:13.709 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@111bceca]
[DEBUG] 2021-05-10 19:10:13.709 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : books
[DEBUG] 2021-05-10 19:10:13.709 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@56fd33e1]
[DEBUG] 2021-05-10 19:10:13.709 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@72b83142]
[DEBUG] 2021-05-10 19:10:13.709 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2021-05-10 19:10:13.709 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2021-05-10 19:10:13.710 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2021-05-10 19:10:13.710 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2021-05-10 19:10:13.710 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : roles
[DEBUG] 2021-05-10 19:10:13.710 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3d9acc41]
[DEBUG] 2021-05-10 19:10:13.710 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@81532e]
[DEBUG] 2021-05-10 19:10:13.710 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : roles.roleName
[DEBUG] 2021-05-10 19:10:13.710 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : roles.user
[DEBUG] 2021-05-10 19:10:13.710 [http-nio-8080-exec-3] MetamodelGraphWalker - Property path deemed to be circular : roles.user
[DEBUG] 2021-05-10 19:10:13.710 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : roles.userName
[DEBUG] 2021-05-10 19:10:13.710 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : userName
[DEBUG] 2021-05-10 19:10:13.710 [http-nio-8080-exec-3] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-05-10 19:10:13.711 [http-nio-8080-exec-3] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-05-10 19:10:13.711 [http-nio-8080-exec-3] LoadPlanTreePrinter - LoadPlan(entity=com.leeannjakel.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.leeannjakel.entity.User, querySpaceUid=<gen:0>, path=com.leeannjakel.entity.User)
          - CollectionAttributeFetchImpl(collection=com.leeannjakel.entity.User.books, querySpaceUid=<gen:1>, path=com.leeannjakel.entity.User.books)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.leeannjakel.entity.Book, querySpaceUid=<gen:2>, path=com.leeannjakel.entity.User.books.<elements>)
          - CollectionAttributeFetchImpl(collection=com.leeannjakel.entity.User.roles, querySpaceUid=<gen:3>, path=com.leeannjakel.entity.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.leeannjakel.entity.Role, querySpaceUid=<gen:4>, path=com.leeannjakel.entity.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.leeannjakel.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:3>
             - CollectionQuerySpaceImpl(uid=<gen:3>, collection=com.leeannjakel.entity.User.roles)
                - SQL table alias mapping - roles1_
                - alias suffix - 1_
                - suffixed key columns - {user_id4_3_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_3_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:3> -> <gen:4>
                   - EntityQuerySpaceImpl(uid=<gen:4>, entity=com.leeannjakel.entity.Role)
                      - SQL table alias mapping - roles1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_3_2_}

[DEBUG] 2021-05-10 19:10:13.712 [http-nio-8080-exec-3] EntityLoader - Static select for entity com.leeannjakel.entity.User [READ]: select user0_.id as id1_4_0_, user0_.email as email2_4_0_, user0_.first_name as first_na3_4_0_, user0_.last_name as last_nam4_4_0_, user0_.password as password5_4_0_, user0_.user_name as user_nam6_4_0_, roles1_.user_id as user_id4_3_1_, roles1_.id as id1_3_1_, roles1_.id as id1_3_2_, roles1_.role_name as role_nam2_3_2_, roles1_.user_id as user_id4_3_2_, roles1_.user_name as user_nam3_3_2_ from user user0_ left outer join role roles1_ on user0_.id=roles1_.user_id where user0_.id=?
[DEBUG] 2021-05-10 19:10:13.714 [http-nio-8080-exec-3] Loader - Static select for action ACTION_MERGE on entity com.leeannjakel.entity.User: select user0_.id as id1_4_1_, user0_.email as email2_4_1_, user0_.first_name as first_na3_4_1_, user0_.last_name as last_nam4_4_1_, user0_.password as password5_4_1_, user0_.user_name as user_nam6_4_1_, books1_.user_id as user_id7_1_3_, books1_.id as id1_1_3_, books1_.id as id1_1_0_, books1_.author_id as author_i5_1_0_, books1_.genre_id as genre_id6_1_0_, books1_.isbn as isbn2_1_0_, books1_.notes as notes3_1_0_, books1_.title as title4_1_0_, books1_.user_id as user_id7_1_0_ from user user0_ left outer join book books1_ on user0_.id=books1_.user_id where user0_.id=?
[DEBUG] 2021-05-10 19:10:13.714 [http-nio-8080-exec-3] Loader - Static select for action ACTION_REFRESH on entity com.leeannjakel.entity.User: select user0_.id as id1_4_1_, user0_.email as email2_4_1_, user0_.first_name as first_na3_4_1_, user0_.last_name as last_nam4_4_1_, user0_.password as password5_4_1_, user0_.user_name as user_nam6_4_1_, books1_.user_id as user_id7_1_3_, books1_.id as id1_1_3_, books1_.id as id1_1_0_, books1_.author_id as author_i5_1_0_, books1_.genre_id as genre_id6_1_0_, books1_.isbn as isbn2_1_0_, books1_.notes as notes3_1_0_, books1_.title as title4_1_0_, books1_.user_id as user_id7_1_0_ from user user0_ left outer join book books1_ on user0_.id=books1_.user_id where user0_.id=?
[DEBUG] 2021-05-10 19:10:13.714 [http-nio-8080-exec-3] AbstractEntityPersister - Static SQL for entity: com.leeannjakel.entity.Author
[DEBUG] 2021-05-10 19:10:13.715 [http-nio-8080-exec-3] AbstractEntityPersister -  Version select: select id from author where id =?
[DEBUG] 2021-05-10 19:10:13.715 [http-nio-8080-exec-3] AbstractEntityPersister -  Snapshot select: select author_.id, author_.name as name2_0_ from author author_ where author_.id=?
[DEBUG] 2021-05-10 19:10:13.715 [http-nio-8080-exec-3] AbstractEntityPersister -  Insert 0: insert into author (name, id) values (?, ?)
[DEBUG] 2021-05-10 19:10:13.715 [http-nio-8080-exec-3] AbstractEntityPersister -  Update 0: update author set name=? where id=?
[DEBUG] 2021-05-10 19:10:13.715 [http-nio-8080-exec-3] AbstractEntityPersister -  Delete 0: delete from author where id=?
[DEBUG] 2021-05-10 19:10:13.715 [http-nio-8080-exec-3] AbstractEntityPersister -  Identity insert: insert into author (name) values (?)
[DEBUG] 2021-05-10 19:10:13.715 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@56c2fea0]
[DEBUG] 2021-05-10 19:10:13.715 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : books
[DEBUG] 2021-05-10 19:10:13.715 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4d74460b]
[DEBUG] 2021-05-10 19:10:13.716 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3e4820e6]
[DEBUG] 2021-05-10 19:10:13.716 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2021-05-10 19:10:13.716 [http-nio-8080-exec-3] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-05-10 19:10:13.716 [http-nio-8080-exec-3] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-05-10 19:10:13.723 [http-nio-8080-exec-3] LoadPlanTreePrinter - LoadPlan(entity=com.leeannjakel.entity.Author)
    - Returns
       - EntityReturnImpl(entity=com.leeannjakel.entity.Author, querySpaceUid=<gen:0>, path=com.leeannjakel.entity.Author)
          - CollectionAttributeFetchImpl(collection=com.leeannjakel.entity.Author.books, querySpaceUid=<gen:1>, path=com.leeannjakel.entity.Author.books)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.leeannjakel.entity.Book, querySpaceUid=<gen:2>, path=com.leeannjakel.entity.Author.books.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.leeannjakel.entity.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[DEBUG] 2021-05-10 19:10:13.727 [http-nio-8080-exec-3] EntityLoader - Static select for entity com.leeannjakel.entity.Author [NONE]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_ from author author0_ where author0_.id=?
[DEBUG] 2021-05-10 19:10:13.728 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7f3eee71]
[DEBUG] 2021-05-10 19:10:13.729 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : books
[DEBUG] 2021-05-10 19:10:13.729 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@58c9f39c]
[DEBUG] 2021-05-10 19:10:13.730 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@27f9b773]
[DEBUG] 2021-05-10 19:10:13.730 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2021-05-10 19:10:13.730 [http-nio-8080-exec-3] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-05-10 19:10:13.730 [http-nio-8080-exec-3] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-05-10 19:10:13.730 [http-nio-8080-exec-3] LoadPlanTreePrinter - LoadPlan(entity=com.leeannjakel.entity.Author)
    - Returns
       - EntityReturnImpl(entity=com.leeannjakel.entity.Author, querySpaceUid=<gen:0>, path=com.leeannjakel.entity.Author)
          - CollectionAttributeFetchImpl(collection=com.leeannjakel.entity.Author.books, querySpaceUid=<gen:1>, path=com.leeannjakel.entity.Author.books)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.leeannjakel.entity.Book, querySpaceUid=<gen:2>, path=com.leeannjakel.entity.Author.books.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.leeannjakel.entity.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[DEBUG] 2021-05-10 19:10:13.730 [http-nio-8080-exec-3] EntityLoader - Static select for entity com.leeannjakel.entity.Author [READ]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_ from author author0_ where author0_.id=?
[DEBUG] 2021-05-10 19:10:13.732 [http-nio-8080-exec-3] Loader - Static select for action ACTION_MERGE on entity com.leeannjakel.entity.Author: select author0_.id as id1_0_1_, author0_.name as name2_0_1_, books1_.author_id as author_i5_1_3_, books1_.id as id1_1_3_, books1_.id as id1_1_0_, books1_.author_id as author_i5_1_0_, books1_.genre_id as genre_id6_1_0_, books1_.isbn as isbn2_1_0_, books1_.notes as notes3_1_0_, books1_.title as title4_1_0_, books1_.user_id as user_id7_1_0_ from author author0_ left outer join book books1_ on author0_.id=books1_.author_id where author0_.id=?
[DEBUG] 2021-05-10 19:10:13.734 [http-nio-8080-exec-3] Loader - Static select for action ACTION_REFRESH on entity com.leeannjakel.entity.Author: select author0_.id as id1_0_1_, author0_.name as name2_0_1_, books1_.author_id as author_i5_1_3_, books1_.id as id1_1_3_, books1_.id as id1_1_0_, books1_.author_id as author_i5_1_0_, books1_.genre_id as genre_id6_1_0_, books1_.isbn as isbn2_1_0_, books1_.notes as notes3_1_0_, books1_.title as title4_1_0_, books1_.user_id as user_id7_1_0_ from author author0_ left outer join book books1_ on author0_.id=books1_.author_id where author0_.id=?
[DEBUG] 2021-05-10 19:10:13.742 [http-nio-8080-exec-3] AbstractEntityPersister - Static SQL for entity: com.leeannjakel.entity.Genre
[DEBUG] 2021-05-10 19:10:13.742 [http-nio-8080-exec-3] AbstractEntityPersister -  Version select: select id from genre where id =?
[DEBUG] 2021-05-10 19:10:13.743 [http-nio-8080-exec-3] AbstractEntityPersister -  Snapshot select: select genre_.id, genre_.name as name2_2_ from genre genre_ where genre_.id=?
[DEBUG] 2021-05-10 19:10:13.743 [http-nio-8080-exec-3] AbstractEntityPersister -  Insert 0: insert into genre (name, id) values (?, ?)
[DEBUG] 2021-05-10 19:10:13.743 [http-nio-8080-exec-3] AbstractEntityPersister -  Update 0: update genre set name=? where id=?
[DEBUG] 2021-05-10 19:10:13.744 [http-nio-8080-exec-3] AbstractEntityPersister -  Delete 0: delete from genre where id=?
[DEBUG] 2021-05-10 19:10:13.744 [http-nio-8080-exec-3] AbstractEntityPersister -  Identity insert: insert into genre (name) values (?)
[DEBUG] 2021-05-10 19:10:13.744 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2f3c889b]
[DEBUG] 2021-05-10 19:10:13.748 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : books
[DEBUG] 2021-05-10 19:10:13.748 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1a45d421]
[DEBUG] 2021-05-10 19:10:13.748 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@706dba35]
[DEBUG] 2021-05-10 19:10:13.748 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2021-05-10 19:10:13.748 [http-nio-8080-exec-3] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-05-10 19:10:13.748 [http-nio-8080-exec-3] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-05-10 19:10:13.749 [http-nio-8080-exec-3] LoadPlanTreePrinter - LoadPlan(entity=com.leeannjakel.entity.Genre)
    - Returns
       - EntityReturnImpl(entity=com.leeannjakel.entity.Genre, querySpaceUid=<gen:0>, path=com.leeannjakel.entity.Genre)
          - CollectionAttributeFetchImpl(collection=com.leeannjakel.entity.Genre.books, querySpaceUid=<gen:1>, path=com.leeannjakel.entity.Genre.books)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.leeannjakel.entity.Book, querySpaceUid=<gen:2>, path=com.leeannjakel.entity.Genre.books.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.leeannjakel.entity.Genre)
          - SQL table alias mapping - genre0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

[DEBUG] 2021-05-10 19:10:13.749 [http-nio-8080-exec-3] EntityLoader - Static select for entity com.leeannjakel.entity.Genre [NONE]: select genre0_.id as id1_2_0_, genre0_.name as name2_2_0_ from genre genre0_ where genre0_.id=?
[DEBUG] 2021-05-10 19:10:13.749 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3bde9cf3]
[DEBUG] 2021-05-10 19:10:13.749 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : books
[DEBUG] 2021-05-10 19:10:13.749 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3e205e46]
[DEBUG] 2021-05-10 19:10:13.749 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2381f7a5]
[DEBUG] 2021-05-10 19:10:13.754 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2021-05-10 19:10:13.754 [http-nio-8080-exec-3] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-05-10 19:10:13.754 [http-nio-8080-exec-3] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-05-10 19:10:13.762 [http-nio-8080-exec-3] LoadPlanTreePrinter - LoadPlan(entity=com.leeannjakel.entity.Genre)
    - Returns
       - EntityReturnImpl(entity=com.leeannjakel.entity.Genre, querySpaceUid=<gen:0>, path=com.leeannjakel.entity.Genre)
          - CollectionAttributeFetchImpl(collection=com.leeannjakel.entity.Genre.books, querySpaceUid=<gen:1>, path=com.leeannjakel.entity.Genre.books)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.leeannjakel.entity.Book, querySpaceUid=<gen:2>, path=com.leeannjakel.entity.Genre.books.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.leeannjakel.entity.Genre)
          - SQL table alias mapping - genre0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

[DEBUG] 2021-05-10 19:10:13.762 [http-nio-8080-exec-3] EntityLoader - Static select for entity com.leeannjakel.entity.Genre [READ]: select genre0_.id as id1_2_0_, genre0_.name as name2_2_0_ from genre genre0_ where genre0_.id=?
[DEBUG] 2021-05-10 19:10:13.765 [http-nio-8080-exec-3] Loader - Static select for action ACTION_MERGE on entity com.leeannjakel.entity.Genre: select genre0_.id as id1_2_1_, genre0_.name as name2_2_1_, books1_.genre_id as genre_id6_1_3_, books1_.id as id1_1_3_, books1_.id as id1_1_0_, books1_.author_id as author_i5_1_0_, books1_.genre_id as genre_id6_1_0_, books1_.isbn as isbn2_1_0_, books1_.notes as notes3_1_0_, books1_.title as title4_1_0_, books1_.user_id as user_id7_1_0_ from genre genre0_ left outer join book books1_ on genre0_.id=books1_.genre_id where genre0_.id=?
[DEBUG] 2021-05-10 19:10:13.766 [http-nio-8080-exec-3] Loader - Static select for action ACTION_REFRESH on entity com.leeannjakel.entity.Genre: select genre0_.id as id1_2_1_, genre0_.name as name2_2_1_, books1_.genre_id as genre_id6_1_3_, books1_.id as id1_1_3_, books1_.id as id1_1_0_, books1_.author_id as author_i5_1_0_, books1_.genre_id as genre_id6_1_0_, books1_.isbn as isbn2_1_0_, books1_.notes as notes3_1_0_, books1_.title as title4_1_0_, books1_.user_id as user_id7_1_0_ from genre genre0_ left outer join book books1_ on genre0_.id=books1_.genre_id where genre0_.id=?
[DEBUG] 2021-05-10 19:10:13.776 [http-nio-8080-exec-3] AbstractEntityPersister - Static SQL for entity: com.leeannjakel.entity.Role
[DEBUG] 2021-05-10 19:10:13.776 [http-nio-8080-exec-3] AbstractEntityPersister -  Version select: select id from role where id =?
[DEBUG] 2021-05-10 19:10:13.776 [http-nio-8080-exec-3] AbstractEntityPersister -  Snapshot select: select role_.id, role_.role_name as role_nam2_3_, role_.user_id as user_id4_3_, role_.user_name as user_nam3_3_ from role role_ where role_.id=?
[DEBUG] 2021-05-10 19:10:13.776 [http-nio-8080-exec-3] AbstractEntityPersister -  Insert 0: insert into role (role_name, user_id, user_name, id) values (?, ?, ?, ?)
[DEBUG] 2021-05-10 19:10:13.776 [http-nio-8080-exec-3] AbstractEntityPersister -  Update 0: update role set role_name=?, user_id=?, user_name=? where id=?
[DEBUG] 2021-05-10 19:10:13.776 [http-nio-8080-exec-3] AbstractEntityPersister -  Delete 0: delete from role where id=?
[DEBUG] 2021-05-10 19:10:13.776 [http-nio-8080-exec-3] AbstractEntityPersister -  Identity insert: insert into role (role_name, user_id, user_name) values (?, ?, ?)
[DEBUG] 2021-05-10 19:10:13.778 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6cf7ce22]
[DEBUG] 2021-05-10 19:10:13.779 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : roleName
[DEBUG] 2021-05-10 19:10:13.779 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2021-05-10 19:10:13.779 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@595fe388]
[DEBUG] 2021-05-10 19:10:13.779 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.books
[DEBUG] 2021-05-10 19:10:13.779 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@271b5d8c]
[DEBUG] 2021-05-10 19:10:13.780 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@48dd038a]
[DEBUG] 2021-05-10 19:10:13.780 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2021-05-10 19:10:13.780 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2021-05-10 19:10:13.780 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2021-05-10 19:10:13.780 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2021-05-10 19:10:13.780 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2021-05-10 19:10:13.780 [http-nio-8080-exec-3] MetamodelGraphWalker - Property path deemed to be circular : user.roles
[DEBUG] 2021-05-10 19:10:13.780 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.userName
[DEBUG] 2021-05-10 19:10:13.780 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : userName
[DEBUG] 2021-05-10 19:10:13.780 [http-nio-8080-exec-3] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-05-10 19:10:13.780 [http-nio-8080-exec-3] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-05-10 19:10:13.780 [http-nio-8080-exec-3] LoadPlanTreePrinter - LoadPlan(entity=com.leeannjakel.entity.Role)
    - Returns
       - EntityReturnImpl(entity=com.leeannjakel.entity.Role, querySpaceUid=<gen:0>, path=com.leeannjakel.entity.Role)
          - EntityAttributeFetchImpl(entity=com.leeannjakel.entity.User, querySpaceUid=<gen:1>, path=com.leeannjakel.entity.Role.user)
             - CollectionAttributeFetchImpl(collection=com.leeannjakel.entity.User.books, querySpaceUid=<gen:2>, path=com.leeannjakel.entity.Role.user.books)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.leeannjakel.entity.Book, querySpaceUid=<gen:3>, path=com.leeannjakel.entity.Role.user.books.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.leeannjakel.entity.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.leeannjakel.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_4_1_}

[DEBUG] 2021-05-10 19:10:13.780 [http-nio-8080-exec-3] EntityLoader - Static select for entity com.leeannjakel.entity.Role [NONE]: select role0_.id as id1_3_0_, role0_.role_name as role_nam2_3_0_, role0_.user_id as user_id4_3_0_, role0_.user_name as user_nam3_3_0_, user1_.id as id1_4_1_, user1_.email as email2_4_1_, user1_.first_name as first_na3_4_1_, user1_.last_name as last_nam4_4_1_, user1_.password as password5_4_1_, user1_.user_name as user_nam6_4_1_ from role role0_ left outer join user user1_ on role0_.user_id=user1_.id where role0_.id=?
[DEBUG] 2021-05-10 19:10:13.780 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6eb8eaba]
[DEBUG] 2021-05-10 19:10:13.781 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : roleName
[DEBUG] 2021-05-10 19:10:13.781 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2021-05-10 19:10:13.781 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1eae73a2]
[DEBUG] 2021-05-10 19:10:13.781 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.books
[DEBUG] 2021-05-10 19:10:13.781 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@178b22f7]
[DEBUG] 2021-05-10 19:10:13.781 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@51c232fc]
[DEBUG] 2021-05-10 19:10:13.781 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2021-05-10 19:10:13.781 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2021-05-10 19:10:13.781 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2021-05-10 19:10:13.781 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2021-05-10 19:10:13.781 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2021-05-10 19:10:13.781 [http-nio-8080-exec-3] MetamodelGraphWalker - Property path deemed to be circular : user.roles
[DEBUG] 2021-05-10 19:10:13.781 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.userName
[DEBUG] 2021-05-10 19:10:13.782 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : userName
[DEBUG] 2021-05-10 19:10:13.782 [http-nio-8080-exec-3] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-05-10 19:10:13.783 [http-nio-8080-exec-3] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-05-10 19:10:13.783 [http-nio-8080-exec-3] LoadPlanTreePrinter - LoadPlan(entity=com.leeannjakel.entity.Role)
    - Returns
       - EntityReturnImpl(entity=com.leeannjakel.entity.Role, querySpaceUid=<gen:0>, path=com.leeannjakel.entity.Role)
          - EntityAttributeFetchImpl(entity=com.leeannjakel.entity.User, querySpaceUid=<gen:1>, path=com.leeannjakel.entity.Role.user)
             - CollectionAttributeFetchImpl(collection=com.leeannjakel.entity.User.books, querySpaceUid=<gen:2>, path=com.leeannjakel.entity.Role.user.books)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.leeannjakel.entity.Book, querySpaceUid=<gen:3>, path=com.leeannjakel.entity.Role.user.books.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.leeannjakel.entity.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.leeannjakel.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_4_1_}

[DEBUG] 2021-05-10 19:10:13.784 [http-nio-8080-exec-3] EntityLoader - Static select for entity com.leeannjakel.entity.Role [READ]: select role0_.id as id1_3_0_, role0_.role_name as role_nam2_3_0_, role0_.user_id as user_id4_3_0_, role0_.user_name as user_nam3_3_0_, user1_.id as id1_4_1_, user1_.email as email2_4_1_, user1_.first_name as first_na3_4_1_, user1_.last_name as last_nam4_4_1_, user1_.password as password5_4_1_, user1_.user_name as user_nam6_4_1_ from role role0_ left outer join user user1_ on role0_.user_id=user1_.id where role0_.id=?
[DEBUG] 2021-05-10 19:10:13.784 [http-nio-8080-exec-3] Loader - Static select for action ACTION_MERGE on entity com.leeannjakel.entity.Role: select role0_.id as id1_3_0_, role0_.role_name as role_nam2_3_0_, role0_.user_id as user_id4_3_0_, role0_.user_name as user_nam3_3_0_ from role role0_ where role0_.id=?
[DEBUG] 2021-05-10 19:10:13.786 [http-nio-8080-exec-3] Loader - Static select for action ACTION_REFRESH on entity com.leeannjakel.entity.Role: select role0_.id as id1_3_0_, role0_.role_name as role_nam2_3_0_, role0_.user_id as user_id4_3_0_, role0_.user_name as user_nam3_3_0_ from role role0_ where role0_.id=?
[DEBUG] 2021-05-10 19:10:13.794 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4258ecc2]
[DEBUG] 2021-05-10 19:10:13.794 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4e06d22a]
[DEBUG] 2021-05-10 19:10:13.796 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : author
[DEBUG] 2021-05-10 19:10:13.796 [http-nio-8080-exec-3] MetamodelGraphWalker - Property path deemed to be circular : author
[DEBUG] 2021-05-10 19:10:13.796 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : genre
[DEBUG] 2021-05-10 19:10:13.798 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@39c54db4]
[DEBUG] 2021-05-10 19:10:13.798 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : genre.books
[DEBUG] 2021-05-10 19:10:13.798 [http-nio-8080-exec-3] MetamodelGraphWalker - Property path deemed to be circular : genre.books
[DEBUG] 2021-05-10 19:10:13.798 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : genre.name
[DEBUG] 2021-05-10 19:10:13.798 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : isbn
[DEBUG] 2021-05-10 19:10:13.798 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : notes
[DEBUG] 2021-05-10 19:10:13.798 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2021-05-10 19:10:13.798 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2021-05-10 19:10:13.799 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7341e512]
[DEBUG] 2021-05-10 19:10:13.799 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.books
[DEBUG] 2021-05-10 19:10:13.799 [http-nio-8080-exec-3] MetamodelGraphWalker - Property path deemed to be circular : user.books
[DEBUG] 2021-05-10 19:10:13.799 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2021-05-10 19:10:13.799 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2021-05-10 19:10:13.799 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2021-05-10 19:10:13.800 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2021-05-10 19:10:13.800 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2021-05-10 19:10:13.800 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@280ca760]
[DEBUG] 2021-05-10 19:10:13.800 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3bcc8e2a]
[DEBUG] 2021-05-10 19:10:13.800 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.userName
[DEBUG] 2021-05-10 19:10:13.801 [http-nio-8080-exec-3] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-05-10 19:10:13.819 [http-nio-8080-exec-3] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-05-10 19:10:13.821 [http-nio-8080-exec-3] LoadPlanTreePrinter - LoadPlan(collection=com.leeannjakel.entity.Author.books)
    - Returns
       - CollectionReturnImpl(collection=com.leeannjakel.entity.Author.books, querySpaceUid=<gen:0>, path=[com.leeannjakel.entity.Author.books])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.leeannjakel.entity.Book, querySpaceUid=<gen:1>, path=[com.leeannjakel.entity.Author.books].<elements>)
             - EntityAttributeFetchImpl(entity=com.leeannjakel.entity.Genre, querySpaceUid=<gen:2>, path=[com.leeannjakel.entity.Author.books].<elements>.genre)
             - EntityAttributeFetchImpl(entity=com.leeannjakel.entity.User, querySpaceUid=<gen:3>, path=[com.leeannjakel.entity.Author.books].<elements>.user)
                - CollectionAttributeFetchImpl(collection=com.leeannjakel.entity.User.roles, querySpaceUid=<gen:4>, path=[com.leeannjakel.entity.Author.books].<elements>.user.roles)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.leeannjakel.entity.Role, querySpaceUid=<gen:5>, path=[com.leeannjakel.entity.Author.books].<elements>.user.roles.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.leeannjakel.entity.Author.books)
          - SQL table alias mapping - books0_
          - alias suffix - 0_
          - suffixed key columns - {author_i5_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.leeannjakel.entity.Book)
                - SQL table alias mapping - books0_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}
                - JOIN (JoinDefinedByMetadata(genre)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.leeannjakel.entity.Genre)
                      - SQL table alias mapping - genre1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_2_2_}
                - JOIN (JoinDefinedByMetadata(user)) : <gen:1> -> <gen:3>
                   - EntityQuerySpaceImpl(uid=<gen:3>, entity=com.leeannjakel.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 3_
                      - suffixed key columns - {id1_4_3_}

[DEBUG] 2021-05-10 19:10:13.823 [http-nio-8080-exec-3] CollectionLoader - Static select for collection com.leeannjakel.entity.Author.books: select books0_.author_id as author_i5_1_0_, books0_.id as id1_1_0_, books0_.id as id1_1_1_, books0_.author_id as author_i5_1_1_, books0_.genre_id as genre_id6_1_1_, books0_.isbn as isbn2_1_1_, books0_.notes as notes3_1_1_, books0_.title as title4_1_1_, books0_.user_id as user_id7_1_1_, genre1_.id as id1_2_2_, genre1_.name as name2_2_2_, user2_.id as id1_4_3_, user2_.email as email2_4_3_, user2_.first_name as first_na3_4_3_, user2_.last_name as last_nam4_4_3_, user2_.password as password5_4_3_, user2_.user_name as user_nam6_4_3_ from book books0_ left outer join genre genre1_ on books0_.genre_id=genre1_.id left outer join user user2_ on books0_.user_id=user2_.id where books0_.author_id=?
[DEBUG] 2021-05-10 19:10:13.823 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@275483f5]
[DEBUG] 2021-05-10 19:10:13.824 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@d50f118]
[DEBUG] 2021-05-10 19:10:13.824 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : author
[DEBUG] 2021-05-10 19:10:13.824 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5841c19]
[DEBUG] 2021-05-10 19:10:13.824 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : author.books
[DEBUG] 2021-05-10 19:10:13.824 [http-nio-8080-exec-3] MetamodelGraphWalker - Property path deemed to be circular : author.books
[DEBUG] 2021-05-10 19:10:13.825 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : author.name
[DEBUG] 2021-05-10 19:10:13.827 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : genre
[DEBUG] 2021-05-10 19:10:13.828 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3d446cf5]
[DEBUG] 2021-05-10 19:10:13.828 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : genre.books
[DEBUG] 2021-05-10 19:10:13.828 [http-nio-8080-exec-3] MetamodelGraphWalker - Property path deemed to be circular : genre.books
[DEBUG] 2021-05-10 19:10:13.828 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : genre.name
[DEBUG] 2021-05-10 19:10:13.828 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : isbn
[DEBUG] 2021-05-10 19:10:13.834 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : notes
[DEBUG] 2021-05-10 19:10:13.835 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2021-05-10 19:10:13.835 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2021-05-10 19:10:13.835 [http-nio-8080-exec-3] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2021-05-10 19:10:13.835 [http-nio-8080-exec-3] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-05-10 19:10:13.835 [http-nio-8080-exec-3] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-05-10 19:10:13.836 [http-nio-8080-exec-3] LoadPlanTreePrinter - LoadPlan(collection=com.leeannjakel.entity.User.books)
    - Returns
       - CollectionReturnImpl(collection=com.leeannjakel.entity.User.books, querySpaceUid=<gen:0>, path=[com.leeannjakel.entity.User.books])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.leeannjakel.entity.Book, querySpaceUid=<gen:1>, path=[com.leeannjakel.entity.User.books].<elements>)
             - EntityAttributeFetchImpl(entity=com.leeannjakel.entity.Author, querySpaceUid=<gen:2>, path=[com.leeannjakel.entity.User.books].<elements>.author)
             - EntityAttributeFetchImpl(entity=com.leeannjakel.entity.Genre, querySpaceUid=<gen:3>, path=[com.leeannjakel.entity.User.books].<elements>.genre)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.leeannjakel.entity.User.books)
          - SQL table alias mapping - books0_
          - alias suffix - 0_
          - suffixed key columns - {user_id7_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.leeannjakel.entity.Book)
                - SQL table alias mapping - books0_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}
                - JOIN (JoinDefinedByMetadata(author)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.leeannjakel.entity.Author)
                      - SQL table alias mapping - author1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}
                - JOIN (JoinDefinedByMetadata(genre)) : <gen:1> -> <gen:3>
                   - EntityQuerySpaceImpl(uid=<gen:3>, entity=com.leeannjakel.entity.Genre)
                      - SQL table alias mapping - genre2_
                      - alias suffix - 3_
                      - suffixed key columns - {id1_2_3_}

[DEBUG] 2021-05-10 19:10:13.840 [http-nio-8080-exec-3] CollectionLoader - Static select for collection com.leeannjakel.entity.User.books: select books0_.user_id as user_id7_1_0_, books0_.id as id1_1_0_, books0_.id as id1_1_1_, books0_.author_id as author_i5_1_1_, books0_.genre_id as genre_id6_1_1_, books0_.isbn as isbn2_1_1_, books0_.notes as notes3_1_1_, books0_.title as title4_1_1_, books0_.user_id as user_id7_1_1_, author1_.id as id1_0_2_, author1_.name as name2_0_2_, genre2_.id as id1_2_3_, genre2_.name as name2_2_3_ from book books0_ left outer join author author1_ on books0_.author_id=author1_.id left outer join genre genre2_ on books0_.genre_id=genre2_.id where books0_.user_id=?
[DEBUG] 2021-05-10 19:10:13.841 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7dccf013]
[DEBUG] 2021-05-10 19:10:13.841 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@458ee0cf]
[DEBUG] 2021-05-10 19:10:13.845 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : roleName
[DEBUG] 2021-05-10 19:10:13.846 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2021-05-10 19:10:13.846 [http-nio-8080-exec-3] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2021-05-10 19:10:13.846 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : userName
[DEBUG] 2021-05-10 19:10:13.846 [http-nio-8080-exec-3] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-05-10 19:10:13.851 [http-nio-8080-exec-3] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-05-10 19:10:13.853 [http-nio-8080-exec-3] LoadPlanTreePrinter - LoadPlan(collection=com.leeannjakel.entity.User.roles)
    - Returns
       - CollectionReturnImpl(collection=com.leeannjakel.entity.User.roles, querySpaceUid=<gen:0>, path=[com.leeannjakel.entity.User.roles])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.leeannjakel.entity.Role, querySpaceUid=<gen:1>, path=[com.leeannjakel.entity.User.roles].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.leeannjakel.entity.User.roles)
          - SQL table alias mapping - roles0_
          - alias suffix - 0_
          - suffixed key columns - {user_id4_3_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_3_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.leeannjakel.entity.Role)
                - SQL table alias mapping - roles0_
                - alias suffix - 1_
                - suffixed key columns - {id1_3_1_}

[DEBUG] 2021-05-10 19:10:13.854 [http-nio-8080-exec-3] CollectionLoader - Static select for collection com.leeannjakel.entity.User.roles: select roles0_.user_id as user_id4_3_0_, roles0_.id as id1_3_0_, roles0_.id as id1_3_1_, roles0_.role_name as role_nam2_3_1_, roles0_.user_id as user_id4_3_1_, roles0_.user_name as user_nam3_3_1_ from role roles0_ where roles0_.user_id=?
[DEBUG] 2021-05-10 19:10:13.854 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@73845d04]
[DEBUG] 2021-05-10 19:10:13.854 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@41be4323]
[DEBUG] 2021-05-10 19:10:13.854 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : author
[DEBUG] 2021-05-10 19:10:13.854 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2903570d]
[DEBUG] 2021-05-10 19:10:13.854 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : author.books
[DEBUG] 2021-05-10 19:10:13.854 [http-nio-8080-exec-3] MetamodelGraphWalker - Property path deemed to be circular : author.books
[DEBUG] 2021-05-10 19:10:13.854 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : author.name
[DEBUG] 2021-05-10 19:10:13.854 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : genre
[DEBUG] 2021-05-10 19:10:13.854 [http-nio-8080-exec-3] MetamodelGraphWalker - Property path deemed to be circular : genre
[DEBUG] 2021-05-10 19:10:13.854 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : isbn
[DEBUG] 2021-05-10 19:10:13.854 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : notes
[DEBUG] 2021-05-10 19:10:13.860 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2021-05-10 19:10:13.860 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2021-05-10 19:10:13.860 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3bab25ae]
[DEBUG] 2021-05-10 19:10:13.860 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.books
[DEBUG] 2021-05-10 19:10:13.862 [http-nio-8080-exec-3] MetamodelGraphWalker - Property path deemed to be circular : user.books
[DEBUG] 2021-05-10 19:10:13.862 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2021-05-10 19:10:13.862 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2021-05-10 19:10:13.862 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2021-05-10 19:10:13.862 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2021-05-10 19:10:13.862 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2021-05-10 19:10:13.862 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2dc1461]
[DEBUG] 2021-05-10 19:10:13.862 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@259ee769]
[DEBUG] 2021-05-10 19:10:13.862 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.userName
[DEBUG] 2021-05-10 19:10:13.862 [http-nio-8080-exec-3] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-05-10 19:10:13.865 [http-nio-8080-exec-3] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-05-10 19:10:13.865 [http-nio-8080-exec-3] LoadPlanTreePrinter - LoadPlan(collection=com.leeannjakel.entity.Genre.books)
    - Returns
       - CollectionReturnImpl(collection=com.leeannjakel.entity.Genre.books, querySpaceUid=<gen:0>, path=[com.leeannjakel.entity.Genre.books])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.leeannjakel.entity.Book, querySpaceUid=<gen:1>, path=[com.leeannjakel.entity.Genre.books].<elements>)
             - EntityAttributeFetchImpl(entity=com.leeannjakel.entity.Author, querySpaceUid=<gen:2>, path=[com.leeannjakel.entity.Genre.books].<elements>.author)
             - EntityAttributeFetchImpl(entity=com.leeannjakel.entity.User, querySpaceUid=<gen:3>, path=[com.leeannjakel.entity.Genre.books].<elements>.user)
                - CollectionAttributeFetchImpl(collection=com.leeannjakel.entity.User.roles, querySpaceUid=<gen:4>, path=[com.leeannjakel.entity.Genre.books].<elements>.user.roles)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.leeannjakel.entity.Role, querySpaceUid=<gen:5>, path=[com.leeannjakel.entity.Genre.books].<elements>.user.roles.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.leeannjakel.entity.Genre.books)
          - SQL table alias mapping - books0_
          - alias suffix - 0_
          - suffixed key columns - {genre_id6_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.leeannjakel.entity.Book)
                - SQL table alias mapping - books0_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}
                - JOIN (JoinDefinedByMetadata(author)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.leeannjakel.entity.Author)
                      - SQL table alias mapping - author1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}
                - JOIN (JoinDefinedByMetadata(user)) : <gen:1> -> <gen:3>
                   - EntityQuerySpaceImpl(uid=<gen:3>, entity=com.leeannjakel.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 3_
                      - suffixed key columns - {id1_4_3_}

[DEBUG] 2021-05-10 19:10:13.865 [http-nio-8080-exec-3] CollectionLoader - Static select for collection com.leeannjakel.entity.Genre.books: select books0_.genre_id as genre_id6_1_0_, books0_.id as id1_1_0_, books0_.id as id1_1_1_, books0_.author_id as author_i5_1_1_, books0_.genre_id as genre_id6_1_1_, books0_.isbn as isbn2_1_1_, books0_.notes as notes3_1_1_, books0_.title as title4_1_1_, books0_.user_id as user_id7_1_1_, author1_.id as id1_0_2_, author1_.name as name2_0_2_, user2_.id as id1_4_3_, user2_.email as email2_4_3_, user2_.first_name as first_na3_4_3_, user2_.last_name as last_nam4_4_3_, user2_.password as password5_4_3_, user2_.user_name as user_nam6_4_3_ from book books0_ left outer join author author1_ on books0_.author_id=author1_.id left outer join user user2_ on books0_.user_id=user2_.id where books0_.genre_id=?
[DEBUG] 2021-05-10 19:10:14.048 [http-nio-8080-exec-3] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2021-05-10 19:10:14.049 [http-nio-8080-exec-3] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2021-05-10 19:10:14.049 [http-nio-8080-exec-3] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2021-05-10 19:10:14.071 [http-nio-8080-exec-3] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2021-05-10 19:10:14.072 [http-nio-8080-exec-3] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2021-05-10 19:10:14.073 [http-nio-8080-exec-3] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2021-05-10 19:10:14.073 [http-nio-8080-exec-3] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2021-05-10 19:10:14.095 [http-nio-8080-exec-3] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@276c7bdb
[DEBUG] 2021-05-10 19:10:14.098 [http-nio-8080-exec-3] SessionFactoryRegistry - Registering SessionFactory: 749b9327-8a90-4b61-b23a-8a90dbbf8d03 (<unnamed>)
[DEBUG] 2021-05-10 19:10:14.098 [http-nio-8080-exec-3] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2021-05-10 19:10:14.364 [http-nio-8080-exec-3] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2021-05-10 19:10:14.802 [http-nio-8080-exec-3] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from User as generatedAlias0 where generatedAlias0.userName=:param0
[DEBUG] 2021-05-10 19:10:14.883 [http-nio-8080-exec-3] QueryTranslatorFactoryInitiator - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@7dea8c1c
[DEBUG] 2021-05-10 19:10:14.958 [http-nio-8080-exec-3] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from com.leeannjakel.entity.User as generatedAlias0 where generatedAlias0.userName=:param0
[DEBUG] 2021-05-10 19:10:14.987 [http-nio-8080-exec-3] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2021-05-10 19:10:15.013 [http-nio-8080-exec-3] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  \-[IDENT] Node: 'leeannjakel'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'User'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'userName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

[DEBUG] 2021-05-10 19:10:15.082 [http-nio-8080-exec-3] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2021-05-10 19:10:15.107 [http-nio-8080-exec-3] FromElement - FromClause{level=1} : com.leeannjakel.entity.User (generatedAlias0) -> user0_
[DEBUG] 2021-05-10 19:10:15.109 [http-nio-8080-exec-3] FromReferenceNode - Resolved : generatedAlias0 -> user0_.id
[DEBUG] 2021-05-10 19:10:15.149 [http-nio-8080-exec-3] FromReferenceNode - Resolved : generatedAlias0 -> user0_.id
[DEBUG] 2021-05-10 19:10:15.152 [http-nio-8080-exec-3] DotNode - getDataType() : userName -> org.hibernate.type.StringType@3877ba98
[DEBUG] 2021-05-10 19:10:15.154 [http-nio-8080-exec-3] FromReferenceNode - Resolved : generatedAlias0.userName -> user0_.user_name
[DEBUG] 2021-05-10 19:10:15.186 [http-nio-8080-exec-3] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2021-05-10 19:10:15.187 [http-nio-8080-exec-3] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} user0_.id ) ( FromClause{level=1} user user0_ ) ( where ( = ( user0_.user_name user0_.id userName ) ? ) ) )
[DEBUG] 2021-05-10 19:10:15.236 [http-nio-8080-exec-3] JoinProcessor - Using FROM fragment [user user0_]
[DEBUG] 2021-05-10 19:10:15.237 [http-nio-8080-exec-3] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2021-05-10 19:10:15.237 [http-nio-8080-exec-3] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (user)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.id as id1_4_' {alias=generatedAlias0, className=com.leeannjakel.entity.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.email as email2_4_, user0_.first_name as first_na3_4_, user0_.last_name as last_nam4_4_, user0_.password as password5_4_, user0_.user_name as user_nam6_4_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'user user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=user,tableAlias=user0_,origin=null,columns={,className=com.leeannjakel.entity.User}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user0_.user_name' {propertyName=userName,dereferenceType=PRIMITIVE,getPropertyPath=userName,path=generatedAlias0.userName,tableAlias=user0_,className=com.leeannjakel.entity.User,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'user0_.id' {alias=generatedAlias0, className=com.leeannjakel.entity.User, tableAlias=user0_}
          |  \-[IDENT] IdentNode: 'userName' {originalText=userName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@3877ba98}

[DEBUG] 2021-05-10 19:10:15.237 [http-nio-8080-exec-3] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2021-05-10 19:10:15.249 [http-nio-8080-exec-3] QueryTranslatorImpl - HQL: select generatedAlias0 from com.leeannjakel.entity.User as generatedAlias0 where generatedAlias0.userName=:param0
[DEBUG] 2021-05-10 19:10:15.249 [http-nio-8080-exec-3] QueryTranslatorImpl - SQL: select user0_.id as id1_4_, user0_.email as email2_4_, user0_.first_name as first_na3_4_, user0_.last_name as last_nam4_4_, user0_.password as password5_4_, user0_.user_name as user_nam6_4_ from user user0_ where user0_.user_name=?
[DEBUG] 2021-05-10 19:10:15.251 [http-nio-8080-exec-3] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2021-05-10 19:10:15.304 [http-nio-8080-exec-3] SQL - select user0_.id as id1_4_, user0_.email as email2_4_, user0_.first_name as first_na3_4_, user0_.last_name as last_nam4_4_, user0_.password as password5_4_, user0_.user_name as user_nam6_4_ from user user0_ where user0_.user_name=?
[DEBUG] 2021-05-10 19:10:15.403 [http-nio-8080-exec-3] Loader - Result set row: 0
[DEBUG] 2021-05-10 19:10:15.410 [http-nio-8080-exec-3] Loader - Result row: EntityKey[com.leeannjakel.entity.User#1]
[DEBUG] 2021-05-10 19:10:15.436 [http-nio-8080-exec-3] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.User#1]
[DEBUG] 2021-05-10 19:10:15.437 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `books` : value = NOT NULL COLLECTION
[DEBUG] 2021-05-10 19:10:15.437 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`books`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-10 19:10:15.455 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `email` : value = email@something.com
[DEBUG] 2021-05-10 19:10:15.455 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-10 19:10:15.455 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `firstName` : value = LeeAnn
[DEBUG] 2021-05-10 19:10:15.455 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-10 19:10:15.455 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `lastName` : value = Jakel
[DEBUG] 2021-05-10 19:10:15.455 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-10 19:10:15.455 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `password` : value = password
[DEBUG] 2021-05-10 19:10:15.455 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-10 19:10:15.455 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2021-05-10 19:10:15.455 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-10 19:10:15.467 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `userName` : value = ljakel
[DEBUG] 2021-05-10 19:10:15.468 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-10 19:10:15.471 [http-nio-8080-exec-3] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.User#1]
[DEBUG] 2021-05-10 19:10:15.496 [http-nio-8080-exec-3] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.leeannjakel.entity.User.roles#1]
[DEBUG] 2021-05-10 19:10:15.497 [http-nio-8080-exec-3] SQL - select roles0_.user_id as user_id4_3_0_, roles0_.id as id1_3_0_, roles0_.id as id1_3_1_, roles0_.role_name as role_nam2_3_1_, roles0_.user_id as user_id4_3_1_, roles0_.user_name as user_nam3_3_1_ from role roles0_ where roles0_.user_id=?
[DEBUG] 2021-05-10 19:10:15.518 [http-nio-8080-exec-3] ResultSetProcessorImpl - Preparing collection initializer : [com.leeannjakel.entity.User.roles#1]
[DEBUG] 2021-05-10 19:10:15.538 [http-nio-8080-exec-3] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-05-10 19:10:15.557 [http-nio-8080-exec-3] CollectionReferenceInitializerImpl - Found row of collection: [com.leeannjakel.entity.User.roles#1]
[DEBUG] 2021-05-10 19:10:15.580 [http-nio-8080-exec-3] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.Role#7]
[DEBUG] 2021-05-10 19:10:15.585 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `roleName` : value = admin
[DEBUG] 2021-05-10 19:10:15.585 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`roleName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-10 19:10:15.585 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2021-05-10 19:10:15.585 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-10 19:10:15.586 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `userName` : value = ljakel
[DEBUG] 2021-05-10 19:10:15.586 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-10 19:10:15.586 [http-nio-8080-exec-3] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.Role#7]
[DEBUG] 2021-05-10 19:10:15.586 [http-nio-8080-exec-3] CollectionLoadContext - 1 collections were found in result set for role: com.leeannjakel.entity.User.roles
[DEBUG] 2021-05-10 19:10:15.587 [http-nio-8080-exec-3] CollectionLoadContext - Collection fully initialized: [com.leeannjakel.entity.User.roles#1]
[DEBUG] 2021-05-10 19:10:15.587 [http-nio-8080-exec-3] CollectionLoadContext - 1 collections initialized for role: com.leeannjakel.entity.User.roles
[DEBUG] 2021-05-10 19:10:15.588 [http-nio-8080-exec-3] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-05-10 19:10:15.588 [http-nio-8080-exec-3] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2021-05-10 19:10:15.592 [http-nio-8080-exec-3] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-05-10 19:10:19.303 [http-nio-8080-exec-3] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from Author as generatedAlias0
[DEBUG] 2021-05-10 19:10:19.303 [http-nio-8080-exec-3] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from com.leeannjakel.entity.Author as generatedAlias0
[DEBUG] 2021-05-10 19:10:19.306 [http-nio-8080-exec-3] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2021-05-10 19:10:19.307 [http-nio-8080-exec-3] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  \-[IDENT] Node: 'leeannjakel'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'Author'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

[DEBUG] 2021-05-10 19:10:19.308 [http-nio-8080-exec-3] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2021-05-10 19:10:19.309 [http-nio-8080-exec-3] FromElement - FromClause{level=1} : com.leeannjakel.entity.Author (generatedAlias0) -> author0_
[DEBUG] 2021-05-10 19:10:19.312 [http-nio-8080-exec-3] FromReferenceNode - Resolved : generatedAlias0 -> author0_.id
[DEBUG] 2021-05-10 19:10:19.313 [http-nio-8080-exec-3] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2021-05-10 19:10:19.313 [http-nio-8080-exec-3] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} author0_.id ) ( FromClause{level=1} author author0_ ) )
[DEBUG] 2021-05-10 19:10:19.315 [http-nio-8080-exec-3] JoinProcessor - Using FROM fragment [author author0_]
[DEBUG] 2021-05-10 19:10:19.315 [http-nio-8080-exec-3] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2021-05-10 19:10:19.316 [http-nio-8080-exec-3] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (author)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'author0_.id as id1_0_' {alias=generatedAlias0, className=com.leeannjakel.entity.Author, tableAlias=author0_}
    |  \-[SQL_TOKEN] SqlFragment: 'author0_.name as name2_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[author0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'author author0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=author,tableAlias=author0_,origin=null,columns={,className=com.leeannjakel.entity.Author}}

[DEBUG] 2021-05-10 19:10:19.316 [http-nio-8080-exec-3] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2021-05-10 19:10:19.316 [http-nio-8080-exec-3] QueryTranslatorImpl - HQL: select generatedAlias0 from com.leeannjakel.entity.Author as generatedAlias0
[DEBUG] 2021-05-10 19:10:19.316 [http-nio-8080-exec-3] QueryTranslatorImpl - SQL: select author0_.id as id1_0_, author0_.name as name2_0_ from author author0_
[DEBUG] 2021-05-10 19:10:19.316 [http-nio-8080-exec-3] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2021-05-10 19:10:19.316 [http-nio-8080-exec-3] SQL - select author0_.id as id1_0_, author0_.name as name2_0_ from author author0_
[DEBUG] 2021-05-10 19:10:19.438 [http-nio-8080-exec-3] Loader - Result set row: 0
[DEBUG] 2021-05-10 19:10:19.438 [http-nio-8080-exec-3] Loader - Result row: EntityKey[com.leeannjakel.entity.Author#1]
[DEBUG] 2021-05-10 19:10:19.438 [http-nio-8080-exec-3] Loader - Result set row: 1
[DEBUG] 2021-05-10 19:10:19.438 [http-nio-8080-exec-3] Loader - Result row: EntityKey[com.leeannjakel.entity.Author#2]
[DEBUG] 2021-05-10 19:10:19.438 [http-nio-8080-exec-3] Loader - Result set row: 2
[DEBUG] 2021-05-10 19:10:19.438 [http-nio-8080-exec-3] Loader - Result row: EntityKey[com.leeannjakel.entity.Author#3]
[DEBUG] 2021-05-10 19:10:19.439 [http-nio-8080-exec-3] Loader - Result set row: 3
[DEBUG] 2021-05-10 19:10:19.439 [http-nio-8080-exec-3] Loader - Result row: EntityKey[com.leeannjakel.entity.Author#4]
[DEBUG] 2021-05-10 19:10:19.439 [http-nio-8080-exec-3] Loader - Result set row: 4
[DEBUG] 2021-05-10 19:10:19.439 [http-nio-8080-exec-3] Loader - Result row: EntityKey[com.leeannjakel.entity.Author#5]
[DEBUG] 2021-05-10 19:10:19.439 [http-nio-8080-exec-3] Loader - Result set row: 5
[DEBUG] 2021-05-10 19:10:19.439 [http-nio-8080-exec-3] Loader - Result row: EntityKey[com.leeannjakel.entity.Author#14]
[DEBUG] 2021-05-10 19:10:19.439 [http-nio-8080-exec-3] Loader - Result set row: 6
[DEBUG] 2021-05-10 19:10:19.439 [http-nio-8080-exec-3] Loader - Result row: EntityKey[com.leeannjakel.entity.Author#15]
[DEBUG] 2021-05-10 19:10:19.439 [http-nio-8080-exec-3] Loader - Result set row: 7
[DEBUG] 2021-05-10 19:10:19.439 [http-nio-8080-exec-3] Loader - Result row: EntityKey[com.leeannjakel.entity.Author#16]
[DEBUG] 2021-05-10 19:10:19.439 [http-nio-8080-exec-3] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.Author#1]
[DEBUG] 2021-05-10 19:10:19.439 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `books` : value = NOT NULL COLLECTION
[DEBUG] 2021-05-10 19:10:19.439 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`books`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-10 19:10:19.439 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `name` : value = Sarah J. Maas 
[DEBUG] 2021-05-10 19:10:19.439 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-10 19:10:19.439 [http-nio-8080-exec-3] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.Author#1]
[DEBUG] 2021-05-10 19:10:19.440 [http-nio-8080-exec-3] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.Author#2]
[DEBUG] 2021-05-10 19:10:19.440 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `books` : value = NOT NULL COLLECTION
[DEBUG] 2021-05-10 19:10:19.440 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`books`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-10 19:10:19.440 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `name` : value = Cassandra Clare
[DEBUG] 2021-05-10 19:10:19.440 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-10 19:10:19.440 [http-nio-8080-exec-3] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.Author#2]
[DEBUG] 2021-05-10 19:10:19.440 [http-nio-8080-exec-3] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.Author#3]
[DEBUG] 2021-05-10 19:10:19.440 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `books` : value = NOT NULL COLLECTION
[DEBUG] 2021-05-10 19:10:19.440 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`books`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-10 19:10:19.440 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `name` : value = Stephen King
[DEBUG] 2021-05-10 19:10:19.440 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-10 19:10:19.440 [http-nio-8080-exec-3] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.Author#3]
[DEBUG] 2021-05-10 19:10:19.440 [http-nio-8080-exec-3] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.Author#4]
[DEBUG] 2021-05-10 19:10:19.440 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `books` : value = NOT NULL COLLECTION
[DEBUG] 2021-05-10 19:10:19.440 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`books`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-10 19:10:19.440 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `name` : value = Brandon Sanderson
[DEBUG] 2021-05-10 19:10:19.440 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-10 19:10:19.440 [http-nio-8080-exec-3] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.Author#4]
[DEBUG] 2021-05-10 19:10:19.440 [http-nio-8080-exec-3] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.Author#5]
[DEBUG] 2021-05-10 19:10:19.440 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `books` : value = NOT NULL COLLECTION
[DEBUG] 2021-05-10 19:10:19.440 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`books`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-10 19:10:19.440 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `name` : value = Nora Roberts
[DEBUG] 2021-05-10 19:10:19.440 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-10 19:10:19.440 [http-nio-8080-exec-3] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.Author#5]
[DEBUG] 2021-05-10 19:10:19.440 [http-nio-8080-exec-3] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.Author#14]
[DEBUG] 2021-05-10 19:10:19.440 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `books` : value = NOT NULL COLLECTION
[DEBUG] 2021-05-10 19:10:19.440 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`books`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-10 19:10:19.440 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `name` : value = Sarah J. Maas
[DEBUG] 2021-05-10 19:10:19.440 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-10 19:10:19.440 [http-nio-8080-exec-3] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.Author#14]
[DEBUG] 2021-05-10 19:10:19.440 [http-nio-8080-exec-3] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.Author#15]
[DEBUG] 2021-05-10 19:10:19.440 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `books` : value = NOT NULL COLLECTION
[DEBUG] 2021-05-10 19:10:19.440 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`books`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-10 19:10:19.440 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `name` : value = Morgan Deane
[DEBUG] 2021-05-10 19:10:19.440 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-10 19:10:19.441 [http-nio-8080-exec-3] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.Author#15]
[DEBUG] 2021-05-10 19:10:19.441 [http-nio-8080-exec-3] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.Author#16]
[DEBUG] 2021-05-10 19:10:19.441 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `books` : value = NOT NULL COLLECTION
[DEBUG] 2021-05-10 19:10:19.441 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`books`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-10 19:10:19.441 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `name` : value = Leigh Bardugo
[DEBUG] 2021-05-10 19:10:19.441 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-10 19:10:19.441 [http-nio-8080-exec-3] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.Author#16]
[DEBUG] 2021-05-10 19:10:19.441 [http-nio-8080-exec-3] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-05-10 19:10:19.481 [http-nio-8080-exec-3] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2021-05-10 19:10:19.486 [http-nio-8080-exec-3] TransactionImpl - begin
[DEBUG] 2021-05-10 19:10:19.552 [http-nio-8080-exec-3] ActionQueue - Executing identity-insert immediately
[DEBUG] 2021-05-10 19:10:19.631 [http-nio-8080-exec-3] SQL - insert into author (name) values (?)
[DEBUG] 2021-05-10 19:10:19.703 [http-nio-8080-exec-3] IdentifierGeneratorHelper - Natively generated identity: 17
[DEBUG] 2021-05-10 19:10:19.707 [http-nio-8080-exec-3] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-05-10 19:10:19.718 [http-nio-8080-exec-3] TransactionImpl - committing
[DEBUG] 2021-05-10 19:10:19.736 [http-nio-8080-exec-3] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2021-05-10 19:10:19.736 [http-nio-8080-exec-3] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2021-05-10 19:10:19.761 [http-nio-8080-exec-3] Collections - Collection found: [com.leeannjakel.entity.Author.books#17], was: [<unreferenced>] (initialized)
[DEBUG] 2021-05-10 19:10:19.767 [http-nio-8080-exec-3] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
[DEBUG] 2021-05-10 19:10:19.767 [http-nio-8080-exec-3] AbstractFlushingEventListener - Flushed: 1 (re)creations, 0 updates, 0 removals to 1 collections
[DEBUG] 2021-05-10 19:10:19.769 [http-nio-8080-exec-3] EntityPrinter - Listing entities:
[DEBUG] 2021-05-10 19:10:19.769 [http-nio-8080-exec-3] EntityPrinter - com.leeannjakel.entity.Author{books=[], name=Victoria Aveyard, id=17}
[DEBUG] 2021-05-10 19:10:19.788 [http-nio-8080-exec-3] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-05-10 19:10:19.798 [http-nio-8080-exec-3] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-05-10 19:10:19.809 [http-nio-8080-exec-3] SQL - select author0_.id as id1_0_0_, author0_.name as name2_0_0_ from author author0_ where author0_.id=?
[DEBUG] 2021-05-10 19:10:19.833 [http-nio-8080-exec-3] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-05-10 19:10:19.834 [http-nio-8080-exec-3] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-05-10 19:10:19.834 [http-nio-8080-exec-3] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.Author#17]
[DEBUG] 2021-05-10 19:10:19.834 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `books` : value = NOT NULL COLLECTION
[DEBUG] 2021-05-10 19:10:19.834 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`books`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-10 19:10:19.834 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `name` : value = Victoria Aveyard
[DEBUG] 2021-05-10 19:10:19.834 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-10 19:10:19.834 [http-nio-8080-exec-3] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.Author#17]
[DEBUG] 2021-05-10 19:10:19.835 [http-nio-8080-exec-3] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-05-10 19:10:19.835 [http-nio-8080-exec-3] AbstractLoadPlanBasedEntityLoader - Done entity load : com.leeannjakel.entity.Author#17
[DEBUG] 2021-05-10 19:10:19.835 [http-nio-8080-exec-3] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-05-10 19:10:19.839 [http-nio-8080-exec-3] SQL - select genre0_.id as id1_2_0_, genre0_.name as name2_2_0_ from genre genre0_ where genre0_.id=?
[DEBUG] 2021-05-10 19:10:19.869 [http-nio-8080-exec-3] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-05-10 19:10:19.870 [http-nio-8080-exec-3] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-05-10 19:10:19.873 [http-nio-8080-exec-3] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.Genre#1]
[DEBUG] 2021-05-10 19:10:19.873 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `books` : value = NOT NULL COLLECTION
[DEBUG] 2021-05-10 19:10:19.874 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`books`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-10 19:10:19.884 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `name` : value = Young Adult
[DEBUG] 2021-05-10 19:10:19.884 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-10 19:10:19.884 [http-nio-8080-exec-3] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.Genre#1]
[DEBUG] 2021-05-10 19:10:19.884 [http-nio-8080-exec-3] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-05-10 19:10:19.884 [http-nio-8080-exec-3] AbstractLoadPlanBasedEntityLoader - Done entity load : com.leeannjakel.entity.Genre#1
[DEBUG] 2021-05-10 19:10:19.884 [http-nio-8080-exec-3] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-05-10 19:10:19.887 [http-nio-8080-exec-3] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2021-05-10 19:10:19.888 [http-nio-8080-exec-3] TransactionImpl - begin
[DEBUG] 2021-05-10 19:10:19.900 [http-nio-8080-exec-3] ActionQueue - Executing identity-insert immediately
