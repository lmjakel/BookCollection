[DEBUG] 2021-05-11 17:11:40.281 [http-nio-8080-exec-6] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2021-05-11 17:11:40.333 [http-nio-8080-exec-6] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2021-05-11 17:11:40.360 [http-nio-8080-exec-6] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2021-05-11 17:11:41.189 [http-nio-8080-exec-6] Version - HHH000412: Hibernate Core {5.4.4.Final}
[DEBUG] 2021-05-11 17:11:41.213 [http-nio-8080-exec-6] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2021-05-11 17:11:42.400 [http-nio-8080-exec-6] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2021-05-11 17:11:42.414 [http-nio-8080-exec-6] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2021-05-11 17:11:42.529 [http-nio-8080-exec-6] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2021-05-11 17:11:43.824 [http-nio-8080-exec-6] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2021-05-11 17:11:43.980 [http-nio-8080-exec-6] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2021-05-11 17:11:43.990 [http-nio-8080-exec-6] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2021-05-11 17:11:44.432 [http-nio-8080-exec-6] Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] 2021-05-11 17:11:44.743 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@77f0f74e
[DEBUG] 2021-05-11 17:11:44.747 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@77f0f74e
[DEBUG] 2021-05-11 17:11:44.749 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@77f0f74e
[DEBUG] 2021-05-11 17:11:44.754 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@40f9294b
[DEBUG] 2021-05-11 17:11:44.755 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@4129a611
[DEBUG] 2021-05-11 17:11:44.770 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@5610dd57
[DEBUG] 2021-05-11 17:11:44.771 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@7e24292f
[DEBUG] 2021-05-11 17:11:44.772 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@7e24292f
[DEBUG] 2021-05-11 17:11:44.775 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@7e24292f
[DEBUG] 2021-05-11 17:11:44.780 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@381bcb8d
[DEBUG] 2021-05-11 17:11:44.781 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@381bcb8d
[DEBUG] 2021-05-11 17:11:44.781 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@381bcb8d
[DEBUG] 2021-05-11 17:11:44.786 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@18b7cd7e
[DEBUG] 2021-05-11 17:11:44.787 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@18b7cd7e
[DEBUG] 2021-05-11 17:11:44.789 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@18b7cd7e
[DEBUG] 2021-05-11 17:11:44.794 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@bd87d6d
[DEBUG] 2021-05-11 17:11:44.795 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@bd87d6d
[DEBUG] 2021-05-11 17:11:44.795 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@bd87d6d
[DEBUG] 2021-05-11 17:11:44.807 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@70344387
[DEBUG] 2021-05-11 17:11:44.808 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@70344387
[DEBUG] 2021-05-11 17:11:44.808 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@70344387
[DEBUG] 2021-05-11 17:11:44.810 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@c753323
[DEBUG] 2021-05-11 17:11:44.810 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@c753323
[DEBUG] 2021-05-11 17:11:44.810 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@c753323
[DEBUG] 2021-05-11 17:11:44.830 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@641d9800
[DEBUG] 2021-05-11 17:11:44.831 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@641d9800
[DEBUG] 2021-05-11 17:11:44.836 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@641d9800
[DEBUG] 2021-05-11 17:11:44.841 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@73dd0df4
[DEBUG] 2021-05-11 17:11:44.841 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@73dd0df4
[DEBUG] 2021-05-11 17:11:44.843 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@67a201fd
[DEBUG] 2021-05-11 17:11:44.843 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@67a201fd
[DEBUG] 2021-05-11 17:11:44.857 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@bb4c937
[DEBUG] 2021-05-11 17:11:44.857 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@bb4c937
[DEBUG] 2021-05-11 17:11:44.858 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@38b15478
[DEBUG] 2021-05-11 17:11:44.859 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@74b576b
[DEBUG] 2021-05-11 17:11:44.869 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@1cf9526b
[DEBUG] 2021-05-11 17:11:44.869 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@1cf9526b
[DEBUG] 2021-05-11 17:11:44.872 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@285a8276
[DEBUG] 2021-05-11 17:11:44.876 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@285a8276
[DEBUG] 2021-05-11 17:11:44.909 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@3517de18
[DEBUG] 2021-05-11 17:11:44.910 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@3517de18
[DEBUG] 2021-05-11 17:11:44.911 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@10b29bd3
[DEBUG] 2021-05-11 17:11:44.912 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@10b29bd3
[DEBUG] 2021-05-11 17:11:44.933 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@f3f7658
[DEBUG] 2021-05-11 17:11:44.933 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@f3f7658
[DEBUG] 2021-05-11 17:11:44.938 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@97334d2
[DEBUG] 2021-05-11 17:11:44.938 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@97334d2
[DEBUG] 2021-05-11 17:11:44.954 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@33cb4c2d
[DEBUG] 2021-05-11 17:11:44.954 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@33cb4c2d
[DEBUG] 2021-05-11 17:11:44.961 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@48ba7490
[DEBUG] 2021-05-11 17:11:44.961 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@48ba7490
[DEBUG] 2021-05-11 17:11:44.980 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@4a96190f
[DEBUG] 2021-05-11 17:11:44.981 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@4a96190f
[DEBUG] 2021-05-11 17:11:44.983 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@2e95a405
[DEBUG] 2021-05-11 17:11:44.984 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@2e95a405
[DEBUG] 2021-05-11 17:11:45.002 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@40206b21
[DEBUG] 2021-05-11 17:11:45.004 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@40206b21
[DEBUG] 2021-05-11 17:11:45.005 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@7cf62ddb
[DEBUG] 2021-05-11 17:11:45.006 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@7cf62ddb
[DEBUG] 2021-05-11 17:11:45.006 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@7cf62ddb
[DEBUG] 2021-05-11 17:11:45.023 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@6ec9b689
[DEBUG] 2021-05-11 17:11:45.030 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@4040bab1
[DEBUG] 2021-05-11 17:11:45.031 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@4040bab1
[DEBUG] 2021-05-11 17:11:45.031 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@4040bab1
[DEBUG] 2021-05-11 17:11:45.037 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7b472712
[DEBUG] 2021-05-11 17:11:45.039 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@46780203
[DEBUG] 2021-05-11 17:11:45.039 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@46780203
[DEBUG] 2021-05-11 17:11:45.051 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@7e60233c
[DEBUG] 2021-05-11 17:11:45.054 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@7e60233c
[DEBUG] 2021-05-11 17:11:45.065 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@19d80c33
[DEBUG] 2021-05-11 17:11:45.065 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@19d80c33
[DEBUG] 2021-05-11 17:11:45.066 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@468ebfe8
[DEBUG] 2021-05-11 17:11:45.066 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@468ebfe8
[DEBUG] 2021-05-11 17:11:45.068 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@4fcf82a8
[DEBUG] 2021-05-11 17:11:45.068 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@4fcf82a8
[DEBUG] 2021-05-11 17:11:45.073 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@7cd32130
[DEBUG] 2021-05-11 17:11:45.078 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@169128b4
[DEBUG] 2021-05-11 17:11:45.078 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@169128b4
[DEBUG] 2021-05-11 17:11:45.078 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@169128b4
[DEBUG] 2021-05-11 17:11:45.079 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@76bd3fbb
[DEBUG] 2021-05-11 17:11:45.080 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@76bd3fbb
[DEBUG] 2021-05-11 17:11:45.080 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@76bd3fbb
[DEBUG] 2021-05-11 17:11:45.092 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@6125bff4
[DEBUG] 2021-05-11 17:11:45.094 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@71254874
[DEBUG] 2021-05-11 17:11:45.108 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@1b7f2536
[DEBUG] 2021-05-11 17:11:45.110 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@1b7f2536
[DEBUG] 2021-05-11 17:11:45.110 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@1b7f2536
[DEBUG] 2021-05-11 17:11:45.121 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1f9e5d37
[DEBUG] 2021-05-11 17:11:45.121 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1f9e5d37
[DEBUG] 2021-05-11 17:11:45.122 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1f9e5d37
[DEBUG] 2021-05-11 17:11:45.122 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@4933add0
[DEBUG] 2021-05-11 17:11:45.123 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@380d48c7
[DEBUG] 2021-05-11 17:11:45.127 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@3c300d34
[DEBUG] 2021-05-11 17:11:45.129 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@3c300d34
[DEBUG] 2021-05-11 17:11:45.130 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@75ec3e39
[DEBUG] 2021-05-11 17:11:45.141 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@5443e79a
[DEBUG] 2021-05-11 17:11:45.141 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@5443e79a
[DEBUG] 2021-05-11 17:11:45.152 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@708a3bb5
[DEBUG] 2021-05-11 17:11:45.152 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@708a3bb5
[DEBUG] 2021-05-11 17:11:45.153 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4daa143
[DEBUG] 2021-05-11 17:11:45.153 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@158831ba
[DEBUG] 2021-05-11 17:11:45.160 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@6a6180b1
[DEBUG] 2021-05-11 17:11:45.188 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@7b3c2218
[DEBUG] 2021-05-11 17:11:45.188 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7b3c2218
[DEBUG] 2021-05-11 17:11:45.190 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@4d47b1ba
[DEBUG] 2021-05-11 17:11:45.190 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@536e1cb7
[DEBUG] 2021-05-11 17:11:45.192 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@1aa5f6b4
[DEBUG] 2021-05-11 17:11:45.193 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@46a53c4b
[DEBUG] 2021-05-11 17:11:45.193 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@361f9f44
[DEBUG] 2021-05-11 17:11:45.195 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@1537b694
[DEBUG] 2021-05-11 17:11:45.195 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@2092e2d0
[DEBUG] 2021-05-11 17:11:45.206 [http-nio-8080-exec-6] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4fbac5ed
[DEBUG] 2021-05-11 17:11:45.412 [http-nio-8080-exec-6] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2021-05-11 17:11:45.414 [http-nio-8080-exec-6] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2021-05-11 17:11:45.420 [http-nio-8080-exec-6] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2021-05-11 17:11:45.420 [http-nio-8080-exec-6] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2021-05-11 17:11:45.432 [http-nio-8080-exec-6] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2021-05-11 17:11:45.442 [http-nio-8080-exec-6] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2021-05-11 17:11:45.443 [http-nio-8080-exec-6] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2021-05-11 17:11:45.470 [http-nio-8080-exec-6] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2021-05-11 17:11:45.472 [http-nio-8080-exec-6] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2021-05-11 17:11:45.477 [http-nio-8080-exec-6] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2021-05-11 17:11:45.481 [http-nio-8080-exec-6] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2021-05-11 17:11:45.482 [http-nio-8080-exec-6] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2021-05-11 17:11:45.482 [http-nio-8080-exec-6] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2021-05-11 17:11:45.483 [http-nio-8080-exec-6] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2021-05-11 17:11:45.529 [http-nio-8080-exec-6] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/BookCollection
[INFO ] 2021-05-11 17:11:45.530 [http-nio-8080-exec-6] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2021-05-11 17:11:45.538 [http-nio-8080-exec-6] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2021-05-11 17:11:46.823 [http-nio-8080-exec-6] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2021-05-11 17:11:48.507 [http-nio-8080-exec-6] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.22
      major : 8
      minor : 0
[DEBUG] 2021-05-11 17:11:48.527 [http-nio-8080-exec-6] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.22 (Revision: d64b664fa93e81296a377de031b8123a67e6def2)
      major : 8
      minor : 0
[DEBUG] 2021-05-11 17:11:48.528 [http-nio-8080-exec-6] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2021-05-11 17:11:48.815 [http-nio-8080-exec-6] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[DEBUG] 2021-05-11 17:11:48.929 [http-nio-8080-exec-6] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2021-05-11 17:11:49.093 [http-nio-8080-exec-6] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2021-05-11 17:11:49.335 [http-nio-8080-exec-6] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2021-05-11 17:11:49.352 [http-nio-8080-exec-6] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@460e5b6c] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@7c0cc04b]
[DEBUG] 2021-05-11 17:11:49.589 [http-nio-8080-exec-6] AnnotationMetadataSourceProcessorImpl - Encountered a non-categorized annotated class [com.leeannjakel.entity.AuthorResponse]; ignoring
[DEBUG] 2021-05-11 17:11:49.590 [http-nio-8080-exec-6] AnnotationMetadataSourceProcessorImpl - Encountered a non-categorized annotated class [com.leeannjakel.entity.WorksAuthorsItem]; ignoring
[DEBUG] 2021-05-11 17:11:49.592 [http-nio-8080-exec-6] AnnotationMetadataSourceProcessorImpl - Encountered a non-categorized annotated class [com.leeannjakel.entity.Classifications]; ignoring
[DEBUG] 2021-05-11 17:11:49.593 [http-nio-8080-exec-6] AnnotationMetadataSourceProcessorImpl - Encountered a non-categorized annotated class [com.leeannjakel.entity.Created]; ignoring
[DEBUG] 2021-05-11 17:11:49.602 [http-nio-8080-exec-6] AnnotationMetadataSourceProcessorImpl - Encountered a non-categorized annotated class [com.leeannjakel.entity.Identifiers]; ignoring
[DEBUG] 2021-05-11 17:11:49.608 [http-nio-8080-exec-6] AnnotationMetadataSourceProcessorImpl - Encountered a non-categorized annotated class [com.leeannjakel.entity.Info]; ignoring
[DEBUG] 2021-05-11 17:11:49.610 [http-nio-8080-exec-6] AnnotationMetadataSourceProcessorImpl - Encountered a non-categorized annotated class [com.leeannjakel.entity.LanguagesItem]; ignoring
[DEBUG] 2021-05-11 17:11:49.611 [http-nio-8080-exec-6] AnnotationMetadataSourceProcessorImpl - Encountered a non-categorized annotated class [com.leeannjakel.entity.LastModified]; ignoring
[DEBUG] 2021-05-11 17:11:49.613 [http-nio-8080-exec-6] AnnotationMetadataSourceProcessorImpl - Encountered a non-categorized annotated class [com.leeannjakel.entity.Type]; ignoring
[DEBUG] 2021-05-11 17:11:49.615 [http-nio-8080-exec-6] AnnotationMetadataSourceProcessorImpl - Encountered a non-categorized annotated class [com.leeannjakel.entity.WorksItem]; ignoring
[DEBUG] 2021-05-11 17:11:49.692 [http-nio-8080-exec-6] AnnotationBinder - Binding entity from annotated class: com.leeannjakel.entity.Author
[DEBUG] 2021-05-11 17:11:49.895 [http-nio-8080-exec-6] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2021-05-11 17:11:49.940 [http-nio-8080-exec-6] EntityBinder - Import with entity name Author
[DEBUG] 2021-05-11 17:11:49.962 [http-nio-8080-exec-6] EntityBinder - Bind entity com.leeannjakel.entity.Author on table author
[DEBUG] 2021-05-11 17:11:50.172 [http-nio-8080-exec-6] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(author), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-11 17:11:50.191 [http-nio-8080-exec-6] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2021-05-11 17:11:50.201 [http-nio-8080-exec-6] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.leeannjakel.entity.Author:id]
[DEBUG] 2021-05-11 17:11:50.211 [http-nio-8080-exec-6] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2021-05-11 17:11:50.227 [http-nio-8080-exec-6] PropertyBinder - Building property id
[DEBUG] 2021-05-11 17:11:50.242 [http-nio-8080-exec-6] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2021-05-11 17:11:50.248 [http-nio-8080-exec-6] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='author'}
[DEBUG] 2021-05-11 17:11:50.249 [http-nio-8080-exec-6] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(author), mappingColumn=books, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-11 17:11:50.254 [http-nio-8080-exec-6] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(author), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-11 17:11:50.293 [http-nio-8080-exec-6] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(author), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-11 17:11:50.294 [http-nio-8080-exec-6] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(author), mappingColumn=books_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-11 17:11:50.296 [http-nio-8080-exec-6] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='books_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2021-05-11 17:11:50.300 [http-nio-8080-exec-6] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='author'}
[DEBUG] 2021-05-11 17:11:50.300 [http-nio-8080-exec-6] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='author'}
[DEBUG] 2021-05-11 17:11:50.301 [http-nio-8080-exec-6] CollectionBinder - Collection role: com.leeannjakel.entity.Author.books
[DEBUG] 2021-05-11 17:11:50.305 [http-nio-8080-exec-6] PropertyBinder - Building property books
[DEBUG] 2021-05-11 17:11:50.306 [http-nio-8080-exec-6] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(author), mappingColumn=name, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-11 17:11:50.307 [http-nio-8080-exec-6] PropertyBinder - MetadataSourceProcessor property name with lazy=false
[DEBUG] 2021-05-11 17:11:50.309 [http-nio-8080-exec-6] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.leeannjakel.entity.Author:name]
[DEBUG] 2021-05-11 17:11:50.311 [http-nio-8080-exec-6] SimpleValueBinder - building SimpleValue for name
[DEBUG] 2021-05-11 17:11:50.311 [http-nio-8080-exec-6] PropertyBinder - Building property name
[DEBUG] 2021-05-11 17:11:50.313 [http-nio-8080-exec-6] AnnotationBinder - Binding entity from annotated class: com.leeannjakel.entity.Book
[DEBUG] 2021-05-11 17:11:50.314 [http-nio-8080-exec-6] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2021-05-11 17:11:50.314 [http-nio-8080-exec-6] EntityBinder - Import with entity name Book
[DEBUG] 2021-05-11 17:11:50.314 [http-nio-8080-exec-6] EntityBinder - Bind entity com.leeannjakel.entity.Book on table book
[DEBUG] 2021-05-11 17:11:50.336 [http-nio-8080-exec-6] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-11 17:11:50.336 [http-nio-8080-exec-6] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2021-05-11 17:11:50.336 [http-nio-8080-exec-6] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.leeannjakel.entity.Book:id]
[DEBUG] 2021-05-11 17:11:50.336 [http-nio-8080-exec-6] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2021-05-11 17:11:50.336 [http-nio-8080-exec-6] PropertyBinder - Building property id
[DEBUG] 2021-05-11 17:11:50.343 [http-nio-8080-exec-6] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2021-05-11 17:11:50.343 [http-nio-8080-exec-6] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='author_id', referencedColumn='', mappedBy=''}
[DEBUG] 2021-05-11 17:11:50.344 [http-nio-8080-exec-6] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=author, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-11 17:11:50.355 [http-nio-8080-exec-6] PropertyBinder - Building property author
[DEBUG] 2021-05-11 17:11:50.356 [http-nio-8080-exec-6] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='genre_id', referencedColumn='', mappedBy=''}
[DEBUG] 2021-05-11 17:11:50.356 [http-nio-8080-exec-6] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=genre, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-11 17:11:50.358 [http-nio-8080-exec-6] PropertyBinder - Building property genre
[DEBUG] 2021-05-11 17:11:50.358 [http-nio-8080-exec-6] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=isbn, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-11 17:11:50.358 [http-nio-8080-exec-6] PropertyBinder - MetadataSourceProcessor property isbn with lazy=false
[DEBUG] 2021-05-11 17:11:50.358 [http-nio-8080-exec-6] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.leeannjakel.entity.Book:isbn]
[DEBUG] 2021-05-11 17:11:50.358 [http-nio-8080-exec-6] SimpleValueBinder - building SimpleValue for isbn
[DEBUG] 2021-05-11 17:11:50.358 [http-nio-8080-exec-6] PropertyBinder - Building property isbn
[DEBUG] 2021-05-11 17:11:50.359 [http-nio-8080-exec-6] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=notes, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-11 17:11:50.359 [http-nio-8080-exec-6] PropertyBinder - MetadataSourceProcessor property notes with lazy=false
[DEBUG] 2021-05-11 17:11:50.359 [http-nio-8080-exec-6] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.leeannjakel.entity.Book:notes]
[DEBUG] 2021-05-11 17:11:50.359 [http-nio-8080-exec-6] SimpleValueBinder - building SimpleValue for notes
[DEBUG] 2021-05-11 17:11:50.359 [http-nio-8080-exec-6] PropertyBinder - Building property notes
[DEBUG] 2021-05-11 17:11:50.359 [http-nio-8080-exec-6] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=title, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-11 17:11:50.362 [http-nio-8080-exec-6] PropertyBinder - MetadataSourceProcessor property title with lazy=false
[DEBUG] 2021-05-11 17:11:50.364 [http-nio-8080-exec-6] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.leeannjakel.entity.Book:title]
[DEBUG] 2021-05-11 17:11:50.365 [http-nio-8080-exec-6] SimpleValueBinder - building SimpleValue for title
[DEBUG] 2021-05-11 17:11:50.365 [http-nio-8080-exec-6] PropertyBinder - Building property title
[DEBUG] 2021-05-11 17:11:50.366 [http-nio-8080-exec-6] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
[DEBUG] 2021-05-11 17:11:50.374 [http-nio-8080-exec-6] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-11 17:11:50.374 [http-nio-8080-exec-6] PropertyBinder - Building property user
[DEBUG] 2021-05-11 17:11:50.375 [http-nio-8080-exec-6] AnnotationBinder - Binding entity from annotated class: com.leeannjakel.entity.Genre
[DEBUG] 2021-05-11 17:11:50.375 [http-nio-8080-exec-6] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2021-05-11 17:11:50.375 [http-nio-8080-exec-6] EntityBinder - Import with entity name Genre
[DEBUG] 2021-05-11 17:11:50.375 [http-nio-8080-exec-6] EntityBinder - Bind entity com.leeannjakel.entity.Genre on table genre
[DEBUG] 2021-05-11 17:11:50.378 [http-nio-8080-exec-6] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(genre), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-11 17:11:50.380 [http-nio-8080-exec-6] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2021-05-11 17:11:50.381 [http-nio-8080-exec-6] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.leeannjakel.entity.Genre:id]
[DEBUG] 2021-05-11 17:11:50.381 [http-nio-8080-exec-6] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2021-05-11 17:11:50.381 [http-nio-8080-exec-6] PropertyBinder - Building property id
[DEBUG] 2021-05-11 17:11:50.381 [http-nio-8080-exec-6] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2021-05-11 17:11:50.382 [http-nio-8080-exec-6] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='genre'}
[DEBUG] 2021-05-11 17:11:50.383 [http-nio-8080-exec-6] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(genre), mappingColumn=books, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-11 17:11:50.384 [http-nio-8080-exec-6] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(genre), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-11 17:11:50.384 [http-nio-8080-exec-6] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(genre), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-11 17:11:50.385 [http-nio-8080-exec-6] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(genre), mappingColumn=books_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-11 17:11:50.385 [http-nio-8080-exec-6] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='books_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2021-05-11 17:11:50.385 [http-nio-8080-exec-6] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='genre'}
[DEBUG] 2021-05-11 17:11:50.385 [http-nio-8080-exec-6] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='genre'}
[DEBUG] 2021-05-11 17:11:50.385 [http-nio-8080-exec-6] CollectionBinder - Collection role: com.leeannjakel.entity.Genre.books
[DEBUG] 2021-05-11 17:11:50.385 [http-nio-8080-exec-6] PropertyBinder - Building property books
[DEBUG] 2021-05-11 17:11:50.386 [http-nio-8080-exec-6] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(genre), mappingColumn=name, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-11 17:11:50.386 [http-nio-8080-exec-6] PropertyBinder - MetadataSourceProcessor property name with lazy=false
[DEBUG] 2021-05-11 17:11:50.386 [http-nio-8080-exec-6] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.leeannjakel.entity.Genre:name]
[DEBUG] 2021-05-11 17:11:50.386 [http-nio-8080-exec-6] SimpleValueBinder - building SimpleValue for name
[DEBUG] 2021-05-11 17:11:50.386 [http-nio-8080-exec-6] PropertyBinder - Building property name
[DEBUG] 2021-05-11 17:11:50.386 [http-nio-8080-exec-6] AnnotationBinder - Binding entity from annotated class: com.leeannjakel.entity.Role
[DEBUG] 2021-05-11 17:11:50.386 [http-nio-8080-exec-6] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2021-05-11 17:11:50.386 [http-nio-8080-exec-6] EntityBinder - Import with entity name Role
[DEBUG] 2021-05-11 17:11:50.386 [http-nio-8080-exec-6] EntityBinder - Bind entity com.leeannjakel.entity.Role on table role
[DEBUG] 2021-05-11 17:11:50.389 [http-nio-8080-exec-6] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-11 17:11:50.390 [http-nio-8080-exec-6] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2021-05-11 17:11:50.390 [http-nio-8080-exec-6] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.leeannjakel.entity.Role:id]
[DEBUG] 2021-05-11 17:11:50.390 [http-nio-8080-exec-6] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2021-05-11 17:11:50.391 [http-nio-8080-exec-6] PropertyBinder - Building property id
[DEBUG] 2021-05-11 17:11:50.393 [http-nio-8080-exec-6] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2021-05-11 17:11:50.395 [http-nio-8080-exec-6] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=role_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-11 17:11:50.397 [http-nio-8080-exec-6] PropertyBinder - MetadataSourceProcessor property roleName with lazy=false
[DEBUG] 2021-05-11 17:11:50.398 [http-nio-8080-exec-6] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.leeannjakel.entity.Role:roleName]
[DEBUG] 2021-05-11 17:11:50.398 [http-nio-8080-exec-6] SimpleValueBinder - building SimpleValue for roleName
[DEBUG] 2021-05-11 17:11:50.398 [http-nio-8080-exec-6] PropertyBinder - Building property roleName
[DEBUG] 2021-05-11 17:11:50.403 [http-nio-8080-exec-6] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
[DEBUG] 2021-05-11 17:11:50.403 [http-nio-8080-exec-6] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-11 17:11:50.403 [http-nio-8080-exec-6] PropertyBinder - Building property user
[DEBUG] 2021-05-11 17:11:50.404 [http-nio-8080-exec-6] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=user_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-11 17:11:50.404 [http-nio-8080-exec-6] PropertyBinder - MetadataSourceProcessor property userName with lazy=false
[DEBUG] 2021-05-11 17:11:50.404 [http-nio-8080-exec-6] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.leeannjakel.entity.Role:userName]
[DEBUG] 2021-05-11 17:11:50.404 [http-nio-8080-exec-6] SimpleValueBinder - building SimpleValue for userName
[DEBUG] 2021-05-11 17:11:50.404 [http-nio-8080-exec-6] PropertyBinder - Building property userName
[DEBUG] 2021-05-11 17:11:50.404 [http-nio-8080-exec-6] AnnotationBinder - Binding entity from annotated class: com.leeannjakel.entity.User
[DEBUG] 2021-05-11 17:11:50.404 [http-nio-8080-exec-6] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2021-05-11 17:11:50.404 [http-nio-8080-exec-6] EntityBinder - Import with entity name User
[DEBUG] 2021-05-11 17:11:50.404 [http-nio-8080-exec-6] EntityBinder - Bind entity com.leeannjakel.entity.User on table user
[DEBUG] 2021-05-11 17:11:50.406 [http-nio-8080-exec-6] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-11 17:11:50.406 [http-nio-8080-exec-6] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2021-05-11 17:11:50.406 [http-nio-8080-exec-6] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.leeannjakel.entity.User:id]
[DEBUG] 2021-05-11 17:11:50.406 [http-nio-8080-exec-6] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2021-05-11 17:11:50.406 [http-nio-8080-exec-6] PropertyBinder - Building property id
[DEBUG] 2021-05-11 17:11:50.418 [http-nio-8080-exec-6] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2021-05-11 17:11:50.419 [http-nio-8080-exec-6] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2021-05-11 17:11:50.421 [http-nio-8080-exec-6] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=books, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-11 17:11:50.422 [http-nio-8080-exec-6] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-11 17:11:50.422 [http-nio-8080-exec-6] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-11 17:11:50.424 [http-nio-8080-exec-6] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=books_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-11 17:11:50.424 [http-nio-8080-exec-6] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='books_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2021-05-11 17:11:50.425 [http-nio-8080-exec-6] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2021-05-11 17:11:50.425 [http-nio-8080-exec-6] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2021-05-11 17:11:50.425 [http-nio-8080-exec-6] CollectionBinder - Collection role: com.leeannjakel.entity.User.books
[DEBUG] 2021-05-11 17:11:50.425 [http-nio-8080-exec-6] PropertyBinder - Building property books
[DEBUG] 2021-05-11 17:11:50.426 [http-nio-8080-exec-6] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=email, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-11 17:11:50.426 [http-nio-8080-exec-6] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[DEBUG] 2021-05-11 17:11:50.426 [http-nio-8080-exec-6] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.leeannjakel.entity.User:email]
[DEBUG] 2021-05-11 17:11:50.429 [http-nio-8080-exec-6] SimpleValueBinder - building SimpleValue for email
[DEBUG] 2021-05-11 17:11:50.429 [http-nio-8080-exec-6] PropertyBinder - Building property email
[DEBUG] 2021-05-11 17:11:50.429 [http-nio-8080-exec-6] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-11 17:11:50.439 [http-nio-8080-exec-6] PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
[DEBUG] 2021-05-11 17:11:50.441 [http-nio-8080-exec-6] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.leeannjakel.entity.User:firstName]
[DEBUG] 2021-05-11 17:11:50.442 [http-nio-8080-exec-6] SimpleValueBinder - building SimpleValue for firstName
[DEBUG] 2021-05-11 17:11:50.442 [http-nio-8080-exec-6] PropertyBinder - Building property firstName
[DEBUG] 2021-05-11 17:11:50.443 [http-nio-8080-exec-6] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-11 17:11:50.444 [http-nio-8080-exec-6] PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
[DEBUG] 2021-05-11 17:11:50.444 [http-nio-8080-exec-6] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.leeannjakel.entity.User:lastName]
[DEBUG] 2021-05-11 17:11:50.444 [http-nio-8080-exec-6] SimpleValueBinder - building SimpleValue for lastName
[DEBUG] 2021-05-11 17:11:50.444 [http-nio-8080-exec-6] PropertyBinder - Building property lastName
[DEBUG] 2021-05-11 17:11:50.444 [http-nio-8080-exec-6] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=password, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-11 17:11:50.444 [http-nio-8080-exec-6] PropertyBinder - MetadataSourceProcessor property password with lazy=false
[DEBUG] 2021-05-11 17:11:50.444 [http-nio-8080-exec-6] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.leeannjakel.entity.User:password]
[DEBUG] 2021-05-11 17:11:50.444 [http-nio-8080-exec-6] SimpleValueBinder - building SimpleValue for password
[DEBUG] 2021-05-11 17:11:50.444 [http-nio-8080-exec-6] PropertyBinder - Building property password
[DEBUG] 2021-05-11 17:11:50.448 [http-nio-8080-exec-6] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2021-05-11 17:11:50.449 [http-nio-8080-exec-6] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=roles, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-11 17:11:50.449 [http-nio-8080-exec-6] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-11 17:11:50.450 [http-nio-8080-exec-6] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-11 17:11:50.450 [http-nio-8080-exec-6] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=roles_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-11 17:11:50.450 [http-nio-8080-exec-6] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='roles_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2021-05-11 17:11:50.450 [http-nio-8080-exec-6] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2021-05-11 17:11:50.450 [http-nio-8080-exec-6] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2021-05-11 17:11:50.450 [http-nio-8080-exec-6] CollectionBinder - Collection role: com.leeannjakel.entity.User.roles
[DEBUG] 2021-05-11 17:11:50.450 [http-nio-8080-exec-6] PropertyBinder - Building property roles
[DEBUG] 2021-05-11 17:11:50.450 [http-nio-8080-exec-6] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=user_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-11 17:11:50.451 [http-nio-8080-exec-6] PropertyBinder - MetadataSourceProcessor property userName with lazy=false
[DEBUG] 2021-05-11 17:11:50.451 [http-nio-8080-exec-6] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.leeannjakel.entity.User:userName]
[DEBUG] 2021-05-11 17:11:50.451 [http-nio-8080-exec-6] SimpleValueBinder - building SimpleValue for userName
[DEBUG] 2021-05-11 17:11:50.451 [http-nio-8080-exec-6] PropertyBinder - Building property userName
[DEBUG] 2021-05-11 17:11:50.452 [http-nio-8080-exec-6] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2021-05-11 17:11:50.453 [http-nio-8080-exec-6] SimpleValueBinder - Starting fillSimpleValue for name
[DEBUG] 2021-05-11 17:11:50.453 [http-nio-8080-exec-6] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2021-05-11 17:11:50.453 [http-nio-8080-exec-6] SimpleValueBinder - Starting fillSimpleValue for isbn
[DEBUG] 2021-05-11 17:11:50.453 [http-nio-8080-exec-6] SimpleValueBinder - Starting fillSimpleValue for notes
[DEBUG] 2021-05-11 17:11:50.453 [http-nio-8080-exec-6] SimpleValueBinder - Starting fillSimpleValue for title
[DEBUG] 2021-05-11 17:11:50.453 [http-nio-8080-exec-6] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2021-05-11 17:11:50.453 [http-nio-8080-exec-6] SimpleValueBinder - Starting fillSimpleValue for name
[DEBUG] 2021-05-11 17:11:50.453 [http-nio-8080-exec-6] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2021-05-11 17:11:50.453 [http-nio-8080-exec-6] SimpleValueBinder - Starting fillSimpleValue for roleName
[DEBUG] 2021-05-11 17:11:50.453 [http-nio-8080-exec-6] SimpleValueBinder - Starting fillSimpleValue for userName
[DEBUG] 2021-05-11 17:11:50.453 [http-nio-8080-exec-6] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2021-05-11 17:11:50.453 [http-nio-8080-exec-6] SimpleValueBinder - Starting fillSimpleValue for email
[DEBUG] 2021-05-11 17:11:50.453 [http-nio-8080-exec-6] SimpleValueBinder - Starting fillSimpleValue for firstName
[DEBUG] 2021-05-11 17:11:50.453 [http-nio-8080-exec-6] SimpleValueBinder - Starting fillSimpleValue for lastName
[DEBUG] 2021-05-11 17:11:50.453 [http-nio-8080-exec-6] SimpleValueBinder - Starting fillSimpleValue for password
[DEBUG] 2021-05-11 17:11:50.453 [http-nio-8080-exec-6] SimpleValueBinder - Starting fillSimpleValue for userName
[DEBUG] 2021-05-11 17:11:50.460 [http-nio-8080-exec-6] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [author]
[DEBUG] 2021-05-11 17:11:50.460 [http-nio-8080-exec-6] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [book]
[DEBUG] 2021-05-11 17:11:50.469 [http-nio-8080-exec-6] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [genre]
[DEBUG] 2021-05-11 17:11:50.469 [http-nio-8080-exec-6] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [role]
[DEBUG] 2021-05-11 17:11:50.469 [http-nio-8080-exec-6] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [user]
[DEBUG] 2021-05-11 17:11:50.470 [http-nio-8080-exec-6] CollectionSecondPass - Second pass for collection: com.leeannjakel.entity.Author.books
[DEBUG] 2021-05-11 17:11:50.475 [http-nio-8080-exec-6] CollectionBinder - Binding a OneToMany: com.leeannjakel.entity.Author.books through a foreign key
[DEBUG] 2021-05-11 17:11:50.476 [http-nio-8080-exec-6] CollectionBinder - Mapping collection: com.leeannjakel.entity.Author.books -> book
[DEBUG] 2021-05-11 17:11:50.478 [http-nio-8080-exec-6] TableBinder - Retrieving property com.leeannjakel.entity.Book.author
[DEBUG] 2021-05-11 17:11:50.479 [http-nio-8080-exec-6] CollectionSecondPass - Mapped collection key: author_id, one-to-many: com.leeannjakel.entity.Book
[DEBUG] 2021-05-11 17:11:50.479 [http-nio-8080-exec-6] CollectionSecondPass - Second pass for collection: com.leeannjakel.entity.Genre.books
[DEBUG] 2021-05-11 17:11:50.479 [http-nio-8080-exec-6] CollectionBinder - Binding a OneToMany: com.leeannjakel.entity.Genre.books through a foreign key
[DEBUG] 2021-05-11 17:11:50.479 [http-nio-8080-exec-6] CollectionBinder - Mapping collection: com.leeannjakel.entity.Genre.books -> book
[DEBUG] 2021-05-11 17:11:50.479 [http-nio-8080-exec-6] TableBinder - Retrieving property com.leeannjakel.entity.Book.genre
[DEBUG] 2021-05-11 17:11:50.480 [http-nio-8080-exec-6] CollectionSecondPass - Mapped collection key: genre_id, one-to-many: com.leeannjakel.entity.Book
[DEBUG] 2021-05-11 17:11:50.480 [http-nio-8080-exec-6] CollectionSecondPass - Second pass for collection: com.leeannjakel.entity.User.books
[DEBUG] 2021-05-11 17:11:50.480 [http-nio-8080-exec-6] CollectionBinder - Binding a OneToMany: com.leeannjakel.entity.User.books through a foreign key
[DEBUG] 2021-05-11 17:11:50.480 [http-nio-8080-exec-6] CollectionBinder - Mapping collection: com.leeannjakel.entity.User.books -> book
[DEBUG] 2021-05-11 17:11:50.484 [http-nio-8080-exec-6] TableBinder - Retrieving property com.leeannjakel.entity.Book.user
[DEBUG] 2021-05-11 17:11:50.484 [http-nio-8080-exec-6] CollectionSecondPass - Mapped collection key: user_id, one-to-many: com.leeannjakel.entity.Book
[DEBUG] 2021-05-11 17:11:50.485 [http-nio-8080-exec-6] CollectionSecondPass - Second pass for collection: com.leeannjakel.entity.User.roles
[DEBUG] 2021-05-11 17:11:50.485 [http-nio-8080-exec-6] CollectionBinder - Binding a OneToMany: com.leeannjakel.entity.User.roles through a foreign key
[DEBUG] 2021-05-11 17:11:50.485 [http-nio-8080-exec-6] CollectionBinder - Mapping collection: com.leeannjakel.entity.User.roles -> role
[DEBUG] 2021-05-11 17:11:50.485 [http-nio-8080-exec-6] TableBinder - Retrieving property com.leeannjakel.entity.Role.user
[DEBUG] 2021-05-11 17:11:50.485 [http-nio-8080-exec-6] CollectionSecondPass - Mapped collection key: user_id, one-to-many: com.leeannjakel.entity.Role
[DEBUG] 2021-05-11 17:11:50.485 [http-nio-8080-exec-6] InFlightMetadataCollectorImpl - Resolving reference to class: com.leeannjakel.entity.Author
[DEBUG] 2021-05-11 17:11:50.494 [http-nio-8080-exec-6] InFlightMetadataCollectorImpl - Resolving reference to class: com.leeannjakel.entity.Genre
[DEBUG] 2021-05-11 17:11:50.495 [http-nio-8080-exec-6] InFlightMetadataCollectorImpl - Resolving reference to class: com.leeannjakel.entity.User
[DEBUG] 2021-05-11 17:11:50.495 [http-nio-8080-exec-6] InFlightMetadataCollectorImpl - Resolving reference to class: com.leeannjakel.entity.User
[DEBUG] 2021-05-11 17:11:50.502 [http-nio-8080-exec-6] InFlightMetadataCollectorImpl - Resolving reference to class: com.leeannjakel.entity.Author
[DEBUG] 2021-05-11 17:11:50.508 [http-nio-8080-exec-6] InFlightMetadataCollectorImpl - Resolving reference to class: com.leeannjakel.entity.Genre
[DEBUG] 2021-05-11 17:11:50.508 [http-nio-8080-exec-6] InFlightMetadataCollectorImpl - Resolving reference to class: com.leeannjakel.entity.User
[DEBUG] 2021-05-11 17:11:50.508 [http-nio-8080-exec-6] InFlightMetadataCollectorImpl - Resolving reference to class: com.leeannjakel.entity.User
[DEBUG] 2021-05-11 17:11:50.676 [http-nio-8080-exec-6] SessionFactoryImpl - Building session factory
[DEBUG] 2021-05-11 17:11:50.678 [http-nio-8080-exec-6] Settings - SessionFactory name : null
[DEBUG] 2021-05-11 17:11:50.678 [http-nio-8080-exec-6] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2021-05-11 17:11:50.678 [http-nio-8080-exec-6] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2021-05-11 17:11:50.678 [http-nio-8080-exec-6] Settings - Statistics: disabled
[DEBUG] 2021-05-11 17:11:50.678 [http-nio-8080-exec-6] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2021-05-11 17:11:50.678 [http-nio-8080-exec-6] Settings - Default entity-mode: pojo
[DEBUG] 2021-05-11 17:11:50.678 [http-nio-8080-exec-6] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2021-05-11 17:11:50.681 [http-nio-8080-exec-6] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2021-05-11 17:11:50.690 [http-nio-8080-exec-6] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2021-05-11 17:11:50.690 [http-nio-8080-exec-6] Settings - Default batch fetch size: -1
[DEBUG] 2021-05-11 17:11:50.690 [http-nio-8080-exec-6] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2021-05-11 17:11:50.690 [http-nio-8080-exec-6] Settings - Default null ordering: NONE
[DEBUG] 2021-05-11 17:11:50.692 [http-nio-8080-exec-6] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2021-05-11 17:11:50.693 [http-nio-8080-exec-6] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2021-05-11 17:11:50.693 [http-nio-8080-exec-6] Settings - multi-tenancy strategy : NONE
[DEBUG] 2021-05-11 17:11:50.693 [http-nio-8080-exec-6] Settings - JTA Track by Thread: enabled
[DEBUG] 2021-05-11 17:11:50.693 [http-nio-8080-exec-6] Settings - Query language substitutions: {}
[DEBUG] 2021-05-11 17:11:50.693 [http-nio-8080-exec-6] Settings - Named query checking : enabled
[DEBUG] 2021-05-11 17:11:50.693 [http-nio-8080-exec-6] Settings - Second-level cache: disabled
[DEBUG] 2021-05-11 17:11:50.693 [http-nio-8080-exec-6] Settings - Second-level query cache: disabled
[DEBUG] 2021-05-11 17:11:50.693 [http-nio-8080-exec-6] Settings - Second-level query cache factory: null
[DEBUG] 2021-05-11 17:11:50.693 [http-nio-8080-exec-6] Settings - Second-level cache region prefix: null
[DEBUG] 2021-05-11 17:11:50.693 [http-nio-8080-exec-6] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2021-05-11 17:11:50.693 [http-nio-8080-exec-6] Settings - Structured second-level cache entries: disabled
[DEBUG] 2021-05-11 17:11:50.693 [http-nio-8080-exec-6] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2021-05-11 17:11:50.693 [http-nio-8080-exec-6] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2021-05-11 17:11:50.693 [http-nio-8080-exec-6] Settings - JDBC batch size: 15
[DEBUG] 2021-05-11 17:11:50.693 [http-nio-8080-exec-6] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2021-05-11 17:11:50.693 [http-nio-8080-exec-6] Settings - Scrollable result sets: enabled
[DEBUG] 2021-05-11 17:11:50.693 [http-nio-8080-exec-6] Settings - Wrap result sets: disabled
[DEBUG] 2021-05-11 17:11:50.693 [http-nio-8080-exec-6] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2021-05-11 17:11:50.693 [http-nio-8080-exec-6] Settings - JDBC result set fetch size: null
[DEBUG] 2021-05-11 17:11:50.693 [http-nio-8080-exec-6] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2021-05-11 17:11:50.693 [http-nio-8080-exec-6] Settings - Generate SQL with comments: disabled
[DEBUG] 2021-05-11 17:11:50.693 [http-nio-8080-exec-6] Settings - JPA compliance - query : 
[DEBUG] 2021-05-11 17:11:50.694 [http-nio-8080-exec-6] Settings - JPA compliance - closed-handling : 
[DEBUG] 2021-05-11 17:11:50.694 [http-nio-8080-exec-6] Settings - JPA compliance - lists : 
[DEBUG] 2021-05-11 17:11:50.694 [http-nio-8080-exec-6] Settings - JPA compliance - transactions : 
[INFO ] 2021-05-11 17:11:51.072 [http-nio-8080-exec-6] beans - HHH10005002: No explicit CDI BeanManager reference was passed to Hibernate, but CDI is available on the Hibernate ClassLoader.
[DEBUG] 2021-05-11 17:11:51.237 [http-nio-8080-exec-6] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2021-05-11 17:11:51.240 [http-nio-8080-exec-6] SessionFactoryImpl - Instantiating session factory with properties: {awt.toolkit=sun.awt.X11.XToolkit, java.specification.version=11, sun.cpu.isalist=, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=UTF-8, hibernate.c3p0.min_size=5, sun.arch.data.model=64, java.vendor.url=https://ubuntu.com/, catalina.useNaming=true, openejb.provider.default=org.apache.tomee, sun.boot.library.path=/usr/lib/jvm/java-11-openjdk-amd64/lib, com.sun.management.jmxremote.ssl=false, sun.java.command=org.apache.catalina.startup.Bootstrap start, jdk.debug=release, java.specification.vendor=Oracle Corporation, java.naming.factory.url.pkgs=org.apache.naming:org.apache.openejb.core.ivm.naming, openejb.embedder.source=ServerListener, java.version.date=2021-04-20, java.home=/usr/lib/jvm/java-11-openjdk-amd64, ignore.endorsed.dirs=, file.separator=/, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, openejb.scan.webapp.container=true, com.sun.management.jmxremote.password.file=/home/student/.cache/JetBrains/IntelliJIdea2020.3/tomcat/10a53701-4112-462e-a101-1df2054f3873/jmxremote.password, package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.naming.,org.apache.tomcat., openejb.deployments.classpath.filter.systemapps=false, jdk.tls.ephemeralDHKeySize=2048, java.util.logging.config.file=/home/student/.cache/JetBrains/IntelliJIdea2020.3/tomcat/10a53701-4112-462e-a101-1df2054f3873/conf/logging.properties, java.protocol.handler.pkgs=org.apache.catalina.webresources, connection.password=student, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, openejb.scan.webapp.container.excludes=, java.runtime.version=11.0.11+9-Ubuntu-0ubuntu2.20.04, user.name=student, org.apache.johnzon.max-string-length=8192, file.encoding=UTF-8, derby.system.home=/home/student/tomcat/bin, org.apache.catalina.security.SecurityListener.UMASK=0027, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.io.tmpdir=/home/student/tomcat/temp, tomcat.util.scan.StandardJarScanFilter.jarsToScan=log4j-taglib*.jar,log4j-web*.jar,log4javascript*.jar,slf4j-taglib*.jar, java.version=11.0.11, com.sun.management.jmxremote.port=1099, tomcat.util.scan.StandardJarScanFilter.jarsToSkip=annotations-api.jar,ant-junit*.jar,ant-launcher.jar,ant.jar,asm-*.jar,aspectj*.jar,bootstrap.jar,catalina-ant.jar,catalina-ha.jar,catalina-jmx-remote.jar,catalina-storeconfig.jar,catalina-tribes.jar,catalina-ws.jar,catalina.jar,cglib-*.jar,cobertura-*.jar,commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,commons-daemon.jar,commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,commons-math*.jar,commons-pool*.jar,dom4j-*.jar,easymock-*.jar,ecj-*.jar,el-api.jar,geronimo-spec-jaxrpc*.jar,h2*.jar,hamcrest-*.jar,hibernate*.jar,httpclient*.jar,icu4j-*.jar,jasper-el.jar,jasper.jar,jaspic-api.jar,jaxb-*.jar,jaxen-*.jar,jdom-*.jar,jetty-*.jar,jmx-tools.jar,jmx.jar,jsp-api.jar,jstl.jar,jta*.jar,junit-*.jar,junit.jar,log4j*.jar,mail*.jar,objenesis-*.jar,oraclepki.jar,oro-*.jar,servlet-api-*.jar,servlet-api.jar,slf4j*.jar,taglibs-standard-spec-*.jar,tagsoup-*.jar,tomcat-api.jar,tomcat-coyote.jar,tomcat-dbcp.jar,tomcat-i18n-*.jar,tomcat-jdbc.jar,tomcat-jni.jar,tomcat-juli-adapters.jar,tomcat-juli.jar,tomcat-util-scan.jar,tomcat-util.jar,tomcat-websocket.jar,tools.jar,websocket-api.jar,wsdl4j*.jar,xercesImpl.jar,xml-apis.jar,xmlParserAPIs-*.jar,xmlParserAPIs.jar,xom-*.jar, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.print.PSPrinterJob, sun.os.patch.level=unknown, connection.driver_class=com.mysql.cj.jdbc.Driver, tomcat.built=May 4 2019 09:17:16 UTC, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor=Ubuntu, tomee.version=7.1.1, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, tomcat.util.buf.StringCache.byte.enabled=true, sun.desktop=gnome, java.class.path=/home/student/tomcat/bin/bootstrap.jar:/home/student/tomcat/bin/tomcat-juli.jar, tomcat.version=8.5.41.0, java.vm.vendor=Ubuntu, openejb.home=/home/student/tomcat, openejb.system.apps=true, user.timezone=America/Chicago, os.name=Linux, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, openejb.base=/home/student/.cache/JetBrains/IntelliJIdea2020.3/tomcat/10a53701-4112-462e-a101-1df2054f3873, com.sun.management.jmxremote=, sun.cpu.endian=little, user.home=/home/student, hibernate.c3p0.max_statements=50, user.language=en, openejb.deployments.classpath=false, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.tomcat., openejb.loader=tomcat-system, server.loader=, com.sun.management.jmxremote.access.file=/home/student/.cache/JetBrains/IntelliJIdea2020.3/tomcat/10a53701-4112-462e-a101-1df2054f3873/jmxremote.access, hibernate.c3p0.max_size=20, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, path.separator=:, org.apache.openejb.core.security.JaccProvider=org.apache.openejb.core.security.jacc.BasicJaccProvider, common.loader="/home/student/tomcat/lib","/home/student/tomcat/lib/*.jar","/home/student/tomcat/lib","/home/student/tomcat/lib/*.jar", hibernate.connection.username=****, os.version=5.4.0-72-generic, openejb.version=7.1.1, org.apache.security.jacc.EJBMethodPermission.methodInterfaces=BusinessLocalHome,BusinessRemoteHome,BusinessRemote,BusinessLocal, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/BookCollection, java.vm.name=OpenJDK 64-Bit Server VM, openejb.scan.webapp.container.includes=.*(geronimo|mp-jwt|failsafe).*, tomee.remote.support=true, java.vendor.url.bug=https://bugs.launchpad.net/ubuntu/+source/openjdk-lts, catalina.home=/home/student/tomcat, user.dir=/home/student/tomcat/bin, bval.in-container=true, os.arch=amd64, openjpa.Log=org.apache.openejb.openjpa.JULOpenJPALogFactory, hibernate.connection.password=****, tomee.serialization.class.blacklist=-, tomee.serialization.class.whitelist=, shared.loader=, catalina.base=/home/student/.cache/JetBrains/IntelliJIdea2020.3/tomcat/10a53701-4112-462e-a101-1df2054f3873, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@56c89da4, noBanner=true, java.util.logging.manager=org.apache.juli.ClassLoaderLogManager, org.apache.webbeans.logger.WebBeansLoggerFacade=org.apache.openejb.cdi.logging.ContainerJULLoggerFactory, java.vm.info=mixed mode, sharing, java.vm.version=11.0.11+9-Ubuntu-0ubuntu2.20.04, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.hostname=127.0.0.1, javax.security.jacc.PolicyConfigurationFactory.provider=org.apache.openejb.core.security.JaccProvider$Factory, connection.url=jdbc:mysql://localhost:3306/BookCollection, java.class.version=55.0, authconfigprovider.factory=false}
[DEBUG] 2021-05-11 17:11:51.387 [http-nio-8080-exec-6] ClassLoaderAccessImpl - Not known whether passed class name [com.leeannjakel.entity.Book] is safe
[DEBUG] 2021-05-11 17:11:51.388 [http-nio-8080-exec-6] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.leeannjakel.entity.Book
[DEBUG] 2021-05-11 17:11:51.460 [http-nio-8080-exec-6] ClassLoaderAccessImpl - Not known whether passed class name [com.leeannjakel.entity.User] is safe
[DEBUG] 2021-05-11 17:11:51.460 [http-nio-8080-exec-6] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.leeannjakel.entity.User
[DEBUG] 2021-05-11 17:11:51.464 [http-nio-8080-exec-6] ClassLoaderAccessImpl - Not known whether passed class name [com.leeannjakel.entity.Author] is safe
[DEBUG] 2021-05-11 17:11:51.464 [http-nio-8080-exec-6] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.leeannjakel.entity.Author
[DEBUG] 2021-05-11 17:11:51.465 [http-nio-8080-exec-6] ClassLoaderAccessImpl - Not known whether passed class name [com.leeannjakel.entity.Genre] is safe
[DEBUG] 2021-05-11 17:11:51.466 [http-nio-8080-exec-6] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.leeannjakel.entity.Genre
[DEBUG] 2021-05-11 17:11:51.467 [http-nio-8080-exec-6] ClassLoaderAccessImpl - Not known whether passed class name [com.leeannjakel.entity.Role] is safe
[DEBUG] 2021-05-11 17:11:51.467 [http-nio-8080-exec-6] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.leeannjakel.entity.Role
[DEBUG] 2021-05-11 17:11:51.487 [http-nio-8080-exec-6] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2021-05-11 17:11:51.488 [http-nio-8080-exec-6] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2021-05-11 17:11:51.488 [http-nio-8080-exec-6] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@460e5b6c] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@1726cd50]
[DEBUG] 2021-05-11 17:11:51.755 [http-nio-8080-exec-6] ClassLoaderAccessImpl - Not known whether passed class name [com.leeannjakel.entity.Book] is safe
[DEBUG] 2021-05-11 17:11:51.755 [http-nio-8080-exec-6] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.leeannjakel.entity.Book
[DEBUG] 2021-05-11 17:11:51.908 [http-nio-8080-exec-6] ClassLoaderAccessImpl - Not known whether passed class name [com.leeannjakel.entity.Book] is safe
[DEBUG] 2021-05-11 17:11:51.909 [http-nio-8080-exec-6] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.leeannjakel.entity.Book
[DEBUG] 2021-05-11 17:11:52.747 [http-nio-8080-exec-6] ClassLoaderAccessImpl - Not known whether passed class name [com.leeannjakel.entity.User] is safe
[DEBUG] 2021-05-11 17:11:52.748 [http-nio-8080-exec-6] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.leeannjakel.entity.User
[DEBUG] 2021-05-11 17:11:52.750 [http-nio-8080-exec-6] ClassLoaderAccessImpl - Not known whether passed class name [com.leeannjakel.entity.User] is safe
[DEBUG] 2021-05-11 17:11:52.750 [http-nio-8080-exec-6] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.leeannjakel.entity.User
[DEBUG] 2021-05-11 17:11:52.993 [http-nio-8080-exec-6] ClassLoaderAccessImpl - Not known whether passed class name [com.leeannjakel.entity.Author] is safe
[DEBUG] 2021-05-11 17:11:52.994 [http-nio-8080-exec-6] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.leeannjakel.entity.Author
[DEBUG] 2021-05-11 17:11:52.994 [http-nio-8080-exec-6] ClassLoaderAccessImpl - Not known whether passed class name [com.leeannjakel.entity.Author] is safe
[DEBUG] 2021-05-11 17:11:52.994 [http-nio-8080-exec-6] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.leeannjakel.entity.Author
[DEBUG] 2021-05-11 17:11:53.105 [http-nio-8080-exec-6] ClassLoaderAccessImpl - Not known whether passed class name [com.leeannjakel.entity.Genre] is safe
[DEBUG] 2021-05-11 17:11:53.106 [http-nio-8080-exec-6] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.leeannjakel.entity.Genre
[DEBUG] 2021-05-11 17:11:53.106 [http-nio-8080-exec-6] ClassLoaderAccessImpl - Not known whether passed class name [com.leeannjakel.entity.Genre] is safe
[DEBUG] 2021-05-11 17:11:53.106 [http-nio-8080-exec-6] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.leeannjakel.entity.Genre
[DEBUG] 2021-05-11 17:11:53.198 [http-nio-8080-exec-6] ClassLoaderAccessImpl - Not known whether passed class name [com.leeannjakel.entity.Role] is safe
[DEBUG] 2021-05-11 17:11:53.198 [http-nio-8080-exec-6] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.leeannjakel.entity.Role
[DEBUG] 2021-05-11 17:11:53.198 [http-nio-8080-exec-6] ClassLoaderAccessImpl - Not known whether passed class name [com.leeannjakel.entity.Role] is safe
[DEBUG] 2021-05-11 17:11:53.198 [http-nio-8080-exec-6] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.leeannjakel.entity.Role
[DEBUG] 2021-05-11 17:11:53.307 [http-nio-8080-exec-6] AbstractCollectionPersister - Static SQL for collection: com.leeannjakel.entity.Author.books
[DEBUG] 2021-05-11 17:11:53.307 [http-nio-8080-exec-6] AbstractCollectionPersister -  Row insert: update book set author_id=? where id=?
[DEBUG] 2021-05-11 17:11:53.308 [http-nio-8080-exec-6] AbstractCollectionPersister -  Row update: update book set  where id=?
[DEBUG] 2021-05-11 17:11:53.308 [http-nio-8080-exec-6] AbstractCollectionPersister -  Row delete: update book set author_id=null where author_id=? and id=?
[DEBUG] 2021-05-11 17:11:53.308 [http-nio-8080-exec-6] AbstractCollectionPersister -  One-shot delete: update book set author_id=null where author_id=?
[DEBUG] 2021-05-11 17:11:53.308 [http-nio-8080-exec-6] AbstractCollectionPersister - Static SQL for collection: com.leeannjakel.entity.User.books
[DEBUG] 2021-05-11 17:11:53.308 [http-nio-8080-exec-6] AbstractCollectionPersister -  Row insert: update book set user_id=? where id=?
[DEBUG] 2021-05-11 17:11:53.308 [http-nio-8080-exec-6] AbstractCollectionPersister -  Row update: update book set  where id=?
[DEBUG] 2021-05-11 17:11:53.308 [http-nio-8080-exec-6] AbstractCollectionPersister -  Row delete: update book set user_id=null where user_id=? and id=?
[DEBUG] 2021-05-11 17:11:53.308 [http-nio-8080-exec-6] AbstractCollectionPersister -  One-shot delete: update book set user_id=null where user_id=?
[DEBUG] 2021-05-11 17:11:53.309 [http-nio-8080-exec-6] AbstractCollectionPersister - Static SQL for collection: com.leeannjakel.entity.User.roles
[DEBUG] 2021-05-11 17:11:53.309 [http-nio-8080-exec-6] AbstractCollectionPersister -  Row insert: update role set user_id=? where id=?
[DEBUG] 2021-05-11 17:11:53.309 [http-nio-8080-exec-6] AbstractCollectionPersister -  Row update: update role set  where id=?
[DEBUG] 2021-05-11 17:11:53.309 [http-nio-8080-exec-6] AbstractCollectionPersister -  Row delete: update role set user_id=null where user_id=? and id=?
[DEBUG] 2021-05-11 17:11:53.309 [http-nio-8080-exec-6] AbstractCollectionPersister -  One-shot delete: update role set user_id=null where user_id=?
[DEBUG] 2021-05-11 17:11:53.309 [http-nio-8080-exec-6] AbstractCollectionPersister - Static SQL for collection: com.leeannjakel.entity.Genre.books
[DEBUG] 2021-05-11 17:11:53.309 [http-nio-8080-exec-6] AbstractCollectionPersister -  Row insert: update book set genre_id=? where id=?
[DEBUG] 2021-05-11 17:11:53.309 [http-nio-8080-exec-6] AbstractCollectionPersister -  Row update: update book set  where id=?
[DEBUG] 2021-05-11 17:11:53.310 [http-nio-8080-exec-6] AbstractCollectionPersister -  Row delete: update book set genre_id=null where genre_id=? and id=?
[DEBUG] 2021-05-11 17:11:53.310 [http-nio-8080-exec-6] AbstractCollectionPersister -  One-shot delete: update book set genre_id=null where genre_id=?
[DEBUG] 2021-05-11 17:11:53.324 [http-nio-8080-exec-6] AbstractEntityPersister - Static SQL for entity: com.leeannjakel.entity.Book
[DEBUG] 2021-05-11 17:11:53.325 [http-nio-8080-exec-6] AbstractEntityPersister -  Version select: select id from book where id =?
[DEBUG] 2021-05-11 17:11:53.325 [http-nio-8080-exec-6] AbstractEntityPersister -  Snapshot select: select book_.id, book_.author_id as author_i5_1_, book_.genre_id as genre_id6_1_, book_.isbn as isbn2_1_, book_.notes as notes3_1_, book_.title as title4_1_, book_.user_id as user_id7_1_ from book book_ where book_.id=?
[DEBUG] 2021-05-11 17:11:53.325 [http-nio-8080-exec-6] AbstractEntityPersister -  Insert 0: insert into book (author_id, genre_id, isbn, notes, title, user_id, id) values (?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2021-05-11 17:11:53.325 [http-nio-8080-exec-6] AbstractEntityPersister -  Update 0: update book set author_id=?, genre_id=?, isbn=?, notes=?, title=?, user_id=? where id=?
[DEBUG] 2021-05-11 17:11:53.325 [http-nio-8080-exec-6] AbstractEntityPersister -  Delete 0: delete from book where id=?
[DEBUG] 2021-05-11 17:11:53.325 [http-nio-8080-exec-6] AbstractEntityPersister -  Identity insert: insert into book (author_id, genre_id, isbn, notes, title, user_id) values (?, ?, ?, ?, ?, ?)
[DEBUG] 2021-05-11 17:11:53.460 [http-nio-8080-exec-6] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@278a8f56]
[DEBUG] 2021-05-11 17:11:53.480 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : author
[DEBUG] 2021-05-11 17:11:53.510 [http-nio-8080-exec-6] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@78cf41d5]
[DEBUG] 2021-05-11 17:11:53.520 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : author.books
[DEBUG] 2021-05-11 17:11:53.523 [http-nio-8080-exec-6] MetamodelGraphWalker - Property path deemed to be circular : author.books
[DEBUG] 2021-05-11 17:11:53.524 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : author.name
[DEBUG] 2021-05-11 17:11:53.524 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : genre
[DEBUG] 2021-05-11 17:11:53.524 [http-nio-8080-exec-6] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@19201515]
[DEBUG] 2021-05-11 17:11:53.526 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : genre.books
[DEBUG] 2021-05-11 17:11:53.526 [http-nio-8080-exec-6] MetamodelGraphWalker - Property path deemed to be circular : genre.books
[DEBUG] 2021-05-11 17:11:53.526 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : genre.name
[DEBUG] 2021-05-11 17:11:53.528 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : isbn
[DEBUG] 2021-05-11 17:11:53.528 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : notes
[DEBUG] 2021-05-11 17:11:53.528 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2021-05-11 17:11:53.528 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2021-05-11 17:11:53.531 [http-nio-8080-exec-6] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@ee5f05e]
[DEBUG] 2021-05-11 17:11:53.531 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : user.books
[DEBUG] 2021-05-11 17:11:53.531 [http-nio-8080-exec-6] MetamodelGraphWalker - Property path deemed to be circular : user.books
[DEBUG] 2021-05-11 17:11:53.531 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2021-05-11 17:11:53.531 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2021-05-11 17:11:53.532 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2021-05-11 17:11:53.532 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2021-05-11 17:11:53.532 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2021-05-11 17:11:53.533 [http-nio-8080-exec-6] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6945a892]
[DEBUG] 2021-05-11 17:11:53.539 [http-nio-8080-exec-6] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3b615ab5]
[DEBUG] 2021-05-11 17:11:53.554 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : user.roles.roleName
[DEBUG] 2021-05-11 17:11:53.554 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2021-05-11 17:11:53.554 [http-nio-8080-exec-6] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2021-05-11 17:11:53.558 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : user.roles.userName
[DEBUG] 2021-05-11 17:11:53.560 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : user.userName
[DEBUG] 2021-05-11 17:11:53.561 [http-nio-8080-exec-6] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-05-11 17:11:53.604 [http-nio-8080-exec-6] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-05-11 17:11:53.640 [http-nio-8080-exec-6] LoadPlanTreePrinter - LoadPlan(entity=com.leeannjakel.entity.Book)
    - Returns
       - EntityReturnImpl(entity=com.leeannjakel.entity.Book, querySpaceUid=<gen:0>, path=com.leeannjakel.entity.Book)
          - EntityAttributeFetchImpl(entity=com.leeannjakel.entity.Author, querySpaceUid=<gen:1>, path=com.leeannjakel.entity.Book.author)
          - EntityAttributeFetchImpl(entity=com.leeannjakel.entity.Genre, querySpaceUid=<gen:2>, path=com.leeannjakel.entity.Book.genre)
          - EntityAttributeFetchImpl(entity=com.leeannjakel.entity.User, querySpaceUid=<gen:3>, path=com.leeannjakel.entity.Book.user)
             - CollectionAttributeFetchImpl(collection=com.leeannjakel.entity.User.roles, querySpaceUid=<gen:4>, path=com.leeannjakel.entity.Book.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.leeannjakel.entity.Role, querySpaceUid=<gen:5>, path=com.leeannjakel.entity.Book.user.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.leeannjakel.entity.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(author)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.leeannjakel.entity.Author)
                - SQL table alias mapping - author1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}
          - JOIN (JoinDefinedByMetadata(genre)) : <gen:0> -> <gen:2>
             - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.leeannjakel.entity.Genre)
                - SQL table alias mapping - genre2_
                - alias suffix - 2_
                - suffixed key columns - {id1_2_2_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=com.leeannjakel.entity.User)
                - SQL table alias mapping - user3_
                - alias suffix - 3_
                - suffixed key columns - {id1_4_3_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:3> -> <gen:4>
                   - CollectionQuerySpaceImpl(uid=<gen:4>, collection=com.leeannjakel.entity.User.roles)
                      - SQL table alias mapping - roles4_
                      - alias suffix - 4_
                      - suffixed key columns - {user_id4_3_4_}
                      - entity-element alias suffix - 5_
                      - 5_entity-element suffixed key columns - id1_3_5_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:4> -> <gen:5>
                         - EntityQuerySpaceImpl(uid=<gen:5>, entity=com.leeannjakel.entity.Role)
                            - SQL table alias mapping - roles4_
                            - alias suffix - 5_
                            - suffixed key columns - {id1_3_5_}

[DEBUG] 2021-05-11 17:11:53.644 [http-nio-8080-exec-6] EntityLoader - Static select for entity com.leeannjakel.entity.Book [NONE]: select book0_.id as id1_1_0_, book0_.author_id as author_i5_1_0_, book0_.genre_id as genre_id6_1_0_, book0_.isbn as isbn2_1_0_, book0_.notes as notes3_1_0_, book0_.title as title4_1_0_, book0_.user_id as user_id7_1_0_, author1_.id as id1_0_1_, author1_.name as name2_0_1_, genre2_.id as id1_2_2_, genre2_.name as name2_2_2_, user3_.id as id1_4_3_, user3_.email as email2_4_3_, user3_.first_name as first_na3_4_3_, user3_.last_name as last_nam4_4_3_, user3_.password as password5_4_3_, user3_.user_name as user_nam6_4_3_, roles4_.user_id as user_id4_3_4_, roles4_.id as id1_3_4_, roles4_.id as id1_3_5_, roles4_.role_name as role_nam2_3_5_, roles4_.user_id as user_id4_3_5_, roles4_.user_name as user_nam3_3_5_ from book book0_ left outer join author author1_ on book0_.author_id=author1_.id left outer join genre genre2_ on book0_.genre_id=genre2_.id left outer join user user3_ on book0_.user_id=user3_.id left outer join role roles4_ on user3_.id=roles4_.user_id where book0_.id=?
[DEBUG] 2021-05-11 17:11:53.647 [http-nio-8080-exec-6] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@77d3f29d]
[DEBUG] 2021-05-11 17:11:53.647 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : author
[DEBUG] 2021-05-11 17:11:53.647 [http-nio-8080-exec-6] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2acbb94a]
[DEBUG] 2021-05-11 17:11:53.647 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : author.books
[DEBUG] 2021-05-11 17:11:53.651 [http-nio-8080-exec-6] MetamodelGraphWalker - Property path deemed to be circular : author.books
[DEBUG] 2021-05-11 17:11:53.652 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : author.name
[DEBUG] 2021-05-11 17:11:53.652 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : genre
[DEBUG] 2021-05-11 17:11:53.652 [http-nio-8080-exec-6] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3ee9b2a2]
[DEBUG] 2021-05-11 17:11:53.653 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : genre.books
[DEBUG] 2021-05-11 17:11:53.653 [http-nio-8080-exec-6] MetamodelGraphWalker - Property path deemed to be circular : genre.books
[DEBUG] 2021-05-11 17:11:53.653 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : genre.name
[DEBUG] 2021-05-11 17:11:53.653 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : isbn
[DEBUG] 2021-05-11 17:11:53.653 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : notes
[DEBUG] 2021-05-11 17:11:53.653 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2021-05-11 17:11:53.653 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2021-05-11 17:11:53.653 [http-nio-8080-exec-6] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@28de5880]
[DEBUG] 2021-05-11 17:11:53.661 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : user.books
[DEBUG] 2021-05-11 17:11:53.664 [http-nio-8080-exec-6] MetamodelGraphWalker - Property path deemed to be circular : user.books
[DEBUG] 2021-05-11 17:11:53.664 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2021-05-11 17:11:53.664 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2021-05-11 17:11:53.664 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2021-05-11 17:11:53.664 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2021-05-11 17:11:53.665 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2021-05-11 17:11:53.665 [http-nio-8080-exec-6] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3ad9eed1]
[DEBUG] 2021-05-11 17:11:53.665 [http-nio-8080-exec-6] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@203514d7]
[DEBUG] 2021-05-11 17:11:53.669 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : user.roles.roleName
[DEBUG] 2021-05-11 17:11:53.669 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2021-05-11 17:11:53.669 [http-nio-8080-exec-6] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2021-05-11 17:11:53.670 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : user.roles.userName
[DEBUG] 2021-05-11 17:11:53.672 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : user.userName
[DEBUG] 2021-05-11 17:11:53.672 [http-nio-8080-exec-6] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-05-11 17:11:53.673 [http-nio-8080-exec-6] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-05-11 17:11:53.674 [http-nio-8080-exec-6] LoadPlanTreePrinter - LoadPlan(entity=com.leeannjakel.entity.Book)
    - Returns
       - EntityReturnImpl(entity=com.leeannjakel.entity.Book, querySpaceUid=<gen:0>, path=com.leeannjakel.entity.Book)
          - EntityAttributeFetchImpl(entity=com.leeannjakel.entity.Author, querySpaceUid=<gen:1>, path=com.leeannjakel.entity.Book.author)
          - EntityAttributeFetchImpl(entity=com.leeannjakel.entity.Genre, querySpaceUid=<gen:2>, path=com.leeannjakel.entity.Book.genre)
          - EntityAttributeFetchImpl(entity=com.leeannjakel.entity.User, querySpaceUid=<gen:3>, path=com.leeannjakel.entity.Book.user)
             - CollectionAttributeFetchImpl(collection=com.leeannjakel.entity.User.roles, querySpaceUid=<gen:4>, path=com.leeannjakel.entity.Book.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.leeannjakel.entity.Role, querySpaceUid=<gen:5>, path=com.leeannjakel.entity.Book.user.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.leeannjakel.entity.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(author)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.leeannjakel.entity.Author)
                - SQL table alias mapping - author1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}
          - JOIN (JoinDefinedByMetadata(genre)) : <gen:0> -> <gen:2>
             - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.leeannjakel.entity.Genre)
                - SQL table alias mapping - genre2_
                - alias suffix - 2_
                - suffixed key columns - {id1_2_2_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=com.leeannjakel.entity.User)
                - SQL table alias mapping - user3_
                - alias suffix - 3_
                - suffixed key columns - {id1_4_3_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:3> -> <gen:4>
                   - CollectionQuerySpaceImpl(uid=<gen:4>, collection=com.leeannjakel.entity.User.roles)
                      - SQL table alias mapping - roles4_
                      - alias suffix - 4_
                      - suffixed key columns - {user_id4_3_4_}
                      - entity-element alias suffix - 5_
                      - 5_entity-element suffixed key columns - id1_3_5_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:4> -> <gen:5>
                         - EntityQuerySpaceImpl(uid=<gen:5>, entity=com.leeannjakel.entity.Role)
                            - SQL table alias mapping - roles4_
                            - alias suffix - 5_
                            - suffixed key columns - {id1_3_5_}

[DEBUG] 2021-05-11 17:11:53.676 [http-nio-8080-exec-6] EntityLoader - Static select for entity com.leeannjakel.entity.Book [READ]: select book0_.id as id1_1_0_, book0_.author_id as author_i5_1_0_, book0_.genre_id as genre_id6_1_0_, book0_.isbn as isbn2_1_0_, book0_.notes as notes3_1_0_, book0_.title as title4_1_0_, book0_.user_id as user_id7_1_0_, author1_.id as id1_0_1_, author1_.name as name2_0_1_, genre2_.id as id1_2_2_, genre2_.name as name2_2_2_, user3_.id as id1_4_3_, user3_.email as email2_4_3_, user3_.first_name as first_na3_4_3_, user3_.last_name as last_nam4_4_3_, user3_.password as password5_4_3_, user3_.user_name as user_nam6_4_3_, roles4_.user_id as user_id4_3_4_, roles4_.id as id1_3_4_, roles4_.id as id1_3_5_, roles4_.role_name as role_nam2_3_5_, roles4_.user_id as user_id4_3_5_, roles4_.user_name as user_nam3_3_5_ from book book0_ left outer join author author1_ on book0_.author_id=author1_.id left outer join genre genre2_ on book0_.genre_id=genre2_.id left outer join user user3_ on book0_.user_id=user3_.id left outer join role roles4_ on user3_.id=roles4_.user_id where book0_.id=?
[DEBUG] 2021-05-11 17:11:53.725 [http-nio-8080-exec-6] Loader - Static select for action ACTION_MERGE on entity com.leeannjakel.entity.Book: select book0_.id as id1_1_0_, book0_.author_id as author_i5_1_0_, book0_.genre_id as genre_id6_1_0_, book0_.isbn as isbn2_1_0_, book0_.notes as notes3_1_0_, book0_.title as title4_1_0_, book0_.user_id as user_id7_1_0_ from book book0_ where book0_.id=?
[DEBUG] 2021-05-11 17:11:53.727 [http-nio-8080-exec-6] Loader - Static select for action ACTION_REFRESH on entity com.leeannjakel.entity.Book: select book0_.id as id1_1_0_, book0_.author_id as author_i5_1_0_, book0_.genre_id as genre_id6_1_0_, book0_.isbn as isbn2_1_0_, book0_.notes as notes3_1_0_, book0_.title as title4_1_0_, book0_.user_id as user_id7_1_0_ from book book0_ where book0_.id=?
[DEBUG] 2021-05-11 17:11:53.730 [http-nio-8080-exec-6] AbstractEntityPersister - Static SQL for entity: com.leeannjakel.entity.User
[DEBUG] 2021-05-11 17:11:53.730 [http-nio-8080-exec-6] AbstractEntityPersister -  Version select: select id from user where id =?
[DEBUG] 2021-05-11 17:11:53.730 [http-nio-8080-exec-6] AbstractEntityPersister -  Snapshot select: select user_.id, user_.email as email2_4_, user_.first_name as first_na3_4_, user_.last_name as last_nam4_4_, user_.password as password5_4_, user_.user_name as user_nam6_4_ from user user_ where user_.id=?
[DEBUG] 2021-05-11 17:11:53.731 [http-nio-8080-exec-6] AbstractEntityPersister -  Insert 0: insert into user (email, first_name, last_name, password, user_name, id) values (?, ?, ?, ?, ?, ?)
[DEBUG] 2021-05-11 17:11:53.731 [http-nio-8080-exec-6] AbstractEntityPersister -  Update 0: update user set email=?, first_name=?, last_name=?, password=?, user_name=? where id=?
[DEBUG] 2021-05-11 17:11:53.731 [http-nio-8080-exec-6] AbstractEntityPersister -  Delete 0: delete from user where id=?
[DEBUG] 2021-05-11 17:11:53.731 [http-nio-8080-exec-6] AbstractEntityPersister -  Identity insert: insert into user (email, first_name, last_name, password, user_name) values (?, ?, ?, ?, ?)
[DEBUG] 2021-05-11 17:11:53.732 [http-nio-8080-exec-6] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7bf0507]
[DEBUG] 2021-05-11 17:11:53.741 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : books
[DEBUG] 2021-05-11 17:11:53.741 [http-nio-8080-exec-6] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@292c8c2c]
[DEBUG] 2021-05-11 17:11:53.741 [http-nio-8080-exec-6] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6927568a]
[DEBUG] 2021-05-11 17:11:53.743 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2021-05-11 17:11:53.743 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2021-05-11 17:11:53.743 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2021-05-11 17:11:53.743 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2021-05-11 17:11:53.743 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : roles
[DEBUG] 2021-05-11 17:11:53.748 [http-nio-8080-exec-6] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@164fe194]
[DEBUG] 2021-05-11 17:11:53.748 [http-nio-8080-exec-6] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@61c24b01]
[DEBUG] 2021-05-11 17:11:53.748 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : roles.roleName
[DEBUG] 2021-05-11 17:11:53.748 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : roles.user
[DEBUG] 2021-05-11 17:11:53.748 [http-nio-8080-exec-6] MetamodelGraphWalker - Property path deemed to be circular : roles.user
[DEBUG] 2021-05-11 17:11:53.748 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : roles.userName
[DEBUG] 2021-05-11 17:11:53.748 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : userName
[DEBUG] 2021-05-11 17:11:53.748 [http-nio-8080-exec-6] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-05-11 17:11:53.751 [http-nio-8080-exec-6] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-05-11 17:11:53.754 [http-nio-8080-exec-6] LoadPlanTreePrinter - LoadPlan(entity=com.leeannjakel.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.leeannjakel.entity.User, querySpaceUid=<gen:0>, path=com.leeannjakel.entity.User)
          - CollectionAttributeFetchImpl(collection=com.leeannjakel.entity.User.books, querySpaceUid=<gen:1>, path=com.leeannjakel.entity.User.books)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.leeannjakel.entity.Book, querySpaceUid=<gen:2>, path=com.leeannjakel.entity.User.books.<elements>)
          - CollectionAttributeFetchImpl(collection=com.leeannjakel.entity.User.roles, querySpaceUid=<gen:3>, path=com.leeannjakel.entity.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.leeannjakel.entity.Role, querySpaceUid=<gen:4>, path=com.leeannjakel.entity.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.leeannjakel.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:3>
             - CollectionQuerySpaceImpl(uid=<gen:3>, collection=com.leeannjakel.entity.User.roles)
                - SQL table alias mapping - roles1_
                - alias suffix - 1_
                - suffixed key columns - {user_id4_3_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_3_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:3> -> <gen:4>
                   - EntityQuerySpaceImpl(uid=<gen:4>, entity=com.leeannjakel.entity.Role)
                      - SQL table alias mapping - roles1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_3_2_}

[DEBUG] 2021-05-11 17:11:53.754 [http-nio-8080-exec-6] EntityLoader - Static select for entity com.leeannjakel.entity.User [NONE]: select user0_.id as id1_4_0_, user0_.email as email2_4_0_, user0_.first_name as first_na3_4_0_, user0_.last_name as last_nam4_4_0_, user0_.password as password5_4_0_, user0_.user_name as user_nam6_4_0_, roles1_.user_id as user_id4_3_1_, roles1_.id as id1_3_1_, roles1_.id as id1_3_2_, roles1_.role_name as role_nam2_3_2_, roles1_.user_id as user_id4_3_2_, roles1_.user_name as user_nam3_3_2_ from user user0_ left outer join role roles1_ on user0_.id=roles1_.user_id where user0_.id=?
[DEBUG] 2021-05-11 17:11:53.754 [http-nio-8080-exec-6] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@16a86bc8]
[DEBUG] 2021-05-11 17:11:53.754 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : books
[DEBUG] 2021-05-11 17:11:53.754 [http-nio-8080-exec-6] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5e8f6720]
[DEBUG] 2021-05-11 17:11:53.754 [http-nio-8080-exec-6] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@32565702]
[DEBUG] 2021-05-11 17:11:53.755 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2021-05-11 17:11:53.755 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2021-05-11 17:11:53.755 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2021-05-11 17:11:53.755 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2021-05-11 17:11:53.755 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : roles
[DEBUG] 2021-05-11 17:11:53.755 [http-nio-8080-exec-6] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@67758cab]
[DEBUG] 2021-05-11 17:11:53.755 [http-nio-8080-exec-6] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@fde8b42]
[DEBUG] 2021-05-11 17:11:53.755 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : roles.roleName
[DEBUG] 2021-05-11 17:11:53.755 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : roles.user
[DEBUG] 2021-05-11 17:11:53.755 [http-nio-8080-exec-6] MetamodelGraphWalker - Property path deemed to be circular : roles.user
[DEBUG] 2021-05-11 17:11:53.755 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : roles.userName
[DEBUG] 2021-05-11 17:11:53.756 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : userName
[DEBUG] 2021-05-11 17:11:53.756 [http-nio-8080-exec-6] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-05-11 17:11:53.756 [http-nio-8080-exec-6] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-05-11 17:11:53.769 [http-nio-8080-exec-6] LoadPlanTreePrinter - LoadPlan(entity=com.leeannjakel.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.leeannjakel.entity.User, querySpaceUid=<gen:0>, path=com.leeannjakel.entity.User)
          - CollectionAttributeFetchImpl(collection=com.leeannjakel.entity.User.books, querySpaceUid=<gen:1>, path=com.leeannjakel.entity.User.books)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.leeannjakel.entity.Book, querySpaceUid=<gen:2>, path=com.leeannjakel.entity.User.books.<elements>)
          - CollectionAttributeFetchImpl(collection=com.leeannjakel.entity.User.roles, querySpaceUid=<gen:3>, path=com.leeannjakel.entity.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.leeannjakel.entity.Role, querySpaceUid=<gen:4>, path=com.leeannjakel.entity.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.leeannjakel.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:3>
             - CollectionQuerySpaceImpl(uid=<gen:3>, collection=com.leeannjakel.entity.User.roles)
                - SQL table alias mapping - roles1_
                - alias suffix - 1_
                - suffixed key columns - {user_id4_3_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_3_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:3> -> <gen:4>
                   - EntityQuerySpaceImpl(uid=<gen:4>, entity=com.leeannjakel.entity.Role)
                      - SQL table alias mapping - roles1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_3_2_}

[DEBUG] 2021-05-11 17:11:53.769 [http-nio-8080-exec-6] EntityLoader - Static select for entity com.leeannjakel.entity.User [READ]: select user0_.id as id1_4_0_, user0_.email as email2_4_0_, user0_.first_name as first_na3_4_0_, user0_.last_name as last_nam4_4_0_, user0_.password as password5_4_0_, user0_.user_name as user_nam6_4_0_, roles1_.user_id as user_id4_3_1_, roles1_.id as id1_3_1_, roles1_.id as id1_3_2_, roles1_.role_name as role_nam2_3_2_, roles1_.user_id as user_id4_3_2_, roles1_.user_name as user_nam3_3_2_ from user user0_ left outer join role roles1_ on user0_.id=roles1_.user_id where user0_.id=?
[DEBUG] 2021-05-11 17:11:53.775 [http-nio-8080-exec-6] Loader - Static select for action ACTION_MERGE on entity com.leeannjakel.entity.User: select user0_.id as id1_4_1_, user0_.email as email2_4_1_, user0_.first_name as first_na3_4_1_, user0_.last_name as last_nam4_4_1_, user0_.password as password5_4_1_, user0_.user_name as user_nam6_4_1_, books1_.user_id as user_id7_1_3_, books1_.id as id1_1_3_, books1_.id as id1_1_0_, books1_.author_id as author_i5_1_0_, books1_.genre_id as genre_id6_1_0_, books1_.isbn as isbn2_1_0_, books1_.notes as notes3_1_0_, books1_.title as title4_1_0_, books1_.user_id as user_id7_1_0_ from user user0_ left outer join book books1_ on user0_.id=books1_.user_id where user0_.id=?
[DEBUG] 2021-05-11 17:11:53.776 [http-nio-8080-exec-6] Loader - Static select for action ACTION_REFRESH on entity com.leeannjakel.entity.User: select user0_.id as id1_4_1_, user0_.email as email2_4_1_, user0_.first_name as first_na3_4_1_, user0_.last_name as last_nam4_4_1_, user0_.password as password5_4_1_, user0_.user_name as user_nam6_4_1_, books1_.user_id as user_id7_1_3_, books1_.id as id1_1_3_, books1_.id as id1_1_0_, books1_.author_id as author_i5_1_0_, books1_.genre_id as genre_id6_1_0_, books1_.isbn as isbn2_1_0_, books1_.notes as notes3_1_0_, books1_.title as title4_1_0_, books1_.user_id as user_id7_1_0_ from user user0_ left outer join book books1_ on user0_.id=books1_.user_id where user0_.id=?
[DEBUG] 2021-05-11 17:11:53.777 [http-nio-8080-exec-6] AbstractEntityPersister - Static SQL for entity: com.leeannjakel.entity.Author
[DEBUG] 2021-05-11 17:11:53.777 [http-nio-8080-exec-6] AbstractEntityPersister -  Version select: select id from author where id =?
[DEBUG] 2021-05-11 17:11:53.777 [http-nio-8080-exec-6] AbstractEntityPersister -  Snapshot select: select author_.id, author_.name as name2_0_ from author author_ where author_.id=?
[DEBUG] 2021-05-11 17:11:53.777 [http-nio-8080-exec-6] AbstractEntityPersister -  Insert 0: insert into author (name, id) values (?, ?)
[DEBUG] 2021-05-11 17:11:53.777 [http-nio-8080-exec-6] AbstractEntityPersister -  Update 0: update author set name=? where id=?
[DEBUG] 2021-05-11 17:11:53.793 [http-nio-8080-exec-6] AbstractEntityPersister -  Delete 0: delete from author where id=?
[DEBUG] 2021-05-11 17:11:53.793 [http-nio-8080-exec-6] AbstractEntityPersister -  Identity insert: insert into author (name) values (?)
[DEBUG] 2021-05-11 17:11:53.793 [http-nio-8080-exec-6] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6ffcff75]
[DEBUG] 2021-05-11 17:11:53.796 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : books
[DEBUG] 2021-05-11 17:11:53.798 [http-nio-8080-exec-6] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6c1f28bd]
[DEBUG] 2021-05-11 17:11:53.798 [http-nio-8080-exec-6] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1a4546db]
[DEBUG] 2021-05-11 17:11:53.798 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : books.author
[DEBUG] 2021-05-11 17:11:53.804 [http-nio-8080-exec-6] MetamodelGraphWalker - Property path deemed to be circular : books.author
[DEBUG] 2021-05-11 17:11:53.805 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : books.genre
[DEBUG] 2021-05-11 17:11:53.805 [http-nio-8080-exec-6] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5a5bad70]
[DEBUG] 2021-05-11 17:11:53.806 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : books.genre.books
[DEBUG] 2021-05-11 17:11:53.806 [http-nio-8080-exec-6] MetamodelGraphWalker - Property path deemed to be circular : books.genre.books
[DEBUG] 2021-05-11 17:11:53.807 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : books.genre.name
[DEBUG] 2021-05-11 17:11:53.807 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : books.isbn
[DEBUG] 2021-05-11 17:11:53.807 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : books.notes
[DEBUG] 2021-05-11 17:11:53.807 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : books.title
[DEBUG] 2021-05-11 17:11:53.807 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : books.user
[DEBUG] 2021-05-11 17:11:53.807 [http-nio-8080-exec-6] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@283d3c11]
[DEBUG] 2021-05-11 17:11:53.807 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : books.user.books
[DEBUG] 2021-05-11 17:11:53.807 [http-nio-8080-exec-6] MetamodelGraphWalker - Property path deemed to be circular : books.user.books
[DEBUG] 2021-05-11 17:11:53.807 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : books.user.email
[DEBUG] 2021-05-11 17:11:53.807 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : books.user.firstName
[DEBUG] 2021-05-11 17:11:53.807 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : books.user.lastName
[DEBUG] 2021-05-11 17:11:53.807 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : books.user.password
[DEBUG] 2021-05-11 17:11:53.807 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : books.user.roles
[DEBUG] 2021-05-11 17:11:53.823 [http-nio-8080-exec-6] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@418799a4]
[DEBUG] 2021-05-11 17:11:53.823 [http-nio-8080-exec-6] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@696c6941]
[DEBUG] 2021-05-11 17:11:53.823 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : books.user.userName
[DEBUG] 2021-05-11 17:11:53.823 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2021-05-11 17:11:53.823 [http-nio-8080-exec-6] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-05-11 17:11:53.828 [http-nio-8080-exec-6] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-05-11 17:11:53.837 [http-nio-8080-exec-6] LoadPlanTreePrinter - LoadPlan(entity=com.leeannjakel.entity.Author)
    - Returns
       - EntityReturnImpl(entity=com.leeannjakel.entity.Author, querySpaceUid=<gen:0>, path=com.leeannjakel.entity.Author)
          - CollectionAttributeFetchImpl(collection=com.leeannjakel.entity.Author.books, querySpaceUid=<gen:1>, path=com.leeannjakel.entity.Author.books)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.leeannjakel.entity.Book, querySpaceUid=<gen:2>, path=com.leeannjakel.entity.Author.books.<elements>)
                - EntityAttributeFetchImpl(entity=com.leeannjakel.entity.Genre, querySpaceUid=<gen:3>, path=com.leeannjakel.entity.Author.books.<elements>.genre)
                - EntityAttributeFetchImpl(entity=com.leeannjakel.entity.User, querySpaceUid=<gen:4>, path=com.leeannjakel.entity.Author.books.<elements>.user)
                   - CollectionAttributeFetchImpl(collection=com.leeannjakel.entity.User.roles, querySpaceUid=<gen:5>, path=com.leeannjakel.entity.Author.books.<elements>.user.roles)
                      - (collection element) CollectionFetchableElementEntityGraph(entity=com.leeannjakel.entity.Role, querySpaceUid=<gen:6>, path=com.leeannjakel.entity.Author.books.<elements>.user.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.leeannjakel.entity.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(books)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=com.leeannjakel.entity.Author.books)
                - SQL table alias mapping - books1_
                - alias suffix - 1_
                - suffixed key columns - {author_i5_1_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_1_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.leeannjakel.entity.Book)
                      - SQL table alias mapping - books1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_1_2_}
                      - JOIN (JoinDefinedByMetadata(genre)) : <gen:2> -> <gen:3>
                         - EntityQuerySpaceImpl(uid=<gen:3>, entity=com.leeannjakel.entity.Genre)
                            - SQL table alias mapping - genre2_
                            - alias suffix - 3_
                            - suffixed key columns - {id1_2_3_}
                      - JOIN (JoinDefinedByMetadata(user)) : <gen:2> -> <gen:4>
                         - EntityQuerySpaceImpl(uid=<gen:4>, entity=com.leeannjakel.entity.User)
                            - SQL table alias mapping - user3_
                            - alias suffix - 4_
                            - suffixed key columns - {id1_4_4_}

[DEBUG] 2021-05-11 17:11:53.837 [http-nio-8080-exec-6] EntityLoader - Static select for entity com.leeannjakel.entity.Author [NONE]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, books1_.author_id as author_i5_1_1_, books1_.id as id1_1_1_, books1_.id as id1_1_2_, books1_.author_id as author_i5_1_2_, books1_.genre_id as genre_id6_1_2_, books1_.isbn as isbn2_1_2_, books1_.notes as notes3_1_2_, books1_.title as title4_1_2_, books1_.user_id as user_id7_1_2_, genre2_.id as id1_2_3_, genre2_.name as name2_2_3_, user3_.id as id1_4_4_, user3_.email as email2_4_4_, user3_.first_name as first_na3_4_4_, user3_.last_name as last_nam4_4_4_, user3_.password as password5_4_4_, user3_.user_name as user_nam6_4_4_ from author author0_ left outer join book books1_ on author0_.id=books1_.author_id left outer join genre genre2_ on books1_.genre_id=genre2_.id left outer join user user3_ on books1_.user_id=user3_.id where author0_.id=?
[DEBUG] 2021-05-11 17:11:53.838 [http-nio-8080-exec-6] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@28700dc9]
[DEBUG] 2021-05-11 17:11:53.838 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : books
[DEBUG] 2021-05-11 17:11:53.838 [http-nio-8080-exec-6] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@17d4435d]
[DEBUG] 2021-05-11 17:11:53.838 [http-nio-8080-exec-6] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1df80687]
[DEBUG] 2021-05-11 17:11:53.839 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : books.author
[DEBUG] 2021-05-11 17:11:53.839 [http-nio-8080-exec-6] MetamodelGraphWalker - Property path deemed to be circular : books.author
[DEBUG] 2021-05-11 17:11:53.839 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : books.genre
[DEBUG] 2021-05-11 17:11:53.851 [http-nio-8080-exec-6] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7749e37c]
[DEBUG] 2021-05-11 17:11:53.856 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : books.genre.books
[DEBUG] 2021-05-11 17:11:53.856 [http-nio-8080-exec-6] MetamodelGraphWalker - Property path deemed to be circular : books.genre.books
[DEBUG] 2021-05-11 17:11:53.856 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : books.genre.name
[DEBUG] 2021-05-11 17:11:53.856 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : books.isbn
[DEBUG] 2021-05-11 17:11:53.856 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : books.notes
[DEBUG] 2021-05-11 17:11:53.856 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : books.title
[DEBUG] 2021-05-11 17:11:53.856 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : books.user
[DEBUG] 2021-05-11 17:11:53.856 [http-nio-8080-exec-6] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6d24cf2d]
[DEBUG] 2021-05-11 17:11:53.859 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : books.user.books
[DEBUG] 2021-05-11 17:11:53.859 [http-nio-8080-exec-6] MetamodelGraphWalker - Property path deemed to be circular : books.user.books
[DEBUG] 2021-05-11 17:11:53.861 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : books.user.email
[DEBUG] 2021-05-11 17:11:53.861 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : books.user.firstName
[DEBUG] 2021-05-11 17:11:53.861 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : books.user.lastName
[DEBUG] 2021-05-11 17:11:53.861 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : books.user.password
[DEBUG] 2021-05-11 17:11:53.861 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : books.user.roles
[DEBUG] 2021-05-11 17:11:53.861 [http-nio-8080-exec-6] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3dcaeb2]
[DEBUG] 2021-05-11 17:11:53.861 [http-nio-8080-exec-6] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6917609a]
[DEBUG] 2021-05-11 17:11:53.861 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : books.user.userName
[DEBUG] 2021-05-11 17:11:53.861 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2021-05-11 17:11:53.862 [http-nio-8080-exec-6] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-05-11 17:11:53.862 [http-nio-8080-exec-6] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-05-11 17:11:53.863 [http-nio-8080-exec-6] LoadPlanTreePrinter - LoadPlan(entity=com.leeannjakel.entity.Author)
    - Returns
       - EntityReturnImpl(entity=com.leeannjakel.entity.Author, querySpaceUid=<gen:0>, path=com.leeannjakel.entity.Author)
          - CollectionAttributeFetchImpl(collection=com.leeannjakel.entity.Author.books, querySpaceUid=<gen:1>, path=com.leeannjakel.entity.Author.books)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.leeannjakel.entity.Book, querySpaceUid=<gen:2>, path=com.leeannjakel.entity.Author.books.<elements>)
                - EntityAttributeFetchImpl(entity=com.leeannjakel.entity.Genre, querySpaceUid=<gen:3>, path=com.leeannjakel.entity.Author.books.<elements>.genre)
                - EntityAttributeFetchImpl(entity=com.leeannjakel.entity.User, querySpaceUid=<gen:4>, path=com.leeannjakel.entity.Author.books.<elements>.user)
                   - CollectionAttributeFetchImpl(collection=com.leeannjakel.entity.User.roles, querySpaceUid=<gen:5>, path=com.leeannjakel.entity.Author.books.<elements>.user.roles)
                      - (collection element) CollectionFetchableElementEntityGraph(entity=com.leeannjakel.entity.Role, querySpaceUid=<gen:6>, path=com.leeannjakel.entity.Author.books.<elements>.user.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.leeannjakel.entity.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(books)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=com.leeannjakel.entity.Author.books)
                - SQL table alias mapping - books1_
                - alias suffix - 1_
                - suffixed key columns - {author_i5_1_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_1_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.leeannjakel.entity.Book)
                      - SQL table alias mapping - books1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_1_2_}
                      - JOIN (JoinDefinedByMetadata(genre)) : <gen:2> -> <gen:3>
                         - EntityQuerySpaceImpl(uid=<gen:3>, entity=com.leeannjakel.entity.Genre)
                            - SQL table alias mapping - genre2_
                            - alias suffix - 3_
                            - suffixed key columns - {id1_2_3_}
                      - JOIN (JoinDefinedByMetadata(user)) : <gen:2> -> <gen:4>
                         - EntityQuerySpaceImpl(uid=<gen:4>, entity=com.leeannjakel.entity.User)
                            - SQL table alias mapping - user3_
                            - alias suffix - 4_
                            - suffixed key columns - {id1_4_4_}

[DEBUG] 2021-05-11 17:11:53.863 [http-nio-8080-exec-6] EntityLoader - Static select for entity com.leeannjakel.entity.Author [READ]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, books1_.author_id as author_i5_1_1_, books1_.id as id1_1_1_, books1_.id as id1_1_2_, books1_.author_id as author_i5_1_2_, books1_.genre_id as genre_id6_1_2_, books1_.isbn as isbn2_1_2_, books1_.notes as notes3_1_2_, books1_.title as title4_1_2_, books1_.user_id as user_id7_1_2_, genre2_.id as id1_2_3_, genre2_.name as name2_2_3_, user3_.id as id1_4_4_, user3_.email as email2_4_4_, user3_.first_name as first_na3_4_4_, user3_.last_name as last_nam4_4_4_, user3_.password as password5_4_4_, user3_.user_name as user_nam6_4_4_ from author author0_ left outer join book books1_ on author0_.id=books1_.author_id left outer join genre genre2_ on books1_.genre_id=genre2_.id left outer join user user3_ on books1_.user_id=user3_.id where author0_.id=?
[DEBUG] 2021-05-11 17:11:53.868 [http-nio-8080-exec-6] Loader - Static select for action ACTION_MERGE on entity com.leeannjakel.entity.Author: select author0_.id as id1_0_1_, author0_.name as name2_0_1_, books1_.author_id as author_i5_1_3_, books1_.id as id1_1_3_, books1_.id as id1_1_0_, books1_.author_id as author_i5_1_0_, books1_.genre_id as genre_id6_1_0_, books1_.isbn as isbn2_1_0_, books1_.notes as notes3_1_0_, books1_.title as title4_1_0_, books1_.user_id as user_id7_1_0_ from author author0_ left outer join book books1_ on author0_.id=books1_.author_id where author0_.id=?
[DEBUG] 2021-05-11 17:11:53.870 [http-nio-8080-exec-6] Loader - Static select for action ACTION_REFRESH on entity com.leeannjakel.entity.Author: select author0_.id as id1_0_1_, author0_.name as name2_0_1_, books1_.author_id as author_i5_1_3_, books1_.id as id1_1_3_, books1_.id as id1_1_0_, books1_.author_id as author_i5_1_0_, books1_.genre_id as genre_id6_1_0_, books1_.isbn as isbn2_1_0_, books1_.notes as notes3_1_0_, books1_.title as title4_1_0_, books1_.user_id as user_id7_1_0_ from author author0_ left outer join book books1_ on author0_.id=books1_.author_id where author0_.id=?
[DEBUG] 2021-05-11 17:11:53.871 [http-nio-8080-exec-6] AbstractEntityPersister - Static SQL for entity: com.leeannjakel.entity.Genre
[DEBUG] 2021-05-11 17:11:53.871 [http-nio-8080-exec-6] AbstractEntityPersister -  Version select: select id from genre where id =?
[DEBUG] 2021-05-11 17:11:53.872 [http-nio-8080-exec-6] AbstractEntityPersister -  Snapshot select: select genre_.id, genre_.name as name2_2_ from genre genre_ where genre_.id=?
[DEBUG] 2021-05-11 17:11:53.876 [http-nio-8080-exec-6] AbstractEntityPersister -  Insert 0: insert into genre (name, id) values (?, ?)
[DEBUG] 2021-05-11 17:11:53.876 [http-nio-8080-exec-6] AbstractEntityPersister -  Update 0: update genre set name=? where id=?
[DEBUG] 2021-05-11 17:11:53.876 [http-nio-8080-exec-6] AbstractEntityPersister -  Delete 0: delete from genre where id=?
[DEBUG] 2021-05-11 17:11:53.876 [http-nio-8080-exec-6] AbstractEntityPersister -  Identity insert: insert into genre (name) values (?)
[DEBUG] 2021-05-11 17:11:53.876 [http-nio-8080-exec-6] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@22818732]
[DEBUG] 2021-05-11 17:11:53.876 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : books
[DEBUG] 2021-05-11 17:11:53.877 [http-nio-8080-exec-6] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@48b1d2aa]
[DEBUG] 2021-05-11 17:11:53.877 [http-nio-8080-exec-6] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1af07896]
[DEBUG] 2021-05-11 17:11:53.877 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2021-05-11 17:11:53.877 [http-nio-8080-exec-6] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-05-11 17:11:53.877 [http-nio-8080-exec-6] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-05-11 17:11:53.877 [http-nio-8080-exec-6] LoadPlanTreePrinter - LoadPlan(entity=com.leeannjakel.entity.Genre)
    - Returns
       - EntityReturnImpl(entity=com.leeannjakel.entity.Genre, querySpaceUid=<gen:0>, path=com.leeannjakel.entity.Genre)
          - CollectionAttributeFetchImpl(collection=com.leeannjakel.entity.Genre.books, querySpaceUid=<gen:1>, path=com.leeannjakel.entity.Genre.books)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.leeannjakel.entity.Book, querySpaceUid=<gen:2>, path=com.leeannjakel.entity.Genre.books.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.leeannjakel.entity.Genre)
          - SQL table alias mapping - genre0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

[DEBUG] 2021-05-11 17:11:53.877 [http-nio-8080-exec-6] EntityLoader - Static select for entity com.leeannjakel.entity.Genre [NONE]: select genre0_.id as id1_2_0_, genre0_.name as name2_2_0_ from genre genre0_ where genre0_.id=?
[DEBUG] 2021-05-11 17:11:53.877 [http-nio-8080-exec-6] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3466d4ed]
[DEBUG] 2021-05-11 17:11:53.878 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : books
[DEBUG] 2021-05-11 17:11:53.878 [http-nio-8080-exec-6] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2e2118b0]
[DEBUG] 2021-05-11 17:11:53.878 [http-nio-8080-exec-6] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@378ce12a]
[DEBUG] 2021-05-11 17:11:53.878 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2021-05-11 17:11:53.878 [http-nio-8080-exec-6] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-05-11 17:11:53.879 [http-nio-8080-exec-6] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-05-11 17:11:53.879 [http-nio-8080-exec-6] LoadPlanTreePrinter - LoadPlan(entity=com.leeannjakel.entity.Genre)
    - Returns
       - EntityReturnImpl(entity=com.leeannjakel.entity.Genre, querySpaceUid=<gen:0>, path=com.leeannjakel.entity.Genre)
          - CollectionAttributeFetchImpl(collection=com.leeannjakel.entity.Genre.books, querySpaceUid=<gen:1>, path=com.leeannjakel.entity.Genre.books)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.leeannjakel.entity.Book, querySpaceUid=<gen:2>, path=com.leeannjakel.entity.Genre.books.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.leeannjakel.entity.Genre)
          - SQL table alias mapping - genre0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

[DEBUG] 2021-05-11 17:11:53.879 [http-nio-8080-exec-6] EntityLoader - Static select for entity com.leeannjakel.entity.Genre [READ]: select genre0_.id as id1_2_0_, genre0_.name as name2_2_0_ from genre genre0_ where genre0_.id=?
[DEBUG] 2021-05-11 17:11:53.880 [http-nio-8080-exec-6] Loader - Static select for action ACTION_MERGE on entity com.leeannjakel.entity.Genre: select genre0_.id as id1_2_1_, genre0_.name as name2_2_1_, books1_.genre_id as genre_id6_1_3_, books1_.id as id1_1_3_, books1_.id as id1_1_0_, books1_.author_id as author_i5_1_0_, books1_.genre_id as genre_id6_1_0_, books1_.isbn as isbn2_1_0_, books1_.notes as notes3_1_0_, books1_.title as title4_1_0_, books1_.user_id as user_id7_1_0_ from genre genre0_ left outer join book books1_ on genre0_.id=books1_.genre_id where genre0_.id=?
[DEBUG] 2021-05-11 17:11:53.892 [http-nio-8080-exec-6] Loader - Static select for action ACTION_REFRESH on entity com.leeannjakel.entity.Genre: select genre0_.id as id1_2_1_, genre0_.name as name2_2_1_, books1_.genre_id as genre_id6_1_3_, books1_.id as id1_1_3_, books1_.id as id1_1_0_, books1_.author_id as author_i5_1_0_, books1_.genre_id as genre_id6_1_0_, books1_.isbn as isbn2_1_0_, books1_.notes as notes3_1_0_, books1_.title as title4_1_0_, books1_.user_id as user_id7_1_0_ from genre genre0_ left outer join book books1_ on genre0_.id=books1_.genre_id where genre0_.id=?
[DEBUG] 2021-05-11 17:11:53.892 [http-nio-8080-exec-6] AbstractEntityPersister - Static SQL for entity: com.leeannjakel.entity.Role
[DEBUG] 2021-05-11 17:11:53.892 [http-nio-8080-exec-6] AbstractEntityPersister -  Version select: select id from role where id =?
[DEBUG] 2021-05-11 17:11:53.892 [http-nio-8080-exec-6] AbstractEntityPersister -  Snapshot select: select role_.id, role_.role_name as role_nam2_3_, role_.user_id as user_id4_3_, role_.user_name as user_nam3_3_ from role role_ where role_.id=?
[DEBUG] 2021-05-11 17:11:53.892 [http-nio-8080-exec-6] AbstractEntityPersister -  Insert 0: insert into role (role_name, user_id, user_name, id) values (?, ?, ?, ?)
[DEBUG] 2021-05-11 17:11:53.892 [http-nio-8080-exec-6] AbstractEntityPersister -  Update 0: update role set role_name=?, user_id=?, user_name=? where id=?
[DEBUG] 2021-05-11 17:11:53.892 [http-nio-8080-exec-6] AbstractEntityPersister -  Delete 0: delete from role where id=?
[DEBUG] 2021-05-11 17:11:53.893 [http-nio-8080-exec-6] AbstractEntityPersister -  Identity insert: insert into role (role_name, user_id, user_name) values (?, ?, ?)
[DEBUG] 2021-05-11 17:11:53.893 [http-nio-8080-exec-6] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@354f8a8a]
[DEBUG] 2021-05-11 17:11:53.893 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : roleName
[DEBUG] 2021-05-11 17:11:53.893 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2021-05-11 17:11:53.894 [http-nio-8080-exec-6] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@66a79424]
[DEBUG] 2021-05-11 17:11:53.895 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : user.books
[DEBUG] 2021-05-11 17:11:53.895 [http-nio-8080-exec-6] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7f207be5]
[DEBUG] 2021-05-11 17:11:53.897 [http-nio-8080-exec-6] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@102af1e1]
[DEBUG] 2021-05-11 17:11:53.897 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2021-05-11 17:11:53.898 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2021-05-11 17:11:53.898 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2021-05-11 17:11:53.913 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2021-05-11 17:11:53.913 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2021-05-11 17:11:53.913 [http-nio-8080-exec-6] MetamodelGraphWalker - Property path deemed to be circular : user.roles
[DEBUG] 2021-05-11 17:11:53.913 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : user.userName
[DEBUG] 2021-05-11 17:11:53.914 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : userName
[DEBUG] 2021-05-11 17:11:53.914 [http-nio-8080-exec-6] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-05-11 17:11:53.915 [http-nio-8080-exec-6] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-05-11 17:11:53.924 [http-nio-8080-exec-6] LoadPlanTreePrinter - LoadPlan(entity=com.leeannjakel.entity.Role)
    - Returns
       - EntityReturnImpl(entity=com.leeannjakel.entity.Role, querySpaceUid=<gen:0>, path=com.leeannjakel.entity.Role)
          - EntityAttributeFetchImpl(entity=com.leeannjakel.entity.User, querySpaceUid=<gen:1>, path=com.leeannjakel.entity.Role.user)
             - CollectionAttributeFetchImpl(collection=com.leeannjakel.entity.User.books, querySpaceUid=<gen:2>, path=com.leeannjakel.entity.Role.user.books)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.leeannjakel.entity.Book, querySpaceUid=<gen:3>, path=com.leeannjakel.entity.Role.user.books.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.leeannjakel.entity.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.leeannjakel.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_4_1_}

[DEBUG] 2021-05-11 17:11:53.924 [http-nio-8080-exec-6] EntityLoader - Static select for entity com.leeannjakel.entity.Role [NONE]: select role0_.id as id1_3_0_, role0_.role_name as role_nam2_3_0_, role0_.user_id as user_id4_3_0_, role0_.user_name as user_nam3_3_0_, user1_.id as id1_4_1_, user1_.email as email2_4_1_, user1_.first_name as first_na3_4_1_, user1_.last_name as last_nam4_4_1_, user1_.password as password5_4_1_, user1_.user_name as user_nam6_4_1_ from role role0_ left outer join user user1_ on role0_.user_id=user1_.id where role0_.id=?
[DEBUG] 2021-05-11 17:11:53.925 [http-nio-8080-exec-6] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4a764174]
[DEBUG] 2021-05-11 17:11:53.925 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : roleName
[DEBUG] 2021-05-11 17:11:53.925 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2021-05-11 17:11:53.925 [http-nio-8080-exec-6] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@15478c2b]
[DEBUG] 2021-05-11 17:11:53.926 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : user.books
[DEBUG] 2021-05-11 17:11:53.926 [http-nio-8080-exec-6] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2a20445a]
[DEBUG] 2021-05-11 17:11:53.926 [http-nio-8080-exec-6] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@62c1fdbe]
[DEBUG] 2021-05-11 17:11:53.926 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2021-05-11 17:11:53.926 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2021-05-11 17:11:53.926 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2021-05-11 17:11:53.926 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2021-05-11 17:11:53.926 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2021-05-11 17:11:53.927 [http-nio-8080-exec-6] MetamodelGraphWalker - Property path deemed to be circular : user.roles
[DEBUG] 2021-05-11 17:11:53.927 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : user.userName
[DEBUG] 2021-05-11 17:11:53.927 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : userName
[DEBUG] 2021-05-11 17:11:53.928 [http-nio-8080-exec-6] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-05-11 17:11:53.929 [http-nio-8080-exec-6] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-05-11 17:11:53.930 [http-nio-8080-exec-6] LoadPlanTreePrinter - LoadPlan(entity=com.leeannjakel.entity.Role)
    - Returns
       - EntityReturnImpl(entity=com.leeannjakel.entity.Role, querySpaceUid=<gen:0>, path=com.leeannjakel.entity.Role)
          - EntityAttributeFetchImpl(entity=com.leeannjakel.entity.User, querySpaceUid=<gen:1>, path=com.leeannjakel.entity.Role.user)
             - CollectionAttributeFetchImpl(collection=com.leeannjakel.entity.User.books, querySpaceUid=<gen:2>, path=com.leeannjakel.entity.Role.user.books)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.leeannjakel.entity.Book, querySpaceUid=<gen:3>, path=com.leeannjakel.entity.Role.user.books.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.leeannjakel.entity.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.leeannjakel.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_4_1_}

[DEBUG] 2021-05-11 17:11:53.930 [http-nio-8080-exec-6] EntityLoader - Static select for entity com.leeannjakel.entity.Role [READ]: select role0_.id as id1_3_0_, role0_.role_name as role_nam2_3_0_, role0_.user_id as user_id4_3_0_, role0_.user_name as user_nam3_3_0_, user1_.id as id1_4_1_, user1_.email as email2_4_1_, user1_.first_name as first_na3_4_1_, user1_.last_name as last_nam4_4_1_, user1_.password as password5_4_1_, user1_.user_name as user_nam6_4_1_ from role role0_ left outer join user user1_ on role0_.user_id=user1_.id where role0_.id=?
[DEBUG] 2021-05-11 17:11:53.930 [http-nio-8080-exec-6] Loader - Static select for action ACTION_MERGE on entity com.leeannjakel.entity.Role: select role0_.id as id1_3_0_, role0_.role_name as role_nam2_3_0_, role0_.user_id as user_id4_3_0_, role0_.user_name as user_nam3_3_0_ from role role0_ where role0_.id=?
[DEBUG] 2021-05-11 17:11:53.930 [http-nio-8080-exec-6] Loader - Static select for action ACTION_REFRESH on entity com.leeannjakel.entity.Role: select role0_.id as id1_3_0_, role0_.role_name as role_nam2_3_0_, role0_.user_id as user_id4_3_0_, role0_.user_name as user_nam3_3_0_ from role role0_ where role0_.id=?
[DEBUG] 2021-05-11 17:11:53.939 [http-nio-8080-exec-6] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1cded060]
[DEBUG] 2021-05-11 17:11:53.939 [http-nio-8080-exec-6] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@468d1269]
[DEBUG] 2021-05-11 17:11:53.939 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : author
[DEBUG] 2021-05-11 17:11:53.939 [http-nio-8080-exec-6] MetamodelGraphWalker - Property path deemed to be circular : author
[DEBUG] 2021-05-11 17:11:53.939 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : genre
[DEBUG] 2021-05-11 17:11:53.939 [http-nio-8080-exec-6] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@45a53788]
[DEBUG] 2021-05-11 17:11:53.940 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : genre.books
[DEBUG] 2021-05-11 17:11:53.940 [http-nio-8080-exec-6] MetamodelGraphWalker - Property path deemed to be circular : genre.books
[DEBUG] 2021-05-11 17:11:53.940 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : genre.name
[DEBUG] 2021-05-11 17:11:53.941 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : isbn
[DEBUG] 2021-05-11 17:11:53.941 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : notes
[DEBUG] 2021-05-11 17:11:53.941 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2021-05-11 17:11:53.941 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2021-05-11 17:11:53.941 [http-nio-8080-exec-6] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@336ca26b]
[DEBUG] 2021-05-11 17:11:53.941 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : user.books
[DEBUG] 2021-05-11 17:11:53.941 [http-nio-8080-exec-6] MetamodelGraphWalker - Property path deemed to be circular : user.books
[DEBUG] 2021-05-11 17:11:53.941 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2021-05-11 17:11:53.941 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2021-05-11 17:11:53.941 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2021-05-11 17:11:53.941 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2021-05-11 17:11:53.941 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2021-05-11 17:11:53.941 [http-nio-8080-exec-6] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@654fd8fb]
[DEBUG] 2021-05-11 17:11:53.942 [http-nio-8080-exec-6] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@25c29a4e]
[DEBUG] 2021-05-11 17:11:53.942 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : user.userName
[DEBUG] 2021-05-11 17:11:53.942 [http-nio-8080-exec-6] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-05-11 17:11:53.953 [http-nio-8080-exec-6] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-05-11 17:11:53.960 [http-nio-8080-exec-6] LoadPlanTreePrinter - LoadPlan(collection=com.leeannjakel.entity.Author.books)
    - Returns
       - CollectionReturnImpl(collection=com.leeannjakel.entity.Author.books, querySpaceUid=<gen:0>, path=[com.leeannjakel.entity.Author.books])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.leeannjakel.entity.Book, querySpaceUid=<gen:1>, path=[com.leeannjakel.entity.Author.books].<elements>)
             - EntityAttributeFetchImpl(entity=com.leeannjakel.entity.Genre, querySpaceUid=<gen:2>, path=[com.leeannjakel.entity.Author.books].<elements>.genre)
             - EntityAttributeFetchImpl(entity=com.leeannjakel.entity.User, querySpaceUid=<gen:3>, path=[com.leeannjakel.entity.Author.books].<elements>.user)
                - CollectionAttributeFetchImpl(collection=com.leeannjakel.entity.User.roles, querySpaceUid=<gen:4>, path=[com.leeannjakel.entity.Author.books].<elements>.user.roles)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.leeannjakel.entity.Role, querySpaceUid=<gen:5>, path=[com.leeannjakel.entity.Author.books].<elements>.user.roles.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.leeannjakel.entity.Author.books)
          - SQL table alias mapping - books0_
          - alias suffix - 0_
          - suffixed key columns - {author_i5_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.leeannjakel.entity.Book)
                - SQL table alias mapping - books0_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}
                - JOIN (JoinDefinedByMetadata(genre)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.leeannjakel.entity.Genre)
                      - SQL table alias mapping - genre1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_2_2_}
                - JOIN (JoinDefinedByMetadata(user)) : <gen:1> -> <gen:3>
                   - EntityQuerySpaceImpl(uid=<gen:3>, entity=com.leeannjakel.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 3_
                      - suffixed key columns - {id1_4_3_}

[DEBUG] 2021-05-11 17:11:53.964 [http-nio-8080-exec-6] CollectionLoader - Static select for collection com.leeannjakel.entity.Author.books: select books0_.author_id as author_i5_1_0_, books0_.id as id1_1_0_, books0_.id as id1_1_1_, books0_.author_id as author_i5_1_1_, books0_.genre_id as genre_id6_1_1_, books0_.isbn as isbn2_1_1_, books0_.notes as notes3_1_1_, books0_.title as title4_1_1_, books0_.user_id as user_id7_1_1_, genre1_.id as id1_2_2_, genre1_.name as name2_2_2_, user2_.id as id1_4_3_, user2_.email as email2_4_3_, user2_.first_name as first_na3_4_3_, user2_.last_name as last_nam4_4_3_, user2_.password as password5_4_3_, user2_.user_name as user_nam6_4_3_ from book books0_ left outer join genre genre1_ on books0_.genre_id=genre1_.id left outer join user user2_ on books0_.user_id=user2_.id where books0_.author_id=?
[DEBUG] 2021-05-11 17:11:53.964 [http-nio-8080-exec-6] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@b116659]
[DEBUG] 2021-05-11 17:11:53.965 [http-nio-8080-exec-6] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@150d52cf]
[DEBUG] 2021-05-11 17:11:53.976 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : author
[DEBUG] 2021-05-11 17:11:53.976 [http-nio-8080-exec-6] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@72c1c4d6]
[DEBUG] 2021-05-11 17:11:53.976 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : author.books
[DEBUG] 2021-05-11 17:11:53.976 [http-nio-8080-exec-6] MetamodelGraphWalker - Property path deemed to be circular : author.books
[DEBUG] 2021-05-11 17:11:53.977 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : author.name
[DEBUG] 2021-05-11 17:11:53.977 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : genre
[DEBUG] 2021-05-11 17:11:53.977 [http-nio-8080-exec-6] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@156056e7]
[DEBUG] 2021-05-11 17:11:53.977 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : genre.books
[DEBUG] 2021-05-11 17:11:53.977 [http-nio-8080-exec-6] MetamodelGraphWalker - Property path deemed to be circular : genre.books
[DEBUG] 2021-05-11 17:11:53.977 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : genre.name
[DEBUG] 2021-05-11 17:11:53.977 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : isbn
[DEBUG] 2021-05-11 17:11:53.977 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : notes
[DEBUG] 2021-05-11 17:11:53.977 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2021-05-11 17:11:53.977 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2021-05-11 17:11:53.977 [http-nio-8080-exec-6] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2021-05-11 17:11:53.977 [http-nio-8080-exec-6] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-05-11 17:11:53.977 [http-nio-8080-exec-6] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-05-11 17:11:53.978 [http-nio-8080-exec-6] LoadPlanTreePrinter - LoadPlan(collection=com.leeannjakel.entity.User.books)
    - Returns
       - CollectionReturnImpl(collection=com.leeannjakel.entity.User.books, querySpaceUid=<gen:0>, path=[com.leeannjakel.entity.User.books])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.leeannjakel.entity.Book, querySpaceUid=<gen:1>, path=[com.leeannjakel.entity.User.books].<elements>)
             - EntityAttributeFetchImpl(entity=com.leeannjakel.entity.Author, querySpaceUid=<gen:2>, path=[com.leeannjakel.entity.User.books].<elements>.author)
             - EntityAttributeFetchImpl(entity=com.leeannjakel.entity.Genre, querySpaceUid=<gen:3>, path=[com.leeannjakel.entity.User.books].<elements>.genre)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.leeannjakel.entity.User.books)
          - SQL table alias mapping - books0_
          - alias suffix - 0_
          - suffixed key columns - {user_id7_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.leeannjakel.entity.Book)
                - SQL table alias mapping - books0_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}
                - JOIN (JoinDefinedByMetadata(author)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.leeannjakel.entity.Author)
                      - SQL table alias mapping - author1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}
                - JOIN (JoinDefinedByMetadata(genre)) : <gen:1> -> <gen:3>
                   - EntityQuerySpaceImpl(uid=<gen:3>, entity=com.leeannjakel.entity.Genre)
                      - SQL table alias mapping - genre2_
                      - alias suffix - 3_
                      - suffixed key columns - {id1_2_3_}

[DEBUG] 2021-05-11 17:11:53.989 [http-nio-8080-exec-6] CollectionLoader - Static select for collection com.leeannjakel.entity.User.books: select books0_.user_id as user_id7_1_0_, books0_.id as id1_1_0_, books0_.id as id1_1_1_, books0_.author_id as author_i5_1_1_, books0_.genre_id as genre_id6_1_1_, books0_.isbn as isbn2_1_1_, books0_.notes as notes3_1_1_, books0_.title as title4_1_1_, books0_.user_id as user_id7_1_1_, author1_.id as id1_0_2_, author1_.name as name2_0_2_, genre2_.id as id1_2_3_, genre2_.name as name2_2_3_ from book books0_ left outer join author author1_ on books0_.author_id=author1_.id left outer join genre genre2_ on books0_.genre_id=genre2_.id where books0_.user_id=?
[DEBUG] 2021-05-11 17:11:53.989 [http-nio-8080-exec-6] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@942bf00]
[DEBUG] 2021-05-11 17:11:53.990 [http-nio-8080-exec-6] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2f9a7370]
[DEBUG] 2021-05-11 17:11:53.990 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : roleName
[DEBUG] 2021-05-11 17:11:53.990 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2021-05-11 17:11:53.990 [http-nio-8080-exec-6] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2021-05-11 17:11:53.990 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : userName
[DEBUG] 2021-05-11 17:11:53.990 [http-nio-8080-exec-6] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-05-11 17:11:53.990 [http-nio-8080-exec-6] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-05-11 17:11:53.991 [http-nio-8080-exec-6] LoadPlanTreePrinter - LoadPlan(collection=com.leeannjakel.entity.User.roles)
    - Returns
       - CollectionReturnImpl(collection=com.leeannjakel.entity.User.roles, querySpaceUid=<gen:0>, path=[com.leeannjakel.entity.User.roles])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.leeannjakel.entity.Role, querySpaceUid=<gen:1>, path=[com.leeannjakel.entity.User.roles].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.leeannjakel.entity.User.roles)
          - SQL table alias mapping - roles0_
          - alias suffix - 0_
          - suffixed key columns - {user_id4_3_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_3_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.leeannjakel.entity.Role)
                - SQL table alias mapping - roles0_
                - alias suffix - 1_
                - suffixed key columns - {id1_3_1_}

[DEBUG] 2021-05-11 17:11:53.994 [http-nio-8080-exec-6] CollectionLoader - Static select for collection com.leeannjakel.entity.User.roles: select roles0_.user_id as user_id4_3_0_, roles0_.id as id1_3_0_, roles0_.id as id1_3_1_, roles0_.role_name as role_nam2_3_1_, roles0_.user_id as user_id4_3_1_, roles0_.user_name as user_nam3_3_1_ from role roles0_ where roles0_.user_id=?
[DEBUG] 2021-05-11 17:11:53.994 [http-nio-8080-exec-6] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@18897e58]
[DEBUG] 2021-05-11 17:11:53.994 [http-nio-8080-exec-6] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@64749fca]
[DEBUG] 2021-05-11 17:11:53.994 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : author
[DEBUG] 2021-05-11 17:11:53.994 [http-nio-8080-exec-6] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@269b7bdf]
[DEBUG] 2021-05-11 17:11:53.994 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : author.books
[DEBUG] 2021-05-11 17:11:53.994 [http-nio-8080-exec-6] MetamodelGraphWalker - Property path deemed to be circular : author.books
[DEBUG] 2021-05-11 17:11:53.994 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : author.name
[DEBUG] 2021-05-11 17:11:53.994 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : genre
[DEBUG] 2021-05-11 17:11:53.994 [http-nio-8080-exec-6] MetamodelGraphWalker - Property path deemed to be circular : genre
[DEBUG] 2021-05-11 17:11:53.994 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : isbn
[DEBUG] 2021-05-11 17:11:53.994 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : notes
[DEBUG] 2021-05-11 17:11:53.994 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2021-05-11 17:11:53.994 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2021-05-11 17:11:53.995 [http-nio-8080-exec-6] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@29d0ce24]
[DEBUG] 2021-05-11 17:11:53.995 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : user.books
[DEBUG] 2021-05-11 17:11:53.995 [http-nio-8080-exec-6] MetamodelGraphWalker - Property path deemed to be circular : user.books
[DEBUG] 2021-05-11 17:11:53.995 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2021-05-11 17:11:53.995 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2021-05-11 17:11:53.995 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2021-05-11 17:11:53.995 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2021-05-11 17:11:53.995 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2021-05-11 17:11:53.995 [http-nio-8080-exec-6] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3c376ab4]
[DEBUG] 2021-05-11 17:11:53.995 [http-nio-8080-exec-6] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@53590e49]
[DEBUG] 2021-05-11 17:11:53.995 [http-nio-8080-exec-6] MetamodelGraphWalker - Visiting attribute path : user.userName
[DEBUG] 2021-05-11 17:11:53.995 [http-nio-8080-exec-6] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-05-11 17:11:53.995 [http-nio-8080-exec-6] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-05-11 17:11:53.997 [http-nio-8080-exec-6] LoadPlanTreePrinter - LoadPlan(collection=com.leeannjakel.entity.Genre.books)
    - Returns
       - CollectionReturnImpl(collection=com.leeannjakel.entity.Genre.books, querySpaceUid=<gen:0>, path=[com.leeannjakel.entity.Genre.books])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.leeannjakel.entity.Book, querySpaceUid=<gen:1>, path=[com.leeannjakel.entity.Genre.books].<elements>)
             - EntityAttributeFetchImpl(entity=com.leeannjakel.entity.Author, querySpaceUid=<gen:2>, path=[com.leeannjakel.entity.Genre.books].<elements>.author)
             - EntityAttributeFetchImpl(entity=com.leeannjakel.entity.User, querySpaceUid=<gen:3>, path=[com.leeannjakel.entity.Genre.books].<elements>.user)
                - CollectionAttributeFetchImpl(collection=com.leeannjakel.entity.User.roles, querySpaceUid=<gen:4>, path=[com.leeannjakel.entity.Genre.books].<elements>.user.roles)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.leeannjakel.entity.Role, querySpaceUid=<gen:5>, path=[com.leeannjakel.entity.Genre.books].<elements>.user.roles.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.leeannjakel.entity.Genre.books)
          - SQL table alias mapping - books0_
          - alias suffix - 0_
          - suffixed key columns - {genre_id6_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.leeannjakel.entity.Book)
                - SQL table alias mapping - books0_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}
                - JOIN (JoinDefinedByMetadata(author)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.leeannjakel.entity.Author)
                      - SQL table alias mapping - author1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}
                - JOIN (JoinDefinedByMetadata(user)) : <gen:1> -> <gen:3>
                   - EntityQuerySpaceImpl(uid=<gen:3>, entity=com.leeannjakel.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 3_
                      - suffixed key columns - {id1_4_3_}

[DEBUG] 2021-05-11 17:11:53.997 [http-nio-8080-exec-6] CollectionLoader - Static select for collection com.leeannjakel.entity.Genre.books: select books0_.genre_id as genre_id6_1_0_, books0_.id as id1_1_0_, books0_.id as id1_1_1_, books0_.author_id as author_i5_1_1_, books0_.genre_id as genre_id6_1_1_, books0_.isbn as isbn2_1_1_, books0_.notes as notes3_1_1_, books0_.title as title4_1_1_, books0_.user_id as user_id7_1_1_, author1_.id as id1_0_2_, author1_.name as name2_0_2_, user2_.id as id1_4_3_, user2_.email as email2_4_3_, user2_.first_name as first_na3_4_3_, user2_.last_name as last_nam4_4_3_, user2_.password as password5_4_3_, user2_.user_name as user_nam6_4_3_ from book books0_ left outer join author author1_ on books0_.author_id=author1_.id left outer join user user2_ on books0_.user_id=user2_.id where books0_.genre_id=?
[DEBUG] 2021-05-11 17:11:54.399 [http-nio-8080-exec-6] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2021-05-11 17:11:54.400 [http-nio-8080-exec-6] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2021-05-11 17:11:54.401 [http-nio-8080-exec-6] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2021-05-11 17:11:54.431 [http-nio-8080-exec-6] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2021-05-11 17:11:54.431 [http-nio-8080-exec-6] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2021-05-11 17:11:54.433 [http-nio-8080-exec-6] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2021-05-11 17:11:54.433 [http-nio-8080-exec-6] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2021-05-11 17:11:54.458 [http-nio-8080-exec-6] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@3c32a715
[DEBUG] 2021-05-11 17:11:54.477 [http-nio-8080-exec-6] SessionFactoryRegistry - Registering SessionFactory: 9498ffe0-b866-416e-b916-5bf44805f544 (<unnamed>)
[DEBUG] 2021-05-11 17:11:54.481 [http-nio-8080-exec-6] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2021-05-11 17:11:55.416 [http-nio-8080-exec-6] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2021-05-11 17:11:56.085 [http-nio-8080-exec-6] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from User as generatedAlias0 where generatedAlias0.userName=:param0
[DEBUG] 2021-05-11 17:11:56.344 [http-nio-8080-exec-6] QueryTranslatorFactoryInitiator - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@4cb4998
[DEBUG] 2021-05-11 17:11:56.683 [http-nio-8080-exec-6] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from com.leeannjakel.entity.User as generatedAlias0 where generatedAlias0.userName=:param0
[DEBUG] 2021-05-11 17:11:56.726 [http-nio-8080-exec-6] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2021-05-11 17:11:56.848 [http-nio-8080-exec-6] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  \-[IDENT] Node: 'leeannjakel'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'User'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'userName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

[DEBUG] 2021-05-11 17:11:57.188 [http-nio-8080-exec-6] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2021-05-11 17:11:57.428 [http-nio-8080-exec-6] FromElement - FromClause{level=1} : com.leeannjakel.entity.User (generatedAlias0) -> user0_
[DEBUG] 2021-05-11 17:11:57.470 [http-nio-8080-exec-6] FromReferenceNode - Resolved : generatedAlias0 -> user0_.id
[DEBUG] 2021-05-11 17:11:57.497 [http-nio-8080-exec-6] FromReferenceNode - Resolved : generatedAlias0 -> user0_.id
[DEBUG] 2021-05-11 17:11:57.530 [http-nio-8080-exec-6] DotNode - getDataType() : userName -> org.hibernate.type.StringType@bb4c937
[DEBUG] 2021-05-11 17:11:57.541 [http-nio-8080-exec-6] FromReferenceNode - Resolved : generatedAlias0.userName -> user0_.user_name
[DEBUG] 2021-05-11 17:11:57.564 [http-nio-8080-exec-6] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2021-05-11 17:11:57.565 [http-nio-8080-exec-6] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} user0_.id ) ( FromClause{level=1} user user0_ ) ( where ( = ( user0_.user_name user0_.id userName ) ? ) ) )
[DEBUG] 2021-05-11 17:11:57.774 [http-nio-8080-exec-6] JoinProcessor - Using FROM fragment [user user0_]
[DEBUG] 2021-05-11 17:11:57.781 [http-nio-8080-exec-6] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2021-05-11 17:11:57.782 [http-nio-8080-exec-6] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (user)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.id as id1_4_' {alias=generatedAlias0, className=com.leeannjakel.entity.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.email as email2_4_, user0_.first_name as first_na3_4_, user0_.last_name as last_nam4_4_, user0_.password as password5_4_, user0_.user_name as user_nam6_4_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'user user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=user,tableAlias=user0_,origin=null,columns={,className=com.leeannjakel.entity.User}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user0_.user_name' {propertyName=userName,dereferenceType=PRIMITIVE,getPropertyPath=userName,path=generatedAlias0.userName,tableAlias=user0_,className=com.leeannjakel.entity.User,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'user0_.id' {alias=generatedAlias0, className=com.leeannjakel.entity.User, tableAlias=user0_}
          |  \-[IDENT] IdentNode: 'userName' {originalText=userName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@bb4c937}

[DEBUG] 2021-05-11 17:11:57.798 [http-nio-8080-exec-6] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2021-05-11 17:11:57.938 [http-nio-8080-exec-6] QueryTranslatorImpl - HQL: select generatedAlias0 from com.leeannjakel.entity.User as generatedAlias0 where generatedAlias0.userName=:param0
[DEBUG] 2021-05-11 17:11:57.945 [http-nio-8080-exec-6] QueryTranslatorImpl - SQL: select user0_.id as id1_4_, user0_.email as email2_4_, user0_.first_name as first_na3_4_, user0_.last_name as last_nam4_4_, user0_.password as password5_4_, user0_.user_name as user_nam6_4_ from user user0_ where user0_.user_name=?
[DEBUG] 2021-05-11 17:11:57.945 [http-nio-8080-exec-6] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2021-05-11 17:11:58.418 [http-nio-8080-exec-6] SQL - select user0_.id as id1_4_, user0_.email as email2_4_, user0_.first_name as first_na3_4_, user0_.last_name as last_nam4_4_, user0_.password as password5_4_, user0_.user_name as user_nam6_4_ from user user0_ where user0_.user_name=?
[DEBUG] 2021-05-11 17:11:58.895 [http-nio-8080-exec-6] Loader - Result set row: 0
[DEBUG] 2021-05-11 17:11:59.019 [http-nio-8080-exec-6] Loader - Result row: EntityKey[com.leeannjakel.entity.User#1]
[DEBUG] 2021-05-11 17:11:59.255 [http-nio-8080-exec-6] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.User#1]
[DEBUG] 2021-05-11 17:11:59.299 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `books` : value = NOT NULL COLLECTION
[DEBUG] 2021-05-11 17:11:59.300 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`books`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:11:59.582 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `email` : value = email@something.com
[DEBUG] 2021-05-11 17:11:59.584 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:11:59.584 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `firstName` : value = LeeAnn
[DEBUG] 2021-05-11 17:11:59.584 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:11:59.584 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `lastName` : value = Jakel
[DEBUG] 2021-05-11 17:11:59.584 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:11:59.584 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `password` : value = password
[DEBUG] 2021-05-11 17:11:59.584 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:11:59.584 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2021-05-11 17:11:59.584 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:11:59.584 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `userName` : value = ljakel
[DEBUG] 2021-05-11 17:11:59.584 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:11:59.604 [http-nio-8080-exec-6] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.User#1]
[DEBUG] 2021-05-11 17:11:59.655 [http-nio-8080-exec-6] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.leeannjakel.entity.User.roles#1]
[DEBUG] 2021-05-11 17:11:59.655 [http-nio-8080-exec-6] SQL - select roles0_.user_id as user_id4_3_0_, roles0_.id as id1_3_0_, roles0_.id as id1_3_1_, roles0_.role_name as role_nam2_3_1_, roles0_.user_id as user_id4_3_1_, roles0_.user_name as user_nam3_3_1_ from role roles0_ where roles0_.user_id=?
[DEBUG] 2021-05-11 17:11:59.760 [http-nio-8080-exec-6] ResultSetProcessorImpl - Preparing collection initializer : [com.leeannjakel.entity.User.roles#1]
[DEBUG] 2021-05-11 17:11:59.883 [http-nio-8080-exec-6] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-05-11 17:11:59.935 [http-nio-8080-exec-6] CollectionReferenceInitializerImpl - Found row of collection: [com.leeannjakel.entity.User.roles#1]
[DEBUG] 2021-05-11 17:12:00.091 [http-nio-8080-exec-6] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.Role#7]
[DEBUG] 2021-05-11 17:12:00.099 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `roleName` : value = admin
[DEBUG] 2021-05-11 17:12:00.107 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`roleName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:12:00.107 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2021-05-11 17:12:00.107 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:12:00.107 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `userName` : value = ljakel
[DEBUG] 2021-05-11 17:12:00.107 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:12:00.107 [http-nio-8080-exec-6] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.Role#7]
[DEBUG] 2021-05-11 17:12:00.108 [http-nio-8080-exec-6] CollectionLoadContext - 1 collections were found in result set for role: com.leeannjakel.entity.User.roles
[DEBUG] 2021-05-11 17:12:00.108 [http-nio-8080-exec-6] CollectionLoadContext - Collection fully initialized: [com.leeannjakel.entity.User.roles#1]
[DEBUG] 2021-05-11 17:12:00.108 [http-nio-8080-exec-6] CollectionLoadContext - 1 collections initialized for role: com.leeannjakel.entity.User.roles
[DEBUG] 2021-05-11 17:12:00.116 [http-nio-8080-exec-6] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-05-11 17:12:00.117 [http-nio-8080-exec-6] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2021-05-11 17:12:00.156 [http-nio-8080-exec-6] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-05-11 17:12:00.503 [http-nio-8080-exec-6] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from Book as generatedAlias0 where generatedAlias0.user=1
[DEBUG] 2021-05-11 17:12:00.513 [http-nio-8080-exec-6] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from com.leeannjakel.entity.Book as generatedAlias0 where generatedAlias0.user=1
[DEBUG] 2021-05-11 17:12:00.548 [http-nio-8080-exec-6] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2021-05-11 17:12:00.555 [http-nio-8080-exec-6] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  \-[IDENT] Node: 'leeannjakel'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'Book'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'user'
          \-[NUM_INT] Node: '1'

[DEBUG] 2021-05-11 17:12:00.555 [http-nio-8080-exec-6] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2021-05-11 17:12:00.556 [http-nio-8080-exec-6] FromElement - FromClause{level=1} : com.leeannjakel.entity.Book (generatedAlias0) -> book0_
[DEBUG] 2021-05-11 17:12:00.556 [http-nio-8080-exec-6] FromReferenceNode - Resolved : generatedAlias0 -> book0_.id
[DEBUG] 2021-05-11 17:12:00.556 [http-nio-8080-exec-6] FromReferenceNode - Resolved : generatedAlias0 -> book0_.id
[DEBUG] 2021-05-11 17:12:00.574 [http-nio-8080-exec-6] DotNode - getDataType() : user -> org.hibernate.type.ManyToOneType(com.leeannjakel.entity.User)
[DEBUG] 2021-05-11 17:12:00.574 [http-nio-8080-exec-6] DotNode - dereferenceShortcut() : property user in com.leeannjakel.entity.Book does not require a join.
[DEBUG] 2021-05-11 17:12:00.575 [http-nio-8080-exec-6] DotNode - Terminal getPropertyPath = [user]
[DEBUG] 2021-05-11 17:12:00.575 [http-nio-8080-exec-6] FromReferenceNode - Resolved : generatedAlias0.user -> book0_.user_id
[DEBUG] 2021-05-11 17:12:00.599 [http-nio-8080-exec-6] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2021-05-11 17:12:00.599 [http-nio-8080-exec-6] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} book0_.id ) ( FromClause{level=1} book book0_ ) ( where ( = ( book0_.user_id book0_.id user ) 1 ) ) )
[DEBUG] 2021-05-11 17:12:00.613 [http-nio-8080-exec-6] JoinProcessor - Using FROM fragment [book book0_]
[DEBUG] 2021-05-11 17:12:00.614 [http-nio-8080-exec-6] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2021-05-11 17:12:00.622 [http-nio-8080-exec-6] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (book)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'book0_.id as id1_1_' {alias=generatedAlias0, className=com.leeannjakel.entity.Book, tableAlias=book0_}
    |  \-[SQL_TOKEN] SqlFragment: 'book0_.author_id as author_i5_1_, book0_.genre_id as genre_id6_1_, book0_.isbn as isbn2_1_, book0_.notes as notes3_1_, book0_.title as title4_1_, book0_.user_id as user_id7_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[book0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'book book0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=book,tableAlias=book0_,origin=null,columns={,className=com.leeannjakel.entity.Book}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'book0_.user_id' {propertyName=user,dereferenceType=UNKNOWN,getPropertyPath=user,path=generatedAlias0.user,tableAlias=book0_,className=com.leeannjakel.entity.Book,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'book0_.id' {alias=generatedAlias0, className=com.leeannjakel.entity.Book, tableAlias=book0_}
          |  \-[IDENT] IdentNode: 'user' {originalText=user}
          \-[NUM_INT] LiteralNode: '1'

[DEBUG] 2021-05-11 17:12:00.623 [http-nio-8080-exec-6] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2021-05-11 17:12:00.623 [http-nio-8080-exec-6] QueryTranslatorImpl - HQL: select generatedAlias0 from com.leeannjakel.entity.Book as generatedAlias0 where generatedAlias0.user=1
[DEBUG] 2021-05-11 17:12:00.623 [http-nio-8080-exec-6] QueryTranslatorImpl - SQL: select book0_.id as id1_1_, book0_.author_id as author_i5_1_, book0_.genre_id as genre_id6_1_, book0_.isbn as isbn2_1_, book0_.notes as notes3_1_, book0_.title as title4_1_, book0_.user_id as user_id7_1_ from book book0_ where book0_.user_id=1
[DEBUG] 2021-05-11 17:12:00.623 [http-nio-8080-exec-6] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2021-05-11 17:12:00.645 [http-nio-8080-exec-6] SQL - select book0_.id as id1_1_, book0_.author_id as author_i5_1_, book0_.genre_id as genre_id6_1_, book0_.isbn as isbn2_1_, book0_.notes as notes3_1_, book0_.title as title4_1_, book0_.user_id as user_id7_1_ from book book0_ where book0_.user_id=1
[DEBUG] 2021-05-11 17:12:00.694 [http-nio-8080-exec-6] Loader - Result set row: 0
[DEBUG] 2021-05-11 17:12:00.694 [http-nio-8080-exec-6] Loader - Result row: EntityKey[com.leeannjakel.entity.Book#1]
[DEBUG] 2021-05-11 17:12:00.699 [http-nio-8080-exec-6] Loader - Result set row: 1
[DEBUG] 2021-05-11 17:12:00.699 [http-nio-8080-exec-6] Loader - Result row: EntityKey[com.leeannjakel.entity.Book#3]
[DEBUG] 2021-05-11 17:12:00.700 [http-nio-8080-exec-6] Loader - Result set row: 2
[DEBUG] 2021-05-11 17:12:00.700 [http-nio-8080-exec-6] Loader - Result row: EntityKey[com.leeannjakel.entity.Book#8]
[DEBUG] 2021-05-11 17:12:00.713 [http-nio-8080-exec-6] Loader - Result set row: 3
[DEBUG] 2021-05-11 17:12:00.713 [http-nio-8080-exec-6] Loader - Result row: EntityKey[com.leeannjakel.entity.Book#9]
[DEBUG] 2021-05-11 17:12:00.713 [http-nio-8080-exec-6] Loader - Result set row: 4
[DEBUG] 2021-05-11 17:12:00.713 [http-nio-8080-exec-6] Loader - Result row: EntityKey[com.leeannjakel.entity.Book#11]
[DEBUG] 2021-05-11 17:12:00.713 [http-nio-8080-exec-6] Loader - Result set row: 5
[DEBUG] 2021-05-11 17:12:00.714 [http-nio-8080-exec-6] Loader - Result row: EntityKey[com.leeannjakel.entity.Book#12]
[DEBUG] 2021-05-11 17:12:00.714 [http-nio-8080-exec-6] Loader - Result set row: 6
[DEBUG] 2021-05-11 17:12:00.714 [http-nio-8080-exec-6] Loader - Result row: EntityKey[com.leeannjakel.entity.Book#13]
[DEBUG] 2021-05-11 17:12:00.714 [http-nio-8080-exec-6] Loader - Result set row: 7
[DEBUG] 2021-05-11 17:12:00.714 [http-nio-8080-exec-6] Loader - Result row: EntityKey[com.leeannjakel.entity.Book#14]
[DEBUG] 2021-05-11 17:12:00.714 [http-nio-8080-exec-6] Loader - Result set row: 8
[DEBUG] 2021-05-11 17:12:00.714 [http-nio-8080-exec-6] Loader - Result row: EntityKey[com.leeannjakel.entity.Book#15]
[DEBUG] 2021-05-11 17:12:00.715 [http-nio-8080-exec-6] Loader - Result set row: 9
[DEBUG] 2021-05-11 17:12:00.715 [http-nio-8080-exec-6] Loader - Result row: EntityKey[com.leeannjakel.entity.Book#16]
[DEBUG] 2021-05-11 17:12:00.715 [http-nio-8080-exec-6] Loader - Result set row: 10
[DEBUG] 2021-05-11 17:12:00.734 [http-nio-8080-exec-6] Loader - Result row: EntityKey[com.leeannjakel.entity.Book#17]
[DEBUG] 2021-05-11 17:12:00.737 [http-nio-8080-exec-6] Loader - Result set row: 11
[DEBUG] 2021-05-11 17:12:00.737 [http-nio-8080-exec-6] Loader - Result row: EntityKey[com.leeannjakel.entity.Book#18]
[DEBUG] 2021-05-11 17:12:00.743 [http-nio-8080-exec-6] Loader - Result set row: 12
[DEBUG] 2021-05-11 17:12:00.743 [http-nio-8080-exec-6] Loader - Result row: EntityKey[com.leeannjakel.entity.Book#19]
[DEBUG] 2021-05-11 17:12:00.745 [http-nio-8080-exec-6] Loader - Result set row: 13
[DEBUG] 2021-05-11 17:12:00.745 [http-nio-8080-exec-6] Loader - Result row: EntityKey[com.leeannjakel.entity.Book#21]
[DEBUG] 2021-05-11 17:12:00.745 [http-nio-8080-exec-6] Loader - Result set row: 14
[DEBUG] 2021-05-11 17:12:00.746 [http-nio-8080-exec-6] Loader - Result row: EntityKey[com.leeannjakel.entity.Book#22]
[DEBUG] 2021-05-11 17:12:00.782 [http-nio-8080-exec-6] Loader - Result set row: 15
[DEBUG] 2021-05-11 17:12:00.782 [http-nio-8080-exec-6] Loader - Result row: EntityKey[com.leeannjakel.entity.Book#23]
[DEBUG] 2021-05-11 17:12:00.782 [http-nio-8080-exec-6] Loader - Result set row: 16
[DEBUG] 2021-05-11 17:12:00.782 [http-nio-8080-exec-6] Loader - Result row: EntityKey[com.leeannjakel.entity.Book#24]
[DEBUG] 2021-05-11 17:12:00.809 [http-nio-8080-exec-6] Loader - Result set row: 17
[DEBUG] 2021-05-11 17:12:00.810 [http-nio-8080-exec-6] Loader - Result row: EntityKey[com.leeannjakel.entity.Book#25]
[DEBUG] 2021-05-11 17:12:00.822 [http-nio-8080-exec-6] Loader - Result set row: 18
[DEBUG] 2021-05-11 17:12:00.822 [http-nio-8080-exec-6] Loader - Result row: EntityKey[com.leeannjakel.entity.Book#26]
[DEBUG] 2021-05-11 17:12:00.893 [http-nio-8080-exec-6] Loader - Result set row: 19
[DEBUG] 2021-05-11 17:12:00.894 [http-nio-8080-exec-6] Loader - Result row: EntityKey[com.leeannjakel.entity.Book#27]
[DEBUG] 2021-05-11 17:12:00.907 [http-nio-8080-exec-6] Loader - Result set row: 20
[DEBUG] 2021-05-11 17:12:00.919 [http-nio-8080-exec-6] Loader - Result row: EntityKey[com.leeannjakel.entity.Book#28]
[DEBUG] 2021-05-11 17:12:00.920 [http-nio-8080-exec-6] Loader - Result set row: 21
[DEBUG] 2021-05-11 17:12:00.923 [http-nio-8080-exec-6] Loader - Result row: EntityKey[com.leeannjakel.entity.Book#29]
[DEBUG] 2021-05-11 17:12:00.925 [http-nio-8080-exec-6] Loader - Result set row: 22
[DEBUG] 2021-05-11 17:12:00.925 [http-nio-8080-exec-6] Loader - Result row: EntityKey[com.leeannjakel.entity.Book#30]
[DEBUG] 2021-05-11 17:12:00.928 [http-nio-8080-exec-6] Loader - Result set row: 23
[DEBUG] 2021-05-11 17:12:00.936 [http-nio-8080-exec-6] Loader - Result row: EntityKey[com.leeannjakel.entity.Book#31]
[DEBUG] 2021-05-11 17:12:00.937 [http-nio-8080-exec-6] Loader - Result set row: 24
[DEBUG] 2021-05-11 17:12:00.937 [http-nio-8080-exec-6] Loader - Result row: EntityKey[com.leeannjakel.entity.Book#32]
[DEBUG] 2021-05-11 17:12:00.939 [http-nio-8080-exec-6] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.Book#1]
[DEBUG] 2021-05-11 17:12:00.940 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `author` : value = 1
[DEBUG] 2021-05-11 17:12:00.940 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`author`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:12:00.957 [http-nio-8080-exec-6] SQL - select author0_.id as id1_0_0_, author0_.name as name2_0_0_, books1_.author_id as author_i5_1_1_, books1_.id as id1_1_1_, books1_.id as id1_1_2_, books1_.author_id as author_i5_1_2_, books1_.genre_id as genre_id6_1_2_, books1_.isbn as isbn2_1_2_, books1_.notes as notes3_1_2_, books1_.title as title4_1_2_, books1_.user_id as user_id7_1_2_, genre2_.id as id1_2_3_, genre2_.name as name2_2_3_, user3_.id as id1_4_4_, user3_.email as email2_4_4_, user3_.first_name as first_na3_4_4_, user3_.last_name as last_nam4_4_4_, user3_.password as password5_4_4_, user3_.user_name as user_nam6_4_4_ from author author0_ left outer join book books1_ on author0_.id=books1_.author_id left outer join genre genre2_ on books1_.genre_id=genre2_.id left outer join user user3_ on books1_.user_id=user3_.id where author0_.id=?
[DEBUG] 2021-05-11 17:12:00.993 [http-nio-8080-exec-6] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-05-11 17:12:00.994 [http-nio-8080-exec-6] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-05-11 17:12:01.005 [http-nio-8080-exec-6] CollectionReferenceInitializerImpl - Found row of collection: [com.leeannjakel.entity.Author.books#1]
[DEBUG] 2021-05-11 17:12:01.017 [http-nio-8080-exec-6] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.Author#1]
[DEBUG] 2021-05-11 17:12:01.017 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `books` : value = NOT NULL COLLECTION
[DEBUG] 2021-05-11 17:12:01.017 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`books`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:12:01.017 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `name` : value = Sarah J. Maas 
[DEBUG] 2021-05-11 17:12:01.018 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:12:01.018 [http-nio-8080-exec-6] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.Author#1]
[DEBUG] 2021-05-11 17:12:01.018 [http-nio-8080-exec-6] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.Genre#1]
[DEBUG] 2021-05-11 17:12:01.018 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `books` : value = NOT NULL COLLECTION
[DEBUG] 2021-05-11 17:12:01.018 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`books`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:12:01.018 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `name` : value = Young Adult
[DEBUG] 2021-05-11 17:12:01.018 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:12:01.019 [http-nio-8080-exec-6] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.Genre#1]
[DEBUG] 2021-05-11 17:12:01.029 [http-nio-8080-exec-6] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.User#1]
[DEBUG] 2021-05-11 17:12:01.030 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `books` : value = NOT NULL COLLECTION
[DEBUG] 2021-05-11 17:12:01.030 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`books`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:12:01.030 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `email` : value = email@something.com
[DEBUG] 2021-05-11 17:12:01.030 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:12:01.030 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `firstName` : value = LeeAnn
[DEBUG] 2021-05-11 17:12:01.030 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:12:01.030 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `lastName` : value = Jakel
[DEBUG] 2021-05-11 17:12:01.030 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:12:01.030 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `password` : value = password
[DEBUG] 2021-05-11 17:12:01.030 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:12:01.030 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2021-05-11 17:12:01.030 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:12:01.030 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `userName` : value = ljakel
[DEBUG] 2021-05-11 17:12:01.030 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:12:01.030 [http-nio-8080-exec-6] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.User#1]
[DEBUG] 2021-05-11 17:12:01.030 [http-nio-8080-exec-6] CollectionLoadContext - 1 collections were found in result set for role: com.leeannjakel.entity.Author.books
[DEBUG] 2021-05-11 17:12:01.030 [http-nio-8080-exec-6] CollectionLoadContext - Collection fully initialized: [com.leeannjakel.entity.Author.books#1]
[DEBUG] 2021-05-11 17:12:01.031 [http-nio-8080-exec-6] CollectionLoadContext - 1 collections initialized for role: com.leeannjakel.entity.Author.books
[DEBUG] 2021-05-11 17:12:01.031 [http-nio-8080-exec-6] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-05-11 17:12:01.162 [http-nio-8080-exec-6] AbstractLoadPlanBasedEntityLoader - Done entity load : com.leeannjakel.entity.Author#1
[DEBUG] 2021-05-11 17:12:01.164 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `genre` : value = 1
[DEBUG] 2021-05-11 17:12:01.164 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`genre`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:12:01.170 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `isbn` : value = 9781408857861
[DEBUG] 2021-05-11 17:12:01.171 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`isbn`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:12:01.171 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `notes` : value = Fantastic book, the mystery and romance is perfectly combined! Rhys is the best! Yay for night court! The 3rd book in this series is my favorite
[DEBUG] 2021-05-11 17:12:01.190 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`notes`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:12:01.190 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `title` : value = A Court Of Thorns and Roses
[DEBUG] 2021-05-11 17:12:01.191 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:12:01.191 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2021-05-11 17:12:01.191 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:12:01.205 [http-nio-8080-exec-6] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.Book#1]
[DEBUG] 2021-05-11 17:12:01.205 [http-nio-8080-exec-6] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.Book#3]
[DEBUG] 2021-05-11 17:12:01.205 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `author` : value = 5
[DEBUG] 2021-05-11 17:12:01.205 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`author`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:12:01.206 [http-nio-8080-exec-6] SQL - select author0_.id as id1_0_0_, author0_.name as name2_0_0_, books1_.author_id as author_i5_1_1_, books1_.id as id1_1_1_, books1_.id as id1_1_2_, books1_.author_id as author_i5_1_2_, books1_.genre_id as genre_id6_1_2_, books1_.isbn as isbn2_1_2_, books1_.notes as notes3_1_2_, books1_.title as title4_1_2_, books1_.user_id as user_id7_1_2_, genre2_.id as id1_2_3_, genre2_.name as name2_2_3_, user3_.id as id1_4_4_, user3_.email as email2_4_4_, user3_.first_name as first_na3_4_4_, user3_.last_name as last_nam4_4_4_, user3_.password as password5_4_4_, user3_.user_name as user_nam6_4_4_ from author author0_ left outer join book books1_ on author0_.id=books1_.author_id left outer join genre genre2_ on books1_.genre_id=genre2_.id left outer join user user3_ on books1_.user_id=user3_.id where author0_.id=?
[DEBUG] 2021-05-11 17:12:01.248 [http-nio-8080-exec-6] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-05-11 17:12:01.262 [http-nio-8080-exec-6] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-05-11 17:12:01.264 [http-nio-8080-exec-6] CollectionReferenceInitializerImpl - Found row of collection: [com.leeannjakel.entity.Author.books#5]
[DEBUG] 2021-05-11 17:12:01.288 [http-nio-8080-exec-6] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.Author#5]
[DEBUG] 2021-05-11 17:12:01.288 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `books` : value = NOT NULL COLLECTION
[DEBUG] 2021-05-11 17:12:01.288 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`books`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:12:01.304 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `name` : value = Nora Roberts
[DEBUG] 2021-05-11 17:12:01.304 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:12:01.305 [http-nio-8080-exec-6] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.Author#5]
[DEBUG] 2021-05-11 17:12:01.305 [http-nio-8080-exec-6] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.Genre#5]
[DEBUG] 2021-05-11 17:12:01.305 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `books` : value = NOT NULL COLLECTION
[DEBUG] 2021-05-11 17:12:01.305 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`books`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:12:01.305 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `name` : value = Romance
[DEBUG] 2021-05-11 17:12:01.305 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:12:01.305 [http-nio-8080-exec-6] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.Genre#5]
[DEBUG] 2021-05-11 17:12:01.305 [http-nio-8080-exec-6] CollectionLoadContext - 1 collections were found in result set for role: com.leeannjakel.entity.Author.books
[DEBUG] 2021-05-11 17:12:01.305 [http-nio-8080-exec-6] CollectionLoadContext - Collection fully initialized: [com.leeannjakel.entity.Author.books#5]
[DEBUG] 2021-05-11 17:12:01.305 [http-nio-8080-exec-6] CollectionLoadContext - 1 collections initialized for role: com.leeannjakel.entity.Author.books
[DEBUG] 2021-05-11 17:12:01.305 [http-nio-8080-exec-6] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-05-11 17:12:01.305 [http-nio-8080-exec-6] AbstractLoadPlanBasedEntityLoader - Done entity load : com.leeannjakel.entity.Author#5
[DEBUG] 2021-05-11 17:12:01.308 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `genre` : value = 5
[DEBUG] 2021-05-11 17:12:01.308 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`genre`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:12:01.309 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `isbn` : value = 9780425259856
[DEBUG] 2021-05-11 17:12:01.309 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`isbn`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:12:01.309 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `notes` : value = null
[DEBUG] 2021-05-11 17:12:01.309 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`notes`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:12:01.309 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `title` : value = Dark Witch
[DEBUG] 2021-05-11 17:12:01.310 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:12:01.310 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2021-05-11 17:12:01.310 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:12:01.310 [http-nio-8080-exec-6] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.Book#3]
[DEBUG] 2021-05-11 17:12:01.310 [http-nio-8080-exec-6] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.Book#8]
[DEBUG] 2021-05-11 17:12:01.310 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `author` : value = 14
[DEBUG] 2021-05-11 17:12:01.310 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`author`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:12:01.310 [http-nio-8080-exec-6] SQL - select author0_.id as id1_0_0_, author0_.name as name2_0_0_, books1_.author_id as author_i5_1_1_, books1_.id as id1_1_1_, books1_.id as id1_1_2_, books1_.author_id as author_i5_1_2_, books1_.genre_id as genre_id6_1_2_, books1_.isbn as isbn2_1_2_, books1_.notes as notes3_1_2_, books1_.title as title4_1_2_, books1_.user_id as user_id7_1_2_, genre2_.id as id1_2_3_, genre2_.name as name2_2_3_, user3_.id as id1_4_4_, user3_.email as email2_4_4_, user3_.first_name as first_na3_4_4_, user3_.last_name as last_nam4_4_4_, user3_.password as password5_4_4_, user3_.user_name as user_nam6_4_4_ from author author0_ left outer join book books1_ on author0_.id=books1_.author_id left outer join genre genre2_ on books1_.genre_id=genre2_.id left outer join user user3_ on books1_.user_id=user3_.id where author0_.id=?
[DEBUG] 2021-05-11 17:12:01.389 [http-nio-8080-exec-6] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-05-11 17:12:01.389 [http-nio-8080-exec-6] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-05-11 17:12:01.390 [http-nio-8080-exec-6] CollectionReferenceInitializerImpl - Found row of collection: [com.leeannjakel.entity.Author.books#14]
[DEBUG] 2021-05-11 17:12:01.390 [http-nio-8080-exec-6] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2021-05-11 17:12:01.390 [http-nio-8080-exec-6] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-05-11 17:12:01.390 [http-nio-8080-exec-6] CollectionReferenceInitializerImpl - Found row of collection: [com.leeannjakel.entity.Author.books#14]
[DEBUG] 2021-05-11 17:12:01.391 [http-nio-8080-exec-6] ResultSetProcessorImpl - Starting ResultSet row #2
[DEBUG] 2021-05-11 17:12:01.391 [http-nio-8080-exec-6] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-05-11 17:12:01.401 [http-nio-8080-exec-6] CollectionReferenceInitializerImpl - Found row of collection: [com.leeannjakel.entity.Author.books#14]
[DEBUG] 2021-05-11 17:12:01.408 [http-nio-8080-exec-6] ResultSetProcessorImpl - Starting ResultSet row #3
[DEBUG] 2021-05-11 17:12:01.409 [http-nio-8080-exec-6] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-05-11 17:12:01.410 [http-nio-8080-exec-6] CollectionReferenceInitializerImpl - Found row of collection: [com.leeannjakel.entity.Author.books#14]
[DEBUG] 2021-05-11 17:12:01.434 [http-nio-8080-exec-6] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.Author#14]
[DEBUG] 2021-05-11 17:12:01.438 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `books` : value = NOT NULL COLLECTION
[DEBUG] 2021-05-11 17:12:01.439 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`books`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:12:01.439 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `name` : value = Sarah J. Maas
[DEBUG] 2021-05-11 17:12:01.441 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:12:01.451 [http-nio-8080-exec-6] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.Author#14]
[DEBUG] 2021-05-11 17:12:01.468 [http-nio-8080-exec-6] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.Genre#6]
[DEBUG] 2021-05-11 17:12:01.468 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `books` : value = NOT NULL COLLECTION
[DEBUG] 2021-05-11 17:12:01.468 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`books`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:12:01.468 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `name` : value = Action
[DEBUG] 2021-05-11 17:12:01.469 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:12:01.469 [http-nio-8080-exec-6] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.Genre#6]
[DEBUG] 2021-05-11 17:12:01.469 [http-nio-8080-exec-6] CollectionLoadContext - 1 collections were found in result set for role: com.leeannjakel.entity.Author.books
[DEBUG] 2021-05-11 17:12:01.469 [http-nio-8080-exec-6] CollectionLoadContext - Collection fully initialized: [com.leeannjakel.entity.Author.books#14]
[DEBUG] 2021-05-11 17:12:01.469 [http-nio-8080-exec-6] CollectionLoadContext - 1 collections initialized for role: com.leeannjakel.entity.Author.books
[DEBUG] 2021-05-11 17:12:01.469 [http-nio-8080-exec-6] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-05-11 17:12:01.469 [http-nio-8080-exec-6] AbstractLoadPlanBasedEntityLoader - Done entity load : com.leeannjakel.entity.Author#14
[DEBUG] 2021-05-11 17:12:01.469 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `genre` : value = 1
[DEBUG] 2021-05-11 17:12:01.469 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`genre`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:12:01.470 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `isbn` : value = 9781599906959
[DEBUG] 2021-05-11 17:12:01.470 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`isbn`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:12:01.470 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `notes` : value = 
[DEBUG] 2021-05-11 17:12:01.470 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`notes`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:12:01.470 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `title` : value = Throne of glass
[DEBUG] 2021-05-11 17:12:01.470 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:12:01.470 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2021-05-11 17:12:01.470 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:12:01.470 [http-nio-8080-exec-6] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.Book#8]
[DEBUG] 2021-05-11 17:12:01.470 [http-nio-8080-exec-6] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.Book#9]
[DEBUG] 2021-05-11 17:12:01.470 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `author` : value = 14
[DEBUG] 2021-05-11 17:12:01.470 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`author`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:12:01.485 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `genre` : value = 1
[DEBUG] 2021-05-11 17:12:01.485 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`genre`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:12:01.485 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `isbn` : value = 9781599906959
[DEBUG] 2021-05-11 17:12:01.485 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`isbn`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:12:01.485 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `notes` : value = 
[DEBUG] 2021-05-11 17:12:01.485 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`notes`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:12:01.485 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `title` : value = Throne of glass
[DEBUG] 2021-05-11 17:12:01.486 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:12:01.486 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2021-05-11 17:12:01.486 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:12:01.486 [http-nio-8080-exec-6] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.Book#9]
[DEBUG] 2021-05-11 17:12:01.487 [http-nio-8080-exec-6] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.Book#11]
[DEBUG] 2021-05-11 17:12:01.487 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `author` : value = 14
[DEBUG] 2021-05-11 17:12:01.522 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`author`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:12:01.523 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `genre` : value = 1
[DEBUG] 2021-05-11 17:12:01.523 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`genre`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:12:01.537 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `isbn` : value = 9781635574043
[DEBUG] 2021-05-11 17:12:01.537 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`isbn`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:12:01.537 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `notes` : value = woooooo
[DEBUG] 2021-05-11 17:12:01.537 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`notes`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:12:01.537 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `title` : value = Crescent City : house of earth and blood
[DEBUG] 2021-05-11 17:12:01.537 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:12:01.537 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2021-05-11 17:12:01.537 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:12:01.543 [http-nio-8080-exec-6] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.Book#11]
[DEBUG] 2021-05-11 17:12:01.543 [http-nio-8080-exec-6] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.Book#12]
[DEBUG] 2021-05-11 17:12:01.543 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `author` : value = 14
[DEBUG] 2021-05-11 17:12:01.543 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`author`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:12:01.543 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `genre` : value = 6
[DEBUG] 2021-05-11 17:12:01.543 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`genre`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:12:01.543 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `isbn` : value = 9781599906959
[DEBUG] 2021-05-11 17:12:01.556 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`isbn`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:12:01.556 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `notes` : value = yay!
[DEBUG] 2021-05-11 17:12:01.557 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`notes`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:12:01.557 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `title` : value = Throne of glass
[DEBUG] 2021-05-11 17:12:01.557 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:12:01.557 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2021-05-11 17:12:01.557 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:12:01.581 [http-nio-8080-exec-6] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.Book#12]
[DEBUG] 2021-05-11 17:12:01.581 [http-nio-8080-exec-6] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.Book#13]
[DEBUG] 2021-05-11 17:12:01.581 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `author` : value = 16
[DEBUG] 2021-05-11 17:12:01.581 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`author`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:12:01.604 [http-nio-8080-exec-6] SQL - select author0_.id as id1_0_0_, author0_.name as name2_0_0_, books1_.author_id as author_i5_1_1_, books1_.id as id1_1_1_, books1_.id as id1_1_2_, books1_.author_id as author_i5_1_2_, books1_.genre_id as genre_id6_1_2_, books1_.isbn as isbn2_1_2_, books1_.notes as notes3_1_2_, books1_.title as title4_1_2_, books1_.user_id as user_id7_1_2_, genre2_.id as id1_2_3_, genre2_.name as name2_2_3_, user3_.id as id1_4_4_, user3_.email as email2_4_4_, user3_.first_name as first_na3_4_4_, user3_.last_name as last_nam4_4_4_, user3_.password as password5_4_4_, user3_.user_name as user_nam6_4_4_ from author author0_ left outer join book books1_ on author0_.id=books1_.author_id left outer join genre genre2_ on books1_.genre_id=genre2_.id left outer join user user3_ on books1_.user_id=user3_.id where author0_.id=?
[DEBUG] 2021-05-11 17:12:01.668 [http-nio-8080-exec-6] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-05-11 17:12:01.669 [http-nio-8080-exec-6] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-05-11 17:12:01.669 [http-nio-8080-exec-6] CollectionReferenceInitializerImpl - Found row of collection: [com.leeannjakel.entity.Author.books#16]
[DEBUG] 2021-05-11 17:12:01.670 [http-nio-8080-exec-6] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.Author#16]
[DEBUG] 2021-05-11 17:12:01.670 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `books` : value = NOT NULL COLLECTION
[DEBUG] 2021-05-11 17:12:01.670 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`books`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:12:01.670 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `name` : value = Leigh Bardugo
[DEBUG] 2021-05-11 17:12:01.670 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:12:01.670 [http-nio-8080-exec-6] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.Author#16]
[DEBUG] 2021-05-11 17:12:01.670 [http-nio-8080-exec-6] CollectionLoadContext - 1 collections were found in result set for role: com.leeannjakel.entity.Author.books
[DEBUG] 2021-05-11 17:12:01.670 [http-nio-8080-exec-6] CollectionLoadContext - Collection fully initialized: [com.leeannjakel.entity.Author.books#16]
[DEBUG] 2021-05-11 17:12:01.670 [http-nio-8080-exec-6] CollectionLoadContext - 1 collections initialized for role: com.leeannjakel.entity.Author.books
[DEBUG] 2021-05-11 17:12:01.670 [http-nio-8080-exec-6] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-05-11 17:12:01.670 [http-nio-8080-exec-6] AbstractLoadPlanBasedEntityLoader - Done entity load : com.leeannjakel.entity.Author#16
[DEBUG] 2021-05-11 17:12:01.670 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `genre` : value = 1
[DEBUG] 2021-05-11 17:12:01.670 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`genre`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:12:01.670 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `isbn` : value = 9781780622262
[DEBUG] 2021-05-11 17:12:01.670 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`isbn`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:12:01.670 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `notes` : value = book 1 of the first series
[DEBUG] 2021-05-11 17:12:01.670 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`notes`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:12:01.670 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `title` : value = The Grisha : Shadow and Bone
[DEBUG] 2021-05-11 17:12:01.670 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:12:01.670 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2021-05-11 17:12:01.670 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:12:01.671 [http-nio-8080-exec-6] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.Book#13]
[DEBUG] 2021-05-11 17:12:01.671 [http-nio-8080-exec-6] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.Book#14]
[DEBUG] 2021-05-11 17:12:01.671 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `author` : value = 17
[DEBUG] 2021-05-11 17:12:01.694 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`author`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:12:01.710 [http-nio-8080-exec-6] SQL - select author0_.id as id1_0_0_, author0_.name as name2_0_0_, books1_.author_id as author_i5_1_1_, books1_.id as id1_1_1_, books1_.id as id1_1_2_, books1_.author_id as author_i5_1_2_, books1_.genre_id as genre_id6_1_2_, books1_.isbn as isbn2_1_2_, books1_.notes as notes3_1_2_, books1_.title as title4_1_2_, books1_.user_id as user_id7_1_2_, genre2_.id as id1_2_3_, genre2_.name as name2_2_3_, user3_.id as id1_4_4_, user3_.email as email2_4_4_, user3_.first_name as first_na3_4_4_, user3_.last_name as last_nam4_4_4_, user3_.password as password5_4_4_, user3_.user_name as user_nam6_4_4_ from author author0_ left outer join book books1_ on author0_.id=books1_.author_id left outer join genre genre2_ on books1_.genre_id=genre2_.id left outer join user user3_ on books1_.user_id=user3_.id where author0_.id=?
[DEBUG] 2021-05-11 17:12:01.761 [http-nio-8080-exec-6] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-05-11 17:12:01.762 [http-nio-8080-exec-6] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-05-11 17:12:01.762 [http-nio-8080-exec-6] CollectionReferenceInitializerImpl - Found row of collection: [com.leeannjakel.entity.Author.books#17]
[DEBUG] 2021-05-11 17:12:01.762 [http-nio-8080-exec-6] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2021-05-11 17:12:01.772 [http-nio-8080-exec-6] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-05-11 17:12:01.776 [http-nio-8080-exec-6] CollectionReferenceInitializerImpl - Found row of collection: [com.leeannjakel.entity.Author.books#17]
[DEBUG] 2021-05-11 17:12:01.788 [http-nio-8080-exec-6] ResultSetProcessorImpl - Starting ResultSet row #2
[DEBUG] 2021-05-11 17:12:01.788 [http-nio-8080-exec-6] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-05-11 17:12:01.788 [http-nio-8080-exec-6] CollectionReferenceInitializerImpl - Found row of collection: [com.leeannjakel.entity.Author.books#17]
[DEBUG] 2021-05-11 17:12:01.788 [http-nio-8080-exec-6] ResultSetProcessorImpl - Starting ResultSet row #3
[DEBUG] 2021-05-11 17:12:01.788 [http-nio-8080-exec-6] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-05-11 17:12:01.791 [http-nio-8080-exec-6] CollectionReferenceInitializerImpl - Found row of collection: [com.leeannjakel.entity.Author.books#17]
[DEBUG] 2021-05-11 17:12:01.791 [http-nio-8080-exec-6] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.Author#17]
[DEBUG] 2021-05-11 17:12:01.791 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `books` : value = NOT NULL COLLECTION
[DEBUG] 2021-05-11 17:12:01.791 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`books`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:12:01.791 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `name` : value = Victoria Aveyard
[DEBUG] 2021-05-11 17:12:01.791 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:12:01.791 [http-nio-8080-exec-6] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.Author#17]
[DEBUG] 2021-05-11 17:12:01.791 [http-nio-8080-exec-6] CollectionLoadContext - 1 collections were found in result set for role: com.leeannjakel.entity.Author.books
[DEBUG] 2021-05-11 17:12:01.791 [http-nio-8080-exec-6] CollectionLoadContext - Collection fully initialized: [com.leeannjakel.entity.Author.books#17]
[DEBUG] 2021-05-11 17:12:01.791 [http-nio-8080-exec-6] CollectionLoadContext - 1 collections initialized for role: com.leeannjakel.entity.Author.books
[DEBUG] 2021-05-11 17:12:01.792 [http-nio-8080-exec-6] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-05-11 17:12:01.792 [http-nio-8080-exec-6] AbstractLoadPlanBasedEntityLoader - Done entity load : com.leeannjakel.entity.Author#17
[DEBUG] 2021-05-11 17:12:01.808 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `genre` : value = 1
[DEBUG] 2021-05-11 17:12:01.808 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`genre`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:12:01.812 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `isbn` : value = 9780062310668
[DEBUG] 2021-05-11 17:12:01.812 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`isbn`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:12:01.812 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `notes` : value = Book 2
[DEBUG] 2021-05-11 17:12:01.812 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`notes`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:12:01.812 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `title` : value = Glass Sword (Red Queen #2)
[DEBUG] 2021-05-11 17:12:01.812 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:12:01.812 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2021-05-11 17:12:01.815 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:12:01.819 [http-nio-8080-exec-6] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.Book#14]
[DEBUG] 2021-05-11 17:12:01.819 [http-nio-8080-exec-6] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.Book#15]
[DEBUG] 2021-05-11 17:12:01.819 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `author` : value = 17
[DEBUG] 2021-05-11 17:12:01.819 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`author`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:12:01.819 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `genre` : value = 1
[DEBUG] 2021-05-11 17:12:01.819 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`genre`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:12:01.819 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `isbn` : value = 9780062310637
[DEBUG] 2021-05-11 17:12:01.819 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`isbn`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:12:01.819 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `notes` : value = Book1
[DEBUG] 2021-05-11 17:12:01.819 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`notes`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:12:01.819 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `title` : value = Red Queen
[DEBUG] 2021-05-11 17:12:01.819 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:12:01.819 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2021-05-11 17:12:01.819 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:12:01.831 [http-nio-8080-exec-6] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.Book#15]
[DEBUG] 2021-05-11 17:12:01.831 [http-nio-8080-exec-6] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.Book#16]
[DEBUG] 2021-05-11 17:12:01.831 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `author` : value = 17
[DEBUG] 2021-05-11 17:12:01.831 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`author`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:12:01.832 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `genre` : value = 1
[DEBUG] 2021-05-11 17:12:01.832 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`genre`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:12:01.834 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `isbn` : value = 9780062310699
[DEBUG] 2021-05-11 17:12:01.834 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`isbn`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:12:01.834 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `notes` : value = Book3

[DEBUG] 2021-05-11 17:12:01.834 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`notes`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:12:01.834 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `title` : value = King's Cage (Red Queen)
[DEBUG] 2021-05-11 17:12:01.834 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:12:01.835 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2021-05-11 17:12:01.835 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:12:01.837 [http-nio-8080-exec-6] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.Book#16]
[DEBUG] 2021-05-11 17:12:01.838 [http-nio-8080-exec-6] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.Book#17]
[DEBUG] 2021-05-11 17:12:01.838 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `author` : value = 17
[DEBUG] 2021-05-11 17:12:01.838 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`author`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:12:01.838 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `genre` : value = 1
[DEBUG] 2021-05-11 17:12:01.838 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`genre`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:12:01.838 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `isbn` : value = 9781409175995
[DEBUG] 2021-05-11 17:12:01.838 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`isbn`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:12:01.838 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `notes` : value = 
[DEBUG] 2021-05-11 17:12:01.838 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`notes`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:12:01.838 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `title` : value = War Storm (Red Queen)
[DEBUG] 2021-05-11 17:12:01.838 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:12:01.838 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2021-05-11 17:12:01.838 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:12:01.865 [http-nio-8080-exec-6] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.Book#17]
[DEBUG] 2021-05-11 17:12:01.865 [http-nio-8080-exec-6] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.Book#18]
[DEBUG] 2021-05-11 17:12:01.866 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `author` : value = 2
[DEBUG] 2021-05-11 17:12:01.866 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`author`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:12:01.882 [http-nio-8080-exec-6] SQL - select author0_.id as id1_0_0_, author0_.name as name2_0_0_, books1_.author_id as author_i5_1_1_, books1_.id as id1_1_1_, books1_.id as id1_1_2_, books1_.author_id as author_i5_1_2_, books1_.genre_id as genre_id6_1_2_, books1_.isbn as isbn2_1_2_, books1_.notes as notes3_1_2_, books1_.title as title4_1_2_, books1_.user_id as user_id7_1_2_, genre2_.id as id1_2_3_, genre2_.name as name2_2_3_, user3_.id as id1_4_4_, user3_.email as email2_4_4_, user3_.first_name as first_na3_4_4_, user3_.last_name as last_nam4_4_4_, user3_.password as password5_4_4_, user3_.user_name as user_nam6_4_4_ from author author0_ left outer join book books1_ on author0_.id=books1_.author_id left outer join genre genre2_ on books1_.genre_id=genre2_.id left outer join user user3_ on books1_.user_id=user3_.id where author0_.id=?
[DEBUG] 2021-05-11 17:12:01.924 [http-nio-8080-exec-6] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-05-11 17:12:01.924 [http-nio-8080-exec-6] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-05-11 17:12:01.925 [http-nio-8080-exec-6] CollectionReferenceInitializerImpl - Found row of collection: [com.leeannjakel.entity.Author.books#2]
[DEBUG] 2021-05-11 17:12:01.933 [http-nio-8080-exec-6] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2021-05-11 17:12:01.933 [http-nio-8080-exec-6] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-05-11 17:12:01.934 [http-nio-8080-exec-6] CollectionReferenceInitializerImpl - Found row of collection: [com.leeannjakel.entity.Author.books#2]
[DEBUG] 2021-05-11 17:12:01.934 [http-nio-8080-exec-6] ResultSetProcessorImpl - Starting ResultSet row #2
[DEBUG] 2021-05-11 17:12:01.934 [http-nio-8080-exec-6] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-05-11 17:12:01.934 [http-nio-8080-exec-6] CollectionReferenceInitializerImpl - Found row of collection: [com.leeannjakel.entity.Author.books#2]
[DEBUG] 2021-05-11 17:12:01.957 [http-nio-8080-exec-6] ResultSetProcessorImpl - Starting ResultSet row #3
[DEBUG] 2021-05-11 17:12:01.957 [http-nio-8080-exec-6] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-05-11 17:12:01.968 [http-nio-8080-exec-6] CollectionReferenceInitializerImpl - Found row of collection: [com.leeannjakel.entity.Author.books#2]
[DEBUG] 2021-05-11 17:12:01.968 [http-nio-8080-exec-6] ResultSetProcessorImpl - Starting ResultSet row #4
[DEBUG] 2021-05-11 17:12:01.973 [http-nio-8080-exec-6] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-05-11 17:12:01.973 [http-nio-8080-exec-6] CollectionReferenceInitializerImpl - Found row of collection: [com.leeannjakel.entity.Author.books#2]
[DEBUG] 2021-05-11 17:12:01.974 [http-nio-8080-exec-6] ResultSetProcessorImpl - Starting ResultSet row #5
[DEBUG] 2021-05-11 17:12:01.977 [http-nio-8080-exec-6] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-05-11 17:12:01.980 [http-nio-8080-exec-6] CollectionReferenceInitializerImpl - Found row of collection: [com.leeannjakel.entity.Author.books#2]
[DEBUG] 2021-05-11 17:12:01.980 [http-nio-8080-exec-6] ResultSetProcessorImpl - Starting ResultSet row #6
[DEBUG] 2021-05-11 17:12:01.990 [http-nio-8080-exec-6] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-05-11 17:12:02.004 [http-nio-8080-exec-6] CollectionReferenceInitializerImpl - Found row of collection: [com.leeannjakel.entity.Author.books#2]
[DEBUG] 2021-05-11 17:12:02.005 [http-nio-8080-exec-6] ResultSetProcessorImpl - Starting ResultSet row #7
[DEBUG] 2021-05-11 17:12:02.005 [http-nio-8080-exec-6] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-05-11 17:12:02.016 [http-nio-8080-exec-6] CollectionReferenceInitializerImpl - Found row of collection: [com.leeannjakel.entity.Author.books#2]
[DEBUG] 2021-05-11 17:12:02.016 [http-nio-8080-exec-6] ResultSetProcessorImpl - Starting ResultSet row #8
[DEBUG] 2021-05-11 17:12:02.016 [http-nio-8080-exec-6] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-05-11 17:12:02.022 [http-nio-8080-exec-6] CollectionReferenceInitializerImpl - Found row of collection: [com.leeannjakel.entity.Author.books#2]
[DEBUG] 2021-05-11 17:12:02.023 [http-nio-8080-exec-6] ResultSetProcessorImpl - Starting ResultSet row #9
[DEBUG] 2021-05-11 17:12:02.023 [http-nio-8080-exec-6] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-05-11 17:12:02.023 [http-nio-8080-exec-6] CollectionReferenceInitializerImpl - Found row of collection: [com.leeannjakel.entity.Author.books#2]
[DEBUG] 2021-05-11 17:12:02.036 [http-nio-8080-exec-6] ResultSetProcessorImpl - Starting ResultSet row #10
[DEBUG] 2021-05-11 17:12:02.037 [http-nio-8080-exec-6] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-05-11 17:12:02.037 [http-nio-8080-exec-6] CollectionReferenceInitializerImpl - Found row of collection: [com.leeannjakel.entity.Author.books#2]
[DEBUG] 2021-05-11 17:12:02.037 [http-nio-8080-exec-6] ResultSetProcessorImpl - Starting ResultSet row #11
[DEBUG] 2021-05-11 17:12:02.057 [http-nio-8080-exec-6] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-05-11 17:12:02.061 [http-nio-8080-exec-6] CollectionReferenceInitializerImpl - Found row of collection: [com.leeannjakel.entity.Author.books#2]
[DEBUG] 2021-05-11 17:12:02.070 [http-nio-8080-exec-6] ResultSetProcessorImpl - Starting ResultSet row #12
[DEBUG] 2021-05-11 17:12:02.071 [http-nio-8080-exec-6] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-05-11 17:12:02.090 [http-nio-8080-exec-6] CollectionReferenceInitializerImpl - Found row of collection: [com.leeannjakel.entity.Author.books#2]
[DEBUG] 2021-05-11 17:12:02.096 [http-nio-8080-exec-6] ResultSetProcessorImpl - Starting ResultSet row #13
[DEBUG] 2021-05-11 17:12:02.096 [http-nio-8080-exec-6] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-05-11 17:12:02.096 [http-nio-8080-exec-6] CollectionReferenceInitializerImpl - Found row of collection: [com.leeannjakel.entity.Author.books#2]
[DEBUG] 2021-05-11 17:12:02.106 [http-nio-8080-exec-6] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.Author#2]
[DEBUG] 2021-05-11 17:12:02.106 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `books` : value = NOT NULL COLLECTION
[DEBUG] 2021-05-11 17:12:02.106 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`books`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:12:02.106 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `name` : value = Cassandra Clare
[DEBUG] 2021-05-11 17:12:02.106 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:12:02.116 [http-nio-8080-exec-6] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.Author#2]
[DEBUG] 2021-05-11 17:12:02.117 [http-nio-8080-exec-6] CollectionLoadContext - 1 collections were found in result set for role: com.leeannjakel.entity.Author.books
[DEBUG] 2021-05-11 17:12:02.117 [http-nio-8080-exec-6] CollectionLoadContext - Collection fully initialized: [com.leeannjakel.entity.Author.books#2]
[DEBUG] 2021-05-11 17:12:02.118 [http-nio-8080-exec-6] CollectionLoadContext - 1 collections initialized for role: com.leeannjakel.entity.Author.books
[DEBUG] 2021-05-11 17:12:02.118 [http-nio-8080-exec-6] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-05-11 17:12:02.118 [http-nio-8080-exec-6] AbstractLoadPlanBasedEntityLoader - Done entity load : com.leeannjakel.entity.Author#2
[DEBUG] 2021-05-11 17:12:02.118 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `genre` : value = 1
[DEBUG] 2021-05-11 17:12:02.118 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`genre`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:12:02.132 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `isbn` : value = 9781534406254
[DEBUG] 2021-05-11 17:12:02.137 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`isbn`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:12:02.137 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `notes` : value = 
[DEBUG] 2021-05-11 17:12:02.137 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`notes`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:12:02.137 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `title` : value = City of Bones: 10th Anniversary Edition (The Mortal Instruments)
[DEBUG] 2021-05-11 17:12:02.137 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:12:02.137 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2021-05-11 17:12:02.137 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:12:02.137 [http-nio-8080-exec-6] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.Book#18]
[DEBUG] 2021-05-11 17:12:02.137 [http-nio-8080-exec-6] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.Book#19]
[DEBUG] 2021-05-11 17:12:02.137 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `author` : value = 2
[DEBUG] 2021-05-11 17:12:02.137 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`author`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:12:02.146 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `genre` : value = 1
[DEBUG] 2021-05-11 17:12:02.146 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`genre`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:12:02.147 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `isbn` : value = 9780606106405
[DEBUG] 2021-05-11 17:12:02.147 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`isbn`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:12:02.147 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `notes` : value = The Mortal Instruments  Book 2
[DEBUG] 2021-05-11 17:12:02.147 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`notes`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:12:02.147 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `title` : value = City Of Ashes Book Two
[DEBUG] 2021-05-11 17:12:02.150 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:12:02.151 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2021-05-11 17:12:02.151 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:12:02.163 [http-nio-8080-exec-6] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.Book#19]
[DEBUG] 2021-05-11 17:12:02.170 [http-nio-8080-exec-6] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.Book#21]
[DEBUG] 2021-05-11 17:12:02.170 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `author` : value = 2
[DEBUG] 2021-05-11 17:12:02.170 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`author`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:12:02.184 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `genre` : value = 1
[DEBUG] 2021-05-11 17:12:02.184 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`genre`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:12:02.185 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `isbn` : value = 9780606107235
[DEBUG] 2021-05-11 17:12:02.185 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`isbn`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:12:02.185 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `notes` : value = Book3 
[DEBUG] 2021-05-11 17:12:02.185 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`notes`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:12:02.185 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `title` : value = City Of Glass
[DEBUG] 2021-05-11 17:12:02.185 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:12:02.185 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2021-05-11 17:12:02.185 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:12:02.187 [http-nio-8080-exec-6] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.Book#21]
[DEBUG] 2021-05-11 17:12:02.187 [http-nio-8080-exec-6] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.Book#22]
[DEBUG] 2021-05-11 17:12:02.188 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `author` : value = 2
[DEBUG] 2021-05-11 17:12:02.188 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`author`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:12:02.204 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `genre` : value = 1
[DEBUG] 2021-05-11 17:12:02.204 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`genre`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:12:02.206 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `isbn` : value = 9780606269087
[DEBUG] 2021-05-11 17:12:02.206 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`isbn`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:12:02.206 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `notes` : value = Book4
[DEBUG] 2021-05-11 17:12:02.206 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`notes`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:12:02.206 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `title` : value = City Of Fallen Angels
[DEBUG] 2021-05-11 17:12:02.206 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:12:02.206 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2021-05-11 17:12:02.206 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:12:02.206 [http-nio-8080-exec-6] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.Book#22]
[DEBUG] 2021-05-11 17:12:02.206 [http-nio-8080-exec-6] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.Book#23]
[DEBUG] 2021-05-11 17:12:02.206 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `author` : value = 2
[DEBUG] 2021-05-11 17:12:02.206 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`author`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:12:02.206 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `genre` : value = 1
[DEBUG] 2021-05-11 17:12:02.207 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`genre`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:12:02.207 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `isbn` : value = 9781442416864
[DEBUG] 2021-05-11 17:12:02.208 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`isbn`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:12:02.208 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `notes` : value = The Mortal Instruments book 5
[DEBUG] 2021-05-11 17:12:02.208 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`notes`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:12:02.208 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `title` : value = City of lost souls
[DEBUG] 2021-05-11 17:12:02.208 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:12:02.209 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2021-05-11 17:12:02.209 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:12:02.227 [http-nio-8080-exec-6] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.Book#23]
[DEBUG] 2021-05-11 17:12:02.229 [http-nio-8080-exec-6] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.Book#24]
[DEBUG] 2021-05-11 17:12:02.230 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `author` : value = 2
[DEBUG] 2021-05-11 17:12:02.230 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`author`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:12:02.230 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `genre` : value = 1
[DEBUG] 2021-05-11 17:12:02.230 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`genre`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:12:02.231 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `isbn` : value = 9780606371384
[DEBUG] 2021-05-11 17:12:02.231 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`isbn`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:12:02.231 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `notes` : value = The Mortal Instruments 
book 6 
[DEBUG] 2021-05-11 17:12:02.231 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`notes`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:12:02.231 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `title` : value = City Of Heavenly Fire
[DEBUG] 2021-05-11 17:12:02.231 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:12:02.231 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2021-05-11 17:12:02.231 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:12:02.246 [http-nio-8080-exec-6] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.Book#24]
[DEBUG] 2021-05-11 17:12:02.247 [http-nio-8080-exec-6] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.Book#25]
[DEBUG] 2021-05-11 17:12:02.247 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `author` : value = 2
[DEBUG] 2021-05-11 17:12:02.247 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`author`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:12:02.247 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `genre` : value = 1
[DEBUG] 2021-05-11 17:12:02.247 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`genre`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:12:02.247 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `isbn` : value = 9780606232869
[DEBUG] 2021-05-11 17:12:02.247 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`isbn`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:12:02.247 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `notes` : value = The Infernal Devices Book 1
[DEBUG] 2021-05-11 17:12:02.247 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`notes`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:12:02.260 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `title` : value = Clockwork Angel
[DEBUG] 2021-05-11 17:12:02.261 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:12:02.261 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2021-05-11 17:12:02.261 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:12:02.265 [http-nio-8080-exec-6] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.Book#25]
[DEBUG] 2021-05-11 17:12:02.265 [http-nio-8080-exec-6] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.Book#26]
[DEBUG] 2021-05-11 17:12:02.265 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `author` : value = 2
[DEBUG] 2021-05-11 17:12:02.265 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`author`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:12:02.268 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `genre` : value = 1
[DEBUG] 2021-05-11 17:12:02.270 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`genre`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:12:02.270 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `isbn` : value = 9781416975892
[DEBUG] 2021-05-11 17:12:02.277 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`isbn`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:12:02.277 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `notes` : value = The Infernal Devices Book 2
[DEBUG] 2021-05-11 17:12:02.277 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`notes`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:12:02.277 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `title` : value = Clockwork Prince                            Infernal Devices
[DEBUG] 2021-05-11 17:12:02.277 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:12:02.277 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2021-05-11 17:12:02.277 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:12:02.277 [http-nio-8080-exec-6] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.Book#26]
[DEBUG] 2021-05-11 17:12:02.277 [http-nio-8080-exec-6] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.Book#27]
[DEBUG] 2021-05-11 17:12:02.278 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `author` : value = 2
[DEBUG] 2021-05-11 17:12:02.278 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`author`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:12:02.280 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `genre` : value = 1
[DEBUG] 2021-05-11 17:12:02.280 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`genre`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:12:02.280 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `isbn` : value = 9780606353403
[DEBUG] 2021-05-11 17:12:02.281 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`isbn`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:12:02.281 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `notes` : value = 
[DEBUG] 2021-05-11 17:12:02.281 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`notes`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:12:02.281 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `title` : value = Clockwork Princess Graphic Novel
[DEBUG] 2021-05-11 17:12:02.281 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:12:02.281 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2021-05-11 17:12:02.281 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:12:02.281 [http-nio-8080-exec-6] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.Book#27]
[DEBUG] 2021-05-11 17:12:02.281 [http-nio-8080-exec-6] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.Book#28]
[DEBUG] 2021-05-11 17:12:02.281 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `author` : value = 2
[DEBUG] 2021-05-11 17:12:02.281 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`author`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:12:02.284 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `genre` : value = 1
[DEBUG] 2021-05-11 17:12:02.284 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`genre`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:12:02.284 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `isbn` : value = 9781481431873
[DEBUG] 2021-05-11 17:12:02.284 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`isbn`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:12:02.284 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `notes` : value = The Last Hours Book 1
[DEBUG] 2021-05-11 17:12:02.284 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`notes`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:12:02.284 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `title` : value = Chain of gold
[DEBUG] 2021-05-11 17:12:02.284 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:12:02.297 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2021-05-11 17:12:02.298 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:12:02.311 [http-nio-8080-exec-6] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.Book#28]
[DEBUG] 2021-05-11 17:12:02.311 [http-nio-8080-exec-6] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.Book#29]
[DEBUG] 2021-05-11 17:12:02.311 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `author` : value = 2
[DEBUG] 2021-05-11 17:12:02.311 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`author`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:12:02.311 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `genre` : value = 1
[DEBUG] 2021-05-11 17:12:02.311 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`genre`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:12:02.311 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `isbn` : value = 9781406358100
[DEBUG] 2021-05-11 17:12:02.311 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`isbn`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:12:02.311 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `notes` : value = The Last Hours Book 2
[DEBUG] 2021-05-11 17:12:02.311 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`notes`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:12:02.311 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `title` : value = The Last Hours
[DEBUG] 2021-05-11 17:12:02.311 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:12:02.311 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2021-05-11 17:12:02.311 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:12:02.311 [http-nio-8080-exec-6] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.Book#29]
[DEBUG] 2021-05-11 17:12:02.315 [http-nio-8080-exec-6] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.Book#30]
[DEBUG] 2021-05-11 17:12:02.315 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `author` : value = 2
[DEBUG] 2021-05-11 17:12:02.316 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`author`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:12:02.323 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `genre` : value = 1
[DEBUG] 2021-05-11 17:12:02.323 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`genre`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:12:02.324 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `isbn` : value = 9783442314225
[DEBUG] 2021-05-11 17:12:02.324 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`isbn`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:12:02.324 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `notes` : value = The Dark Artifices Book 1
[DEBUG] 2021-05-11 17:12:02.324 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`notes`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:12:02.324 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `title` : value = Lady Midnight
[DEBUG] 2021-05-11 17:12:02.324 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:12:02.324 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2021-05-11 17:12:02.324 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:12:02.332 [http-nio-8080-exec-6] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.Book#30]
[DEBUG] 2021-05-11 17:12:02.338 [http-nio-8080-exec-6] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.Book#31]
[DEBUG] 2021-05-11 17:12:02.338 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `author` : value = 2
[DEBUG] 2021-05-11 17:12:02.342 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`author`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:12:02.342 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `genre` : value = 1
[DEBUG] 2021-05-11 17:12:02.348 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`genre`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:12:02.348 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `isbn` : value = 9781442468405
[DEBUG] 2021-05-11 17:12:02.348 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`isbn`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:12:02.348 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `notes` : value = The Dark Artifices Book 2
[DEBUG] 2021-05-11 17:12:02.348 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`notes`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:12:02.349 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `title` : value = Lord of Shadows
[DEBUG] 2021-05-11 17:12:02.349 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:12:02.349 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2021-05-11 17:12:02.349 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:12:02.349 [http-nio-8080-exec-6] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.Book#31]
[DEBUG] 2021-05-11 17:12:02.349 [http-nio-8080-exec-6] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.Book#32]
[DEBUG] 2021-05-11 17:12:02.349 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `author` : value = 2
[DEBUG] 2021-05-11 17:12:02.349 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`author`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:12:02.349 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `genre` : value = 1
[DEBUG] 2021-05-11 17:12:02.349 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`genre`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:12:02.349 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `isbn` : value = 9781442468436
[DEBUG] 2021-05-11 17:12:02.349 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`isbn`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:12:02.349 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `notes` : value = The Dark Artifices Book 3
[DEBUG] 2021-05-11 17:12:02.349 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`notes`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:12:02.349 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `title` : value = Queen of air and darkness
[DEBUG] 2021-05-11 17:12:02.349 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:12:02.349 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2021-05-11 17:12:02.349 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:12:02.349 [http-nio-8080-exec-6] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.Book#32]
[DEBUG] 2021-05-11 17:12:02.366 [http-nio-8080-exec-6] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.leeannjakel.entity.User.roles#1]
[DEBUG] 2021-05-11 17:12:02.366 [http-nio-8080-exec-6] SQL - select roles0_.user_id as user_id4_3_0_, roles0_.id as id1_3_0_, roles0_.id as id1_3_1_, roles0_.role_name as role_nam2_3_1_, roles0_.user_id as user_id4_3_1_, roles0_.user_name as user_nam3_3_1_ from role roles0_ where roles0_.user_id=?
[DEBUG] 2021-05-11 17:12:02.382 [http-nio-8080-exec-6] ResultSetProcessorImpl - Preparing collection initializer : [com.leeannjakel.entity.User.roles#1]
[DEBUG] 2021-05-11 17:12:02.383 [http-nio-8080-exec-6] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-05-11 17:12:02.404 [http-nio-8080-exec-6] CollectionReferenceInitializerImpl - Found row of collection: [com.leeannjakel.entity.User.roles#1]
[DEBUG] 2021-05-11 17:12:02.405 [http-nio-8080-exec-6] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.Role#7]
[DEBUG] 2021-05-11 17:12:02.405 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `roleName` : value = admin
[DEBUG] 2021-05-11 17:12:02.405 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`roleName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:12:02.405 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2021-05-11 17:12:02.405 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:12:02.405 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `userName` : value = ljakel
[DEBUG] 2021-05-11 17:12:02.405 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:12:02.405 [http-nio-8080-exec-6] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.Role#7]
[DEBUG] 2021-05-11 17:12:02.413 [http-nio-8080-exec-6] CollectionLoadContext - 1 collections were found in result set for role: com.leeannjakel.entity.User.roles
[DEBUG] 2021-05-11 17:12:02.413 [http-nio-8080-exec-6] CollectionLoadContext - Collection fully initialized: [com.leeannjakel.entity.User.roles#1]
[DEBUG] 2021-05-11 17:12:02.413 [http-nio-8080-exec-6] CollectionLoadContext - 1 collections initialized for role: com.leeannjakel.entity.User.roles
[DEBUG] 2021-05-11 17:12:02.414 [http-nio-8080-exec-6] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-05-11 17:12:02.414 [http-nio-8080-exec-6] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2021-05-11 17:12:02.414 [http-nio-8080-exec-6] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
