[DEBUG] 2021-05-11 17:41:04.733 [http-nio-8080-exec-9] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2021-05-11 17:41:04.774 [http-nio-8080-exec-9] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2021-05-11 17:41:04.798 [http-nio-8080-exec-9] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2021-05-11 17:41:05.350 [http-nio-8080-exec-9] Version - HHH000412: Hibernate Core {5.4.4.Final}
[DEBUG] 2021-05-11 17:41:05.367 [http-nio-8080-exec-9] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2021-05-11 17:41:06.190 [http-nio-8080-exec-9] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2021-05-11 17:41:06.193 [http-nio-8080-exec-9] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2021-05-11 17:41:06.329 [http-nio-8080-exec-9] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2021-05-11 17:41:07.812 [http-nio-8080-exec-9] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2021-05-11 17:41:07.952 [http-nio-8080-exec-9] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2021-05-11 17:41:07.954 [http-nio-8080-exec-9] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2021-05-11 17:41:08.094 [http-nio-8080-exec-9] Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] 2021-05-11 17:41:08.569 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@528c6f17
[DEBUG] 2021-05-11 17:41:08.573 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@528c6f17
[DEBUG] 2021-05-11 17:41:08.573 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@528c6f17
[DEBUG] 2021-05-11 17:41:08.578 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@47f51a47
[DEBUG] 2021-05-11 17:41:08.585 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@487cebf
[DEBUG] 2021-05-11 17:41:08.587 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@ac19483
[DEBUG] 2021-05-11 17:41:08.594 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@3d6ad22a
[DEBUG] 2021-05-11 17:41:08.594 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@3d6ad22a
[DEBUG] 2021-05-11 17:41:08.594 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@3d6ad22a
[DEBUG] 2021-05-11 17:41:08.596 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@7368b2d1
[DEBUG] 2021-05-11 17:41:08.597 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@7368b2d1
[DEBUG] 2021-05-11 17:41:08.597 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7368b2d1
[DEBUG] 2021-05-11 17:41:08.598 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@a9a2c1d
[DEBUG] 2021-05-11 17:41:08.612 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@a9a2c1d
[DEBUG] 2021-05-11 17:41:08.612 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@a9a2c1d
[DEBUG] 2021-05-11 17:41:08.615 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@7bbf8aaf
[DEBUG] 2021-05-11 17:41:08.618 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@7bbf8aaf
[DEBUG] 2021-05-11 17:41:08.618 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@7bbf8aaf
[DEBUG] 2021-05-11 17:41:08.631 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@24acf224
[DEBUG] 2021-05-11 17:41:08.632 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@24acf224
[DEBUG] 2021-05-11 17:41:08.632 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@24acf224
[DEBUG] 2021-05-11 17:41:08.641 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@72f7a08
[DEBUG] 2021-05-11 17:41:08.641 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@72f7a08
[DEBUG] 2021-05-11 17:41:08.641 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@72f7a08
[DEBUG] 2021-05-11 17:41:08.642 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@26171bd0
[DEBUG] 2021-05-11 17:41:08.642 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@26171bd0
[DEBUG] 2021-05-11 17:41:08.648 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@26171bd0
[DEBUG] 2021-05-11 17:41:08.651 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@7b51d17f
[DEBUG] 2021-05-11 17:41:08.651 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@7b51d17f
[DEBUG] 2021-05-11 17:41:08.656 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@7c94ddba
[DEBUG] 2021-05-11 17:41:08.656 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@7c94ddba
[DEBUG] 2021-05-11 17:41:08.658 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@2b33bb34
[DEBUG] 2021-05-11 17:41:08.658 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@2b33bb34
[DEBUG] 2021-05-11 17:41:08.659 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@6a43de38
[DEBUG] 2021-05-11 17:41:08.659 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@25e3115b
[DEBUG] 2021-05-11 17:41:08.673 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@22b12ad8
[DEBUG] 2021-05-11 17:41:08.673 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@22b12ad8
[DEBUG] 2021-05-11 17:41:08.681 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@381536d4
[DEBUG] 2021-05-11 17:41:08.683 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@381536d4
[DEBUG] 2021-05-11 17:41:08.711 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@4d021a04
[DEBUG] 2021-05-11 17:41:08.724 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@4d021a04
[DEBUG] 2021-05-11 17:41:08.735 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@6e20d179
[DEBUG] 2021-05-11 17:41:08.735 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@6e20d179
[DEBUG] 2021-05-11 17:41:08.742 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@46260e58
[DEBUG] 2021-05-11 17:41:08.742 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@46260e58
[DEBUG] 2021-05-11 17:41:08.751 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@727dcaa6
[DEBUG] 2021-05-11 17:41:08.757 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@727dcaa6
[DEBUG] 2021-05-11 17:41:08.775 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@30cac601
[DEBUG] 2021-05-11 17:41:08.775 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@30cac601
[DEBUG] 2021-05-11 17:41:08.803 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@60ef049a
[DEBUG] 2021-05-11 17:41:08.804 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@60ef049a
[DEBUG] 2021-05-11 17:41:08.828 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3ce8584e
[DEBUG] 2021-05-11 17:41:08.830 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3ce8584e
[DEBUG] 2021-05-11 17:41:08.839 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@55c09434
[DEBUG] 2021-05-11 17:41:08.839 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@55c09434
[DEBUG] 2021-05-11 17:41:08.845 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@69610e4f
[DEBUG] 2021-05-11 17:41:08.845 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@69610e4f
[DEBUG] 2021-05-11 17:41:08.853 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@2abccc90
[DEBUG] 2021-05-11 17:41:08.859 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@2abccc90
[DEBUG] 2021-05-11 17:41:08.860 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@2abccc90
[DEBUG] 2021-05-11 17:41:08.878 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@74a5f2a7
[DEBUG] 2021-05-11 17:41:08.891 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@5bebfe14
[DEBUG] 2021-05-11 17:41:08.891 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@5bebfe14
[DEBUG] 2021-05-11 17:41:08.893 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@5bebfe14
[DEBUG] 2021-05-11 17:41:08.900 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@54611e59
[DEBUG] 2021-05-11 17:41:08.902 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@51ccaa29
[DEBUG] 2021-05-11 17:41:08.902 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@51ccaa29
[DEBUG] 2021-05-11 17:41:08.925 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@5b002e00
[DEBUG] 2021-05-11 17:41:08.925 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@5b002e00
[DEBUG] 2021-05-11 17:41:08.931 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@13e54eb7
[DEBUG] 2021-05-11 17:41:08.931 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@13e54eb7
[DEBUG] 2021-05-11 17:41:08.932 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@185df320
[DEBUG] 2021-05-11 17:41:08.932 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@185df320
[DEBUG] 2021-05-11 17:41:08.941 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@59b0c209
[DEBUG] 2021-05-11 17:41:08.944 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@59b0c209
[DEBUG] 2021-05-11 17:41:08.955 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@12983d82
[DEBUG] 2021-05-11 17:41:08.957 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@23ca6c61
[DEBUG] 2021-05-11 17:41:08.960 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@23ca6c61
[DEBUG] 2021-05-11 17:41:08.960 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@23ca6c61
[DEBUG] 2021-05-11 17:41:08.961 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@2f16ed1c
[DEBUG] 2021-05-11 17:41:08.962 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@2f16ed1c
[DEBUG] 2021-05-11 17:41:08.963 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@2f16ed1c
[DEBUG] 2021-05-11 17:41:08.977 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@2454cd09
[DEBUG] 2021-05-11 17:41:08.978 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@2984460a
[DEBUG] 2021-05-11 17:41:08.990 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@5e5da886
[DEBUG] 2021-05-11 17:41:08.990 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@5e5da886
[DEBUG] 2021-05-11 17:41:08.990 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@5e5da886
[DEBUG] 2021-05-11 17:41:09.007 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@3f0cb109
[DEBUG] 2021-05-11 17:41:09.009 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@3f0cb109
[DEBUG] 2021-05-11 17:41:09.009 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@3f0cb109
[DEBUG] 2021-05-11 17:41:09.011 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@2774884c
[DEBUG] 2021-05-11 17:41:09.011 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@75ed61b
[DEBUG] 2021-05-11 17:41:09.015 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@7c28f6aa
[DEBUG] 2021-05-11 17:41:09.017 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@7c28f6aa
[DEBUG] 2021-05-11 17:41:09.017 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@4ad49e30
[DEBUG] 2021-05-11 17:41:09.019 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@414488c3
[DEBUG] 2021-05-11 17:41:09.019 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@414488c3
[DEBUG] 2021-05-11 17:41:09.028 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@2384483b
[DEBUG] 2021-05-11 17:41:09.033 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2384483b
[DEBUG] 2021-05-11 17:41:09.033 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@41c3de5
[DEBUG] 2021-05-11 17:41:09.034 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@6c4de79c
[DEBUG] 2021-05-11 17:41:09.036 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@6d454eec
[DEBUG] 2021-05-11 17:41:09.084 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@3172e944
[DEBUG] 2021-05-11 17:41:09.084 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@3172e944
[DEBUG] 2021-05-11 17:41:09.090 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@5f1557bb
[DEBUG] 2021-05-11 17:41:09.091 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@77f259da
[DEBUG] 2021-05-11 17:41:09.091 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@576b08c8
[DEBUG] 2021-05-11 17:41:09.091 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@730cc033
[DEBUG] 2021-05-11 17:41:09.091 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@6d1f966
[DEBUG] 2021-05-11 17:41:09.095 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@63085cef
[DEBUG] 2021-05-11 17:41:09.095 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@6c2a350e
[DEBUG] 2021-05-11 17:41:09.095 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@79b26de0
[DEBUG] 2021-05-11 17:41:09.246 [http-nio-8080-exec-9] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2021-05-11 17:41:09.247 [http-nio-8080-exec-9] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2021-05-11 17:41:09.249 [http-nio-8080-exec-9] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2021-05-11 17:41:09.249 [http-nio-8080-exec-9] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2021-05-11 17:41:09.251 [http-nio-8080-exec-9] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2021-05-11 17:41:09.253 [http-nio-8080-exec-9] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2021-05-11 17:41:09.254 [http-nio-8080-exec-9] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2021-05-11 17:41:09.262 [http-nio-8080-exec-9] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2021-05-11 17:41:09.263 [http-nio-8080-exec-9] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2021-05-11 17:41:09.266 [http-nio-8080-exec-9] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2021-05-11 17:41:09.268 [http-nio-8080-exec-9] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2021-05-11 17:41:09.271 [http-nio-8080-exec-9] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2021-05-11 17:41:09.272 [http-nio-8080-exec-9] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2021-05-11 17:41:09.273 [http-nio-8080-exec-9] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2021-05-11 17:41:09.298 [http-nio-8080-exec-9] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/BookCollection
[INFO ] 2021-05-11 17:41:09.299 [http-nio-8080-exec-9] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2021-05-11 17:41:09.299 [http-nio-8080-exec-9] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2021-05-11 17:41:10.013 [http-nio-8080-exec-9] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2021-05-11 17:41:11.348 [http-nio-8080-exec-9] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.22
      major : 8
      minor : 0
[DEBUG] 2021-05-11 17:41:11.361 [http-nio-8080-exec-9] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.22 (Revision: d64b664fa93e81296a377de031b8123a67e6def2)
      major : 8
      minor : 0
[DEBUG] 2021-05-11 17:41:11.362 [http-nio-8080-exec-9] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2021-05-11 17:41:11.547 [http-nio-8080-exec-9] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[DEBUG] 2021-05-11 17:41:11.604 [http-nio-8080-exec-9] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2021-05-11 17:41:11.723 [http-nio-8080-exec-9] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2021-05-11 17:41:11.924 [http-nio-8080-exec-9] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2021-05-11 17:41:11.937 [http-nio-8080-exec-9] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@711c0eaf] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@57980bb9]
[DEBUG] 2021-05-11 17:41:12.192 [http-nio-8080-exec-9] AnnotationMetadataSourceProcessorImpl - Encountered a non-categorized annotated class [com.leeannjakel.entity.AuthorResponse]; ignoring
[DEBUG] 2021-05-11 17:41:12.209 [http-nio-8080-exec-9] AnnotationMetadataSourceProcessorImpl - Encountered a non-categorized annotated class [com.leeannjakel.entity.WorksAuthorsItem]; ignoring
[DEBUG] 2021-05-11 17:41:12.210 [http-nio-8080-exec-9] AnnotationMetadataSourceProcessorImpl - Encountered a non-categorized annotated class [com.leeannjakel.entity.Classifications]; ignoring
[DEBUG] 2021-05-11 17:41:12.217 [http-nio-8080-exec-9] AnnotationMetadataSourceProcessorImpl - Encountered a non-categorized annotated class [com.leeannjakel.entity.Created]; ignoring
[DEBUG] 2021-05-11 17:41:12.221 [http-nio-8080-exec-9] AnnotationMetadataSourceProcessorImpl - Encountered a non-categorized annotated class [com.leeannjakel.entity.Identifiers]; ignoring
[DEBUG] 2021-05-11 17:41:12.222 [http-nio-8080-exec-9] AnnotationMetadataSourceProcessorImpl - Encountered a non-categorized annotated class [com.leeannjakel.entity.Info]; ignoring
[DEBUG] 2021-05-11 17:41:12.222 [http-nio-8080-exec-9] AnnotationMetadataSourceProcessorImpl - Encountered a non-categorized annotated class [com.leeannjakel.entity.LanguagesItem]; ignoring
[DEBUG] 2021-05-11 17:41:12.223 [http-nio-8080-exec-9] AnnotationMetadataSourceProcessorImpl - Encountered a non-categorized annotated class [com.leeannjakel.entity.LastModified]; ignoring
[DEBUG] 2021-05-11 17:41:12.237 [http-nio-8080-exec-9] AnnotationMetadataSourceProcessorImpl - Encountered a non-categorized annotated class [com.leeannjakel.entity.Type]; ignoring
[DEBUG] 2021-05-11 17:41:12.241 [http-nio-8080-exec-9] AnnotationMetadataSourceProcessorImpl - Encountered a non-categorized annotated class [com.leeannjakel.entity.WorksItem]; ignoring
[DEBUG] 2021-05-11 17:41:12.339 [http-nio-8080-exec-9] AnnotationBinder - Binding entity from annotated class: com.leeannjakel.entity.Author
[DEBUG] 2021-05-11 17:41:12.561 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2021-05-11 17:41:12.590 [http-nio-8080-exec-9] EntityBinder - Import with entity name Author
[DEBUG] 2021-05-11 17:41:12.607 [http-nio-8080-exec-9] EntityBinder - Bind entity com.leeannjakel.entity.Author on table author
[DEBUG] 2021-05-11 17:41:12.774 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(author), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-11 17:41:12.780 [http-nio-8080-exec-9] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2021-05-11 17:41:12.790 [http-nio-8080-exec-9] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.leeannjakel.entity.Author:id]
[DEBUG] 2021-05-11 17:41:12.799 [http-nio-8080-exec-9] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2021-05-11 17:41:12.806 [http-nio-8080-exec-9] PropertyBinder - Building property id
[DEBUG] 2021-05-11 17:41:12.815 [http-nio-8080-exec-9] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2021-05-11 17:41:12.823 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='author'}
[DEBUG] 2021-05-11 17:41:12.824 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(author), mappingColumn=books, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-11 17:41:12.840 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(author), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-11 17:41:12.885 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(author), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-11 17:41:12.917 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(author), mappingColumn=books_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-11 17:41:12.933 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='books_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2021-05-11 17:41:12.958 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='author'}
[DEBUG] 2021-05-11 17:41:12.958 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='author'}
[DEBUG] 2021-05-11 17:41:12.961 [http-nio-8080-exec-9] CollectionBinder - Collection role: com.leeannjakel.entity.Author.books
[DEBUG] 2021-05-11 17:41:12.998 [http-nio-8080-exec-9] PropertyBinder - Building property books
[DEBUG] 2021-05-11 17:41:13.012 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(author), mappingColumn=name, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-11 17:41:13.016 [http-nio-8080-exec-9] PropertyBinder - MetadataSourceProcessor property name with lazy=false
[DEBUG] 2021-05-11 17:41:13.027 [http-nio-8080-exec-9] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.leeannjakel.entity.Author:name]
[DEBUG] 2021-05-11 17:41:13.027 [http-nio-8080-exec-9] SimpleValueBinder - building SimpleValue for name
[DEBUG] 2021-05-11 17:41:13.027 [http-nio-8080-exec-9] PropertyBinder - Building property name
[DEBUG] 2021-05-11 17:41:13.031 [http-nio-8080-exec-9] AnnotationBinder - Binding entity from annotated class: com.leeannjakel.entity.Book
[DEBUG] 2021-05-11 17:41:13.039 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2021-05-11 17:41:13.039 [http-nio-8080-exec-9] EntityBinder - Import with entity name Book
[DEBUG] 2021-05-11 17:41:13.039 [http-nio-8080-exec-9] EntityBinder - Bind entity com.leeannjakel.entity.Book on table book
[DEBUG] 2021-05-11 17:41:13.084 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-11 17:41:13.085 [http-nio-8080-exec-9] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2021-05-11 17:41:13.085 [http-nio-8080-exec-9] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.leeannjakel.entity.Book:id]
[DEBUG] 2021-05-11 17:41:13.087 [http-nio-8080-exec-9] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2021-05-11 17:41:13.087 [http-nio-8080-exec-9] PropertyBinder - Building property id
[DEBUG] 2021-05-11 17:41:13.087 [http-nio-8080-exec-9] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2021-05-11 17:41:13.088 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='author_id', referencedColumn='', mappedBy=''}
[DEBUG] 2021-05-11 17:41:13.089 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=author, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-11 17:41:13.097 [http-nio-8080-exec-9] PropertyBinder - Building property author
[DEBUG] 2021-05-11 17:41:13.097 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='genre_id', referencedColumn='', mappedBy=''}
[DEBUG] 2021-05-11 17:41:13.098 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=genre, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-11 17:41:13.101 [http-nio-8080-exec-9] PropertyBinder - Building property genre
[DEBUG] 2021-05-11 17:41:13.101 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=isbn, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-11 17:41:13.109 [http-nio-8080-exec-9] PropertyBinder - MetadataSourceProcessor property isbn with lazy=false
[DEBUG] 2021-05-11 17:41:13.110 [http-nio-8080-exec-9] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.leeannjakel.entity.Book:isbn]
[DEBUG] 2021-05-11 17:41:13.110 [http-nio-8080-exec-9] SimpleValueBinder - building SimpleValue for isbn
[DEBUG] 2021-05-11 17:41:13.110 [http-nio-8080-exec-9] PropertyBinder - Building property isbn
[DEBUG] 2021-05-11 17:41:13.110 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=notes, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-11 17:41:13.110 [http-nio-8080-exec-9] PropertyBinder - MetadataSourceProcessor property notes with lazy=false
[DEBUG] 2021-05-11 17:41:13.110 [http-nio-8080-exec-9] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.leeannjakel.entity.Book:notes]
[DEBUG] 2021-05-11 17:41:13.110 [http-nio-8080-exec-9] SimpleValueBinder - building SimpleValue for notes
[DEBUG] 2021-05-11 17:41:13.110 [http-nio-8080-exec-9] PropertyBinder - Building property notes
[DEBUG] 2021-05-11 17:41:13.112 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=title, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-11 17:41:13.115 [http-nio-8080-exec-9] PropertyBinder - MetadataSourceProcessor property title with lazy=false
[DEBUG] 2021-05-11 17:41:13.116 [http-nio-8080-exec-9] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.leeannjakel.entity.Book:title]
[DEBUG] 2021-05-11 17:41:13.121 [http-nio-8080-exec-9] SimpleValueBinder - building SimpleValue for title
[DEBUG] 2021-05-11 17:41:13.121 [http-nio-8080-exec-9] PropertyBinder - Building property title
[DEBUG] 2021-05-11 17:41:13.121 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
[DEBUG] 2021-05-11 17:41:13.121 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-11 17:41:13.121 [http-nio-8080-exec-9] PropertyBinder - Building property user
[DEBUG] 2021-05-11 17:41:13.122 [http-nio-8080-exec-9] AnnotationBinder - Binding entity from annotated class: com.leeannjakel.entity.Genre
[DEBUG] 2021-05-11 17:41:13.122 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2021-05-11 17:41:13.122 [http-nio-8080-exec-9] EntityBinder - Import with entity name Genre
[DEBUG] 2021-05-11 17:41:13.122 [http-nio-8080-exec-9] EntityBinder - Bind entity com.leeannjakel.entity.Genre on table genre
[DEBUG] 2021-05-11 17:41:13.123 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(genre), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-11 17:41:13.123 [http-nio-8080-exec-9] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2021-05-11 17:41:13.123 [http-nio-8080-exec-9] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.leeannjakel.entity.Genre:id]
[DEBUG] 2021-05-11 17:41:13.123 [http-nio-8080-exec-9] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2021-05-11 17:41:13.123 [http-nio-8080-exec-9] PropertyBinder - Building property id
[DEBUG] 2021-05-11 17:41:13.124 [http-nio-8080-exec-9] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2021-05-11 17:41:13.137 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='genre'}
[DEBUG] 2021-05-11 17:41:13.139 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(genre), mappingColumn=books, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-11 17:41:13.139 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(genre), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-11 17:41:13.139 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(genre), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-11 17:41:13.140 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(genre), mappingColumn=books_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-11 17:41:13.143 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='books_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2021-05-11 17:41:13.144 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='genre'}
[DEBUG] 2021-05-11 17:41:13.144 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='genre'}
[DEBUG] 2021-05-11 17:41:13.144 [http-nio-8080-exec-9] CollectionBinder - Collection role: com.leeannjakel.entity.Genre.books
[DEBUG] 2021-05-11 17:41:13.144 [http-nio-8080-exec-9] PropertyBinder - Building property books
[DEBUG] 2021-05-11 17:41:13.146 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(genre), mappingColumn=name, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-11 17:41:13.146 [http-nio-8080-exec-9] PropertyBinder - MetadataSourceProcessor property name with lazy=false
[DEBUG] 2021-05-11 17:41:13.146 [http-nio-8080-exec-9] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.leeannjakel.entity.Genre:name]
[DEBUG] 2021-05-11 17:41:13.146 [http-nio-8080-exec-9] SimpleValueBinder - building SimpleValue for name
[DEBUG] 2021-05-11 17:41:13.146 [http-nio-8080-exec-9] PropertyBinder - Building property name
[DEBUG] 2021-05-11 17:41:13.147 [http-nio-8080-exec-9] AnnotationBinder - Binding entity from annotated class: com.leeannjakel.entity.Role
[DEBUG] 2021-05-11 17:41:13.147 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2021-05-11 17:41:13.147 [http-nio-8080-exec-9] EntityBinder - Import with entity name Role
[DEBUG] 2021-05-11 17:41:13.147 [http-nio-8080-exec-9] EntityBinder - Bind entity com.leeannjakel.entity.Role on table role
[DEBUG] 2021-05-11 17:41:13.151 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-11 17:41:13.151 [http-nio-8080-exec-9] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2021-05-11 17:41:13.154 [http-nio-8080-exec-9] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.leeannjakel.entity.Role:id]
[DEBUG] 2021-05-11 17:41:13.154 [http-nio-8080-exec-9] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2021-05-11 17:41:13.155 [http-nio-8080-exec-9] PropertyBinder - Building property id
[DEBUG] 2021-05-11 17:41:13.162 [http-nio-8080-exec-9] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2021-05-11 17:41:13.167 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=role_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-11 17:41:13.171 [http-nio-8080-exec-9] PropertyBinder - MetadataSourceProcessor property roleName with lazy=false
[DEBUG] 2021-05-11 17:41:13.171 [http-nio-8080-exec-9] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.leeannjakel.entity.Role:roleName]
[DEBUG] 2021-05-11 17:41:13.172 [http-nio-8080-exec-9] SimpleValueBinder - building SimpleValue for roleName
[DEBUG] 2021-05-11 17:41:13.172 [http-nio-8080-exec-9] PropertyBinder - Building property roleName
[DEBUG] 2021-05-11 17:41:13.173 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
[DEBUG] 2021-05-11 17:41:13.174 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-11 17:41:13.174 [http-nio-8080-exec-9] PropertyBinder - Building property user
[DEBUG] 2021-05-11 17:41:13.174 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=user_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-11 17:41:13.174 [http-nio-8080-exec-9] PropertyBinder - MetadataSourceProcessor property userName with lazy=false
[DEBUG] 2021-05-11 17:41:13.174 [http-nio-8080-exec-9] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.leeannjakel.entity.Role:userName]
[DEBUG] 2021-05-11 17:41:13.174 [http-nio-8080-exec-9] SimpleValueBinder - building SimpleValue for userName
[DEBUG] 2021-05-11 17:41:13.175 [http-nio-8080-exec-9] PropertyBinder - Building property userName
[DEBUG] 2021-05-11 17:41:13.175 [http-nio-8080-exec-9] AnnotationBinder - Binding entity from annotated class: com.leeannjakel.entity.User
[DEBUG] 2021-05-11 17:41:13.175 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2021-05-11 17:41:13.175 [http-nio-8080-exec-9] EntityBinder - Import with entity name User
[DEBUG] 2021-05-11 17:41:13.175 [http-nio-8080-exec-9] EntityBinder - Bind entity com.leeannjakel.entity.User on table user
[DEBUG] 2021-05-11 17:41:13.182 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-11 17:41:13.182 [http-nio-8080-exec-9] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2021-05-11 17:41:13.182 [http-nio-8080-exec-9] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.leeannjakel.entity.User:id]
[DEBUG] 2021-05-11 17:41:13.182 [http-nio-8080-exec-9] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2021-05-11 17:41:13.182 [http-nio-8080-exec-9] PropertyBinder - Building property id
[DEBUG] 2021-05-11 17:41:13.189 [http-nio-8080-exec-9] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2021-05-11 17:41:13.189 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2021-05-11 17:41:13.193 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=books, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-11 17:41:13.194 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-11 17:41:13.194 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-11 17:41:13.194 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=books_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-11 17:41:13.194 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='books_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2021-05-11 17:41:13.194 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2021-05-11 17:41:13.194 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2021-05-11 17:41:13.195 [http-nio-8080-exec-9] CollectionBinder - Collection role: com.leeannjakel.entity.User.books
[DEBUG] 2021-05-11 17:41:13.195 [http-nio-8080-exec-9] PropertyBinder - Building property books
[DEBUG] 2021-05-11 17:41:13.195 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=email, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-11 17:41:13.195 [http-nio-8080-exec-9] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[DEBUG] 2021-05-11 17:41:13.195 [http-nio-8080-exec-9] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.leeannjakel.entity.User:email]
[DEBUG] 2021-05-11 17:41:13.195 [http-nio-8080-exec-9] SimpleValueBinder - building SimpleValue for email
[DEBUG] 2021-05-11 17:41:13.195 [http-nio-8080-exec-9] PropertyBinder - Building property email
[DEBUG] 2021-05-11 17:41:13.208 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-11 17:41:13.209 [http-nio-8080-exec-9] PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
[DEBUG] 2021-05-11 17:41:13.209 [http-nio-8080-exec-9] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.leeannjakel.entity.User:firstName]
[DEBUG] 2021-05-11 17:41:13.209 [http-nio-8080-exec-9] SimpleValueBinder - building SimpleValue for firstName
[DEBUG] 2021-05-11 17:41:13.209 [http-nio-8080-exec-9] PropertyBinder - Building property firstName
[DEBUG] 2021-05-11 17:41:13.212 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-11 17:41:13.212 [http-nio-8080-exec-9] PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
[DEBUG] 2021-05-11 17:41:13.212 [http-nio-8080-exec-9] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.leeannjakel.entity.User:lastName]
[DEBUG] 2021-05-11 17:41:13.212 [http-nio-8080-exec-9] SimpleValueBinder - building SimpleValue for lastName
[DEBUG] 2021-05-11 17:41:13.212 [http-nio-8080-exec-9] PropertyBinder - Building property lastName
[DEBUG] 2021-05-11 17:41:13.213 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=password, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-11 17:41:13.213 [http-nio-8080-exec-9] PropertyBinder - MetadataSourceProcessor property password with lazy=false
[DEBUG] 2021-05-11 17:41:13.213 [http-nio-8080-exec-9] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.leeannjakel.entity.User:password]
[DEBUG] 2021-05-11 17:41:13.213 [http-nio-8080-exec-9] SimpleValueBinder - building SimpleValue for password
[DEBUG] 2021-05-11 17:41:13.213 [http-nio-8080-exec-9] PropertyBinder - Building property password
[DEBUG] 2021-05-11 17:41:13.216 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2021-05-11 17:41:13.216 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=roles, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-11 17:41:13.217 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-11 17:41:13.217 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-11 17:41:13.217 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=roles_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-11 17:41:13.217 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='roles_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2021-05-11 17:41:13.218 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2021-05-11 17:41:13.218 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2021-05-11 17:41:13.218 [http-nio-8080-exec-9] CollectionBinder - Collection role: com.leeannjakel.entity.User.roles
[DEBUG] 2021-05-11 17:41:13.218 [http-nio-8080-exec-9] PropertyBinder - Building property roles
[DEBUG] 2021-05-11 17:41:13.228 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=user_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-11 17:41:13.229 [http-nio-8080-exec-9] PropertyBinder - MetadataSourceProcessor property userName with lazy=false
[DEBUG] 2021-05-11 17:41:13.229 [http-nio-8080-exec-9] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.leeannjakel.entity.User:userName]
[DEBUG] 2021-05-11 17:41:13.229 [http-nio-8080-exec-9] SimpleValueBinder - building SimpleValue for userName
[DEBUG] 2021-05-11 17:41:13.229 [http-nio-8080-exec-9] PropertyBinder - Building property userName
[DEBUG] 2021-05-11 17:41:13.231 [http-nio-8080-exec-9] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2021-05-11 17:41:13.236 [http-nio-8080-exec-9] SimpleValueBinder - Starting fillSimpleValue for name
[DEBUG] 2021-05-11 17:41:13.240 [http-nio-8080-exec-9] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2021-05-11 17:41:13.240 [http-nio-8080-exec-9] SimpleValueBinder - Starting fillSimpleValue for isbn
[DEBUG] 2021-05-11 17:41:13.241 [http-nio-8080-exec-9] SimpleValueBinder - Starting fillSimpleValue for notes
[DEBUG] 2021-05-11 17:41:13.241 [http-nio-8080-exec-9] SimpleValueBinder - Starting fillSimpleValue for title
[DEBUG] 2021-05-11 17:41:13.241 [http-nio-8080-exec-9] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2021-05-11 17:41:13.241 [http-nio-8080-exec-9] SimpleValueBinder - Starting fillSimpleValue for name
[DEBUG] 2021-05-11 17:41:13.241 [http-nio-8080-exec-9] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2021-05-11 17:41:13.241 [http-nio-8080-exec-9] SimpleValueBinder - Starting fillSimpleValue for roleName
[DEBUG] 2021-05-11 17:41:13.241 [http-nio-8080-exec-9] SimpleValueBinder - Starting fillSimpleValue for userName
[DEBUG] 2021-05-11 17:41:13.241 [http-nio-8080-exec-9] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2021-05-11 17:41:13.241 [http-nio-8080-exec-9] SimpleValueBinder - Starting fillSimpleValue for email
[DEBUG] 2021-05-11 17:41:13.241 [http-nio-8080-exec-9] SimpleValueBinder - Starting fillSimpleValue for firstName
[DEBUG] 2021-05-11 17:41:13.241 [http-nio-8080-exec-9] SimpleValueBinder - Starting fillSimpleValue for lastName
[DEBUG] 2021-05-11 17:41:13.241 [http-nio-8080-exec-9] SimpleValueBinder - Starting fillSimpleValue for password
[DEBUG] 2021-05-11 17:41:13.241 [http-nio-8080-exec-9] SimpleValueBinder - Starting fillSimpleValue for userName
[DEBUG] 2021-05-11 17:41:13.271 [http-nio-8080-exec-9] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [author]
[DEBUG] 2021-05-11 17:41:13.271 [http-nio-8080-exec-9] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [book]
[DEBUG] 2021-05-11 17:41:13.272 [http-nio-8080-exec-9] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [genre]
[DEBUG] 2021-05-11 17:41:13.272 [http-nio-8080-exec-9] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [role]
[DEBUG] 2021-05-11 17:41:13.272 [http-nio-8080-exec-9] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [user]
[DEBUG] 2021-05-11 17:41:13.273 [http-nio-8080-exec-9] CollectionSecondPass - Second pass for collection: com.leeannjakel.entity.Author.books
[DEBUG] 2021-05-11 17:41:13.279 [http-nio-8080-exec-9] CollectionBinder - Binding a OneToMany: com.leeannjakel.entity.Author.books through a foreign key
[DEBUG] 2021-05-11 17:41:13.284 [http-nio-8080-exec-9] CollectionBinder - Mapping collection: com.leeannjakel.entity.Author.books -> book
[DEBUG] 2021-05-11 17:41:13.293 [http-nio-8080-exec-9] TableBinder - Retrieving property com.leeannjakel.entity.Book.author
[DEBUG] 2021-05-11 17:41:13.293 [http-nio-8080-exec-9] CollectionSecondPass - Mapped collection key: author_id, one-to-many: com.leeannjakel.entity.Book
[DEBUG] 2021-05-11 17:41:13.293 [http-nio-8080-exec-9] CollectionSecondPass - Second pass for collection: com.leeannjakel.entity.Genre.books
[DEBUG] 2021-05-11 17:41:13.293 [http-nio-8080-exec-9] CollectionBinder - Binding a OneToMany: com.leeannjakel.entity.Genre.books through a foreign key
[DEBUG] 2021-05-11 17:41:13.293 [http-nio-8080-exec-9] CollectionBinder - Mapping collection: com.leeannjakel.entity.Genre.books -> book
[DEBUG] 2021-05-11 17:41:13.309 [http-nio-8080-exec-9] TableBinder - Retrieving property com.leeannjakel.entity.Book.genre
[DEBUG] 2021-05-11 17:41:13.321 [http-nio-8080-exec-9] CollectionSecondPass - Mapped collection key: genre_id, one-to-many: com.leeannjakel.entity.Book
[DEBUG] 2021-05-11 17:41:13.321 [http-nio-8080-exec-9] CollectionSecondPass - Second pass for collection: com.leeannjakel.entity.User.books
[DEBUG] 2021-05-11 17:41:13.321 [http-nio-8080-exec-9] CollectionBinder - Binding a OneToMany: com.leeannjakel.entity.User.books through a foreign key
[DEBUG] 2021-05-11 17:41:13.321 [http-nio-8080-exec-9] CollectionBinder - Mapping collection: com.leeannjakel.entity.User.books -> book
[DEBUG] 2021-05-11 17:41:13.321 [http-nio-8080-exec-9] TableBinder - Retrieving property com.leeannjakel.entity.Book.user
[DEBUG] 2021-05-11 17:41:13.321 [http-nio-8080-exec-9] CollectionSecondPass - Mapped collection key: user_id, one-to-many: com.leeannjakel.entity.Book
[DEBUG] 2021-05-11 17:41:13.321 [http-nio-8080-exec-9] CollectionSecondPass - Second pass for collection: com.leeannjakel.entity.User.roles
[DEBUG] 2021-05-11 17:41:13.322 [http-nio-8080-exec-9] CollectionBinder - Binding a OneToMany: com.leeannjakel.entity.User.roles through a foreign key
[DEBUG] 2021-05-11 17:41:13.322 [http-nio-8080-exec-9] CollectionBinder - Mapping collection: com.leeannjakel.entity.User.roles -> role
[DEBUG] 2021-05-11 17:41:13.322 [http-nio-8080-exec-9] TableBinder - Retrieving property com.leeannjakel.entity.Role.user
[DEBUG] 2021-05-11 17:41:13.322 [http-nio-8080-exec-9] CollectionSecondPass - Mapped collection key: user_id, one-to-many: com.leeannjakel.entity.Role
[DEBUG] 2021-05-11 17:41:13.322 [http-nio-8080-exec-9] InFlightMetadataCollectorImpl - Resolving reference to class: com.leeannjakel.entity.Author
[DEBUG] 2021-05-11 17:41:13.361 [http-nio-8080-exec-9] InFlightMetadataCollectorImpl - Resolving reference to class: com.leeannjakel.entity.Genre
[DEBUG] 2021-05-11 17:41:13.366 [http-nio-8080-exec-9] InFlightMetadataCollectorImpl - Resolving reference to class: com.leeannjakel.entity.User
[DEBUG] 2021-05-11 17:41:13.381 [http-nio-8080-exec-9] InFlightMetadataCollectorImpl - Resolving reference to class: com.leeannjakel.entity.User
[DEBUG] 2021-05-11 17:41:13.407 [http-nio-8080-exec-9] InFlightMetadataCollectorImpl - Resolving reference to class: com.leeannjakel.entity.Author
[DEBUG] 2021-05-11 17:41:13.408 [http-nio-8080-exec-9] InFlightMetadataCollectorImpl - Resolving reference to class: com.leeannjakel.entity.Genre
[DEBUG] 2021-05-11 17:41:13.408 [http-nio-8080-exec-9] InFlightMetadataCollectorImpl - Resolving reference to class: com.leeannjakel.entity.User
[DEBUG] 2021-05-11 17:41:13.408 [http-nio-8080-exec-9] InFlightMetadataCollectorImpl - Resolving reference to class: com.leeannjakel.entity.User
[DEBUG] 2021-05-11 17:41:13.788 [http-nio-8080-exec-9] SessionFactoryImpl - Building session factory
[DEBUG] 2021-05-11 17:41:13.793 [http-nio-8080-exec-9] Settings - SessionFactory name : null
[DEBUG] 2021-05-11 17:41:13.800 [http-nio-8080-exec-9] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2021-05-11 17:41:13.801 [http-nio-8080-exec-9] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2021-05-11 17:41:13.801 [http-nio-8080-exec-9] Settings - Statistics: disabled
[DEBUG] 2021-05-11 17:41:13.801 [http-nio-8080-exec-9] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2021-05-11 17:41:13.801 [http-nio-8080-exec-9] Settings - Default entity-mode: pojo
[DEBUG] 2021-05-11 17:41:13.801 [http-nio-8080-exec-9] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2021-05-11 17:41:13.812 [http-nio-8080-exec-9] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2021-05-11 17:41:13.813 [http-nio-8080-exec-9] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2021-05-11 17:41:13.818 [http-nio-8080-exec-9] Settings - Default batch fetch size: -1
[DEBUG] 2021-05-11 17:41:13.818 [http-nio-8080-exec-9] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2021-05-11 17:41:13.818 [http-nio-8080-exec-9] Settings - Default null ordering: NONE
[DEBUG] 2021-05-11 17:41:13.818 [http-nio-8080-exec-9] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2021-05-11 17:41:13.818 [http-nio-8080-exec-9] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2021-05-11 17:41:13.819 [http-nio-8080-exec-9] Settings - multi-tenancy strategy : NONE
[DEBUG] 2021-05-11 17:41:13.819 [http-nio-8080-exec-9] Settings - JTA Track by Thread: enabled
[DEBUG] 2021-05-11 17:41:13.819 [http-nio-8080-exec-9] Settings - Query language substitutions: {}
[DEBUG] 2021-05-11 17:41:13.819 [http-nio-8080-exec-9] Settings - Named query checking : enabled
[DEBUG] 2021-05-11 17:41:13.819 [http-nio-8080-exec-9] Settings - Second-level cache: disabled
[DEBUG] 2021-05-11 17:41:13.819 [http-nio-8080-exec-9] Settings - Second-level query cache: disabled
[DEBUG] 2021-05-11 17:41:13.819 [http-nio-8080-exec-9] Settings - Second-level query cache factory: null
[DEBUG] 2021-05-11 17:41:13.819 [http-nio-8080-exec-9] Settings - Second-level cache region prefix: null
[DEBUG] 2021-05-11 17:41:13.819 [http-nio-8080-exec-9] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2021-05-11 17:41:13.819 [http-nio-8080-exec-9] Settings - Structured second-level cache entries: disabled
[DEBUG] 2021-05-11 17:41:13.819 [http-nio-8080-exec-9] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2021-05-11 17:41:13.819 [http-nio-8080-exec-9] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2021-05-11 17:41:13.819 [http-nio-8080-exec-9] Settings - JDBC batch size: 15
[DEBUG] 2021-05-11 17:41:13.830 [http-nio-8080-exec-9] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2021-05-11 17:41:13.830 [http-nio-8080-exec-9] Settings - Scrollable result sets: enabled
[DEBUG] 2021-05-11 17:41:13.841 [http-nio-8080-exec-9] Settings - Wrap result sets: disabled
[DEBUG] 2021-05-11 17:41:13.842 [http-nio-8080-exec-9] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2021-05-11 17:41:13.842 [http-nio-8080-exec-9] Settings - JDBC result set fetch size: null
[DEBUG] 2021-05-11 17:41:13.842 [http-nio-8080-exec-9] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2021-05-11 17:41:13.842 [http-nio-8080-exec-9] Settings - Generate SQL with comments: disabled
[DEBUG] 2021-05-11 17:41:13.842 [http-nio-8080-exec-9] Settings - JPA compliance - query : 
[DEBUG] 2021-05-11 17:41:13.842 [http-nio-8080-exec-9] Settings - JPA compliance - closed-handling : 
[DEBUG] 2021-05-11 17:41:13.842 [http-nio-8080-exec-9] Settings - JPA compliance - lists : 
[DEBUG] 2021-05-11 17:41:13.842 [http-nio-8080-exec-9] Settings - JPA compliance - transactions : 
[INFO ] 2021-05-11 17:41:14.497 [http-nio-8080-exec-9] beans - HHH10005002: No explicit CDI BeanManager reference was passed to Hibernate, but CDI is available on the Hibernate ClassLoader.
[DEBUG] 2021-05-11 17:41:14.762 [http-nio-8080-exec-9] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2021-05-11 17:41:14.763 [http-nio-8080-exec-9] SessionFactoryImpl - Instantiating session factory with properties: {awt.toolkit=sun.awt.X11.XToolkit, java.specification.version=11, sun.cpu.isalist=, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=UTF-8, hibernate.c3p0.min_size=5, sun.arch.data.model=64, java.vendor.url=https://ubuntu.com/, catalina.useNaming=true, openejb.provider.default=org.apache.tomee, sun.boot.library.path=/usr/lib/jvm/java-11-openjdk-amd64/lib, com.sun.management.jmxremote.ssl=false, sun.java.command=org.apache.catalina.startup.Bootstrap start, jdk.debug=release, java.specification.vendor=Oracle Corporation, java.naming.factory.url.pkgs=org.apache.naming:org.apache.openejb.core.ivm.naming, openejb.embedder.source=ServerListener, java.version.date=2021-04-20, java.home=/usr/lib/jvm/java-11-openjdk-amd64, ignore.endorsed.dirs=, file.separator=/, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, openejb.scan.webapp.container=true, com.sun.management.jmxremote.password.file=/home/student/.cache/JetBrains/IntelliJIdea2020.3/tomcat/10a53701-4112-462e-a101-1df2054f3873/jmxremote.password, package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.naming.,org.apache.tomcat., openejb.deployments.classpath.filter.systemapps=false, jdk.tls.ephemeralDHKeySize=2048, java.util.logging.config.file=/home/student/.cache/JetBrains/IntelliJIdea2020.3/tomcat/10a53701-4112-462e-a101-1df2054f3873/conf/logging.properties, java.protocol.handler.pkgs=org.apache.catalina.webresources, connection.password=student, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, openejb.scan.webapp.container.excludes=, java.runtime.version=11.0.11+9-Ubuntu-0ubuntu2.20.04, user.name=student, org.apache.johnzon.max-string-length=8192, file.encoding=UTF-8, derby.system.home=/home/student/tomcat/bin, org.apache.catalina.security.SecurityListener.UMASK=0027, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.io.tmpdir=/home/student/tomcat/temp, tomcat.util.scan.StandardJarScanFilter.jarsToScan=log4j-taglib*.jar,log4j-web*.jar,log4javascript*.jar,slf4j-taglib*.jar, java.version=11.0.11, com.sun.management.jmxremote.port=1099, tomcat.util.scan.StandardJarScanFilter.jarsToSkip=annotations-api.jar,ant-junit*.jar,ant-launcher.jar,ant.jar,asm-*.jar,aspectj*.jar,bootstrap.jar,catalina-ant.jar,catalina-ha.jar,catalina-jmx-remote.jar,catalina-storeconfig.jar,catalina-tribes.jar,catalina-ws.jar,catalina.jar,cglib-*.jar,cobertura-*.jar,commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,commons-daemon.jar,commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,commons-math*.jar,commons-pool*.jar,dom4j-*.jar,easymock-*.jar,ecj-*.jar,el-api.jar,geronimo-spec-jaxrpc*.jar,h2*.jar,hamcrest-*.jar,hibernate*.jar,httpclient*.jar,icu4j-*.jar,jasper-el.jar,jasper.jar,jaspic-api.jar,jaxb-*.jar,jaxen-*.jar,jdom-*.jar,jetty-*.jar,jmx-tools.jar,jmx.jar,jsp-api.jar,jstl.jar,jta*.jar,junit-*.jar,junit.jar,log4j*.jar,mail*.jar,objenesis-*.jar,oraclepki.jar,oro-*.jar,servlet-api-*.jar,servlet-api.jar,slf4j*.jar,taglibs-standard-spec-*.jar,tagsoup-*.jar,tomcat-api.jar,tomcat-coyote.jar,tomcat-dbcp.jar,tomcat-i18n-*.jar,tomcat-jdbc.jar,tomcat-jni.jar,tomcat-juli-adapters.jar,tomcat-juli.jar,tomcat-util-scan.jar,tomcat-util.jar,tomcat-websocket.jar,tools.jar,websocket-api.jar,wsdl4j*.jar,xercesImpl.jar,xml-apis.jar,xmlParserAPIs-*.jar,xmlParserAPIs.jar,xom-*.jar, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.print.PSPrinterJob, sun.os.patch.level=unknown, connection.driver_class=com.mysql.cj.jdbc.Driver, tomcat.built=May 4 2019 09:17:16 UTC, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor=Ubuntu, tomee.version=7.1.1, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, tomcat.util.buf.StringCache.byte.enabled=true, sun.desktop=gnome, java.class.path=/home/student/tomcat/bin/bootstrap.jar:/home/student/tomcat/bin/tomcat-juli.jar, tomcat.version=8.5.41.0, java.vm.vendor=Ubuntu, openejb.home=/home/student/tomcat, openejb.system.apps=true, user.timezone=America/Chicago, os.name=Linux, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, openejb.base=/home/student/.cache/JetBrains/IntelliJIdea2020.3/tomcat/10a53701-4112-462e-a101-1df2054f3873, com.sun.management.jmxremote=, sun.cpu.endian=little, user.home=/home/student, hibernate.c3p0.max_statements=50, user.language=en, openejb.deployments.classpath=false, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.tomcat., openejb.loader=tomcat-system, server.loader=, com.sun.management.jmxremote.access.file=/home/student/.cache/JetBrains/IntelliJIdea2020.3/tomcat/10a53701-4112-462e-a101-1df2054f3873/jmxremote.access, hibernate.c3p0.max_size=20, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, path.separator=:, org.apache.openejb.core.security.JaccProvider=org.apache.openejb.core.security.jacc.BasicJaccProvider, common.loader="/home/student/tomcat/lib","/home/student/tomcat/lib/*.jar","/home/student/tomcat/lib","/home/student/tomcat/lib/*.jar", hibernate.connection.username=****, os.version=5.4.0-72-generic, openejb.version=7.1.1, org.apache.security.jacc.EJBMethodPermission.methodInterfaces=BusinessLocalHome,BusinessRemoteHome,BusinessRemote,BusinessLocal, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/BookCollection, java.vm.name=OpenJDK 64-Bit Server VM, openejb.scan.webapp.container.includes=.*(geronimo|mp-jwt|failsafe).*, tomee.remote.support=true, java.vendor.url.bug=https://bugs.launchpad.net/ubuntu/+source/openjdk-lts, catalina.home=/home/student/tomcat, user.dir=/home/student/tomcat/bin, bval.in-container=true, os.arch=amd64, openjpa.Log=org.apache.openejb.openjpa.JULOpenJPALogFactory, hibernate.connection.password=****, tomee.serialization.class.blacklist=-, tomee.serialization.class.whitelist=, shared.loader=, catalina.base=/home/student/.cache/JetBrains/IntelliJIdea2020.3/tomcat/10a53701-4112-462e-a101-1df2054f3873, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@469ae15b, noBanner=true, java.util.logging.manager=org.apache.juli.ClassLoaderLogManager, org.apache.webbeans.logger.WebBeansLoggerFacade=org.apache.openejb.cdi.logging.ContainerJULLoggerFactory, java.vm.info=mixed mode, sharing, java.vm.version=11.0.11+9-Ubuntu-0ubuntu2.20.04, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.hostname=127.0.0.1, javax.security.jacc.PolicyConfigurationFactory.provider=org.apache.openejb.core.security.JaccProvider$Factory, connection.url=jdbc:mysql://localhost:3306/BookCollection, java.class.version=55.0, authconfigprovider.factory=false}
[DEBUG] 2021-05-11 17:41:15.083 [http-nio-8080-exec-9] ClassLoaderAccessImpl - Not known whether passed class name [com.leeannjakel.entity.Book] is safe
[DEBUG] 2021-05-11 17:41:15.085 [http-nio-8080-exec-9] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.leeannjakel.entity.Book
[DEBUG] 2021-05-11 17:41:15.275 [http-nio-8080-exec-9] ClassLoaderAccessImpl - Not known whether passed class name [com.leeannjakel.entity.User] is safe
[DEBUG] 2021-05-11 17:41:15.290 [http-nio-8080-exec-9] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.leeannjakel.entity.User
[DEBUG] 2021-05-11 17:41:15.297 [http-nio-8080-exec-9] ClassLoaderAccessImpl - Not known whether passed class name [com.leeannjakel.entity.Author] is safe
[DEBUG] 2021-05-11 17:41:15.297 [http-nio-8080-exec-9] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.leeannjakel.entity.Author
[DEBUG] 2021-05-11 17:41:15.306 [http-nio-8080-exec-9] ClassLoaderAccessImpl - Not known whether passed class name [com.leeannjakel.entity.Genre] is safe
[DEBUG] 2021-05-11 17:41:15.306 [http-nio-8080-exec-9] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.leeannjakel.entity.Genre
[DEBUG] 2021-05-11 17:41:15.309 [http-nio-8080-exec-9] ClassLoaderAccessImpl - Not known whether passed class name [com.leeannjakel.entity.Role] is safe
[DEBUG] 2021-05-11 17:41:15.309 [http-nio-8080-exec-9] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.leeannjakel.entity.Role
[DEBUG] 2021-05-11 17:41:15.340 [http-nio-8080-exec-9] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2021-05-11 17:41:15.342 [http-nio-8080-exec-9] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2021-05-11 17:41:15.343 [http-nio-8080-exec-9] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@711c0eaf] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@160533a3]
[DEBUG] 2021-05-11 17:41:15.560 [http-nio-8080-exec-9] ClassLoaderAccessImpl - Not known whether passed class name [com.leeannjakel.entity.Book] is safe
[DEBUG] 2021-05-11 17:41:15.561 [http-nio-8080-exec-9] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.leeannjakel.entity.Book
[DEBUG] 2021-05-11 17:41:15.636 [http-nio-8080-exec-9] ClassLoaderAccessImpl - Not known whether passed class name [com.leeannjakel.entity.Book] is safe
[DEBUG] 2021-05-11 17:41:15.636 [http-nio-8080-exec-9] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.leeannjakel.entity.Book
[DEBUG] 2021-05-11 17:41:16.538 [http-nio-8080-exec-9] ClassLoaderAccessImpl - Not known whether passed class name [com.leeannjakel.entity.User] is safe
[DEBUG] 2021-05-11 17:41:16.538 [http-nio-8080-exec-9] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.leeannjakel.entity.User
[DEBUG] 2021-05-11 17:41:16.546 [http-nio-8080-exec-9] ClassLoaderAccessImpl - Not known whether passed class name [com.leeannjakel.entity.User] is safe
[DEBUG] 2021-05-11 17:41:16.552 [http-nio-8080-exec-9] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.leeannjakel.entity.User
[DEBUG] 2021-05-11 17:41:16.741 [http-nio-8080-exec-9] ClassLoaderAccessImpl - Not known whether passed class name [com.leeannjakel.entity.Author] is safe
[DEBUG] 2021-05-11 17:41:16.742 [http-nio-8080-exec-9] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.leeannjakel.entity.Author
[DEBUG] 2021-05-11 17:41:16.744 [http-nio-8080-exec-9] ClassLoaderAccessImpl - Not known whether passed class name [com.leeannjakel.entity.Author] is safe
[DEBUG] 2021-05-11 17:41:16.744 [http-nio-8080-exec-9] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.leeannjakel.entity.Author
[DEBUG] 2021-05-11 17:41:16.780 [http-nio-8080-exec-9] ClassLoaderAccessImpl - Not known whether passed class name [com.leeannjakel.entity.Genre] is safe
[DEBUG] 2021-05-11 17:41:16.780 [http-nio-8080-exec-9] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.leeannjakel.entity.Genre
[DEBUG] 2021-05-11 17:41:16.789 [http-nio-8080-exec-9] ClassLoaderAccessImpl - Not known whether passed class name [com.leeannjakel.entity.Genre] is safe
[DEBUG] 2021-05-11 17:41:16.789 [http-nio-8080-exec-9] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.leeannjakel.entity.Genre
[DEBUG] 2021-05-11 17:41:16.846 [http-nio-8080-exec-9] ClassLoaderAccessImpl - Not known whether passed class name [com.leeannjakel.entity.Role] is safe
[DEBUG] 2021-05-11 17:41:16.847 [http-nio-8080-exec-9] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.leeannjakel.entity.Role
[DEBUG] 2021-05-11 17:41:16.847 [http-nio-8080-exec-9] ClassLoaderAccessImpl - Not known whether passed class name [com.leeannjakel.entity.Role] is safe
[DEBUG] 2021-05-11 17:41:16.847 [http-nio-8080-exec-9] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.leeannjakel.entity.Role
[DEBUG] 2021-05-11 17:41:16.961 [http-nio-8080-exec-9] AbstractCollectionPersister - Static SQL for collection: com.leeannjakel.entity.Author.books
[DEBUG] 2021-05-11 17:41:16.962 [http-nio-8080-exec-9] AbstractCollectionPersister -  Row insert: update book set author_id=? where id=?
[DEBUG] 2021-05-11 17:41:16.962 [http-nio-8080-exec-9] AbstractCollectionPersister -  Row update: update book set  where id=?
[DEBUG] 2021-05-11 17:41:16.963 [http-nio-8080-exec-9] AbstractCollectionPersister -  Row delete: update book set author_id=null where author_id=? and id=?
[DEBUG] 2021-05-11 17:41:16.963 [http-nio-8080-exec-9] AbstractCollectionPersister -  One-shot delete: update book set author_id=null where author_id=?
[DEBUG] 2021-05-11 17:41:16.964 [http-nio-8080-exec-9] AbstractCollectionPersister - Static SQL for collection: com.leeannjakel.entity.User.books
[DEBUG] 2021-05-11 17:41:16.964 [http-nio-8080-exec-9] AbstractCollectionPersister -  Row insert: update book set user_id=? where id=?
[DEBUG] 2021-05-11 17:41:16.964 [http-nio-8080-exec-9] AbstractCollectionPersister -  Row update: update book set  where id=?
[DEBUG] 2021-05-11 17:41:16.964 [http-nio-8080-exec-9] AbstractCollectionPersister -  Row delete: update book set user_id=null where user_id=? and id=?
[DEBUG] 2021-05-11 17:41:16.964 [http-nio-8080-exec-9] AbstractCollectionPersister -  One-shot delete: update book set user_id=null where user_id=?
[DEBUG] 2021-05-11 17:41:16.965 [http-nio-8080-exec-9] AbstractCollectionPersister - Static SQL for collection: com.leeannjakel.entity.User.roles
[DEBUG] 2021-05-11 17:41:16.966 [http-nio-8080-exec-9] AbstractCollectionPersister -  Row insert: update role set user_id=? where id=?
[DEBUG] 2021-05-11 17:41:16.966 [http-nio-8080-exec-9] AbstractCollectionPersister -  Row update: update role set  where id=?
[DEBUG] 2021-05-11 17:41:16.966 [http-nio-8080-exec-9] AbstractCollectionPersister -  Row delete: update role set user_id=null where user_id=? and id=?
[DEBUG] 2021-05-11 17:41:16.966 [http-nio-8080-exec-9] AbstractCollectionPersister -  One-shot delete: update role set user_id=null where user_id=?
[DEBUG] 2021-05-11 17:41:16.972 [http-nio-8080-exec-9] AbstractCollectionPersister - Static SQL for collection: com.leeannjakel.entity.Genre.books
[DEBUG] 2021-05-11 17:41:16.974 [http-nio-8080-exec-9] AbstractCollectionPersister -  Row insert: update book set genre_id=? where id=?
[DEBUG] 2021-05-11 17:41:16.974 [http-nio-8080-exec-9] AbstractCollectionPersister -  Row update: update book set  where id=?
[DEBUG] 2021-05-11 17:41:16.974 [http-nio-8080-exec-9] AbstractCollectionPersister -  Row delete: update book set genre_id=null where genre_id=? and id=?
[DEBUG] 2021-05-11 17:41:16.974 [http-nio-8080-exec-9] AbstractCollectionPersister -  One-shot delete: update book set genre_id=null where genre_id=?
[DEBUG] 2021-05-11 17:41:16.985 [http-nio-8080-exec-9] AbstractEntityPersister - Static SQL for entity: com.leeannjakel.entity.Book
[DEBUG] 2021-05-11 17:41:16.985 [http-nio-8080-exec-9] AbstractEntityPersister -  Version select: select id from book where id =?
[DEBUG] 2021-05-11 17:41:16.986 [http-nio-8080-exec-9] AbstractEntityPersister -  Snapshot select: select book_.id, book_.author_id as author_i5_1_, book_.genre_id as genre_id6_1_, book_.isbn as isbn2_1_, book_.notes as notes3_1_, book_.title as title4_1_, book_.user_id as user_id7_1_ from book book_ where book_.id=?
[DEBUG] 2021-05-11 17:41:16.986 [http-nio-8080-exec-9] AbstractEntityPersister -  Insert 0: insert into book (author_id, genre_id, isbn, notes, title, user_id, id) values (?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2021-05-11 17:41:16.986 [http-nio-8080-exec-9] AbstractEntityPersister -  Update 0: update book set author_id=?, genre_id=?, isbn=?, notes=?, title=?, user_id=? where id=?
[DEBUG] 2021-05-11 17:41:16.986 [http-nio-8080-exec-9] AbstractEntityPersister -  Delete 0: delete from book where id=?
[DEBUG] 2021-05-11 17:41:16.986 [http-nio-8080-exec-9] AbstractEntityPersister -  Identity insert: insert into book (author_id, genre_id, isbn, notes, title, user_id) values (?, ?, ?, ?, ?, ?)
[DEBUG] 2021-05-11 17:41:17.098 [http-nio-8080-exec-9] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@691ac58e]
[DEBUG] 2021-05-11 17:41:17.101 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : author
[DEBUG] 2021-05-11 17:41:17.122 [http-nio-8080-exec-9] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@63cecca7]
[DEBUG] 2021-05-11 17:41:17.125 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : author.books
[DEBUG] 2021-05-11 17:41:17.125 [http-nio-8080-exec-9] MetamodelGraphWalker - Property path deemed to be circular : author.books
[DEBUG] 2021-05-11 17:41:17.125 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : author.name
[DEBUG] 2021-05-11 17:41:17.126 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : genre
[DEBUG] 2021-05-11 17:41:17.126 [http-nio-8080-exec-9] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a9e78d9]
[DEBUG] 2021-05-11 17:41:17.126 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : genre.books
[DEBUG] 2021-05-11 17:41:17.126 [http-nio-8080-exec-9] MetamodelGraphWalker - Property path deemed to be circular : genre.books
[DEBUG] 2021-05-11 17:41:17.126 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : genre.name
[DEBUG] 2021-05-11 17:41:17.128 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : isbn
[DEBUG] 2021-05-11 17:41:17.128 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : notes
[DEBUG] 2021-05-11 17:41:17.128 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2021-05-11 17:41:17.130 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2021-05-11 17:41:17.130 [http-nio-8080-exec-9] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3f5f897f]
[DEBUG] 2021-05-11 17:41:17.143 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : user.books
[DEBUG] 2021-05-11 17:41:17.143 [http-nio-8080-exec-9] MetamodelGraphWalker - Property path deemed to be circular : user.books
[DEBUG] 2021-05-11 17:41:17.143 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2021-05-11 17:41:17.145 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2021-05-11 17:41:17.145 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2021-05-11 17:41:17.146 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2021-05-11 17:41:17.146 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2021-05-11 17:41:17.149 [http-nio-8080-exec-9] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5055bc8a]
[DEBUG] 2021-05-11 17:41:17.153 [http-nio-8080-exec-9] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5a66c665]
[DEBUG] 2021-05-11 17:41:17.155 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : user.roles.roleName
[DEBUG] 2021-05-11 17:41:17.155 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2021-05-11 17:41:17.155 [http-nio-8080-exec-9] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2021-05-11 17:41:17.156 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : user.roles.userName
[DEBUG] 2021-05-11 17:41:17.157 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : user.userName
[DEBUG] 2021-05-11 17:41:17.158 [http-nio-8080-exec-9] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-05-11 17:41:17.192 [http-nio-8080-exec-9] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-05-11 17:41:17.221 [http-nio-8080-exec-9] LoadPlanTreePrinter - LoadPlan(entity=com.leeannjakel.entity.Book)
    - Returns
       - EntityReturnImpl(entity=com.leeannjakel.entity.Book, querySpaceUid=<gen:0>, path=com.leeannjakel.entity.Book)
          - EntityAttributeFetchImpl(entity=com.leeannjakel.entity.Author, querySpaceUid=<gen:1>, path=com.leeannjakel.entity.Book.author)
          - EntityAttributeFetchImpl(entity=com.leeannjakel.entity.Genre, querySpaceUid=<gen:2>, path=com.leeannjakel.entity.Book.genre)
          - EntityAttributeFetchImpl(entity=com.leeannjakel.entity.User, querySpaceUid=<gen:3>, path=com.leeannjakel.entity.Book.user)
             - CollectionAttributeFetchImpl(collection=com.leeannjakel.entity.User.roles, querySpaceUid=<gen:4>, path=com.leeannjakel.entity.Book.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.leeannjakel.entity.Role, querySpaceUid=<gen:5>, path=com.leeannjakel.entity.Book.user.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.leeannjakel.entity.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(author)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.leeannjakel.entity.Author)
                - SQL table alias mapping - author1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}
          - JOIN (JoinDefinedByMetadata(genre)) : <gen:0> -> <gen:2>
             - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.leeannjakel.entity.Genre)
                - SQL table alias mapping - genre2_
                - alias suffix - 2_
                - suffixed key columns - {id1_2_2_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=com.leeannjakel.entity.User)
                - SQL table alias mapping - user3_
                - alias suffix - 3_
                - suffixed key columns - {id1_4_3_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:3> -> <gen:4>
                   - CollectionQuerySpaceImpl(uid=<gen:4>, collection=com.leeannjakel.entity.User.roles)
                      - SQL table alias mapping - roles4_
                      - alias suffix - 4_
                      - suffixed key columns - {user_id4_3_4_}
                      - entity-element alias suffix - 5_
                      - 5_entity-element suffixed key columns - id1_3_5_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:4> -> <gen:5>
                         - EntityQuerySpaceImpl(uid=<gen:5>, entity=com.leeannjakel.entity.Role)
                            - SQL table alias mapping - roles4_
                            - alias suffix - 5_
                            - suffixed key columns - {id1_3_5_}

[DEBUG] 2021-05-11 17:41:17.224 [http-nio-8080-exec-9] EntityLoader - Static select for entity com.leeannjakel.entity.Book [NONE]: select book0_.id as id1_1_0_, book0_.author_id as author_i5_1_0_, book0_.genre_id as genre_id6_1_0_, book0_.isbn as isbn2_1_0_, book0_.notes as notes3_1_0_, book0_.title as title4_1_0_, book0_.user_id as user_id7_1_0_, author1_.id as id1_0_1_, author1_.name as name2_0_1_, genre2_.id as id1_2_2_, genre2_.name as name2_2_2_, user3_.id as id1_4_3_, user3_.email as email2_4_3_, user3_.first_name as first_na3_4_3_, user3_.last_name as last_nam4_4_3_, user3_.password as password5_4_3_, user3_.user_name as user_nam6_4_3_, roles4_.user_id as user_id4_3_4_, roles4_.id as id1_3_4_, roles4_.id as id1_3_5_, roles4_.role_name as role_nam2_3_5_, roles4_.user_id as user_id4_3_5_, roles4_.user_name as user_nam3_3_5_ from book book0_ left outer join author author1_ on book0_.author_id=author1_.id left outer join genre genre2_ on book0_.genre_id=genre2_.id left outer join user user3_ on book0_.user_id=user3_.id left outer join role roles4_ on user3_.id=roles4_.user_id where book0_.id=?
[DEBUG] 2021-05-11 17:41:17.234 [http-nio-8080-exec-9] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@63d1896f]
[DEBUG] 2021-05-11 17:41:17.234 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : author
[DEBUG] 2021-05-11 17:41:17.236 [http-nio-8080-exec-9] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1e784bf2]
[DEBUG] 2021-05-11 17:41:17.240 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : author.books
[DEBUG] 2021-05-11 17:41:17.241 [http-nio-8080-exec-9] MetamodelGraphWalker - Property path deemed to be circular : author.books
[DEBUG] 2021-05-11 17:41:17.242 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : author.name
[DEBUG] 2021-05-11 17:41:17.242 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : genre
[DEBUG] 2021-05-11 17:41:17.242 [http-nio-8080-exec-9] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@482e050d]
[DEBUG] 2021-05-11 17:41:17.242 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : genre.books
[DEBUG] 2021-05-11 17:41:17.242 [http-nio-8080-exec-9] MetamodelGraphWalker - Property path deemed to be circular : genre.books
[DEBUG] 2021-05-11 17:41:17.242 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : genre.name
[DEBUG] 2021-05-11 17:41:17.242 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : isbn
[DEBUG] 2021-05-11 17:41:17.242 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : notes
[DEBUG] 2021-05-11 17:41:17.242 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2021-05-11 17:41:17.242 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2021-05-11 17:41:17.242 [http-nio-8080-exec-9] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2b6c9659]
[DEBUG] 2021-05-11 17:41:17.242 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : user.books
[DEBUG] 2021-05-11 17:41:17.242 [http-nio-8080-exec-9] MetamodelGraphWalker - Property path deemed to be circular : user.books
[DEBUG] 2021-05-11 17:41:17.242 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2021-05-11 17:41:17.242 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2021-05-11 17:41:17.243 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2021-05-11 17:41:17.243 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2021-05-11 17:41:17.243 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2021-05-11 17:41:17.243 [http-nio-8080-exec-9] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6f2640f5]
[DEBUG] 2021-05-11 17:41:17.243 [http-nio-8080-exec-9] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@23d99a77]
[DEBUG] 2021-05-11 17:41:17.243 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : user.roles.roleName
[DEBUG] 2021-05-11 17:41:17.243 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2021-05-11 17:41:17.243 [http-nio-8080-exec-9] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2021-05-11 17:41:17.243 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : user.roles.userName
[DEBUG] 2021-05-11 17:41:17.243 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : user.userName
[DEBUG] 2021-05-11 17:41:17.243 [http-nio-8080-exec-9] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-05-11 17:41:17.243 [http-nio-8080-exec-9] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-05-11 17:41:17.248 [http-nio-8080-exec-9] LoadPlanTreePrinter - LoadPlan(entity=com.leeannjakel.entity.Book)
    - Returns
       - EntityReturnImpl(entity=com.leeannjakel.entity.Book, querySpaceUid=<gen:0>, path=com.leeannjakel.entity.Book)
          - EntityAttributeFetchImpl(entity=com.leeannjakel.entity.Author, querySpaceUid=<gen:1>, path=com.leeannjakel.entity.Book.author)
          - EntityAttributeFetchImpl(entity=com.leeannjakel.entity.Genre, querySpaceUid=<gen:2>, path=com.leeannjakel.entity.Book.genre)
          - EntityAttributeFetchImpl(entity=com.leeannjakel.entity.User, querySpaceUid=<gen:3>, path=com.leeannjakel.entity.Book.user)
             - CollectionAttributeFetchImpl(collection=com.leeannjakel.entity.User.roles, querySpaceUid=<gen:4>, path=com.leeannjakel.entity.Book.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.leeannjakel.entity.Role, querySpaceUid=<gen:5>, path=com.leeannjakel.entity.Book.user.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.leeannjakel.entity.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(author)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.leeannjakel.entity.Author)
                - SQL table alias mapping - author1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}
          - JOIN (JoinDefinedByMetadata(genre)) : <gen:0> -> <gen:2>
             - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.leeannjakel.entity.Genre)
                - SQL table alias mapping - genre2_
                - alias suffix - 2_
                - suffixed key columns - {id1_2_2_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=com.leeannjakel.entity.User)
                - SQL table alias mapping - user3_
                - alias suffix - 3_
                - suffixed key columns - {id1_4_3_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:3> -> <gen:4>
                   - CollectionQuerySpaceImpl(uid=<gen:4>, collection=com.leeannjakel.entity.User.roles)
                      - SQL table alias mapping - roles4_
                      - alias suffix - 4_
                      - suffixed key columns - {user_id4_3_4_}
                      - entity-element alias suffix - 5_
                      - 5_entity-element suffixed key columns - id1_3_5_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:4> -> <gen:5>
                         - EntityQuerySpaceImpl(uid=<gen:5>, entity=com.leeannjakel.entity.Role)
                            - SQL table alias mapping - roles4_
                            - alias suffix - 5_
                            - suffixed key columns - {id1_3_5_}

[DEBUG] 2021-05-11 17:41:17.249 [http-nio-8080-exec-9] EntityLoader - Static select for entity com.leeannjakel.entity.Book [READ]: select book0_.id as id1_1_0_, book0_.author_id as author_i5_1_0_, book0_.genre_id as genre_id6_1_0_, book0_.isbn as isbn2_1_0_, book0_.notes as notes3_1_0_, book0_.title as title4_1_0_, book0_.user_id as user_id7_1_0_, author1_.id as id1_0_1_, author1_.name as name2_0_1_, genre2_.id as id1_2_2_, genre2_.name as name2_2_2_, user3_.id as id1_4_3_, user3_.email as email2_4_3_, user3_.first_name as first_na3_4_3_, user3_.last_name as last_nam4_4_3_, user3_.password as password5_4_3_, user3_.user_name as user_nam6_4_3_, roles4_.user_id as user_id4_3_4_, roles4_.id as id1_3_4_, roles4_.id as id1_3_5_, roles4_.role_name as role_nam2_3_5_, roles4_.user_id as user_id4_3_5_, roles4_.user_name as user_nam3_3_5_ from book book0_ left outer join author author1_ on book0_.author_id=author1_.id left outer join genre genre2_ on book0_.genre_id=genre2_.id left outer join user user3_ on book0_.user_id=user3_.id left outer join role roles4_ on user3_.id=roles4_.user_id where book0_.id=?
[DEBUG] 2021-05-11 17:41:17.294 [http-nio-8080-exec-9] Loader - Static select for action ACTION_MERGE on entity com.leeannjakel.entity.Book: select book0_.id as id1_1_0_, book0_.author_id as author_i5_1_0_, book0_.genre_id as genre_id6_1_0_, book0_.isbn as isbn2_1_0_, book0_.notes as notes3_1_0_, book0_.title as title4_1_0_, book0_.user_id as user_id7_1_0_ from book book0_ where book0_.id=?
[DEBUG] 2021-05-11 17:41:17.294 [http-nio-8080-exec-9] Loader - Static select for action ACTION_REFRESH on entity com.leeannjakel.entity.Book: select book0_.id as id1_1_0_, book0_.author_id as author_i5_1_0_, book0_.genre_id as genre_id6_1_0_, book0_.isbn as isbn2_1_0_, book0_.notes as notes3_1_0_, book0_.title as title4_1_0_, book0_.user_id as user_id7_1_0_ from book book0_ where book0_.id=?
[DEBUG] 2021-05-11 17:41:17.295 [http-nio-8080-exec-9] AbstractEntityPersister - Static SQL for entity: com.leeannjakel.entity.User
[DEBUG] 2021-05-11 17:41:17.295 [http-nio-8080-exec-9] AbstractEntityPersister -  Version select: select id from user where id =?
[DEBUG] 2021-05-11 17:41:17.295 [http-nio-8080-exec-9] AbstractEntityPersister -  Snapshot select: select user_.id, user_.email as email2_4_, user_.first_name as first_na3_4_, user_.last_name as last_nam4_4_, user_.password as password5_4_, user_.user_name as user_nam6_4_ from user user_ where user_.id=?
[DEBUG] 2021-05-11 17:41:17.295 [http-nio-8080-exec-9] AbstractEntityPersister -  Insert 0: insert into user (email, first_name, last_name, password, user_name, id) values (?, ?, ?, ?, ?, ?)
[DEBUG] 2021-05-11 17:41:17.295 [http-nio-8080-exec-9] AbstractEntityPersister -  Update 0: update user set email=?, first_name=?, last_name=?, password=?, user_name=? where id=?
[DEBUG] 2021-05-11 17:41:17.295 [http-nio-8080-exec-9] AbstractEntityPersister -  Delete 0: delete from user where id=?
[DEBUG] 2021-05-11 17:41:17.295 [http-nio-8080-exec-9] AbstractEntityPersister -  Identity insert: insert into user (email, first_name, last_name, password, user_name) values (?, ?, ?, ?, ?)
[DEBUG] 2021-05-11 17:41:17.295 [http-nio-8080-exec-9] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@ad6a5ef]
[DEBUG] 2021-05-11 17:41:17.295 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : books
[DEBUG] 2021-05-11 17:41:17.295 [http-nio-8080-exec-9] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1db6a57f]
[DEBUG] 2021-05-11 17:41:17.295 [http-nio-8080-exec-9] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5ecceaaf]
[DEBUG] 2021-05-11 17:41:17.298 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2021-05-11 17:41:17.298 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2021-05-11 17:41:17.298 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2021-05-11 17:41:17.299 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2021-05-11 17:41:17.299 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : roles
[DEBUG] 2021-05-11 17:41:17.300 [http-nio-8080-exec-9] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@610ac544]
[DEBUG] 2021-05-11 17:41:17.300 [http-nio-8080-exec-9] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2d972cc2]
[DEBUG] 2021-05-11 17:41:17.305 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : roles.roleName
[DEBUG] 2021-05-11 17:41:17.306 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : roles.user
[DEBUG] 2021-05-11 17:41:17.306 [http-nio-8080-exec-9] MetamodelGraphWalker - Property path deemed to be circular : roles.user
[DEBUG] 2021-05-11 17:41:17.306 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : roles.userName
[DEBUG] 2021-05-11 17:41:17.306 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : userName
[DEBUG] 2021-05-11 17:41:17.306 [http-nio-8080-exec-9] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-05-11 17:41:17.307 [http-nio-8080-exec-9] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-05-11 17:41:17.308 [http-nio-8080-exec-9] LoadPlanTreePrinter - LoadPlan(entity=com.leeannjakel.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.leeannjakel.entity.User, querySpaceUid=<gen:0>, path=com.leeannjakel.entity.User)
          - CollectionAttributeFetchImpl(collection=com.leeannjakel.entity.User.books, querySpaceUid=<gen:1>, path=com.leeannjakel.entity.User.books)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.leeannjakel.entity.Book, querySpaceUid=<gen:2>, path=com.leeannjakel.entity.User.books.<elements>)
          - CollectionAttributeFetchImpl(collection=com.leeannjakel.entity.User.roles, querySpaceUid=<gen:3>, path=com.leeannjakel.entity.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.leeannjakel.entity.Role, querySpaceUid=<gen:4>, path=com.leeannjakel.entity.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.leeannjakel.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:3>
             - CollectionQuerySpaceImpl(uid=<gen:3>, collection=com.leeannjakel.entity.User.roles)
                - SQL table alias mapping - roles1_
                - alias suffix - 1_
                - suffixed key columns - {user_id4_3_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_3_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:3> -> <gen:4>
                   - EntityQuerySpaceImpl(uid=<gen:4>, entity=com.leeannjakel.entity.Role)
                      - SQL table alias mapping - roles1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_3_2_}

[DEBUG] 2021-05-11 17:41:17.308 [http-nio-8080-exec-9] EntityLoader - Static select for entity com.leeannjakel.entity.User [NONE]: select user0_.id as id1_4_0_, user0_.email as email2_4_0_, user0_.first_name as first_na3_4_0_, user0_.last_name as last_nam4_4_0_, user0_.password as password5_4_0_, user0_.user_name as user_nam6_4_0_, roles1_.user_id as user_id4_3_1_, roles1_.id as id1_3_1_, roles1_.id as id1_3_2_, roles1_.role_name as role_nam2_3_2_, roles1_.user_id as user_id4_3_2_, roles1_.user_name as user_nam3_3_2_ from user user0_ left outer join role roles1_ on user0_.id=roles1_.user_id where user0_.id=?
[DEBUG] 2021-05-11 17:41:17.308 [http-nio-8080-exec-9] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@b9530fa]
[DEBUG] 2021-05-11 17:41:17.309 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : books
[DEBUG] 2021-05-11 17:41:17.309 [http-nio-8080-exec-9] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@d0a7ea3]
[DEBUG] 2021-05-11 17:41:17.309 [http-nio-8080-exec-9] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@26355173]
[DEBUG] 2021-05-11 17:41:17.309 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2021-05-11 17:41:17.309 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2021-05-11 17:41:17.309 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2021-05-11 17:41:17.309 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2021-05-11 17:41:17.309 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : roles
[DEBUG] 2021-05-11 17:41:17.309 [http-nio-8080-exec-9] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@405b7af]
[DEBUG] 2021-05-11 17:41:17.309 [http-nio-8080-exec-9] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1c0ee805]
[DEBUG] 2021-05-11 17:41:17.310 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : roles.roleName
[DEBUG] 2021-05-11 17:41:17.310 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : roles.user
[DEBUG] 2021-05-11 17:41:17.311 [http-nio-8080-exec-9] MetamodelGraphWalker - Property path deemed to be circular : roles.user
[DEBUG] 2021-05-11 17:41:17.312 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : roles.userName
[DEBUG] 2021-05-11 17:41:17.313 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : userName
[DEBUG] 2021-05-11 17:41:17.313 [http-nio-8080-exec-9] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-05-11 17:41:17.314 [http-nio-8080-exec-9] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-05-11 17:41:17.317 [http-nio-8080-exec-9] LoadPlanTreePrinter - LoadPlan(entity=com.leeannjakel.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.leeannjakel.entity.User, querySpaceUid=<gen:0>, path=com.leeannjakel.entity.User)
          - CollectionAttributeFetchImpl(collection=com.leeannjakel.entity.User.books, querySpaceUid=<gen:1>, path=com.leeannjakel.entity.User.books)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.leeannjakel.entity.Book, querySpaceUid=<gen:2>, path=com.leeannjakel.entity.User.books.<elements>)
          - CollectionAttributeFetchImpl(collection=com.leeannjakel.entity.User.roles, querySpaceUid=<gen:3>, path=com.leeannjakel.entity.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.leeannjakel.entity.Role, querySpaceUid=<gen:4>, path=com.leeannjakel.entity.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.leeannjakel.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:3>
             - CollectionQuerySpaceImpl(uid=<gen:3>, collection=com.leeannjakel.entity.User.roles)
                - SQL table alias mapping - roles1_
                - alias suffix - 1_
                - suffixed key columns - {user_id4_3_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_3_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:3> -> <gen:4>
                   - EntityQuerySpaceImpl(uid=<gen:4>, entity=com.leeannjakel.entity.Role)
                      - SQL table alias mapping - roles1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_3_2_}

[DEBUG] 2021-05-11 17:41:17.317 [http-nio-8080-exec-9] EntityLoader - Static select for entity com.leeannjakel.entity.User [READ]: select user0_.id as id1_4_0_, user0_.email as email2_4_0_, user0_.first_name as first_na3_4_0_, user0_.last_name as last_nam4_4_0_, user0_.password as password5_4_0_, user0_.user_name as user_nam6_4_0_, roles1_.user_id as user_id4_3_1_, roles1_.id as id1_3_1_, roles1_.id as id1_3_2_, roles1_.role_name as role_nam2_3_2_, roles1_.user_id as user_id4_3_2_, roles1_.user_name as user_nam3_3_2_ from user user0_ left outer join role roles1_ on user0_.id=roles1_.user_id where user0_.id=?
[DEBUG] 2021-05-11 17:41:17.326 [http-nio-8080-exec-9] Loader - Static select for action ACTION_MERGE on entity com.leeannjakel.entity.User: select user0_.id as id1_4_1_, user0_.email as email2_4_1_, user0_.first_name as first_na3_4_1_, user0_.last_name as last_nam4_4_1_, user0_.password as password5_4_1_, user0_.user_name as user_nam6_4_1_, books1_.user_id as user_id7_1_3_, books1_.id as id1_1_3_, books1_.id as id1_1_0_, books1_.author_id as author_i5_1_0_, books1_.genre_id as genre_id6_1_0_, books1_.isbn as isbn2_1_0_, books1_.notes as notes3_1_0_, books1_.title as title4_1_0_, books1_.user_id as user_id7_1_0_ from user user0_ left outer join book books1_ on user0_.id=books1_.user_id where user0_.id=?
[DEBUG] 2021-05-11 17:41:17.326 [http-nio-8080-exec-9] Loader - Static select for action ACTION_REFRESH on entity com.leeannjakel.entity.User: select user0_.id as id1_4_1_, user0_.email as email2_4_1_, user0_.first_name as first_na3_4_1_, user0_.last_name as last_nam4_4_1_, user0_.password as password5_4_1_, user0_.user_name as user_nam6_4_1_, books1_.user_id as user_id7_1_3_, books1_.id as id1_1_3_, books1_.id as id1_1_0_, books1_.author_id as author_i5_1_0_, books1_.genre_id as genre_id6_1_0_, books1_.isbn as isbn2_1_0_, books1_.notes as notes3_1_0_, books1_.title as title4_1_0_, books1_.user_id as user_id7_1_0_ from user user0_ left outer join book books1_ on user0_.id=books1_.user_id where user0_.id=?
[DEBUG] 2021-05-11 17:41:17.327 [http-nio-8080-exec-9] AbstractEntityPersister - Static SQL for entity: com.leeannjakel.entity.Author
[DEBUG] 2021-05-11 17:41:17.327 [http-nio-8080-exec-9] AbstractEntityPersister -  Version select: select id from author where id =?
[DEBUG] 2021-05-11 17:41:17.327 [http-nio-8080-exec-9] AbstractEntityPersister -  Snapshot select: select author_.id, author_.name as name2_0_ from author author_ where author_.id=?
[DEBUG] 2021-05-11 17:41:17.327 [http-nio-8080-exec-9] AbstractEntityPersister -  Insert 0: insert into author (name, id) values (?, ?)
[DEBUG] 2021-05-11 17:41:17.327 [http-nio-8080-exec-9] AbstractEntityPersister -  Update 0: update author set name=? where id=?
[DEBUG] 2021-05-11 17:41:17.327 [http-nio-8080-exec-9] AbstractEntityPersister -  Delete 0: delete from author where id=?
[DEBUG] 2021-05-11 17:41:17.327 [http-nio-8080-exec-9] AbstractEntityPersister -  Identity insert: insert into author (name) values (?)
[DEBUG] 2021-05-11 17:41:17.327 [http-nio-8080-exec-9] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@13fb2cf1]
[DEBUG] 2021-05-11 17:41:17.328 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : books
[DEBUG] 2021-05-11 17:41:17.328 [http-nio-8080-exec-9] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@54883af5]
[DEBUG] 2021-05-11 17:41:17.329 [http-nio-8080-exec-9] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@8452e6c]
[DEBUG] 2021-05-11 17:41:17.329 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : books.author
[DEBUG] 2021-05-11 17:41:17.329 [http-nio-8080-exec-9] MetamodelGraphWalker - Property path deemed to be circular : books.author
[DEBUG] 2021-05-11 17:41:17.329 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : books.genre
[DEBUG] 2021-05-11 17:41:17.330 [http-nio-8080-exec-9] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@19f0d56a]
[DEBUG] 2021-05-11 17:41:17.330 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : books.genre.books
[DEBUG] 2021-05-11 17:41:17.330 [http-nio-8080-exec-9] MetamodelGraphWalker - Property path deemed to be circular : books.genre.books
[DEBUG] 2021-05-11 17:41:17.330 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : books.genre.name
[DEBUG] 2021-05-11 17:41:17.330 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : books.isbn
[DEBUG] 2021-05-11 17:41:17.330 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : books.notes
[DEBUG] 2021-05-11 17:41:17.330 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : books.title
[DEBUG] 2021-05-11 17:41:17.332 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : books.user
[DEBUG] 2021-05-11 17:41:17.332 [http-nio-8080-exec-9] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@62971cc4]
[DEBUG] 2021-05-11 17:41:17.337 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : books.user.books
[DEBUG] 2021-05-11 17:41:17.337 [http-nio-8080-exec-9] MetamodelGraphWalker - Property path deemed to be circular : books.user.books
[DEBUG] 2021-05-11 17:41:17.337 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : books.user.email
[DEBUG] 2021-05-11 17:41:17.337 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : books.user.firstName
[DEBUG] 2021-05-11 17:41:17.337 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : books.user.lastName
[DEBUG] 2021-05-11 17:41:17.337 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : books.user.password
[DEBUG] 2021-05-11 17:41:17.337 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : books.user.roles
[DEBUG] 2021-05-11 17:41:17.337 [http-nio-8080-exec-9] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@21f9666d]
[DEBUG] 2021-05-11 17:41:17.338 [http-nio-8080-exec-9] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2468f82a]
[DEBUG] 2021-05-11 17:41:17.338 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : books.user.userName
[DEBUG] 2021-05-11 17:41:17.338 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2021-05-11 17:41:17.338 [http-nio-8080-exec-9] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-05-11 17:41:17.338 [http-nio-8080-exec-9] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-05-11 17:41:17.342 [http-nio-8080-exec-9] LoadPlanTreePrinter - LoadPlan(entity=com.leeannjakel.entity.Author)
    - Returns
       - EntityReturnImpl(entity=com.leeannjakel.entity.Author, querySpaceUid=<gen:0>, path=com.leeannjakel.entity.Author)
          - CollectionAttributeFetchImpl(collection=com.leeannjakel.entity.Author.books, querySpaceUid=<gen:1>, path=com.leeannjakel.entity.Author.books)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.leeannjakel.entity.Book, querySpaceUid=<gen:2>, path=com.leeannjakel.entity.Author.books.<elements>)
                - EntityAttributeFetchImpl(entity=com.leeannjakel.entity.Genre, querySpaceUid=<gen:3>, path=com.leeannjakel.entity.Author.books.<elements>.genre)
                - EntityAttributeFetchImpl(entity=com.leeannjakel.entity.User, querySpaceUid=<gen:4>, path=com.leeannjakel.entity.Author.books.<elements>.user)
                   - CollectionAttributeFetchImpl(collection=com.leeannjakel.entity.User.roles, querySpaceUid=<gen:5>, path=com.leeannjakel.entity.Author.books.<elements>.user.roles)
                      - (collection element) CollectionFetchableElementEntityGraph(entity=com.leeannjakel.entity.Role, querySpaceUid=<gen:6>, path=com.leeannjakel.entity.Author.books.<elements>.user.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.leeannjakel.entity.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(books)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=com.leeannjakel.entity.Author.books)
                - SQL table alias mapping - books1_
                - alias suffix - 1_
                - suffixed key columns - {author_i5_1_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_1_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.leeannjakel.entity.Book)
                      - SQL table alias mapping - books1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_1_2_}
                      - JOIN (JoinDefinedByMetadata(genre)) : <gen:2> -> <gen:3>
                         - EntityQuerySpaceImpl(uid=<gen:3>, entity=com.leeannjakel.entity.Genre)
                            - SQL table alias mapping - genre2_
                            - alias suffix - 3_
                            - suffixed key columns - {id1_2_3_}
                      - JOIN (JoinDefinedByMetadata(user)) : <gen:2> -> <gen:4>
                         - EntityQuerySpaceImpl(uid=<gen:4>, entity=com.leeannjakel.entity.User)
                            - SQL table alias mapping - user3_
                            - alias suffix - 4_
                            - suffixed key columns - {id1_4_4_}

[DEBUG] 2021-05-11 17:41:17.342 [http-nio-8080-exec-9] EntityLoader - Static select for entity com.leeannjakel.entity.Author [NONE]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, books1_.author_id as author_i5_1_1_, books1_.id as id1_1_1_, books1_.id as id1_1_2_, books1_.author_id as author_i5_1_2_, books1_.genre_id as genre_id6_1_2_, books1_.isbn as isbn2_1_2_, books1_.notes as notes3_1_2_, books1_.title as title4_1_2_, books1_.user_id as user_id7_1_2_, genre2_.id as id1_2_3_, genre2_.name as name2_2_3_, user3_.id as id1_4_4_, user3_.email as email2_4_4_, user3_.first_name as first_na3_4_4_, user3_.last_name as last_nam4_4_4_, user3_.password as password5_4_4_, user3_.user_name as user_nam6_4_4_ from author author0_ left outer join book books1_ on author0_.id=books1_.author_id left outer join genre genre2_ on books1_.genre_id=genre2_.id left outer join user user3_ on books1_.user_id=user3_.id where author0_.id=?
[DEBUG] 2021-05-11 17:41:17.342 [http-nio-8080-exec-9] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7e43b15f]
[DEBUG] 2021-05-11 17:41:17.342 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : books
[DEBUG] 2021-05-11 17:41:17.342 [http-nio-8080-exec-9] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@47f73f0c]
[DEBUG] 2021-05-11 17:41:17.342 [http-nio-8080-exec-9] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@243d3670]
[DEBUG] 2021-05-11 17:41:17.343 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : books.author
[DEBUG] 2021-05-11 17:41:17.343 [http-nio-8080-exec-9] MetamodelGraphWalker - Property path deemed to be circular : books.author
[DEBUG] 2021-05-11 17:41:17.343 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : books.genre
[DEBUG] 2021-05-11 17:41:17.345 [http-nio-8080-exec-9] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2bd50777]
[DEBUG] 2021-05-11 17:41:17.346 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : books.genre.books
[DEBUG] 2021-05-11 17:41:17.348 [http-nio-8080-exec-9] MetamodelGraphWalker - Property path deemed to be circular : books.genre.books
[DEBUG] 2021-05-11 17:41:17.348 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : books.genre.name
[DEBUG] 2021-05-11 17:41:17.348 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : books.isbn
[DEBUG] 2021-05-11 17:41:17.348 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : books.notes
[DEBUG] 2021-05-11 17:41:17.348 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : books.title
[DEBUG] 2021-05-11 17:41:17.348 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : books.user
[DEBUG] 2021-05-11 17:41:17.348 [http-nio-8080-exec-9] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1c6c9c42]
[DEBUG] 2021-05-11 17:41:17.348 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : books.user.books
[DEBUG] 2021-05-11 17:41:17.348 [http-nio-8080-exec-9] MetamodelGraphWalker - Property path deemed to be circular : books.user.books
[DEBUG] 2021-05-11 17:41:17.348 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : books.user.email
[DEBUG] 2021-05-11 17:41:17.348 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : books.user.firstName
[DEBUG] 2021-05-11 17:41:17.349 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : books.user.lastName
[DEBUG] 2021-05-11 17:41:17.349 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : books.user.password
[DEBUG] 2021-05-11 17:41:17.349 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : books.user.roles
[DEBUG] 2021-05-11 17:41:17.349 [http-nio-8080-exec-9] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@683e56a0]
[DEBUG] 2021-05-11 17:41:17.349 [http-nio-8080-exec-9] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3f29f91e]
[DEBUG] 2021-05-11 17:41:17.349 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : books.user.userName
[DEBUG] 2021-05-11 17:41:17.349 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2021-05-11 17:41:17.349 [http-nio-8080-exec-9] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-05-11 17:41:17.349 [http-nio-8080-exec-9] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-05-11 17:41:17.356 [http-nio-8080-exec-9] LoadPlanTreePrinter - LoadPlan(entity=com.leeannjakel.entity.Author)
    - Returns
       - EntityReturnImpl(entity=com.leeannjakel.entity.Author, querySpaceUid=<gen:0>, path=com.leeannjakel.entity.Author)
          - CollectionAttributeFetchImpl(collection=com.leeannjakel.entity.Author.books, querySpaceUid=<gen:1>, path=com.leeannjakel.entity.Author.books)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.leeannjakel.entity.Book, querySpaceUid=<gen:2>, path=com.leeannjakel.entity.Author.books.<elements>)
                - EntityAttributeFetchImpl(entity=com.leeannjakel.entity.Genre, querySpaceUid=<gen:3>, path=com.leeannjakel.entity.Author.books.<elements>.genre)
                - EntityAttributeFetchImpl(entity=com.leeannjakel.entity.User, querySpaceUid=<gen:4>, path=com.leeannjakel.entity.Author.books.<elements>.user)
                   - CollectionAttributeFetchImpl(collection=com.leeannjakel.entity.User.roles, querySpaceUid=<gen:5>, path=com.leeannjakel.entity.Author.books.<elements>.user.roles)
                      - (collection element) CollectionFetchableElementEntityGraph(entity=com.leeannjakel.entity.Role, querySpaceUid=<gen:6>, path=com.leeannjakel.entity.Author.books.<elements>.user.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.leeannjakel.entity.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(books)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=com.leeannjakel.entity.Author.books)
                - SQL table alias mapping - books1_
                - alias suffix - 1_
                - suffixed key columns - {author_i5_1_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_1_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.leeannjakel.entity.Book)
                      - SQL table alias mapping - books1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_1_2_}
                      - JOIN (JoinDefinedByMetadata(genre)) : <gen:2> -> <gen:3>
                         - EntityQuerySpaceImpl(uid=<gen:3>, entity=com.leeannjakel.entity.Genre)
                            - SQL table alias mapping - genre2_
                            - alias suffix - 3_
                            - suffixed key columns - {id1_2_3_}
                      - JOIN (JoinDefinedByMetadata(user)) : <gen:2> -> <gen:4>
                         - EntityQuerySpaceImpl(uid=<gen:4>, entity=com.leeannjakel.entity.User)
                            - SQL table alias mapping - user3_
                            - alias suffix - 4_
                            - suffixed key columns - {id1_4_4_}

[DEBUG] 2021-05-11 17:41:17.356 [http-nio-8080-exec-9] EntityLoader - Static select for entity com.leeannjakel.entity.Author [READ]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, books1_.author_id as author_i5_1_1_, books1_.id as id1_1_1_, books1_.id as id1_1_2_, books1_.author_id as author_i5_1_2_, books1_.genre_id as genre_id6_1_2_, books1_.isbn as isbn2_1_2_, books1_.notes as notes3_1_2_, books1_.title as title4_1_2_, books1_.user_id as user_id7_1_2_, genre2_.id as id1_2_3_, genre2_.name as name2_2_3_, user3_.id as id1_4_4_, user3_.email as email2_4_4_, user3_.first_name as first_na3_4_4_, user3_.last_name as last_nam4_4_4_, user3_.password as password5_4_4_, user3_.user_name as user_nam6_4_4_ from author author0_ left outer join book books1_ on author0_.id=books1_.author_id left outer join genre genre2_ on books1_.genre_id=genre2_.id left outer join user user3_ on books1_.user_id=user3_.id where author0_.id=?
[DEBUG] 2021-05-11 17:41:17.356 [http-nio-8080-exec-9] Loader - Static select for action ACTION_MERGE on entity com.leeannjakel.entity.Author: select author0_.id as id1_0_1_, author0_.name as name2_0_1_, books1_.author_id as author_i5_1_3_, books1_.id as id1_1_3_, books1_.id as id1_1_0_, books1_.author_id as author_i5_1_0_, books1_.genre_id as genre_id6_1_0_, books1_.isbn as isbn2_1_0_, books1_.notes as notes3_1_0_, books1_.title as title4_1_0_, books1_.user_id as user_id7_1_0_ from author author0_ left outer join book books1_ on author0_.id=books1_.author_id where author0_.id=?
[DEBUG] 2021-05-11 17:41:17.360 [http-nio-8080-exec-9] Loader - Static select for action ACTION_REFRESH on entity com.leeannjakel.entity.Author: select author0_.id as id1_0_1_, author0_.name as name2_0_1_, books1_.author_id as author_i5_1_3_, books1_.id as id1_1_3_, books1_.id as id1_1_0_, books1_.author_id as author_i5_1_0_, books1_.genre_id as genre_id6_1_0_, books1_.isbn as isbn2_1_0_, books1_.notes as notes3_1_0_, books1_.title as title4_1_0_, books1_.user_id as user_id7_1_0_ from author author0_ left outer join book books1_ on author0_.id=books1_.author_id where author0_.id=?
[DEBUG] 2021-05-11 17:41:17.369 [http-nio-8080-exec-9] AbstractEntityPersister - Static SQL for entity: com.leeannjakel.entity.Genre
[DEBUG] 2021-05-11 17:41:17.369 [http-nio-8080-exec-9] AbstractEntityPersister -  Version select: select id from genre where id =?
[DEBUG] 2021-05-11 17:41:17.369 [http-nio-8080-exec-9] AbstractEntityPersister -  Snapshot select: select genre_.id, genre_.name as name2_2_ from genre genre_ where genre_.id=?
[DEBUG] 2021-05-11 17:41:17.370 [http-nio-8080-exec-9] AbstractEntityPersister -  Insert 0: insert into genre (name, id) values (?, ?)
[DEBUG] 2021-05-11 17:41:17.370 [http-nio-8080-exec-9] AbstractEntityPersister -  Update 0: update genre set name=? where id=?
[DEBUG] 2021-05-11 17:41:17.370 [http-nio-8080-exec-9] AbstractEntityPersister -  Delete 0: delete from genre where id=?
[DEBUG] 2021-05-11 17:41:17.370 [http-nio-8080-exec-9] AbstractEntityPersister -  Identity insert: insert into genre (name) values (?)
[DEBUG] 2021-05-11 17:41:17.370 [http-nio-8080-exec-9] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@475ffc35]
[DEBUG] 2021-05-11 17:41:17.370 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : books
[DEBUG] 2021-05-11 17:41:17.372 [http-nio-8080-exec-9] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2ebea635]
[DEBUG] 2021-05-11 17:41:17.372 [http-nio-8080-exec-9] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5e2f5bf5]
[DEBUG] 2021-05-11 17:41:17.372 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2021-05-11 17:41:17.373 [http-nio-8080-exec-9] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-05-11 17:41:17.373 [http-nio-8080-exec-9] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-05-11 17:41:17.373 [http-nio-8080-exec-9] LoadPlanTreePrinter - LoadPlan(entity=com.leeannjakel.entity.Genre)
    - Returns
       - EntityReturnImpl(entity=com.leeannjakel.entity.Genre, querySpaceUid=<gen:0>, path=com.leeannjakel.entity.Genre)
          - CollectionAttributeFetchImpl(collection=com.leeannjakel.entity.Genre.books, querySpaceUid=<gen:1>, path=com.leeannjakel.entity.Genre.books)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.leeannjakel.entity.Book, querySpaceUid=<gen:2>, path=com.leeannjakel.entity.Genre.books.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.leeannjakel.entity.Genre)
          - SQL table alias mapping - genre0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

[DEBUG] 2021-05-11 17:41:17.375 [http-nio-8080-exec-9] EntityLoader - Static select for entity com.leeannjakel.entity.Genre [NONE]: select genre0_.id as id1_2_0_, genre0_.name as name2_2_0_ from genre genre0_ where genre0_.id=?
[DEBUG] 2021-05-11 17:41:17.376 [http-nio-8080-exec-9] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@66a9aa51]
[DEBUG] 2021-05-11 17:41:17.376 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : books
[DEBUG] 2021-05-11 17:41:17.376 [http-nio-8080-exec-9] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@72f72a80]
[DEBUG] 2021-05-11 17:41:17.376 [http-nio-8080-exec-9] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@56a327d8]
[DEBUG] 2021-05-11 17:41:17.376 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2021-05-11 17:41:17.376 [http-nio-8080-exec-9] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-05-11 17:41:17.377 [http-nio-8080-exec-9] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-05-11 17:41:17.377 [http-nio-8080-exec-9] LoadPlanTreePrinter - LoadPlan(entity=com.leeannjakel.entity.Genre)
    - Returns
       - EntityReturnImpl(entity=com.leeannjakel.entity.Genre, querySpaceUid=<gen:0>, path=com.leeannjakel.entity.Genre)
          - CollectionAttributeFetchImpl(collection=com.leeannjakel.entity.Genre.books, querySpaceUid=<gen:1>, path=com.leeannjakel.entity.Genre.books)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.leeannjakel.entity.Book, querySpaceUid=<gen:2>, path=com.leeannjakel.entity.Genre.books.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.leeannjakel.entity.Genre)
          - SQL table alias mapping - genre0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

[DEBUG] 2021-05-11 17:41:17.377 [http-nio-8080-exec-9] EntityLoader - Static select for entity com.leeannjakel.entity.Genre [READ]: select genre0_.id as id1_2_0_, genre0_.name as name2_2_0_ from genre genre0_ where genre0_.id=?
[DEBUG] 2021-05-11 17:41:17.378 [http-nio-8080-exec-9] Loader - Static select for action ACTION_MERGE on entity com.leeannjakel.entity.Genre: select genre0_.id as id1_2_1_, genre0_.name as name2_2_1_, books1_.genre_id as genre_id6_1_3_, books1_.id as id1_1_3_, books1_.id as id1_1_0_, books1_.author_id as author_i5_1_0_, books1_.genre_id as genre_id6_1_0_, books1_.isbn as isbn2_1_0_, books1_.notes as notes3_1_0_, books1_.title as title4_1_0_, books1_.user_id as user_id7_1_0_ from genre genre0_ left outer join book books1_ on genre0_.id=books1_.genre_id where genre0_.id=?
[DEBUG] 2021-05-11 17:41:17.378 [http-nio-8080-exec-9] Loader - Static select for action ACTION_REFRESH on entity com.leeannjakel.entity.Genre: select genre0_.id as id1_2_1_, genre0_.name as name2_2_1_, books1_.genre_id as genre_id6_1_3_, books1_.id as id1_1_3_, books1_.id as id1_1_0_, books1_.author_id as author_i5_1_0_, books1_.genre_id as genre_id6_1_0_, books1_.isbn as isbn2_1_0_, books1_.notes as notes3_1_0_, books1_.title as title4_1_0_, books1_.user_id as user_id7_1_0_ from genre genre0_ left outer join book books1_ on genre0_.id=books1_.genre_id where genre0_.id=?
[DEBUG] 2021-05-11 17:41:17.379 [http-nio-8080-exec-9] AbstractEntityPersister - Static SQL for entity: com.leeannjakel.entity.Role
[DEBUG] 2021-05-11 17:41:17.379 [http-nio-8080-exec-9] AbstractEntityPersister -  Version select: select id from role where id =?
[DEBUG] 2021-05-11 17:41:17.379 [http-nio-8080-exec-9] AbstractEntityPersister -  Snapshot select: select role_.id, role_.role_name as role_nam2_3_, role_.user_id as user_id4_3_, role_.user_name as user_nam3_3_ from role role_ where role_.id=?
[DEBUG] 2021-05-11 17:41:17.379 [http-nio-8080-exec-9] AbstractEntityPersister -  Insert 0: insert into role (role_name, user_id, user_name, id) values (?, ?, ?, ?)
[DEBUG] 2021-05-11 17:41:17.379 [http-nio-8080-exec-9] AbstractEntityPersister -  Update 0: update role set role_name=?, user_id=?, user_name=? where id=?
[DEBUG] 2021-05-11 17:41:17.379 [http-nio-8080-exec-9] AbstractEntityPersister -  Delete 0: delete from role where id=?
[DEBUG] 2021-05-11 17:41:17.379 [http-nio-8080-exec-9] AbstractEntityPersister -  Identity insert: insert into role (role_name, user_id, user_name) values (?, ?, ?)
[DEBUG] 2021-05-11 17:41:17.379 [http-nio-8080-exec-9] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7df3e47f]
[DEBUG] 2021-05-11 17:41:17.379 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : roleName
[DEBUG] 2021-05-11 17:41:17.379 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2021-05-11 17:41:17.380 [http-nio-8080-exec-9] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2f86a90]
[DEBUG] 2021-05-11 17:41:17.380 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : user.books
[DEBUG] 2021-05-11 17:41:17.381 [http-nio-8080-exec-9] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2f98c526]
[DEBUG] 2021-05-11 17:41:17.388 [http-nio-8080-exec-9] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6196ba77]
[DEBUG] 2021-05-11 17:41:17.389 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2021-05-11 17:41:17.390 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2021-05-11 17:41:17.390 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2021-05-11 17:41:17.392 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2021-05-11 17:41:17.393 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2021-05-11 17:41:17.393 [http-nio-8080-exec-9] MetamodelGraphWalker - Property path deemed to be circular : user.roles
[DEBUG] 2021-05-11 17:41:17.394 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : user.userName
[DEBUG] 2021-05-11 17:41:17.395 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : userName
[DEBUG] 2021-05-11 17:41:17.395 [http-nio-8080-exec-9] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-05-11 17:41:17.396 [http-nio-8080-exec-9] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-05-11 17:41:17.398 [http-nio-8080-exec-9] LoadPlanTreePrinter - LoadPlan(entity=com.leeannjakel.entity.Role)
    - Returns
       - EntityReturnImpl(entity=com.leeannjakel.entity.Role, querySpaceUid=<gen:0>, path=com.leeannjakel.entity.Role)
          - EntityAttributeFetchImpl(entity=com.leeannjakel.entity.User, querySpaceUid=<gen:1>, path=com.leeannjakel.entity.Role.user)
             - CollectionAttributeFetchImpl(collection=com.leeannjakel.entity.User.books, querySpaceUid=<gen:2>, path=com.leeannjakel.entity.Role.user.books)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.leeannjakel.entity.Book, querySpaceUid=<gen:3>, path=com.leeannjakel.entity.Role.user.books.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.leeannjakel.entity.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.leeannjakel.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_4_1_}

[DEBUG] 2021-05-11 17:41:17.398 [http-nio-8080-exec-9] EntityLoader - Static select for entity com.leeannjakel.entity.Role [NONE]: select role0_.id as id1_3_0_, role0_.role_name as role_nam2_3_0_, role0_.user_id as user_id4_3_0_, role0_.user_name as user_nam3_3_0_, user1_.id as id1_4_1_, user1_.email as email2_4_1_, user1_.first_name as first_na3_4_1_, user1_.last_name as last_nam4_4_1_, user1_.password as password5_4_1_, user1_.user_name as user_nam6_4_1_ from role role0_ left outer join user user1_ on role0_.user_id=user1_.id where role0_.id=?
[DEBUG] 2021-05-11 17:41:17.398 [http-nio-8080-exec-9] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@207bf03f]
[DEBUG] 2021-05-11 17:41:17.398 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : roleName
[DEBUG] 2021-05-11 17:41:17.398 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2021-05-11 17:41:17.398 [http-nio-8080-exec-9] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@54139a2a]
[DEBUG] 2021-05-11 17:41:17.403 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : user.books
[DEBUG] 2021-05-11 17:41:17.403 [http-nio-8080-exec-9] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7f8735fa]
[DEBUG] 2021-05-11 17:41:17.403 [http-nio-8080-exec-9] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1ce5e293]
[DEBUG] 2021-05-11 17:41:17.403 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2021-05-11 17:41:17.403 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2021-05-11 17:41:17.403 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2021-05-11 17:41:17.403 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2021-05-11 17:41:17.403 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2021-05-11 17:41:17.404 [http-nio-8080-exec-9] MetamodelGraphWalker - Property path deemed to be circular : user.roles
[DEBUG] 2021-05-11 17:41:17.404 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : user.userName
[DEBUG] 2021-05-11 17:41:17.405 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : userName
[DEBUG] 2021-05-11 17:41:17.405 [http-nio-8080-exec-9] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-05-11 17:41:17.406 [http-nio-8080-exec-9] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-05-11 17:41:17.407 [http-nio-8080-exec-9] LoadPlanTreePrinter - LoadPlan(entity=com.leeannjakel.entity.Role)
    - Returns
       - EntityReturnImpl(entity=com.leeannjakel.entity.Role, querySpaceUid=<gen:0>, path=com.leeannjakel.entity.Role)
          - EntityAttributeFetchImpl(entity=com.leeannjakel.entity.User, querySpaceUid=<gen:1>, path=com.leeannjakel.entity.Role.user)
             - CollectionAttributeFetchImpl(collection=com.leeannjakel.entity.User.books, querySpaceUid=<gen:2>, path=com.leeannjakel.entity.Role.user.books)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.leeannjakel.entity.Book, querySpaceUid=<gen:3>, path=com.leeannjakel.entity.Role.user.books.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.leeannjakel.entity.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.leeannjakel.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_4_1_}

[DEBUG] 2021-05-11 17:41:17.407 [http-nio-8080-exec-9] EntityLoader - Static select for entity com.leeannjakel.entity.Role [READ]: select role0_.id as id1_3_0_, role0_.role_name as role_nam2_3_0_, role0_.user_id as user_id4_3_0_, role0_.user_name as user_nam3_3_0_, user1_.id as id1_4_1_, user1_.email as email2_4_1_, user1_.first_name as first_na3_4_1_, user1_.last_name as last_nam4_4_1_, user1_.password as password5_4_1_, user1_.user_name as user_nam6_4_1_ from role role0_ left outer join user user1_ on role0_.user_id=user1_.id where role0_.id=?
[DEBUG] 2021-05-11 17:41:17.407 [http-nio-8080-exec-9] Loader - Static select for action ACTION_MERGE on entity com.leeannjakel.entity.Role: select role0_.id as id1_3_0_, role0_.role_name as role_nam2_3_0_, role0_.user_id as user_id4_3_0_, role0_.user_name as user_nam3_3_0_ from role role0_ where role0_.id=?
[DEBUG] 2021-05-11 17:41:17.407 [http-nio-8080-exec-9] Loader - Static select for action ACTION_REFRESH on entity com.leeannjakel.entity.Role: select role0_.id as id1_3_0_, role0_.role_name as role_nam2_3_0_, role0_.user_id as user_id4_3_0_, role0_.user_name as user_nam3_3_0_ from role role0_ where role0_.id=?
[DEBUG] 2021-05-11 17:41:17.416 [http-nio-8080-exec-9] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@19b1b254]
[DEBUG] 2021-05-11 17:41:17.416 [http-nio-8080-exec-9] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1325e295]
[DEBUG] 2021-05-11 17:41:17.416 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : author
[DEBUG] 2021-05-11 17:41:17.416 [http-nio-8080-exec-9] MetamodelGraphWalker - Property path deemed to be circular : author
[DEBUG] 2021-05-11 17:41:17.417 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : genre
[DEBUG] 2021-05-11 17:41:17.417 [http-nio-8080-exec-9] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4c0d7b87]
[DEBUG] 2021-05-11 17:41:17.417 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : genre.books
[DEBUG] 2021-05-11 17:41:17.417 [http-nio-8080-exec-9] MetamodelGraphWalker - Property path deemed to be circular : genre.books
[DEBUG] 2021-05-11 17:41:17.417 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : genre.name
[DEBUG] 2021-05-11 17:41:17.418 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : isbn
[DEBUG] 2021-05-11 17:41:17.418 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : notes
[DEBUG] 2021-05-11 17:41:17.418 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2021-05-11 17:41:17.418 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2021-05-11 17:41:17.418 [http-nio-8080-exec-9] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@219f6ccc]
[DEBUG] 2021-05-11 17:41:17.418 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : user.books
[DEBUG] 2021-05-11 17:41:17.418 [http-nio-8080-exec-9] MetamodelGraphWalker - Property path deemed to be circular : user.books
[DEBUG] 2021-05-11 17:41:17.418 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2021-05-11 17:41:17.418 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2021-05-11 17:41:17.418 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2021-05-11 17:41:17.418 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2021-05-11 17:41:17.418 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2021-05-11 17:41:17.419 [http-nio-8080-exec-9] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@cd7aae8]
[DEBUG] 2021-05-11 17:41:17.419 [http-nio-8080-exec-9] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7ce9346a]
[DEBUG] 2021-05-11 17:41:17.419 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : user.userName
[DEBUG] 2021-05-11 17:41:17.419 [http-nio-8080-exec-9] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-05-11 17:41:17.428 [http-nio-8080-exec-9] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-05-11 17:41:17.436 [http-nio-8080-exec-9] LoadPlanTreePrinter - LoadPlan(collection=com.leeannjakel.entity.Author.books)
    - Returns
       - CollectionReturnImpl(collection=com.leeannjakel.entity.Author.books, querySpaceUid=<gen:0>, path=[com.leeannjakel.entity.Author.books])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.leeannjakel.entity.Book, querySpaceUid=<gen:1>, path=[com.leeannjakel.entity.Author.books].<elements>)
             - EntityAttributeFetchImpl(entity=com.leeannjakel.entity.Genre, querySpaceUid=<gen:2>, path=[com.leeannjakel.entity.Author.books].<elements>.genre)
             - EntityAttributeFetchImpl(entity=com.leeannjakel.entity.User, querySpaceUid=<gen:3>, path=[com.leeannjakel.entity.Author.books].<elements>.user)
                - CollectionAttributeFetchImpl(collection=com.leeannjakel.entity.User.roles, querySpaceUid=<gen:4>, path=[com.leeannjakel.entity.Author.books].<elements>.user.roles)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.leeannjakel.entity.Role, querySpaceUid=<gen:5>, path=[com.leeannjakel.entity.Author.books].<elements>.user.roles.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.leeannjakel.entity.Author.books)
          - SQL table alias mapping - books0_
          - alias suffix - 0_
          - suffixed key columns - {author_i5_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.leeannjakel.entity.Book)
                - SQL table alias mapping - books0_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}
                - JOIN (JoinDefinedByMetadata(genre)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.leeannjakel.entity.Genre)
                      - SQL table alias mapping - genre1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_2_2_}
                - JOIN (JoinDefinedByMetadata(user)) : <gen:1> -> <gen:3>
                   - EntityQuerySpaceImpl(uid=<gen:3>, entity=com.leeannjakel.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 3_
                      - suffixed key columns - {id1_4_3_}

[DEBUG] 2021-05-11 17:41:17.440 [http-nio-8080-exec-9] CollectionLoader - Static select for collection com.leeannjakel.entity.Author.books: select books0_.author_id as author_i5_1_0_, books0_.id as id1_1_0_, books0_.id as id1_1_1_, books0_.author_id as author_i5_1_1_, books0_.genre_id as genre_id6_1_1_, books0_.isbn as isbn2_1_1_, books0_.notes as notes3_1_1_, books0_.title as title4_1_1_, books0_.user_id as user_id7_1_1_, genre1_.id as id1_2_2_, genre1_.name as name2_2_2_, user2_.id as id1_4_3_, user2_.email as email2_4_3_, user2_.first_name as first_na3_4_3_, user2_.last_name as last_nam4_4_3_, user2_.password as password5_4_3_, user2_.user_name as user_nam6_4_3_ from book books0_ left outer join genre genre1_ on books0_.genre_id=genre1_.id left outer join user user2_ on books0_.user_id=user2_.id where books0_.author_id=?
[DEBUG] 2021-05-11 17:41:17.440 [http-nio-8080-exec-9] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1c4f6cc1]
[DEBUG] 2021-05-11 17:41:17.440 [http-nio-8080-exec-9] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4b506c5]
[DEBUG] 2021-05-11 17:41:17.458 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : author
[DEBUG] 2021-05-11 17:41:17.458 [http-nio-8080-exec-9] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@18e3a4d1]
[DEBUG] 2021-05-11 17:41:17.458 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : author.books
[DEBUG] 2021-05-11 17:41:17.458 [http-nio-8080-exec-9] MetamodelGraphWalker - Property path deemed to be circular : author.books
[DEBUG] 2021-05-11 17:41:17.458 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : author.name
[DEBUG] 2021-05-11 17:41:17.458 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : genre
[DEBUG] 2021-05-11 17:41:17.458 [http-nio-8080-exec-9] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@51018975]
[DEBUG] 2021-05-11 17:41:17.458 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : genre.books
[DEBUG] 2021-05-11 17:41:17.458 [http-nio-8080-exec-9] MetamodelGraphWalker - Property path deemed to be circular : genre.books
[DEBUG] 2021-05-11 17:41:17.458 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : genre.name
[DEBUG] 2021-05-11 17:41:17.459 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : isbn
[DEBUG] 2021-05-11 17:41:17.459 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : notes
[DEBUG] 2021-05-11 17:41:17.459 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2021-05-11 17:41:17.459 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2021-05-11 17:41:17.459 [http-nio-8080-exec-9] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2021-05-11 17:41:17.459 [http-nio-8080-exec-9] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-05-11 17:41:17.459 [http-nio-8080-exec-9] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-05-11 17:41:17.460 [http-nio-8080-exec-9] LoadPlanTreePrinter - LoadPlan(collection=com.leeannjakel.entity.User.books)
    - Returns
       - CollectionReturnImpl(collection=com.leeannjakel.entity.User.books, querySpaceUid=<gen:0>, path=[com.leeannjakel.entity.User.books])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.leeannjakel.entity.Book, querySpaceUid=<gen:1>, path=[com.leeannjakel.entity.User.books].<elements>)
             - EntityAttributeFetchImpl(entity=com.leeannjakel.entity.Author, querySpaceUid=<gen:2>, path=[com.leeannjakel.entity.User.books].<elements>.author)
             - EntityAttributeFetchImpl(entity=com.leeannjakel.entity.Genre, querySpaceUid=<gen:3>, path=[com.leeannjakel.entity.User.books].<elements>.genre)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.leeannjakel.entity.User.books)
          - SQL table alias mapping - books0_
          - alias suffix - 0_
          - suffixed key columns - {user_id7_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.leeannjakel.entity.Book)
                - SQL table alias mapping - books0_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}
                - JOIN (JoinDefinedByMetadata(author)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.leeannjakel.entity.Author)
                      - SQL table alias mapping - author1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}
                - JOIN (JoinDefinedByMetadata(genre)) : <gen:1> -> <gen:3>
                   - EntityQuerySpaceImpl(uid=<gen:3>, entity=com.leeannjakel.entity.Genre)
                      - SQL table alias mapping - genre2_
                      - alias suffix - 3_
                      - suffixed key columns - {id1_2_3_}

[DEBUG] 2021-05-11 17:41:17.460 [http-nio-8080-exec-9] CollectionLoader - Static select for collection com.leeannjakel.entity.User.books: select books0_.user_id as user_id7_1_0_, books0_.id as id1_1_0_, books0_.id as id1_1_1_, books0_.author_id as author_i5_1_1_, books0_.genre_id as genre_id6_1_1_, books0_.isbn as isbn2_1_1_, books0_.notes as notes3_1_1_, books0_.title as title4_1_1_, books0_.user_id as user_id7_1_1_, author1_.id as id1_0_2_, author1_.name as name2_0_2_, genre2_.id as id1_2_3_, genre2_.name as name2_2_3_ from book books0_ left outer join author author1_ on books0_.author_id=author1_.id left outer join genre genre2_ on books0_.genre_id=genre2_.id where books0_.user_id=?
[DEBUG] 2021-05-11 17:41:17.460 [http-nio-8080-exec-9] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@444815f6]
[DEBUG] 2021-05-11 17:41:17.460 [http-nio-8080-exec-9] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@10013a63]
[DEBUG] 2021-05-11 17:41:17.460 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : roleName
[DEBUG] 2021-05-11 17:41:17.467 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2021-05-11 17:41:17.467 [http-nio-8080-exec-9] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2021-05-11 17:41:17.467 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : userName
[DEBUG] 2021-05-11 17:41:17.467 [http-nio-8080-exec-9] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-05-11 17:41:17.467 [http-nio-8080-exec-9] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-05-11 17:41:17.468 [http-nio-8080-exec-9] LoadPlanTreePrinter - LoadPlan(collection=com.leeannjakel.entity.User.roles)
    - Returns
       - CollectionReturnImpl(collection=com.leeannjakel.entity.User.roles, querySpaceUid=<gen:0>, path=[com.leeannjakel.entity.User.roles])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.leeannjakel.entity.Role, querySpaceUid=<gen:1>, path=[com.leeannjakel.entity.User.roles].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.leeannjakel.entity.User.roles)
          - SQL table alias mapping - roles0_
          - alias suffix - 0_
          - suffixed key columns - {user_id4_3_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_3_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.leeannjakel.entity.Role)
                - SQL table alias mapping - roles0_
                - alias suffix - 1_
                - suffixed key columns - {id1_3_1_}

[DEBUG] 2021-05-11 17:41:17.468 [http-nio-8080-exec-9] CollectionLoader - Static select for collection com.leeannjakel.entity.User.roles: select roles0_.user_id as user_id4_3_0_, roles0_.id as id1_3_0_, roles0_.id as id1_3_1_, roles0_.role_name as role_nam2_3_1_, roles0_.user_id as user_id4_3_1_, roles0_.user_name as user_nam3_3_1_ from role roles0_ where roles0_.user_id=?
[DEBUG] 2021-05-11 17:41:17.468 [http-nio-8080-exec-9] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4fda1cbf]
[DEBUG] 2021-05-11 17:41:17.468 [http-nio-8080-exec-9] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5611e505]
[DEBUG] 2021-05-11 17:41:17.468 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : author
[DEBUG] 2021-05-11 17:41:17.468 [http-nio-8080-exec-9] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@37c5cae4]
[DEBUG] 2021-05-11 17:41:17.474 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : author.books
[DEBUG] 2021-05-11 17:41:17.474 [http-nio-8080-exec-9] MetamodelGraphWalker - Property path deemed to be circular : author.books
[DEBUG] 2021-05-11 17:41:17.474 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : author.name
[DEBUG] 2021-05-11 17:41:17.474 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : genre
[DEBUG] 2021-05-11 17:41:17.474 [http-nio-8080-exec-9] MetamodelGraphWalker - Property path deemed to be circular : genre
[DEBUG] 2021-05-11 17:41:17.474 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : isbn
[DEBUG] 2021-05-11 17:41:17.474 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : notes
[DEBUG] 2021-05-11 17:41:17.474 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2021-05-11 17:41:17.474 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2021-05-11 17:41:17.474 [http-nio-8080-exec-9] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4bb94f58]
[DEBUG] 2021-05-11 17:41:17.474 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : user.books
[DEBUG] 2021-05-11 17:41:17.475 [http-nio-8080-exec-9] MetamodelGraphWalker - Property path deemed to be circular : user.books
[DEBUG] 2021-05-11 17:41:17.475 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2021-05-11 17:41:17.475 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2021-05-11 17:41:17.475 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2021-05-11 17:41:17.475 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2021-05-11 17:41:17.475 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2021-05-11 17:41:17.475 [http-nio-8080-exec-9] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@52727b71]
[DEBUG] 2021-05-11 17:41:17.475 [http-nio-8080-exec-9] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@15569a63]
[DEBUG] 2021-05-11 17:41:17.475 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : user.userName
[DEBUG] 2021-05-11 17:41:17.475 [http-nio-8080-exec-9] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-05-11 17:41:17.475 [http-nio-8080-exec-9] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-05-11 17:41:17.476 [http-nio-8080-exec-9] LoadPlanTreePrinter - LoadPlan(collection=com.leeannjakel.entity.Genre.books)
    - Returns
       - CollectionReturnImpl(collection=com.leeannjakel.entity.Genre.books, querySpaceUid=<gen:0>, path=[com.leeannjakel.entity.Genre.books])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.leeannjakel.entity.Book, querySpaceUid=<gen:1>, path=[com.leeannjakel.entity.Genre.books].<elements>)
             - EntityAttributeFetchImpl(entity=com.leeannjakel.entity.Author, querySpaceUid=<gen:2>, path=[com.leeannjakel.entity.Genre.books].<elements>.author)
             - EntityAttributeFetchImpl(entity=com.leeannjakel.entity.User, querySpaceUid=<gen:3>, path=[com.leeannjakel.entity.Genre.books].<elements>.user)
                - CollectionAttributeFetchImpl(collection=com.leeannjakel.entity.User.roles, querySpaceUid=<gen:4>, path=[com.leeannjakel.entity.Genre.books].<elements>.user.roles)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.leeannjakel.entity.Role, querySpaceUid=<gen:5>, path=[com.leeannjakel.entity.Genre.books].<elements>.user.roles.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.leeannjakel.entity.Genre.books)
          - SQL table alias mapping - books0_
          - alias suffix - 0_
          - suffixed key columns - {genre_id6_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.leeannjakel.entity.Book)
                - SQL table alias mapping - books0_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}
                - JOIN (JoinDefinedByMetadata(author)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.leeannjakel.entity.Author)
                      - SQL table alias mapping - author1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}
                - JOIN (JoinDefinedByMetadata(user)) : <gen:1> -> <gen:3>
                   - EntityQuerySpaceImpl(uid=<gen:3>, entity=com.leeannjakel.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 3_
                      - suffixed key columns - {id1_4_3_}

[DEBUG] 2021-05-11 17:41:17.476 [http-nio-8080-exec-9] CollectionLoader - Static select for collection com.leeannjakel.entity.Genre.books: select books0_.genre_id as genre_id6_1_0_, books0_.id as id1_1_0_, books0_.id as id1_1_1_, books0_.author_id as author_i5_1_1_, books0_.genre_id as genre_id6_1_1_, books0_.isbn as isbn2_1_1_, books0_.notes as notes3_1_1_, books0_.title as title4_1_1_, books0_.user_id as user_id7_1_1_, author1_.id as id1_0_2_, author1_.name as name2_0_2_, user2_.id as id1_4_3_, user2_.email as email2_4_3_, user2_.first_name as first_na3_4_3_, user2_.last_name as last_nam4_4_3_, user2_.password as password5_4_3_, user2_.user_name as user_nam6_4_3_ from book books0_ left outer join author author1_ on books0_.author_id=author1_.id left outer join user user2_ on books0_.user_id=user2_.id where books0_.genre_id=?
[DEBUG] 2021-05-11 17:41:17.762 [http-nio-8080-exec-9] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2021-05-11 17:41:17.765 [http-nio-8080-exec-9] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2021-05-11 17:41:17.769 [http-nio-8080-exec-9] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2021-05-11 17:41:17.806 [http-nio-8080-exec-9] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2021-05-11 17:41:17.806 [http-nio-8080-exec-9] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2021-05-11 17:41:17.807 [http-nio-8080-exec-9] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2021-05-11 17:41:17.807 [http-nio-8080-exec-9] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2021-05-11 17:41:17.832 [http-nio-8080-exec-9] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@78a7232b
[DEBUG] 2021-05-11 17:41:17.839 [http-nio-8080-exec-9] SessionFactoryRegistry - Registering SessionFactory: 0e6106c9-dd87-43fa-9539-2f5f6ff84407 (<unnamed>)
[DEBUG] 2021-05-11 17:41:17.840 [http-nio-8080-exec-9] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2021-05-11 17:41:18.149 [http-nio-8080-exec-9] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2021-05-11 17:41:18.398 [http-nio-8080-exec-9] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from User as generatedAlias0 where generatedAlias0.userName=:param0
[DEBUG] 2021-05-11 17:41:18.469 [http-nio-8080-exec-9] QueryTranslatorFactoryInitiator - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@588036c8
[DEBUG] 2021-05-11 17:41:18.526 [http-nio-8080-exec-9] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from com.leeannjakel.entity.User as generatedAlias0 where generatedAlias0.userName=:param0
[DEBUG] 2021-05-11 17:41:18.547 [http-nio-8080-exec-9] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2021-05-11 17:41:18.581 [http-nio-8080-exec-9] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  \-[IDENT] Node: 'leeannjakel'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'User'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'userName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

[DEBUG] 2021-05-11 17:41:18.641 [http-nio-8080-exec-9] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2021-05-11 17:41:18.683 [http-nio-8080-exec-9] FromElement - FromClause{level=1} : com.leeannjakel.entity.User (generatedAlias0) -> user0_
[DEBUG] 2021-05-11 17:41:18.685 [http-nio-8080-exec-9] FromReferenceNode - Resolved : generatedAlias0 -> user0_.id
[DEBUG] 2021-05-11 17:41:18.696 [http-nio-8080-exec-9] FromReferenceNode - Resolved : generatedAlias0 -> user0_.id
[DEBUG] 2021-05-11 17:41:18.701 [http-nio-8080-exec-9] DotNode - getDataType() : userName -> org.hibernate.type.StringType@2b33bb34
[DEBUG] 2021-05-11 17:41:18.703 [http-nio-8080-exec-9] FromReferenceNode - Resolved : generatedAlias0.userName -> user0_.user_name
[DEBUG] 2021-05-11 17:41:18.707 [http-nio-8080-exec-9] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2021-05-11 17:41:18.707 [http-nio-8080-exec-9] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} user0_.id ) ( FromClause{level=1} user user0_ ) ( where ( = ( user0_.user_name user0_.id userName ) ? ) ) )
[DEBUG] 2021-05-11 17:41:18.753 [http-nio-8080-exec-9] JoinProcessor - Using FROM fragment [user user0_]
[DEBUG] 2021-05-11 17:41:18.754 [http-nio-8080-exec-9] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2021-05-11 17:41:18.755 [http-nio-8080-exec-9] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (user)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.id as id1_4_' {alias=generatedAlias0, className=com.leeannjakel.entity.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.email as email2_4_, user0_.first_name as first_na3_4_, user0_.last_name as last_nam4_4_, user0_.password as password5_4_, user0_.user_name as user_nam6_4_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'user user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=user,tableAlias=user0_,origin=null,columns={,className=com.leeannjakel.entity.User}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user0_.user_name' {propertyName=userName,dereferenceType=PRIMITIVE,getPropertyPath=userName,path=generatedAlias0.userName,tableAlias=user0_,className=com.leeannjakel.entity.User,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'user0_.id' {alias=generatedAlias0, className=com.leeannjakel.entity.User, tableAlias=user0_}
          |  \-[IDENT] IdentNode: 'userName' {originalText=userName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@2b33bb34}

[DEBUG] 2021-05-11 17:41:18.756 [http-nio-8080-exec-9] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2021-05-11 17:41:18.774 [http-nio-8080-exec-9] QueryTranslatorImpl - HQL: select generatedAlias0 from com.leeannjakel.entity.User as generatedAlias0 where generatedAlias0.userName=:param0
[DEBUG] 2021-05-11 17:41:18.774 [http-nio-8080-exec-9] QueryTranslatorImpl - SQL: select user0_.id as id1_4_, user0_.email as email2_4_, user0_.first_name as first_na3_4_, user0_.last_name as last_nam4_4_, user0_.password as password5_4_, user0_.user_name as user_nam6_4_ from user user0_ where user0_.user_name=?
[DEBUG] 2021-05-11 17:41:18.774 [http-nio-8080-exec-9] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2021-05-11 17:41:18.832 [http-nio-8080-exec-9] SQL - select user0_.id as id1_4_, user0_.email as email2_4_, user0_.first_name as first_na3_4_, user0_.last_name as last_nam4_4_, user0_.password as password5_4_, user0_.user_name as user_nam6_4_ from user user0_ where user0_.user_name=?
[DEBUG] 2021-05-11 17:41:18.912 [http-nio-8080-exec-9] Loader - Result set row: 0
[DEBUG] 2021-05-11 17:41:18.920 [http-nio-8080-exec-9] Loader - Result row: EntityKey[com.leeannjakel.entity.User#1]
[DEBUG] 2021-05-11 17:41:18.947 [http-nio-8080-exec-9] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.User#1]
[DEBUG] 2021-05-11 17:41:18.949 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `books` : value = NOT NULL COLLECTION
[DEBUG] 2021-05-11 17:41:18.949 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`books`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:41:18.974 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `email` : value = email@something.com
[DEBUG] 2021-05-11 17:41:18.974 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:41:18.975 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `firstName` : value = LeeAnn
[DEBUG] 2021-05-11 17:41:18.975 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:41:18.975 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `lastName` : value = Jakel
[DEBUG] 2021-05-11 17:41:18.975 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:41:18.975 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `password` : value = password
[DEBUG] 2021-05-11 17:41:18.975 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:41:18.975 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2021-05-11 17:41:18.975 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:41:18.975 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `userName` : value = ljakel
[DEBUG] 2021-05-11 17:41:18.975 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:41:18.978 [http-nio-8080-exec-9] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.User#1]
[DEBUG] 2021-05-11 17:41:18.982 [http-nio-8080-exec-9] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.leeannjakel.entity.User.roles#1]
[DEBUG] 2021-05-11 17:41:18.982 [http-nio-8080-exec-9] SQL - select roles0_.user_id as user_id4_3_0_, roles0_.id as id1_3_0_, roles0_.id as id1_3_1_, roles0_.role_name as role_nam2_3_1_, roles0_.user_id as user_id4_3_1_, roles0_.user_name as user_nam3_3_1_ from role roles0_ where roles0_.user_id=?
[DEBUG] 2021-05-11 17:41:19.000 [http-nio-8080-exec-9] ResultSetProcessorImpl - Preparing collection initializer : [com.leeannjakel.entity.User.roles#1]
[DEBUG] 2021-05-11 17:41:19.011 [http-nio-8080-exec-9] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-05-11 17:41:19.014 [http-nio-8080-exec-9] CollectionReferenceInitializerImpl - Found row of collection: [com.leeannjakel.entity.User.roles#1]
[DEBUG] 2021-05-11 17:41:19.027 [http-nio-8080-exec-9] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.Role#7]
[DEBUG] 2021-05-11 17:41:19.027 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `roleName` : value = admin
[DEBUG] 2021-05-11 17:41:19.027 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`roleName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:41:19.027 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2021-05-11 17:41:19.027 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:41:19.028 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `userName` : value = ljakel
[DEBUG] 2021-05-11 17:41:19.028 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:41:19.028 [http-nio-8080-exec-9] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.Role#7]
[DEBUG] 2021-05-11 17:41:19.028 [http-nio-8080-exec-9] CollectionLoadContext - 1 collections were found in result set for role: com.leeannjakel.entity.User.roles
[DEBUG] 2021-05-11 17:41:19.028 [http-nio-8080-exec-9] CollectionLoadContext - Collection fully initialized: [com.leeannjakel.entity.User.roles#1]
[DEBUG] 2021-05-11 17:41:19.028 [http-nio-8080-exec-9] CollectionLoadContext - 1 collections initialized for role: com.leeannjakel.entity.User.roles
[DEBUG] 2021-05-11 17:41:19.030 [http-nio-8080-exec-9] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-05-11 17:41:19.030 [http-nio-8080-exec-9] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2021-05-11 17:41:19.036 [http-nio-8080-exec-9] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-05-11 17:41:19.079 [http-nio-8080-exec-9] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from Book as generatedAlias0 where generatedAlias0.user=1
[DEBUG] 2021-05-11 17:41:19.083 [http-nio-8080-exec-9] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from com.leeannjakel.entity.Book as generatedAlias0 where generatedAlias0.user=1
[DEBUG] 2021-05-11 17:41:19.104 [http-nio-8080-exec-9] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2021-05-11 17:41:19.104 [http-nio-8080-exec-9] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  \-[IDENT] Node: 'leeannjakel'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'Book'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'user'
          \-[NUM_INT] Node: '1'

[DEBUG] 2021-05-11 17:41:19.104 [http-nio-8080-exec-9] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2021-05-11 17:41:19.106 [http-nio-8080-exec-9] FromElement - FromClause{level=1} : com.leeannjakel.entity.Book (generatedAlias0) -> book0_
[DEBUG] 2021-05-11 17:41:19.106 [http-nio-8080-exec-9] FromReferenceNode - Resolved : generatedAlias0 -> book0_.id
[DEBUG] 2021-05-11 17:41:19.106 [http-nio-8080-exec-9] FromReferenceNode - Resolved : generatedAlias0 -> book0_.id
[DEBUG] 2021-05-11 17:41:19.106 [http-nio-8080-exec-9] DotNode - getDataType() : user -> org.hibernate.type.ManyToOneType(com.leeannjakel.entity.User)
[DEBUG] 2021-05-11 17:41:19.106 [http-nio-8080-exec-9] DotNode - dereferenceShortcut() : property user in com.leeannjakel.entity.Book does not require a join.
[DEBUG] 2021-05-11 17:41:19.106 [http-nio-8080-exec-9] DotNode - Terminal getPropertyPath = [user]
[DEBUG] 2021-05-11 17:41:19.106 [http-nio-8080-exec-9] FromReferenceNode - Resolved : generatedAlias0.user -> book0_.user_id
[DEBUG] 2021-05-11 17:41:19.113 [http-nio-8080-exec-9] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2021-05-11 17:41:19.113 [http-nio-8080-exec-9] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} book0_.id ) ( FromClause{level=1} book book0_ ) ( where ( = ( book0_.user_id book0_.id user ) 1 ) ) )
[DEBUG] 2021-05-11 17:41:19.124 [http-nio-8080-exec-9] JoinProcessor - Using FROM fragment [book book0_]
[DEBUG] 2021-05-11 17:41:19.124 [http-nio-8080-exec-9] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2021-05-11 17:41:19.124 [http-nio-8080-exec-9] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (book)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'book0_.id as id1_1_' {alias=generatedAlias0, className=com.leeannjakel.entity.Book, tableAlias=book0_}
    |  \-[SQL_TOKEN] SqlFragment: 'book0_.author_id as author_i5_1_, book0_.genre_id as genre_id6_1_, book0_.isbn as isbn2_1_, book0_.notes as notes3_1_, book0_.title as title4_1_, book0_.user_id as user_id7_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[book0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'book book0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=book,tableAlias=book0_,origin=null,columns={,className=com.leeannjakel.entity.Book}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'book0_.user_id' {propertyName=user,dereferenceType=UNKNOWN,getPropertyPath=user,path=generatedAlias0.user,tableAlias=book0_,className=com.leeannjakel.entity.Book,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'book0_.id' {alias=generatedAlias0, className=com.leeannjakel.entity.Book, tableAlias=book0_}
          |  \-[IDENT] IdentNode: 'user' {originalText=user}
          \-[NUM_INT] LiteralNode: '1'

[DEBUG] 2021-05-11 17:41:19.126 [http-nio-8080-exec-9] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2021-05-11 17:41:19.127 [http-nio-8080-exec-9] QueryTranslatorImpl - HQL: select generatedAlias0 from com.leeannjakel.entity.Book as generatedAlias0 where generatedAlias0.user=1
[DEBUG] 2021-05-11 17:41:19.127 [http-nio-8080-exec-9] QueryTranslatorImpl - SQL: select book0_.id as id1_1_, book0_.author_id as author_i5_1_, book0_.genre_id as genre_id6_1_, book0_.isbn as isbn2_1_, book0_.notes as notes3_1_, book0_.title as title4_1_, book0_.user_id as user_id7_1_ from book book0_ where book0_.user_id=1
[DEBUG] 2021-05-11 17:41:19.127 [http-nio-8080-exec-9] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2021-05-11 17:41:19.127 [http-nio-8080-exec-9] SQL - select book0_.id as id1_1_, book0_.author_id as author_i5_1_, book0_.genre_id as genre_id6_1_, book0_.isbn as isbn2_1_, book0_.notes as notes3_1_, book0_.title as title4_1_, book0_.user_id as user_id7_1_ from book book0_ where book0_.user_id=1
[DEBUG] 2021-05-11 17:41:19.166 [http-nio-8080-exec-9] Loader - Result set row: 0
[DEBUG] 2021-05-11 17:41:19.166 [http-nio-8080-exec-9] Loader - Result row: EntityKey[com.leeannjakel.entity.Book#1]
[DEBUG] 2021-05-11 17:41:19.167 [http-nio-8080-exec-9] Loader - Result set row: 1
[DEBUG] 2021-05-11 17:41:19.167 [http-nio-8080-exec-9] Loader - Result row: EntityKey[com.leeannjakel.entity.Book#3]
[DEBUG] 2021-05-11 17:41:19.172 [http-nio-8080-exec-9] Loader - Result set row: 2
[DEBUG] 2021-05-11 17:41:19.172 [http-nio-8080-exec-9] Loader - Result row: EntityKey[com.leeannjakel.entity.Book#8]
[DEBUG] 2021-05-11 17:41:19.174 [http-nio-8080-exec-9] Loader - Result set row: 3
[DEBUG] 2021-05-11 17:41:19.174 [http-nio-8080-exec-9] Loader - Result row: EntityKey[com.leeannjakel.entity.Book#9]
[DEBUG] 2021-05-11 17:41:19.174 [http-nio-8080-exec-9] Loader - Result set row: 4
[DEBUG] 2021-05-11 17:41:19.174 [http-nio-8080-exec-9] Loader - Result row: EntityKey[com.leeannjakel.entity.Book#11]
[DEBUG] 2021-05-11 17:41:19.175 [http-nio-8080-exec-9] Loader - Result set row: 5
[DEBUG] 2021-05-11 17:41:19.175 [http-nio-8080-exec-9] Loader - Result row: EntityKey[com.leeannjakel.entity.Book#12]
[DEBUG] 2021-05-11 17:41:19.175 [http-nio-8080-exec-9] Loader - Result set row: 6
[DEBUG] 2021-05-11 17:41:19.175 [http-nio-8080-exec-9] Loader - Result row: EntityKey[com.leeannjakel.entity.Book#13]
[DEBUG] 2021-05-11 17:41:19.175 [http-nio-8080-exec-9] Loader - Result set row: 7
[DEBUG] 2021-05-11 17:41:19.175 [http-nio-8080-exec-9] Loader - Result row: EntityKey[com.leeannjakel.entity.Book#14]
[DEBUG] 2021-05-11 17:41:19.176 [http-nio-8080-exec-9] Loader - Result set row: 8
[DEBUG] 2021-05-11 17:41:19.176 [http-nio-8080-exec-9] Loader - Result row: EntityKey[com.leeannjakel.entity.Book#15]
[DEBUG] 2021-05-11 17:41:19.176 [http-nio-8080-exec-9] Loader - Result set row: 9
[DEBUG] 2021-05-11 17:41:19.176 [http-nio-8080-exec-9] Loader - Result row: EntityKey[com.leeannjakel.entity.Book#16]
[DEBUG] 2021-05-11 17:41:19.186 [http-nio-8080-exec-9] Loader - Result set row: 10
[DEBUG] 2021-05-11 17:41:19.189 [http-nio-8080-exec-9] Loader - Result row: EntityKey[com.leeannjakel.entity.Book#17]
[DEBUG] 2021-05-11 17:41:19.189 [http-nio-8080-exec-9] Loader - Result set row: 11
[DEBUG] 2021-05-11 17:41:19.189 [http-nio-8080-exec-9] Loader - Result row: EntityKey[com.leeannjakel.entity.Book#18]
[DEBUG] 2021-05-11 17:41:19.189 [http-nio-8080-exec-9] Loader - Result set row: 12
[DEBUG] 2021-05-11 17:41:19.189 [http-nio-8080-exec-9] Loader - Result row: EntityKey[com.leeannjakel.entity.Book#19]
[DEBUG] 2021-05-11 17:41:19.190 [http-nio-8080-exec-9] Loader - Result set row: 13
[DEBUG] 2021-05-11 17:41:19.190 [http-nio-8080-exec-9] Loader - Result row: EntityKey[com.leeannjakel.entity.Book#21]
[DEBUG] 2021-05-11 17:41:19.190 [http-nio-8080-exec-9] Loader - Result set row: 14
[DEBUG] 2021-05-11 17:41:19.190 [http-nio-8080-exec-9] Loader - Result row: EntityKey[com.leeannjakel.entity.Book#22]
[DEBUG] 2021-05-11 17:41:19.194 [http-nio-8080-exec-9] Loader - Result set row: 15
[DEBUG] 2021-05-11 17:41:19.194 [http-nio-8080-exec-9] Loader - Result row: EntityKey[com.leeannjakel.entity.Book#23]
[DEBUG] 2021-05-11 17:41:19.195 [http-nio-8080-exec-9] Loader - Result set row: 16
[DEBUG] 2021-05-11 17:41:19.195 [http-nio-8080-exec-9] Loader - Result row: EntityKey[com.leeannjakel.entity.Book#24]
[DEBUG] 2021-05-11 17:41:19.201 [http-nio-8080-exec-9] Loader - Result set row: 17
[DEBUG] 2021-05-11 17:41:19.201 [http-nio-8080-exec-9] Loader - Result row: EntityKey[com.leeannjakel.entity.Book#25]
[DEBUG] 2021-05-11 17:41:19.208 [http-nio-8080-exec-9] Loader - Result set row: 18
[DEBUG] 2021-05-11 17:41:19.208 [http-nio-8080-exec-9] Loader - Result row: EntityKey[com.leeannjakel.entity.Book#26]
[DEBUG] 2021-05-11 17:41:19.209 [http-nio-8080-exec-9] Loader - Result set row: 19
[DEBUG] 2021-05-11 17:41:19.209 [http-nio-8080-exec-9] Loader - Result row: EntityKey[com.leeannjakel.entity.Book#27]
[DEBUG] 2021-05-11 17:41:19.209 [http-nio-8080-exec-9] Loader - Result set row: 20
[DEBUG] 2021-05-11 17:41:19.209 [http-nio-8080-exec-9] Loader - Result row: EntityKey[com.leeannjakel.entity.Book#28]
[DEBUG] 2021-05-11 17:41:19.210 [http-nio-8080-exec-9] Loader - Result set row: 21
[DEBUG] 2021-05-11 17:41:19.210 [http-nio-8080-exec-9] Loader - Result row: EntityKey[com.leeannjakel.entity.Book#29]
[DEBUG] 2021-05-11 17:41:19.212 [http-nio-8080-exec-9] Loader - Result set row: 22
[DEBUG] 2021-05-11 17:41:19.212 [http-nio-8080-exec-9] Loader - Result row: EntityKey[com.leeannjakel.entity.Book#30]
[DEBUG] 2021-05-11 17:41:19.216 [http-nio-8080-exec-9] Loader - Result set row: 23
[DEBUG] 2021-05-11 17:41:19.217 [http-nio-8080-exec-9] Loader - Result row: EntityKey[com.leeannjakel.entity.Book#31]
[DEBUG] 2021-05-11 17:41:19.224 [http-nio-8080-exec-9] Loader - Result set row: 24
[DEBUG] 2021-05-11 17:41:19.224 [http-nio-8080-exec-9] Loader - Result row: EntityKey[com.leeannjakel.entity.Book#32]
[DEBUG] 2021-05-11 17:41:19.228 [http-nio-8080-exec-9] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.Book#1]
[DEBUG] 2021-05-11 17:41:19.228 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `author` : value = 1
[DEBUG] 2021-05-11 17:41:19.228 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`author`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:41:19.228 [http-nio-8080-exec-9] SQL - select author0_.id as id1_0_0_, author0_.name as name2_0_0_, books1_.author_id as author_i5_1_1_, books1_.id as id1_1_1_, books1_.id as id1_1_2_, books1_.author_id as author_i5_1_2_, books1_.genre_id as genre_id6_1_2_, books1_.isbn as isbn2_1_2_, books1_.notes as notes3_1_2_, books1_.title as title4_1_2_, books1_.user_id as user_id7_1_2_, genre2_.id as id1_2_3_, genre2_.name as name2_2_3_, user3_.id as id1_4_4_, user3_.email as email2_4_4_, user3_.first_name as first_na3_4_4_, user3_.last_name as last_nam4_4_4_, user3_.password as password5_4_4_, user3_.user_name as user_nam6_4_4_ from author author0_ left outer join book books1_ on author0_.id=books1_.author_id left outer join genre genre2_ on books1_.genre_id=genre2_.id left outer join user user3_ on books1_.user_id=user3_.id where author0_.id=?
[DEBUG] 2021-05-11 17:41:19.246 [http-nio-8080-exec-9] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-05-11 17:41:19.251 [http-nio-8080-exec-9] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-05-11 17:41:19.252 [http-nio-8080-exec-9] CollectionReferenceInitializerImpl - Found row of collection: [com.leeannjakel.entity.Author.books#1]
[DEBUG] 2021-05-11 17:41:19.252 [http-nio-8080-exec-9] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.Author#1]
[DEBUG] 2021-05-11 17:41:19.252 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `books` : value = NOT NULL COLLECTION
[DEBUG] 2021-05-11 17:41:19.252 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`books`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:41:19.252 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `name` : value = Sarah J. Maas 
[DEBUG] 2021-05-11 17:41:19.252 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:41:19.252 [http-nio-8080-exec-9] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.Author#1]
[DEBUG] 2021-05-11 17:41:19.252 [http-nio-8080-exec-9] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.Genre#1]
[DEBUG] 2021-05-11 17:41:19.252 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `books` : value = NOT NULL COLLECTION
[DEBUG] 2021-05-11 17:41:19.252 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`books`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:41:19.252 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `name` : value = Young Adult
[DEBUG] 2021-05-11 17:41:19.252 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:41:19.252 [http-nio-8080-exec-9] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.Genre#1]
[DEBUG] 2021-05-11 17:41:19.252 [http-nio-8080-exec-9] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.User#1]
[DEBUG] 2021-05-11 17:41:19.260 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `books` : value = NOT NULL COLLECTION
[DEBUG] 2021-05-11 17:41:19.260 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`books`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:41:19.260 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `email` : value = email@something.com
[DEBUG] 2021-05-11 17:41:19.260 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:41:19.260 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `firstName` : value = LeeAnn
[DEBUG] 2021-05-11 17:41:19.260 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:41:19.260 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `lastName` : value = Jakel
[DEBUG] 2021-05-11 17:41:19.260 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:41:19.260 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `password` : value = password
[DEBUG] 2021-05-11 17:41:19.260 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:41:19.260 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2021-05-11 17:41:19.260 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:41:19.260 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `userName` : value = ljakel
[DEBUG] 2021-05-11 17:41:19.260 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:41:19.265 [http-nio-8080-exec-9] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.User#1]
[DEBUG] 2021-05-11 17:41:19.265 [http-nio-8080-exec-9] CollectionLoadContext - 1 collections were found in result set for role: com.leeannjakel.entity.Author.books
[DEBUG] 2021-05-11 17:41:19.266 [http-nio-8080-exec-9] CollectionLoadContext - Collection fully initialized: [com.leeannjakel.entity.Author.books#1]
[DEBUG] 2021-05-11 17:41:19.266 [http-nio-8080-exec-9] CollectionLoadContext - 1 collections initialized for role: com.leeannjakel.entity.Author.books
[DEBUG] 2021-05-11 17:41:19.266 [http-nio-8080-exec-9] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-05-11 17:41:19.268 [http-nio-8080-exec-9] AbstractLoadPlanBasedEntityLoader - Done entity load : com.leeannjakel.entity.Author#1
[DEBUG] 2021-05-11 17:41:19.269 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `genre` : value = 1
[DEBUG] 2021-05-11 17:41:19.269 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`genre`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:41:19.269 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `isbn` : value = 9781408857861
[DEBUG] 2021-05-11 17:41:19.269 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`isbn`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:41:19.269 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `notes` : value = Fantastic book, the mystery and romance is perfectly combined! Rhys is the best! Yay for night court! The 3rd book in this series is my favorite
[DEBUG] 2021-05-11 17:41:19.269 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`notes`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:41:19.269 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `title` : value = A Court Of Thorns and Roses
[DEBUG] 2021-05-11 17:41:19.269 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:41:19.269 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2021-05-11 17:41:19.269 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:41:19.269 [http-nio-8080-exec-9] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.Book#1]
[DEBUG] 2021-05-11 17:41:19.269 [http-nio-8080-exec-9] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.Book#3]
[DEBUG] 2021-05-11 17:41:19.284 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `author` : value = 5
[DEBUG] 2021-05-11 17:41:19.284 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`author`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:41:19.284 [http-nio-8080-exec-9] SQL - select author0_.id as id1_0_0_, author0_.name as name2_0_0_, books1_.author_id as author_i5_1_1_, books1_.id as id1_1_1_, books1_.id as id1_1_2_, books1_.author_id as author_i5_1_2_, books1_.genre_id as genre_id6_1_2_, books1_.isbn as isbn2_1_2_, books1_.notes as notes3_1_2_, books1_.title as title4_1_2_, books1_.user_id as user_id7_1_2_, genre2_.id as id1_2_3_, genre2_.name as name2_2_3_, user3_.id as id1_4_4_, user3_.email as email2_4_4_, user3_.first_name as first_na3_4_4_, user3_.last_name as last_nam4_4_4_, user3_.password as password5_4_4_, user3_.user_name as user_nam6_4_4_ from author author0_ left outer join book books1_ on author0_.id=books1_.author_id left outer join genre genre2_ on books1_.genre_id=genre2_.id left outer join user user3_ on books1_.user_id=user3_.id where author0_.id=?
[DEBUG] 2021-05-11 17:41:19.290 [http-nio-8080-exec-9] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-05-11 17:41:19.295 [http-nio-8080-exec-9] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-05-11 17:41:19.296 [http-nio-8080-exec-9] CollectionReferenceInitializerImpl - Found row of collection: [com.leeannjakel.entity.Author.books#5]
[DEBUG] 2021-05-11 17:41:19.297 [http-nio-8080-exec-9] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.Author#5]
[DEBUG] 2021-05-11 17:41:19.297 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `books` : value = NOT NULL COLLECTION
[DEBUG] 2021-05-11 17:41:19.297 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`books`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:41:19.298 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `name` : value = Nora Roberts
[DEBUG] 2021-05-11 17:41:19.298 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:41:19.298 [http-nio-8080-exec-9] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.Author#5]
[DEBUG] 2021-05-11 17:41:19.298 [http-nio-8080-exec-9] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.Genre#5]
[DEBUG] 2021-05-11 17:41:19.298 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `books` : value = NOT NULL COLLECTION
[DEBUG] 2021-05-11 17:41:19.298 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`books`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:41:19.299 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `name` : value = Romance
[DEBUG] 2021-05-11 17:41:19.299 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:41:19.299 [http-nio-8080-exec-9] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.Genre#5]
[DEBUG] 2021-05-11 17:41:19.299 [http-nio-8080-exec-9] CollectionLoadContext - 1 collections were found in result set for role: com.leeannjakel.entity.Author.books
[DEBUG] 2021-05-11 17:41:19.300 [http-nio-8080-exec-9] CollectionLoadContext - Collection fully initialized: [com.leeannjakel.entity.Author.books#5]
[DEBUG] 2021-05-11 17:41:19.300 [http-nio-8080-exec-9] CollectionLoadContext - 1 collections initialized for role: com.leeannjakel.entity.Author.books
[DEBUG] 2021-05-11 17:41:19.300 [http-nio-8080-exec-9] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-05-11 17:41:19.302 [http-nio-8080-exec-9] AbstractLoadPlanBasedEntityLoader - Done entity load : com.leeannjakel.entity.Author#5
[DEBUG] 2021-05-11 17:41:19.302 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `genre` : value = 5
[DEBUG] 2021-05-11 17:41:19.302 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`genre`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:41:19.302 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `isbn` : value = 9780425259856
[DEBUG] 2021-05-11 17:41:19.302 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`isbn`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:41:19.302 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `notes` : value = null
[DEBUG] 2021-05-11 17:41:19.302 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`notes`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:41:19.302 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `title` : value = Dark Witch
[DEBUG] 2021-05-11 17:41:19.302 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:41:19.302 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2021-05-11 17:41:19.302 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:41:19.305 [http-nio-8080-exec-9] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.Book#3]
[DEBUG] 2021-05-11 17:41:19.305 [http-nio-8080-exec-9] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.Book#8]
[DEBUG] 2021-05-11 17:41:19.305 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `author` : value = 14
[DEBUG] 2021-05-11 17:41:19.305 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`author`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:41:19.305 [http-nio-8080-exec-9] SQL - select author0_.id as id1_0_0_, author0_.name as name2_0_0_, books1_.author_id as author_i5_1_1_, books1_.id as id1_1_1_, books1_.id as id1_1_2_, books1_.author_id as author_i5_1_2_, books1_.genre_id as genre_id6_1_2_, books1_.isbn as isbn2_1_2_, books1_.notes as notes3_1_2_, books1_.title as title4_1_2_, books1_.user_id as user_id7_1_2_, genre2_.id as id1_2_3_, genre2_.name as name2_2_3_, user3_.id as id1_4_4_, user3_.email as email2_4_4_, user3_.first_name as first_na3_4_4_, user3_.last_name as last_nam4_4_4_, user3_.password as password5_4_4_, user3_.user_name as user_nam6_4_4_ from author author0_ left outer join book books1_ on author0_.id=books1_.author_id left outer join genre genre2_ on books1_.genre_id=genre2_.id left outer join user user3_ on books1_.user_id=user3_.id where author0_.id=?
[DEBUG] 2021-05-11 17:41:19.310 [http-nio-8080-exec-9] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-05-11 17:41:19.311 [http-nio-8080-exec-9] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-05-11 17:41:19.311 [http-nio-8080-exec-9] CollectionReferenceInitializerImpl - Found row of collection: [com.leeannjakel.entity.Author.books#14]
[DEBUG] 2021-05-11 17:41:19.325 [http-nio-8080-exec-9] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2021-05-11 17:41:19.325 [http-nio-8080-exec-9] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-05-11 17:41:19.326 [http-nio-8080-exec-9] CollectionReferenceInitializerImpl - Found row of collection: [com.leeannjakel.entity.Author.books#14]
[DEBUG] 2021-05-11 17:41:19.326 [http-nio-8080-exec-9] ResultSetProcessorImpl - Starting ResultSet row #2
[DEBUG] 2021-05-11 17:41:19.326 [http-nio-8080-exec-9] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-05-11 17:41:19.338 [http-nio-8080-exec-9] CollectionReferenceInitializerImpl - Found row of collection: [com.leeannjakel.entity.Author.books#14]
[DEBUG] 2021-05-11 17:41:19.340 [http-nio-8080-exec-9] ResultSetProcessorImpl - Starting ResultSet row #3
[DEBUG] 2021-05-11 17:41:19.341 [http-nio-8080-exec-9] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-05-11 17:41:19.342 [http-nio-8080-exec-9] CollectionReferenceInitializerImpl - Found row of collection: [com.leeannjakel.entity.Author.books#14]
[DEBUG] 2021-05-11 17:41:19.343 [http-nio-8080-exec-9] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.Author#14]
[DEBUG] 2021-05-11 17:41:19.343 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `books` : value = NOT NULL COLLECTION
[DEBUG] 2021-05-11 17:41:19.343 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`books`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:41:19.343 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `name` : value = Sarah J. Maas
[DEBUG] 2021-05-11 17:41:19.353 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:41:19.354 [http-nio-8080-exec-9] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.Author#14]
[DEBUG] 2021-05-11 17:41:19.354 [http-nio-8080-exec-9] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.Genre#6]
[DEBUG] 2021-05-11 17:41:19.355 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `books` : value = NOT NULL COLLECTION
[DEBUG] 2021-05-11 17:41:19.355 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`books`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:41:19.355 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `name` : value = Action
[DEBUG] 2021-05-11 17:41:19.355 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:41:19.355 [http-nio-8080-exec-9] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.Genre#6]
[DEBUG] 2021-05-11 17:41:19.356 [http-nio-8080-exec-9] CollectionLoadContext - 1 collections were found in result set for role: com.leeannjakel.entity.Author.books
[DEBUG] 2021-05-11 17:41:19.356 [http-nio-8080-exec-9] CollectionLoadContext - Collection fully initialized: [com.leeannjakel.entity.Author.books#14]
[DEBUG] 2021-05-11 17:41:19.356 [http-nio-8080-exec-9] CollectionLoadContext - 1 collections initialized for role: com.leeannjakel.entity.Author.books
[DEBUG] 2021-05-11 17:41:19.356 [http-nio-8080-exec-9] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-05-11 17:41:19.356 [http-nio-8080-exec-9] AbstractLoadPlanBasedEntityLoader - Done entity load : com.leeannjakel.entity.Author#14
[DEBUG] 2021-05-11 17:41:19.356 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `genre` : value = 1
[DEBUG] 2021-05-11 17:41:19.356 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`genre`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:41:19.356 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `isbn` : value = 9781599906959
[DEBUG] 2021-05-11 17:41:19.356 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`isbn`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:41:19.356 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `notes` : value = 
[DEBUG] 2021-05-11 17:41:19.356 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`notes`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:41:19.356 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `title` : value = Throne of glass
[DEBUG] 2021-05-11 17:41:19.356 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:41:19.356 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2021-05-11 17:41:19.356 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:41:19.356 [http-nio-8080-exec-9] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.Book#8]
[DEBUG] 2021-05-11 17:41:19.356 [http-nio-8080-exec-9] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.Book#9]
[DEBUG] 2021-05-11 17:41:19.356 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `author` : value = 14
[DEBUG] 2021-05-11 17:41:19.356 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`author`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:41:19.356 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `genre` : value = 1
[DEBUG] 2021-05-11 17:41:19.356 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`genre`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:41:19.356 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `isbn` : value = 9781599906959
[DEBUG] 2021-05-11 17:41:19.356 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`isbn`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:41:19.357 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `notes` : value = 
[DEBUG] 2021-05-11 17:41:19.357 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`notes`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:41:19.357 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `title` : value = Throne of glass
[DEBUG] 2021-05-11 17:41:19.357 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:41:19.357 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2021-05-11 17:41:19.372 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:41:19.372 [http-nio-8080-exec-9] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.Book#9]
[DEBUG] 2021-05-11 17:41:19.373 [http-nio-8080-exec-9] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.Book#11]
[DEBUG] 2021-05-11 17:41:19.373 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `author` : value = 14
[DEBUG] 2021-05-11 17:41:19.373 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`author`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:41:19.373 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `genre` : value = 1
[DEBUG] 2021-05-11 17:41:19.373 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`genre`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:41:19.373 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `isbn` : value = 9781635574043
[DEBUG] 2021-05-11 17:41:19.373 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`isbn`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:41:19.373 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `notes` : value = woooooo
[DEBUG] 2021-05-11 17:41:19.373 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`notes`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:41:19.373 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `title` : value = Crescent City : house of earth and blood
[DEBUG] 2021-05-11 17:41:19.373 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:41:19.373 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2021-05-11 17:41:19.373 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:41:19.381 [http-nio-8080-exec-9] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.Book#11]
[DEBUG] 2021-05-11 17:41:19.381 [http-nio-8080-exec-9] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.Book#12]
[DEBUG] 2021-05-11 17:41:19.381 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `author` : value = 14
[DEBUG] 2021-05-11 17:41:19.382 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`author`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:41:19.382 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `genre` : value = 6
[DEBUG] 2021-05-11 17:41:19.382 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`genre`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:41:19.382 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `isbn` : value = 9781599906959
[DEBUG] 2021-05-11 17:41:19.382 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`isbn`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:41:19.382 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `notes` : value = yay!
[DEBUG] 2021-05-11 17:41:19.382 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`notes`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:41:19.382 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `title` : value = Throne of glass
[DEBUG] 2021-05-11 17:41:19.382 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:41:19.382 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2021-05-11 17:41:19.382 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:41:19.385 [http-nio-8080-exec-9] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.Book#12]
[DEBUG] 2021-05-11 17:41:19.385 [http-nio-8080-exec-9] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.Book#13]
[DEBUG] 2021-05-11 17:41:19.385 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `author` : value = 16
[DEBUG] 2021-05-11 17:41:19.385 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`author`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:41:19.385 [http-nio-8080-exec-9] SQL - select author0_.id as id1_0_0_, author0_.name as name2_0_0_, books1_.author_id as author_i5_1_1_, books1_.id as id1_1_1_, books1_.id as id1_1_2_, books1_.author_id as author_i5_1_2_, books1_.genre_id as genre_id6_1_2_, books1_.isbn as isbn2_1_2_, books1_.notes as notes3_1_2_, books1_.title as title4_1_2_, books1_.user_id as user_id7_1_2_, genre2_.id as id1_2_3_, genre2_.name as name2_2_3_, user3_.id as id1_4_4_, user3_.email as email2_4_4_, user3_.first_name as first_na3_4_4_, user3_.last_name as last_nam4_4_4_, user3_.password as password5_4_4_, user3_.user_name as user_nam6_4_4_ from author author0_ left outer join book books1_ on author0_.id=books1_.author_id left outer join genre genre2_ on books1_.genre_id=genre2_.id left outer join user user3_ on books1_.user_id=user3_.id where author0_.id=?
[DEBUG] 2021-05-11 17:41:19.399 [http-nio-8080-exec-9] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-05-11 17:41:19.399 [http-nio-8080-exec-9] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-05-11 17:41:19.400 [http-nio-8080-exec-9] CollectionReferenceInitializerImpl - Found row of collection: [com.leeannjakel.entity.Author.books#16]
[DEBUG] 2021-05-11 17:41:19.400 [http-nio-8080-exec-9] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.Author#16]
[DEBUG] 2021-05-11 17:41:19.401 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `books` : value = NOT NULL COLLECTION
[DEBUG] 2021-05-11 17:41:19.401 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`books`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:41:19.401 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `name` : value = Leigh Bardugo
[DEBUG] 2021-05-11 17:41:19.401 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:41:19.401 [http-nio-8080-exec-9] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.Author#16]
[DEBUG] 2021-05-11 17:41:19.401 [http-nio-8080-exec-9] CollectionLoadContext - 1 collections were found in result set for role: com.leeannjakel.entity.Author.books
[DEBUG] 2021-05-11 17:41:19.401 [http-nio-8080-exec-9] CollectionLoadContext - Collection fully initialized: [com.leeannjakel.entity.Author.books#16]
[DEBUG] 2021-05-11 17:41:19.401 [http-nio-8080-exec-9] CollectionLoadContext - 1 collections initialized for role: com.leeannjakel.entity.Author.books
[DEBUG] 2021-05-11 17:41:19.401 [http-nio-8080-exec-9] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-05-11 17:41:19.401 [http-nio-8080-exec-9] AbstractLoadPlanBasedEntityLoader - Done entity load : com.leeannjakel.entity.Author#16
[DEBUG] 2021-05-11 17:41:19.401 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `genre` : value = 1
[DEBUG] 2021-05-11 17:41:19.401 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`genre`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:41:19.401 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `isbn` : value = 9781780622262
[DEBUG] 2021-05-11 17:41:19.401 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`isbn`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:41:19.401 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `notes` : value = book 1 of the first series
[DEBUG] 2021-05-11 17:41:19.401 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`notes`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:41:19.401 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `title` : value = The Grisha : Shadow and Bone
[DEBUG] 2021-05-11 17:41:19.401 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:41:19.401 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2021-05-11 17:41:19.401 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:41:19.402 [http-nio-8080-exec-9] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.Book#13]
[DEBUG] 2021-05-11 17:41:19.402 [http-nio-8080-exec-9] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.Book#14]
[DEBUG] 2021-05-11 17:41:19.402 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `author` : value = 17
[DEBUG] 2021-05-11 17:41:19.402 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`author`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:41:19.402 [http-nio-8080-exec-9] SQL - select author0_.id as id1_0_0_, author0_.name as name2_0_0_, books1_.author_id as author_i5_1_1_, books1_.id as id1_1_1_, books1_.id as id1_1_2_, books1_.author_id as author_i5_1_2_, books1_.genre_id as genre_id6_1_2_, books1_.isbn as isbn2_1_2_, books1_.notes as notes3_1_2_, books1_.title as title4_1_2_, books1_.user_id as user_id7_1_2_, genre2_.id as id1_2_3_, genre2_.name as name2_2_3_, user3_.id as id1_4_4_, user3_.email as email2_4_4_, user3_.first_name as first_na3_4_4_, user3_.last_name as last_nam4_4_4_, user3_.password as password5_4_4_, user3_.user_name as user_nam6_4_4_ from author author0_ left outer join book books1_ on author0_.id=books1_.author_id left outer join genre genre2_ on books1_.genre_id=genre2_.id left outer join user user3_ on books1_.user_id=user3_.id where author0_.id=?
[DEBUG] 2021-05-11 17:41:19.423 [http-nio-8080-exec-9] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-05-11 17:41:19.435 [http-nio-8080-exec-9] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-05-11 17:41:19.440 [http-nio-8080-exec-9] CollectionReferenceInitializerImpl - Found row of collection: [com.leeannjakel.entity.Author.books#17]
[DEBUG] 2021-05-11 17:41:19.441 [http-nio-8080-exec-9] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2021-05-11 17:41:19.441 [http-nio-8080-exec-9] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-05-11 17:41:19.441 [http-nio-8080-exec-9] CollectionReferenceInitializerImpl - Found row of collection: [com.leeannjakel.entity.Author.books#17]
[DEBUG] 2021-05-11 17:41:19.441 [http-nio-8080-exec-9] ResultSetProcessorImpl - Starting ResultSet row #2
[DEBUG] 2021-05-11 17:41:19.441 [http-nio-8080-exec-9] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-05-11 17:41:19.447 [http-nio-8080-exec-9] CollectionReferenceInitializerImpl - Found row of collection: [com.leeannjakel.entity.Author.books#17]
[DEBUG] 2021-05-11 17:41:19.448 [http-nio-8080-exec-9] ResultSetProcessorImpl - Starting ResultSet row #3
[DEBUG] 2021-05-11 17:41:19.448 [http-nio-8080-exec-9] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-05-11 17:41:19.449 [http-nio-8080-exec-9] CollectionReferenceInitializerImpl - Found row of collection: [com.leeannjakel.entity.Author.books#17]
[DEBUG] 2021-05-11 17:41:19.449 [http-nio-8080-exec-9] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.Author#17]
[DEBUG] 2021-05-11 17:41:19.449 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `books` : value = NOT NULL COLLECTION
[DEBUG] 2021-05-11 17:41:19.449 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`books`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:41:19.449 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `name` : value = Victoria Aveyard
[DEBUG] 2021-05-11 17:41:19.449 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:41:19.449 [http-nio-8080-exec-9] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.Author#17]
[DEBUG] 2021-05-11 17:41:19.449 [http-nio-8080-exec-9] CollectionLoadContext - 1 collections were found in result set for role: com.leeannjakel.entity.Author.books
[DEBUG] 2021-05-11 17:41:19.450 [http-nio-8080-exec-9] CollectionLoadContext - Collection fully initialized: [com.leeannjakel.entity.Author.books#17]
[DEBUG] 2021-05-11 17:41:19.450 [http-nio-8080-exec-9] CollectionLoadContext - 1 collections initialized for role: com.leeannjakel.entity.Author.books
[DEBUG] 2021-05-11 17:41:19.455 [http-nio-8080-exec-9] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-05-11 17:41:19.455 [http-nio-8080-exec-9] AbstractLoadPlanBasedEntityLoader - Done entity load : com.leeannjakel.entity.Author#17
[DEBUG] 2021-05-11 17:41:19.455 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `genre` : value = 1
[DEBUG] 2021-05-11 17:41:19.455 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`genre`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:41:19.455 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `isbn` : value = 9780062310668
[DEBUG] 2021-05-11 17:41:19.455 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`isbn`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:41:19.455 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `notes` : value = Book 2
[DEBUG] 2021-05-11 17:41:19.455 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`notes`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:41:19.455 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `title` : value = Glass Sword (Red Queen #2)
[DEBUG] 2021-05-11 17:41:19.456 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:41:19.456 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2021-05-11 17:41:19.456 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:41:19.456 [http-nio-8080-exec-9] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.Book#14]
[DEBUG] 2021-05-11 17:41:19.456 [http-nio-8080-exec-9] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.Book#15]
[DEBUG] 2021-05-11 17:41:19.456 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `author` : value = 17
[DEBUG] 2021-05-11 17:41:19.456 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`author`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:41:19.456 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `genre` : value = 1
[DEBUG] 2021-05-11 17:41:19.456 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`genre`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:41:19.456 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `isbn` : value = 9780062310637
[DEBUG] 2021-05-11 17:41:19.456 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`isbn`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:41:19.456 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `notes` : value = Book1
[DEBUG] 2021-05-11 17:41:19.456 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`notes`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:41:19.456 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `title` : value = Red Queen
[DEBUG] 2021-05-11 17:41:19.457 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:41:19.457 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2021-05-11 17:41:19.457 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:41:19.458 [http-nio-8080-exec-9] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.Book#15]
[DEBUG] 2021-05-11 17:41:19.458 [http-nio-8080-exec-9] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.Book#16]
[DEBUG] 2021-05-11 17:41:19.458 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `author` : value = 17
[DEBUG] 2021-05-11 17:41:19.458 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`author`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:41:19.470 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `genre` : value = 1
[DEBUG] 2021-05-11 17:41:19.470 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`genre`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:41:19.471 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `isbn` : value = 9780062310699
[DEBUG] 2021-05-11 17:41:19.472 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`isbn`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:41:19.476 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `notes` : value = Book3

[DEBUG] 2021-05-11 17:41:19.476 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`notes`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:41:19.476 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `title` : value = King's Cage (Red Queen)
[DEBUG] 2021-05-11 17:41:19.476 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:41:19.476 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2021-05-11 17:41:19.476 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:41:19.477 [http-nio-8080-exec-9] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.Book#16]
[DEBUG] 2021-05-11 17:41:19.477 [http-nio-8080-exec-9] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.Book#17]
[DEBUG] 2021-05-11 17:41:19.477 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `author` : value = 17
[DEBUG] 2021-05-11 17:41:19.477 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`author`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:41:19.477 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `genre` : value = 1
[DEBUG] 2021-05-11 17:41:19.477 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`genre`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:41:19.477 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `isbn` : value = 9781409175995
[DEBUG] 2021-05-11 17:41:19.477 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`isbn`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:41:19.477 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `notes` : value = 
[DEBUG] 2021-05-11 17:41:19.477 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`notes`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:41:19.477 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `title` : value = War Storm (Red Queen)
[DEBUG] 2021-05-11 17:41:19.477 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:41:19.477 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2021-05-11 17:41:19.477 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:41:19.477 [http-nio-8080-exec-9] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.Book#17]
[DEBUG] 2021-05-11 17:41:19.477 [http-nio-8080-exec-9] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.Book#18]
[DEBUG] 2021-05-11 17:41:19.477 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `author` : value = 2
[DEBUG] 2021-05-11 17:41:19.477 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`author`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:41:19.479 [http-nio-8080-exec-9] SQL - select author0_.id as id1_0_0_, author0_.name as name2_0_0_, books1_.author_id as author_i5_1_1_, books1_.id as id1_1_1_, books1_.id as id1_1_2_, books1_.author_id as author_i5_1_2_, books1_.genre_id as genre_id6_1_2_, books1_.isbn as isbn2_1_2_, books1_.notes as notes3_1_2_, books1_.title as title4_1_2_, books1_.user_id as user_id7_1_2_, genre2_.id as id1_2_3_, genre2_.name as name2_2_3_, user3_.id as id1_4_4_, user3_.email as email2_4_4_, user3_.first_name as first_na3_4_4_, user3_.last_name as last_nam4_4_4_, user3_.password as password5_4_4_, user3_.user_name as user_nam6_4_4_ from author author0_ left outer join book books1_ on author0_.id=books1_.author_id left outer join genre genre2_ on books1_.genre_id=genre2_.id left outer join user user3_ on books1_.user_id=user3_.id where author0_.id=?
[DEBUG] 2021-05-11 17:41:19.506 [http-nio-8080-exec-9] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-05-11 17:41:19.506 [http-nio-8080-exec-9] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-05-11 17:41:19.506 [http-nio-8080-exec-9] CollectionReferenceInitializerImpl - Found row of collection: [com.leeannjakel.entity.Author.books#2]
[DEBUG] 2021-05-11 17:41:19.506 [http-nio-8080-exec-9] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2021-05-11 17:41:19.506 [http-nio-8080-exec-9] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-05-11 17:41:19.506 [http-nio-8080-exec-9] CollectionReferenceInitializerImpl - Found row of collection: [com.leeannjakel.entity.Author.books#2]
[DEBUG] 2021-05-11 17:41:19.507 [http-nio-8080-exec-9] ResultSetProcessorImpl - Starting ResultSet row #2
[DEBUG] 2021-05-11 17:41:19.507 [http-nio-8080-exec-9] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-05-11 17:41:19.507 [http-nio-8080-exec-9] CollectionReferenceInitializerImpl - Found row of collection: [com.leeannjakel.entity.Author.books#2]
[DEBUG] 2021-05-11 17:41:19.507 [http-nio-8080-exec-9] ResultSetProcessorImpl - Starting ResultSet row #3
[DEBUG] 2021-05-11 17:41:19.507 [http-nio-8080-exec-9] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-05-11 17:41:19.507 [http-nio-8080-exec-9] CollectionReferenceInitializerImpl - Found row of collection: [com.leeannjakel.entity.Author.books#2]
[DEBUG] 2021-05-11 17:41:19.507 [http-nio-8080-exec-9] ResultSetProcessorImpl - Starting ResultSet row #4
[DEBUG] 2021-05-11 17:41:19.507 [http-nio-8080-exec-9] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-05-11 17:41:19.507 [http-nio-8080-exec-9] CollectionReferenceInitializerImpl - Found row of collection: [com.leeannjakel.entity.Author.books#2]
[DEBUG] 2021-05-11 17:41:19.507 [http-nio-8080-exec-9] ResultSetProcessorImpl - Starting ResultSet row #5
[DEBUG] 2021-05-11 17:41:19.507 [http-nio-8080-exec-9] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-05-11 17:41:19.507 [http-nio-8080-exec-9] CollectionReferenceInitializerImpl - Found row of collection: [com.leeannjakel.entity.Author.books#2]
[DEBUG] 2021-05-11 17:41:19.507 [http-nio-8080-exec-9] ResultSetProcessorImpl - Starting ResultSet row #6
[DEBUG] 2021-05-11 17:41:19.507 [http-nio-8080-exec-9] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-05-11 17:41:19.507 [http-nio-8080-exec-9] CollectionReferenceInitializerImpl - Found row of collection: [com.leeannjakel.entity.Author.books#2]
[DEBUG] 2021-05-11 17:41:19.508 [http-nio-8080-exec-9] ResultSetProcessorImpl - Starting ResultSet row #7
[DEBUG] 2021-05-11 17:41:19.508 [http-nio-8080-exec-9] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-05-11 17:41:19.508 [http-nio-8080-exec-9] CollectionReferenceInitializerImpl - Found row of collection: [com.leeannjakel.entity.Author.books#2]
[DEBUG] 2021-05-11 17:41:19.508 [http-nio-8080-exec-9] ResultSetProcessorImpl - Starting ResultSet row #8
[DEBUG] 2021-05-11 17:41:19.508 [http-nio-8080-exec-9] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-05-11 17:41:19.508 [http-nio-8080-exec-9] CollectionReferenceInitializerImpl - Found row of collection: [com.leeannjakel.entity.Author.books#2]
[DEBUG] 2021-05-11 17:41:19.508 [http-nio-8080-exec-9] ResultSetProcessorImpl - Starting ResultSet row #9
[DEBUG] 2021-05-11 17:41:19.508 [http-nio-8080-exec-9] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-05-11 17:41:19.508 [http-nio-8080-exec-9] CollectionReferenceInitializerImpl - Found row of collection: [com.leeannjakel.entity.Author.books#2]
[DEBUG] 2021-05-11 17:41:19.508 [http-nio-8080-exec-9] ResultSetProcessorImpl - Starting ResultSet row #10
[DEBUG] 2021-05-11 17:41:19.508 [http-nio-8080-exec-9] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-05-11 17:41:19.508 [http-nio-8080-exec-9] CollectionReferenceInitializerImpl - Found row of collection: [com.leeannjakel.entity.Author.books#2]
[DEBUG] 2021-05-11 17:41:19.508 [http-nio-8080-exec-9] ResultSetProcessorImpl - Starting ResultSet row #11
[DEBUG] 2021-05-11 17:41:19.508 [http-nio-8080-exec-9] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-05-11 17:41:19.516 [http-nio-8080-exec-9] CollectionReferenceInitializerImpl - Found row of collection: [com.leeannjakel.entity.Author.books#2]
[DEBUG] 2021-05-11 17:41:19.516 [http-nio-8080-exec-9] ResultSetProcessorImpl - Starting ResultSet row #12
[DEBUG] 2021-05-11 17:41:19.516 [http-nio-8080-exec-9] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-05-11 17:41:19.516 [http-nio-8080-exec-9] CollectionReferenceInitializerImpl - Found row of collection: [com.leeannjakel.entity.Author.books#2]
[DEBUG] 2021-05-11 17:41:19.523 [http-nio-8080-exec-9] ResultSetProcessorImpl - Starting ResultSet row #13
[DEBUG] 2021-05-11 17:41:19.523 [http-nio-8080-exec-9] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-05-11 17:41:19.525 [http-nio-8080-exec-9] CollectionReferenceInitializerImpl - Found row of collection: [com.leeannjakel.entity.Author.books#2]
[DEBUG] 2021-05-11 17:41:19.525 [http-nio-8080-exec-9] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.Author#2]
[DEBUG] 2021-05-11 17:41:19.525 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `books` : value = NOT NULL COLLECTION
[DEBUG] 2021-05-11 17:41:19.525 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`books`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:41:19.525 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `name` : value = Cassandra Clare
[DEBUG] 2021-05-11 17:41:19.525 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:41:19.525 [http-nio-8080-exec-9] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.Author#2]
[DEBUG] 2021-05-11 17:41:19.526 [http-nio-8080-exec-9] CollectionLoadContext - 1 collections were found in result set for role: com.leeannjakel.entity.Author.books
[DEBUG] 2021-05-11 17:41:19.526 [http-nio-8080-exec-9] CollectionLoadContext - Collection fully initialized: [com.leeannjakel.entity.Author.books#2]
[DEBUG] 2021-05-11 17:41:19.528 [http-nio-8080-exec-9] CollectionLoadContext - 1 collections initialized for role: com.leeannjakel.entity.Author.books
[DEBUG] 2021-05-11 17:41:19.529 [http-nio-8080-exec-9] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-05-11 17:41:19.529 [http-nio-8080-exec-9] AbstractLoadPlanBasedEntityLoader - Done entity load : com.leeannjakel.entity.Author#2
[DEBUG] 2021-05-11 17:41:19.529 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `genre` : value = 1
[DEBUG] 2021-05-11 17:41:19.529 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`genre`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:41:19.529 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `isbn` : value = 9781534406254
[DEBUG] 2021-05-11 17:41:19.539 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`isbn`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:41:19.539 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `notes` : value = 
[DEBUG] 2021-05-11 17:41:19.539 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`notes`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:41:19.539 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `title` : value = City of Bones: 10th Anniversary Edition (The Mortal Instruments)
[DEBUG] 2021-05-11 17:41:19.539 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:41:19.539 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2021-05-11 17:41:19.539 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:41:19.539 [http-nio-8080-exec-9] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.Book#18]
[DEBUG] 2021-05-11 17:41:19.539 [http-nio-8080-exec-9] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.Book#19]
[DEBUG] 2021-05-11 17:41:19.539 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `author` : value = 2
[DEBUG] 2021-05-11 17:41:19.539 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`author`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:41:19.541 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `genre` : value = 1
[DEBUG] 2021-05-11 17:41:19.544 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`genre`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:41:19.545 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `isbn` : value = 9780606106405
[DEBUG] 2021-05-11 17:41:19.545 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`isbn`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:41:19.545 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `notes` : value = The Mortal Instruments  Book 2
[DEBUG] 2021-05-11 17:41:19.545 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`notes`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:41:19.545 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `title` : value = City Of Ashes Book Two
[DEBUG] 2021-05-11 17:41:19.547 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:41:19.547 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2021-05-11 17:41:19.547 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:41:19.547 [http-nio-8080-exec-9] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.Book#19]
[DEBUG] 2021-05-11 17:41:19.547 [http-nio-8080-exec-9] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.Book#21]
[DEBUG] 2021-05-11 17:41:19.547 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `author` : value = 2
[DEBUG] 2021-05-11 17:41:19.547 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`author`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:41:19.547 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `genre` : value = 1
[DEBUG] 2021-05-11 17:41:19.547 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`genre`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:41:19.548 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `isbn` : value = 9780606107235
[DEBUG] 2021-05-11 17:41:19.548 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`isbn`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:41:19.548 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `notes` : value = Book3 
[DEBUG] 2021-05-11 17:41:19.548 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`notes`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:41:19.548 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `title` : value = City Of Glass
[DEBUG] 2021-05-11 17:41:19.548 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:41:19.548 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2021-05-11 17:41:19.548 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:41:19.555 [http-nio-8080-exec-9] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.Book#21]
[DEBUG] 2021-05-11 17:41:19.556 [http-nio-8080-exec-9] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.Book#22]
[DEBUG] 2021-05-11 17:41:19.556 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `author` : value = 2
[DEBUG] 2021-05-11 17:41:19.556 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`author`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:41:19.559 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `genre` : value = 1
[DEBUG] 2021-05-11 17:41:19.560 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`genre`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:41:19.566 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `isbn` : value = 9780606269087
[DEBUG] 2021-05-11 17:41:19.566 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`isbn`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:41:19.566 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `notes` : value = Book4
[DEBUG] 2021-05-11 17:41:19.566 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`notes`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:41:19.566 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `title` : value = City Of Fallen Angels
[DEBUG] 2021-05-11 17:41:19.566 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:41:19.566 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2021-05-11 17:41:19.566 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:41:19.566 [http-nio-8080-exec-9] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.Book#22]
[DEBUG] 2021-05-11 17:41:19.566 [http-nio-8080-exec-9] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.Book#23]
[DEBUG] 2021-05-11 17:41:19.566 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `author` : value = 2
[DEBUG] 2021-05-11 17:41:19.566 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`author`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:41:19.566 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `genre` : value = 1
[DEBUG] 2021-05-11 17:41:19.566 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`genre`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:41:19.566 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `isbn` : value = 9781442416864
[DEBUG] 2021-05-11 17:41:19.567 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`isbn`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:41:19.567 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `notes` : value = The Mortal Instruments book 5
[DEBUG] 2021-05-11 17:41:19.568 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`notes`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:41:19.568 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `title` : value = City of lost souls
[DEBUG] 2021-05-11 17:41:19.568 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:41:19.568 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2021-05-11 17:41:19.568 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:41:19.572 [http-nio-8080-exec-9] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.Book#23]
[DEBUG] 2021-05-11 17:41:19.572 [http-nio-8080-exec-9] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.Book#24]
[DEBUG] 2021-05-11 17:41:19.572 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `author` : value = 2
[DEBUG] 2021-05-11 17:41:19.572 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`author`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:41:19.573 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `genre` : value = 1
[DEBUG] 2021-05-11 17:41:19.573 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`genre`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:41:19.573 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `isbn` : value = 9780606371384
[DEBUG] 2021-05-11 17:41:19.573 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`isbn`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:41:19.573 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `notes` : value = The Mortal Instruments 
book 6 
[DEBUG] 2021-05-11 17:41:19.573 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`notes`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:41:19.573 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `title` : value = City Of Heavenly Fire
[DEBUG] 2021-05-11 17:41:19.573 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:41:19.573 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2021-05-11 17:41:19.573 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:41:19.576 [http-nio-8080-exec-9] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.Book#24]
[DEBUG] 2021-05-11 17:41:19.576 [http-nio-8080-exec-9] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.Book#25]
[DEBUG] 2021-05-11 17:41:19.576 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `author` : value = 2
[DEBUG] 2021-05-11 17:41:19.576 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`author`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:41:19.576 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `genre` : value = 1
[DEBUG] 2021-05-11 17:41:19.576 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`genre`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:41:19.577 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `isbn` : value = 9780606232869
[DEBUG] 2021-05-11 17:41:19.577 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`isbn`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:41:19.577 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `notes` : value = The Infernal Devices Book 1
[DEBUG] 2021-05-11 17:41:19.577 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`notes`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:41:19.577 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `title` : value = Clockwork Angel
[DEBUG] 2021-05-11 17:41:19.577 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:41:19.577 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2021-05-11 17:41:19.577 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:41:19.577 [http-nio-8080-exec-9] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.Book#25]
[DEBUG] 2021-05-11 17:41:19.577 [http-nio-8080-exec-9] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.Book#26]
[DEBUG] 2021-05-11 17:41:19.577 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `author` : value = 2
[DEBUG] 2021-05-11 17:41:19.577 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`author`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:41:19.577 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `genre` : value = 1
[DEBUG] 2021-05-11 17:41:19.577 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`genre`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:41:19.577 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `isbn` : value = 9781416975892
[DEBUG] 2021-05-11 17:41:19.577 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`isbn`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:41:19.577 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `notes` : value = The Infernal Devices Book 2
[DEBUG] 2021-05-11 17:41:19.577 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`notes`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:41:19.577 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `title` : value = Clockwork Prince                            Infernal Devices
[DEBUG] 2021-05-11 17:41:19.577 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:41:19.577 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2021-05-11 17:41:19.577 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:41:19.577 [http-nio-8080-exec-9] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.Book#26]
[DEBUG] 2021-05-11 17:41:19.577 [http-nio-8080-exec-9] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.Book#27]
[DEBUG] 2021-05-11 17:41:19.577 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `author` : value = 2
[DEBUG] 2021-05-11 17:41:19.577 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`author`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:41:19.588 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `genre` : value = 1
[DEBUG] 2021-05-11 17:41:19.588 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`genre`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:41:19.589 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `isbn` : value = 9780606353403
[DEBUG] 2021-05-11 17:41:19.589 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`isbn`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:41:19.594 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `notes` : value = 
[DEBUG] 2021-05-11 17:41:19.594 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`notes`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:41:19.594 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `title` : value = Clockwork Princess Graphic Novel
[DEBUG] 2021-05-11 17:41:19.594 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:41:19.595 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2021-05-11 17:41:19.595 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:41:19.595 [http-nio-8080-exec-9] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.Book#27]
[DEBUG] 2021-05-11 17:41:19.595 [http-nio-8080-exec-9] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.Book#28]
[DEBUG] 2021-05-11 17:41:19.595 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `author` : value = 2
[DEBUG] 2021-05-11 17:41:19.595 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`author`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:41:19.595 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `genre` : value = 1
[DEBUG] 2021-05-11 17:41:19.595 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`genre`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:41:19.596 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `isbn` : value = 9781481431873
[DEBUG] 2021-05-11 17:41:19.596 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`isbn`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:41:19.596 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `notes` : value = The Last Hours Book 1
[DEBUG] 2021-05-11 17:41:19.596 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`notes`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:41:19.596 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `title` : value = Chain of gold
[DEBUG] 2021-05-11 17:41:19.596 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:41:19.596 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2021-05-11 17:41:19.596 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:41:19.596 [http-nio-8080-exec-9] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.Book#28]
[DEBUG] 2021-05-11 17:41:19.596 [http-nio-8080-exec-9] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.Book#29]
[DEBUG] 2021-05-11 17:41:19.596 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `author` : value = 2
[DEBUG] 2021-05-11 17:41:19.596 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`author`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:41:19.596 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `genre` : value = 1
[DEBUG] 2021-05-11 17:41:19.596 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`genre`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:41:19.596 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `isbn` : value = 9781406358100
[DEBUG] 2021-05-11 17:41:19.596 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`isbn`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:41:19.596 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `notes` : value = The Last Hours Book 2
[DEBUG] 2021-05-11 17:41:19.596 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`notes`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:41:19.596 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `title` : value = The Last Hours
[DEBUG] 2021-05-11 17:41:19.596 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:41:19.596 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2021-05-11 17:41:19.596 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:41:19.596 [http-nio-8080-exec-9] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.Book#29]
[DEBUG] 2021-05-11 17:41:19.600 [http-nio-8080-exec-9] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.Book#30]
[DEBUG] 2021-05-11 17:41:19.600 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `author` : value = 2
[DEBUG] 2021-05-11 17:41:19.600 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`author`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:41:19.600 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `genre` : value = 1
[DEBUG] 2021-05-11 17:41:19.600 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`genre`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:41:19.600 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `isbn` : value = 9783442314225
[DEBUG] 2021-05-11 17:41:19.600 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`isbn`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:41:19.600 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `notes` : value = The Dark Artifices Book 1
[DEBUG] 2021-05-11 17:41:19.600 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`notes`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:41:19.600 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `title` : value = Lady Midnight
[DEBUG] 2021-05-11 17:41:19.600 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:41:19.600 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2021-05-11 17:41:19.600 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:41:19.602 [http-nio-8080-exec-9] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.Book#30]
[DEBUG] 2021-05-11 17:41:19.603 [http-nio-8080-exec-9] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.Book#31]
[DEBUG] 2021-05-11 17:41:19.604 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `author` : value = 2
[DEBUG] 2021-05-11 17:41:19.604 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`author`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:41:19.607 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `genre` : value = 1
[DEBUG] 2021-05-11 17:41:19.607 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`genre`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:41:19.608 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `isbn` : value = 9781442468405
[DEBUG] 2021-05-11 17:41:19.608 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`isbn`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:41:19.608 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `notes` : value = The Dark Artifices Book 2
[DEBUG] 2021-05-11 17:41:19.608 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`notes`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:41:19.609 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `title` : value = Lord of Shadows
[DEBUG] 2021-05-11 17:41:19.610 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:41:19.610 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2021-05-11 17:41:19.610 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:41:19.616 [http-nio-8080-exec-9] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.Book#31]
[DEBUG] 2021-05-11 17:41:19.616 [http-nio-8080-exec-9] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.Book#32]
[DEBUG] 2021-05-11 17:41:19.616 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `author` : value = 2
[DEBUG] 2021-05-11 17:41:19.616 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`author`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:41:19.616 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `genre` : value = 1
[DEBUG] 2021-05-11 17:41:19.616 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`genre`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:41:19.616 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `isbn` : value = 9781442468436
[DEBUG] 2021-05-11 17:41:19.616 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`isbn`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:41:19.616 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `notes` : value = The Dark Artifices Book 3
[DEBUG] 2021-05-11 17:41:19.616 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`notes`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:41:19.616 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `title` : value = Queen of air and darkness
[DEBUG] 2021-05-11 17:41:19.616 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:41:19.616 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2021-05-11 17:41:19.616 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:41:19.616 [http-nio-8080-exec-9] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.Book#32]
[DEBUG] 2021-05-11 17:41:19.618 [http-nio-8080-exec-9] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.leeannjakel.entity.User.roles#1]
[DEBUG] 2021-05-11 17:41:19.618 [http-nio-8080-exec-9] SQL - select roles0_.user_id as user_id4_3_0_, roles0_.id as id1_3_0_, roles0_.id as id1_3_1_, roles0_.role_name as role_nam2_3_1_, roles0_.user_id as user_id4_3_1_, roles0_.user_name as user_nam3_3_1_ from role roles0_ where roles0_.user_id=?
[DEBUG] 2021-05-11 17:41:19.629 [http-nio-8080-exec-9] ResultSetProcessorImpl - Preparing collection initializer : [com.leeannjakel.entity.User.roles#1]
[DEBUG] 2021-05-11 17:41:19.629 [http-nio-8080-exec-9] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-05-11 17:41:19.633 [http-nio-8080-exec-9] CollectionReferenceInitializerImpl - Found row of collection: [com.leeannjakel.entity.User.roles#1]
[DEBUG] 2021-05-11 17:41:19.633 [http-nio-8080-exec-9] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.Role#7]
[DEBUG] 2021-05-11 17:41:19.633 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `roleName` : value = admin
[DEBUG] 2021-05-11 17:41:19.633 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`roleName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:41:19.634 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2021-05-11 17:41:19.634 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:41:19.636 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `userName` : value = ljakel
[DEBUG] 2021-05-11 17:41:19.636 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 17:41:19.636 [http-nio-8080-exec-9] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.Role#7]
[DEBUG] 2021-05-11 17:41:19.636 [http-nio-8080-exec-9] CollectionLoadContext - 1 collections were found in result set for role: com.leeannjakel.entity.User.roles
[DEBUG] 2021-05-11 17:41:19.636 [http-nio-8080-exec-9] CollectionLoadContext - Collection fully initialized: [com.leeannjakel.entity.User.roles#1]
[DEBUG] 2021-05-11 17:41:19.636 [http-nio-8080-exec-9] CollectionLoadContext - 1 collections initialized for role: com.leeannjakel.entity.User.roles
[DEBUG] 2021-05-11 17:41:19.636 [http-nio-8080-exec-9] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-05-11 17:41:19.636 [http-nio-8080-exec-9] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2021-05-11 17:41:19.636 [http-nio-8080-exec-9] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
