[DEBUG] 2021-05-11 20:00:05.546 [http-nio-8080-exec-5] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2021-05-11 20:00:05.573 [http-nio-8080-exec-5] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2021-05-11 20:00:05.606 [http-nio-8080-exec-5] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2021-05-11 20:00:06.071 [http-nio-8080-exec-5] Version - HHH000412: Hibernate Core {5.4.4.Final}
[DEBUG] 2021-05-11 20:00:06.086 [http-nio-8080-exec-5] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2021-05-11 20:00:06.760 [http-nio-8080-exec-5] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2021-05-11 20:00:06.761 [http-nio-8080-exec-5] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2021-05-11 20:00:06.821 [http-nio-8080-exec-5] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2021-05-11 20:00:07.976 [http-nio-8080-exec-5] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2021-05-11 20:00:08.049 [http-nio-8080-exec-5] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2021-05-11 20:00:08.052 [http-nio-8080-exec-5] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2021-05-11 20:00:08.118 [http-nio-8080-exec-5] Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] 2021-05-11 20:00:08.386 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@7b691262
[DEBUG] 2021-05-11 20:00:08.386 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@7b691262
[DEBUG] 2021-05-11 20:00:08.386 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7b691262
[DEBUG] 2021-05-11 20:00:08.388 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@6fa4e941
[DEBUG] 2021-05-11 20:00:08.397 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@542e2a7f
[DEBUG] 2021-05-11 20:00:08.399 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@34abedca
[DEBUG] 2021-05-11 20:00:08.402 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@2feae324
[DEBUG] 2021-05-11 20:00:08.402 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@2feae324
[DEBUG] 2021-05-11 20:00:08.402 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@2feae324
[DEBUG] 2021-05-11 20:00:08.403 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@41a5ad99
[DEBUG] 2021-05-11 20:00:08.404 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@41a5ad99
[DEBUG] 2021-05-11 20:00:08.404 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@41a5ad99
[DEBUG] 2021-05-11 20:00:08.406 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@6cbcf0f2
[DEBUG] 2021-05-11 20:00:08.408 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@6cbcf0f2
[DEBUG] 2021-05-11 20:00:08.409 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@6cbcf0f2
[DEBUG] 2021-05-11 20:00:08.410 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@1386c37e
[DEBUG] 2021-05-11 20:00:08.411 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@1386c37e
[DEBUG] 2021-05-11 20:00:08.411 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1386c37e
[DEBUG] 2021-05-11 20:00:08.418 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@19315f3e
[DEBUG] 2021-05-11 20:00:08.419 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@19315f3e
[DEBUG] 2021-05-11 20:00:08.419 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@19315f3e
[DEBUG] 2021-05-11 20:00:08.421 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@638bf59f
[DEBUG] 2021-05-11 20:00:08.423 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@638bf59f
[DEBUG] 2021-05-11 20:00:08.423 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@638bf59f
[DEBUG] 2021-05-11 20:00:08.425 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@6fad8c41
[DEBUG] 2021-05-11 20:00:08.426 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@6fad8c41
[DEBUG] 2021-05-11 20:00:08.427 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6fad8c41
[DEBUG] 2021-05-11 20:00:08.429 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@2021963e
[DEBUG] 2021-05-11 20:00:08.429 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@2021963e
[DEBUG] 2021-05-11 20:00:08.432 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6f0cb5e0
[DEBUG] 2021-05-11 20:00:08.432 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6f0cb5e0
[DEBUG] 2021-05-11 20:00:08.434 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@2780709
[DEBUG] 2021-05-11 20:00:08.434 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@2780709
[DEBUG] 2021-05-11 20:00:08.435 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@3659288
[DEBUG] 2021-05-11 20:00:08.436 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@d676e41
[DEBUG] 2021-05-11 20:00:08.438 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@4cf04acc
[DEBUG] 2021-05-11 20:00:08.438 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@4cf04acc
[DEBUG] 2021-05-11 20:00:08.440 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@1dfcc16d
[DEBUG] 2021-05-11 20:00:08.441 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@1dfcc16d
[DEBUG] 2021-05-11 20:00:08.456 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@63e669c7
[DEBUG] 2021-05-11 20:00:08.457 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@63e669c7
[DEBUG] 2021-05-11 20:00:08.459 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@393e2c26
[DEBUG] 2021-05-11 20:00:08.459 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@393e2c26
[DEBUG] 2021-05-11 20:00:08.461 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@40a19c8b
[DEBUG] 2021-05-11 20:00:08.461 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@40a19c8b
[DEBUG] 2021-05-11 20:00:08.463 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@3ad18088
[DEBUG] 2021-05-11 20:00:08.463 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@3ad18088
[DEBUG] 2021-05-11 20:00:08.467 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7fd6e5d9
[DEBUG] 2021-05-11 20:00:08.467 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7fd6e5d9
[DEBUG] 2021-05-11 20:00:08.472 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@72c04873
[DEBUG] 2021-05-11 20:00:08.472 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@72c04873
[DEBUG] 2021-05-11 20:00:08.475 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@291fc596
[DEBUG] 2021-05-11 20:00:08.476 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@291fc596
[DEBUG] 2021-05-11 20:00:08.479 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@2a00dd26
[DEBUG] 2021-05-11 20:00:08.479 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@2a00dd26
[DEBUG] 2021-05-11 20:00:08.481 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@21b42df
[DEBUG] 2021-05-11 20:00:08.482 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@21b42df
[DEBUG] 2021-05-11 20:00:08.490 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@a14c419
[DEBUG] 2021-05-11 20:00:08.490 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@a14c419
[DEBUG] 2021-05-11 20:00:08.490 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@a14c419
[DEBUG] 2021-05-11 20:00:08.493 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@62bb8658
[DEBUG] 2021-05-11 20:00:08.494 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@d91b34
[DEBUG] 2021-05-11 20:00:08.495 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@d91b34
[DEBUG] 2021-05-11 20:00:08.495 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@d91b34
[DEBUG] 2021-05-11 20:00:08.496 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@23d2954e
[DEBUG] 2021-05-11 20:00:08.498 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@f0bbb88
[DEBUG] 2021-05-11 20:00:08.498 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@f0bbb88
[DEBUG] 2021-05-11 20:00:08.501 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@66f84914
[DEBUG] 2021-05-11 20:00:08.501 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@66f84914
[DEBUG] 2021-05-11 20:00:08.503 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@274074fd
[DEBUG] 2021-05-11 20:00:08.503 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@274074fd
[DEBUG] 2021-05-11 20:00:08.504 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@9b7b9a2
[DEBUG] 2021-05-11 20:00:08.511 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@9b7b9a2
[DEBUG] 2021-05-11 20:00:08.512 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@2078b365
[DEBUG] 2021-05-11 20:00:08.513 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@2078b365
[DEBUG] 2021-05-11 20:00:08.513 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@68a1b7d4
[DEBUG] 2021-05-11 20:00:08.516 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@587703e7
[DEBUG] 2021-05-11 20:00:08.516 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@587703e7
[DEBUG] 2021-05-11 20:00:08.516 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@587703e7
[DEBUG] 2021-05-11 20:00:08.518 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@3e1a7195
[DEBUG] 2021-05-11 20:00:08.518 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@3e1a7195
[DEBUG] 2021-05-11 20:00:08.518 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@3e1a7195
[DEBUG] 2021-05-11 20:00:08.523 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@273d1ea3
[DEBUG] 2021-05-11 20:00:08.523 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@1ad86157
[DEBUG] 2021-05-11 20:00:08.526 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@28ad4109
[DEBUG] 2021-05-11 20:00:08.526 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@28ad4109
[DEBUG] 2021-05-11 20:00:08.526 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@28ad4109
[DEBUG] 2021-05-11 20:00:08.528 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@14e9a34d
[DEBUG] 2021-05-11 20:00:08.529 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@14e9a34d
[DEBUG] 2021-05-11 20:00:08.529 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@14e9a34d
[DEBUG] 2021-05-11 20:00:08.530 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@1640fed8
[DEBUG] 2021-05-11 20:00:08.530 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@496ab626
[DEBUG] 2021-05-11 20:00:08.536 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@696147ba
[DEBUG] 2021-05-11 20:00:08.536 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@696147ba
[DEBUG] 2021-05-11 20:00:08.543 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@23602662
[DEBUG] 2021-05-11 20:00:08.546 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@7b6896ac
[DEBUG] 2021-05-11 20:00:08.546 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7b6896ac
[DEBUG] 2021-05-11 20:00:08.549 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@5c26c58d
[DEBUG] 2021-05-11 20:00:08.549 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@5c26c58d
[DEBUG] 2021-05-11 20:00:08.555 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4243b75
[DEBUG] 2021-05-11 20:00:08.555 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@ffaf055
[DEBUG] 2021-05-11 20:00:08.564 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@2e62614f
[DEBUG] 2021-05-11 20:00:08.574 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@210edbf4
[DEBUG] 2021-05-11 20:00:08.574 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@210edbf4
[DEBUG] 2021-05-11 20:00:08.583 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@4e7eec3f
[DEBUG] 2021-05-11 20:00:08.584 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@ce1c403
[DEBUG] 2021-05-11 20:00:08.584 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@5209027d
[DEBUG] 2021-05-11 20:00:08.584 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@986f11e
[DEBUG] 2021-05-11 20:00:08.584 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@30a0fb05
[DEBUG] 2021-05-11 20:00:08.587 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@3263e0ce
[DEBUG] 2021-05-11 20:00:08.587 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@28e31615
[DEBUG] 2021-05-11 20:00:08.587 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@16d30c16
[DEBUG] 2021-05-11 20:00:08.681 [http-nio-8080-exec-5] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2021-05-11 20:00:08.682 [http-nio-8080-exec-5] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2021-05-11 20:00:08.684 [http-nio-8080-exec-5] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2021-05-11 20:00:08.684 [http-nio-8080-exec-5] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2021-05-11 20:00:08.688 [http-nio-8080-exec-5] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2021-05-11 20:00:08.691 [http-nio-8080-exec-5] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2021-05-11 20:00:08.702 [http-nio-8080-exec-5] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2021-05-11 20:00:08.707 [http-nio-8080-exec-5] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2021-05-11 20:00:08.708 [http-nio-8080-exec-5] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2021-05-11 20:00:08.710 [http-nio-8080-exec-5] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2021-05-11 20:00:08.711 [http-nio-8080-exec-5] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2021-05-11 20:00:08.712 [http-nio-8080-exec-5] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2021-05-11 20:00:08.712 [http-nio-8080-exec-5] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2021-05-11 20:00:08.714 [http-nio-8080-exec-5] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2021-05-11 20:00:08.732 [http-nio-8080-exec-5] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/BookCollection
[INFO ] 2021-05-11 20:00:08.733 [http-nio-8080-exec-5] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2021-05-11 20:00:08.733 [http-nio-8080-exec-5] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2021-05-11 20:00:09.252 [http-nio-8080-exec-5] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2021-05-11 20:00:10.318 [http-nio-8080-exec-5] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.22
      major : 8
      minor : 0
[DEBUG] 2021-05-11 20:00:10.318 [http-nio-8080-exec-5] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.22 (Revision: d64b664fa93e81296a377de031b8123a67e6def2)
      major : 8
      minor : 0
[DEBUG] 2021-05-11 20:00:10.318 [http-nio-8080-exec-5] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2021-05-11 20:00:10.460 [http-nio-8080-exec-5] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[DEBUG] 2021-05-11 20:00:10.509 [http-nio-8080-exec-5] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2021-05-11 20:00:10.751 [http-nio-8080-exec-5] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2021-05-11 20:00:10.916 [http-nio-8080-exec-5] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2021-05-11 20:00:10.929 [http-nio-8080-exec-5] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7ef38e9b] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@6678f49c]
[DEBUG] 2021-05-11 20:00:11.124 [http-nio-8080-exec-5] AnnotationMetadataSourceProcessorImpl - Encountered a non-categorized annotated class [com.leeannjakel.entity.AuthorResponse]; ignoring
[DEBUG] 2021-05-11 20:00:11.126 [http-nio-8080-exec-5] AnnotationMetadataSourceProcessorImpl - Encountered a non-categorized annotated class [com.leeannjakel.entity.WorksAuthorsItem]; ignoring
[DEBUG] 2021-05-11 20:00:11.128 [http-nio-8080-exec-5] AnnotationMetadataSourceProcessorImpl - Encountered a non-categorized annotated class [com.leeannjakel.entity.Classifications]; ignoring
[DEBUG] 2021-05-11 20:00:11.129 [http-nio-8080-exec-5] AnnotationMetadataSourceProcessorImpl - Encountered a non-categorized annotated class [com.leeannjakel.entity.Created]; ignoring
[DEBUG] 2021-05-11 20:00:11.132 [http-nio-8080-exec-5] AnnotationMetadataSourceProcessorImpl - Encountered a non-categorized annotated class [com.leeannjakel.entity.Identifiers]; ignoring
[DEBUG] 2021-05-11 20:00:11.141 [http-nio-8080-exec-5] AnnotationMetadataSourceProcessorImpl - Encountered a non-categorized annotated class [com.leeannjakel.entity.Info]; ignoring
[DEBUG] 2021-05-11 20:00:11.144 [http-nio-8080-exec-5] AnnotationMetadataSourceProcessorImpl - Encountered a non-categorized annotated class [com.leeannjakel.entity.LanguagesItem]; ignoring
[DEBUG] 2021-05-11 20:00:11.146 [http-nio-8080-exec-5] AnnotationMetadataSourceProcessorImpl - Encountered a non-categorized annotated class [com.leeannjakel.entity.LastModified]; ignoring
[DEBUG] 2021-05-11 20:00:11.151 [http-nio-8080-exec-5] AnnotationMetadataSourceProcessorImpl - Encountered a non-categorized annotated class [com.leeannjakel.entity.Type]; ignoring
[DEBUG] 2021-05-11 20:00:11.154 [http-nio-8080-exec-5] AnnotationMetadataSourceProcessorImpl - Encountered a non-categorized annotated class [com.leeannjakel.entity.WorksItem]; ignoring
[DEBUG] 2021-05-11 20:00:11.224 [http-nio-8080-exec-5] AnnotationBinder - Binding entity from annotated class: com.leeannjakel.entity.Author
[DEBUG] 2021-05-11 20:00:11.361 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2021-05-11 20:00:11.386 [http-nio-8080-exec-5] EntityBinder - Import with entity name Author
[DEBUG] 2021-05-11 20:00:11.399 [http-nio-8080-exec-5] EntityBinder - Bind entity com.leeannjakel.entity.Author on table author
[DEBUG] 2021-05-11 20:00:11.562 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(author), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-11 20:00:11.569 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2021-05-11 20:00:11.573 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.leeannjakel.entity.Author:id]
[DEBUG] 2021-05-11 20:00:11.586 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2021-05-11 20:00:11.591 [http-nio-8080-exec-5] PropertyBinder - Building property id
[DEBUG] 2021-05-11 20:00:11.598 [http-nio-8080-exec-5] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2021-05-11 20:00:11.610 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='author'}
[DEBUG] 2021-05-11 20:00:11.616 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(author), mappingColumn=books, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-11 20:00:11.620 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(author), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-11 20:00:11.643 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(author), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-11 20:00:11.644 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(author), mappingColumn=books_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-11 20:00:11.645 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='books_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2021-05-11 20:00:11.648 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='author'}
[DEBUG] 2021-05-11 20:00:11.649 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='author'}
[DEBUG] 2021-05-11 20:00:11.650 [http-nio-8080-exec-5] CollectionBinder - Collection role: com.leeannjakel.entity.Author.books
[DEBUG] 2021-05-11 20:00:11.654 [http-nio-8080-exec-5] PropertyBinder - Building property books
[DEBUG] 2021-05-11 20:00:11.655 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(author), mappingColumn=name, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-11 20:00:11.655 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property name with lazy=false
[DEBUG] 2021-05-11 20:00:11.660 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.leeannjakel.entity.Author:name]
[DEBUG] 2021-05-11 20:00:11.661 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for name
[DEBUG] 2021-05-11 20:00:11.661 [http-nio-8080-exec-5] PropertyBinder - Building property name
[DEBUG] 2021-05-11 20:00:11.678 [http-nio-8080-exec-5] AnnotationBinder - Binding entity from annotated class: com.leeannjakel.entity.Book
[DEBUG] 2021-05-11 20:00:11.680 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2021-05-11 20:00:11.681 [http-nio-8080-exec-5] EntityBinder - Import with entity name Book
[DEBUG] 2021-05-11 20:00:11.684 [http-nio-8080-exec-5] EntityBinder - Bind entity com.leeannjakel.entity.Book on table book
[DEBUG] 2021-05-11 20:00:11.716 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-11 20:00:11.717 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2021-05-11 20:00:11.717 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.leeannjakel.entity.Book:id]
[DEBUG] 2021-05-11 20:00:11.718 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2021-05-11 20:00:11.718 [http-nio-8080-exec-5] PropertyBinder - Building property id
[DEBUG] 2021-05-11 20:00:11.718 [http-nio-8080-exec-5] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2021-05-11 20:00:11.719 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='author_id', referencedColumn='', mappedBy=''}
[DEBUG] 2021-05-11 20:00:11.719 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=author, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-11 20:00:11.741 [http-nio-8080-exec-5] PropertyBinder - Building property author
[DEBUG] 2021-05-11 20:00:11.742 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='genre_id', referencedColumn='', mappedBy=''}
[DEBUG] 2021-05-11 20:00:11.743 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=genre, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-11 20:00:11.744 [http-nio-8080-exec-5] PropertyBinder - Building property genre
[DEBUG] 2021-05-11 20:00:11.745 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=isbn, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-11 20:00:11.746 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property isbn with lazy=false
[DEBUG] 2021-05-11 20:00:11.746 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.leeannjakel.entity.Book:isbn]
[DEBUG] 2021-05-11 20:00:11.746 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for isbn
[DEBUG] 2021-05-11 20:00:11.746 [http-nio-8080-exec-5] PropertyBinder - Building property isbn
[DEBUG] 2021-05-11 20:00:11.746 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=notes, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-11 20:00:11.746 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property notes with lazy=false
[DEBUG] 2021-05-11 20:00:11.746 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.leeannjakel.entity.Book:notes]
[DEBUG] 2021-05-11 20:00:11.749 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for notes
[DEBUG] 2021-05-11 20:00:11.749 [http-nio-8080-exec-5] PropertyBinder - Building property notes
[DEBUG] 2021-05-11 20:00:11.749 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=title, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-11 20:00:11.752 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property title with lazy=false
[DEBUG] 2021-05-11 20:00:11.752 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.leeannjakel.entity.Book:title]
[DEBUG] 2021-05-11 20:00:11.753 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for title
[DEBUG] 2021-05-11 20:00:11.753 [http-nio-8080-exec-5] PropertyBinder - Building property title
[DEBUG] 2021-05-11 20:00:11.753 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
[DEBUG] 2021-05-11 20:00:11.753 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-11 20:00:11.753 [http-nio-8080-exec-5] PropertyBinder - Building property user
[DEBUG] 2021-05-11 20:00:11.753 [http-nio-8080-exec-5] AnnotationBinder - Binding entity from annotated class: com.leeannjakel.entity.Genre
[DEBUG] 2021-05-11 20:00:11.753 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2021-05-11 20:00:11.754 [http-nio-8080-exec-5] EntityBinder - Import with entity name Genre
[DEBUG] 2021-05-11 20:00:11.754 [http-nio-8080-exec-5] EntityBinder - Bind entity com.leeannjakel.entity.Genre on table genre
[DEBUG] 2021-05-11 20:00:11.755 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(genre), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-11 20:00:11.755 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2021-05-11 20:00:11.755 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.leeannjakel.entity.Genre:id]
[DEBUG] 2021-05-11 20:00:11.755 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2021-05-11 20:00:11.755 [http-nio-8080-exec-5] PropertyBinder - Building property id
[DEBUG] 2021-05-11 20:00:11.755 [http-nio-8080-exec-5] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2021-05-11 20:00:11.755 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='genre'}
[DEBUG] 2021-05-11 20:00:11.755 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(genre), mappingColumn=books, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-11 20:00:11.755 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(genre), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-11 20:00:11.756 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(genre), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-11 20:00:11.772 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(genre), mappingColumn=books_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-11 20:00:11.772 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='books_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2021-05-11 20:00:11.772 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='genre'}
[DEBUG] 2021-05-11 20:00:11.772 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='genre'}
[DEBUG] 2021-05-11 20:00:11.772 [http-nio-8080-exec-5] CollectionBinder - Collection role: com.leeannjakel.entity.Genre.books
[DEBUG] 2021-05-11 20:00:11.772 [http-nio-8080-exec-5] PropertyBinder - Building property books
[DEBUG] 2021-05-11 20:00:11.773 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(genre), mappingColumn=name, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-11 20:00:11.775 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property name with lazy=false
[DEBUG] 2021-05-11 20:00:11.775 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.leeannjakel.entity.Genre:name]
[DEBUG] 2021-05-11 20:00:11.775 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for name
[DEBUG] 2021-05-11 20:00:11.775 [http-nio-8080-exec-5] PropertyBinder - Building property name
[DEBUG] 2021-05-11 20:00:11.775 [http-nio-8080-exec-5] AnnotationBinder - Binding entity from annotated class: com.leeannjakel.entity.Role
[DEBUG] 2021-05-11 20:00:11.775 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2021-05-11 20:00:11.775 [http-nio-8080-exec-5] EntityBinder - Import with entity name Role
[DEBUG] 2021-05-11 20:00:11.776 [http-nio-8080-exec-5] EntityBinder - Bind entity com.leeannjakel.entity.Role on table role
[DEBUG] 2021-05-11 20:00:11.782 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-11 20:00:11.782 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2021-05-11 20:00:11.783 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.leeannjakel.entity.Role:id]
[DEBUG] 2021-05-11 20:00:11.783 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2021-05-11 20:00:11.784 [http-nio-8080-exec-5] PropertyBinder - Building property id
[DEBUG] 2021-05-11 20:00:11.787 [http-nio-8080-exec-5] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2021-05-11 20:00:11.796 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=role_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-11 20:00:11.796 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property roleName with lazy=false
[DEBUG] 2021-05-11 20:00:11.796 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.leeannjakel.entity.Role:roleName]
[DEBUG] 2021-05-11 20:00:11.796 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for roleName
[DEBUG] 2021-05-11 20:00:11.796 [http-nio-8080-exec-5] PropertyBinder - Building property roleName
[DEBUG] 2021-05-11 20:00:11.796 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
[DEBUG] 2021-05-11 20:00:11.800 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-11 20:00:11.801 [http-nio-8080-exec-5] PropertyBinder - Building property user
[DEBUG] 2021-05-11 20:00:11.801 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=user_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-11 20:00:11.801 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property userName with lazy=false
[DEBUG] 2021-05-11 20:00:11.801 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.leeannjakel.entity.Role:userName]
[DEBUG] 2021-05-11 20:00:11.803 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for userName
[DEBUG] 2021-05-11 20:00:11.803 [http-nio-8080-exec-5] PropertyBinder - Building property userName
[DEBUG] 2021-05-11 20:00:11.803 [http-nio-8080-exec-5] AnnotationBinder - Binding entity from annotated class: com.leeannjakel.entity.User
[DEBUG] 2021-05-11 20:00:11.804 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2021-05-11 20:00:11.804 [http-nio-8080-exec-5] EntityBinder - Import with entity name User
[DEBUG] 2021-05-11 20:00:11.804 [http-nio-8080-exec-5] EntityBinder - Bind entity com.leeannjakel.entity.User on table user
[DEBUG] 2021-05-11 20:00:11.811 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-11 20:00:11.811 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2021-05-11 20:00:11.811 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.leeannjakel.entity.User:id]
[DEBUG] 2021-05-11 20:00:11.811 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2021-05-11 20:00:11.811 [http-nio-8080-exec-5] PropertyBinder - Building property id
[DEBUG] 2021-05-11 20:00:11.811 [http-nio-8080-exec-5] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2021-05-11 20:00:11.811 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2021-05-11 20:00:11.819 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=books, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-11 20:00:11.820 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-11 20:00:11.820 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-11 20:00:11.820 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=books_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-11 20:00:11.820 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='books_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2021-05-11 20:00:11.820 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2021-05-11 20:00:11.820 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2021-05-11 20:00:11.820 [http-nio-8080-exec-5] CollectionBinder - Collection role: com.leeannjakel.entity.User.books
[DEBUG] 2021-05-11 20:00:11.828 [http-nio-8080-exec-5] PropertyBinder - Building property books
[DEBUG] 2021-05-11 20:00:11.828 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=email, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-11 20:00:11.828 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[DEBUG] 2021-05-11 20:00:11.828 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.leeannjakel.entity.User:email]
[DEBUG] 2021-05-11 20:00:11.828 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for email
[DEBUG] 2021-05-11 20:00:11.828 [http-nio-8080-exec-5] PropertyBinder - Building property email
[DEBUG] 2021-05-11 20:00:11.828 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-11 20:00:11.828 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
[DEBUG] 2021-05-11 20:00:11.828 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.leeannjakel.entity.User:firstName]
[DEBUG] 2021-05-11 20:00:11.829 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for firstName
[DEBUG] 2021-05-11 20:00:11.829 [http-nio-8080-exec-5] PropertyBinder - Building property firstName
[DEBUG] 2021-05-11 20:00:11.832 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-11 20:00:11.832 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
[DEBUG] 2021-05-11 20:00:11.833 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.leeannjakel.entity.User:lastName]
[DEBUG] 2021-05-11 20:00:11.833 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for lastName
[DEBUG] 2021-05-11 20:00:11.833 [http-nio-8080-exec-5] PropertyBinder - Building property lastName
[DEBUG] 2021-05-11 20:00:11.833 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=password, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-11 20:00:11.833 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property password with lazy=false
[DEBUG] 2021-05-11 20:00:11.833 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.leeannjakel.entity.User:password]
[DEBUG] 2021-05-11 20:00:11.833 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for password
[DEBUG] 2021-05-11 20:00:11.833 [http-nio-8080-exec-5] PropertyBinder - Building property password
[DEBUG] 2021-05-11 20:00:11.836 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2021-05-11 20:00:11.837 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=roles, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-11 20:00:11.841 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-11 20:00:11.841 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-11 20:00:11.841 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=roles_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-11 20:00:11.841 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='roles_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2021-05-11 20:00:11.841 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2021-05-11 20:00:11.841 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2021-05-11 20:00:11.841 [http-nio-8080-exec-5] CollectionBinder - Collection role: com.leeannjakel.entity.User.roles
[DEBUG] 2021-05-11 20:00:11.841 [http-nio-8080-exec-5] PropertyBinder - Building property roles
[DEBUG] 2021-05-11 20:00:11.843 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=user_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-11 20:00:11.843 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property userName with lazy=false
[DEBUG] 2021-05-11 20:00:11.847 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.leeannjakel.entity.User:userName]
[DEBUG] 2021-05-11 20:00:11.847 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for userName
[DEBUG] 2021-05-11 20:00:11.847 [http-nio-8080-exec-5] PropertyBinder - Building property userName
[DEBUG] 2021-05-11 20:00:11.858 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2021-05-11 20:00:11.858 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for name
[DEBUG] 2021-05-11 20:00:11.859 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2021-05-11 20:00:11.859 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for isbn
[DEBUG] 2021-05-11 20:00:11.859 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for notes
[DEBUG] 2021-05-11 20:00:11.859 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for title
[DEBUG] 2021-05-11 20:00:11.859 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2021-05-11 20:00:11.859 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for name
[DEBUG] 2021-05-11 20:00:11.859 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2021-05-11 20:00:11.859 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for roleName
[DEBUG] 2021-05-11 20:00:11.859 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for userName
[DEBUG] 2021-05-11 20:00:11.859 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2021-05-11 20:00:11.859 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for email
[DEBUG] 2021-05-11 20:00:11.859 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for firstName
[DEBUG] 2021-05-11 20:00:11.859 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for lastName
[DEBUG] 2021-05-11 20:00:11.859 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for password
[DEBUG] 2021-05-11 20:00:11.859 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for userName
[DEBUG] 2021-05-11 20:00:11.885 [http-nio-8080-exec-5] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [author]
[DEBUG] 2021-05-11 20:00:11.885 [http-nio-8080-exec-5] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [book]
[DEBUG] 2021-05-11 20:00:11.885 [http-nio-8080-exec-5] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [genre]
[DEBUG] 2021-05-11 20:00:11.885 [http-nio-8080-exec-5] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [role]
[DEBUG] 2021-05-11 20:00:11.885 [http-nio-8080-exec-5] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [user]
[DEBUG] 2021-05-11 20:00:11.885 [http-nio-8080-exec-5] CollectionSecondPass - Second pass for collection: com.leeannjakel.entity.Author.books
[DEBUG] 2021-05-11 20:00:11.895 [http-nio-8080-exec-5] CollectionBinder - Binding a OneToMany: com.leeannjakel.entity.Author.books through a foreign key
[DEBUG] 2021-05-11 20:00:11.899 [http-nio-8080-exec-5] CollectionBinder - Mapping collection: com.leeannjakel.entity.Author.books -> book
[DEBUG] 2021-05-11 20:00:11.904 [http-nio-8080-exec-5] TableBinder - Retrieving property com.leeannjakel.entity.Book.author
[DEBUG] 2021-05-11 20:00:11.909 [http-nio-8080-exec-5] CollectionSecondPass - Mapped collection key: author_id, one-to-many: com.leeannjakel.entity.Book
[DEBUG] 2021-05-11 20:00:11.909 [http-nio-8080-exec-5] CollectionSecondPass - Second pass for collection: com.leeannjakel.entity.Genre.books
[DEBUG] 2021-05-11 20:00:11.909 [http-nio-8080-exec-5] CollectionBinder - Binding a OneToMany: com.leeannjakel.entity.Genre.books through a foreign key
[DEBUG] 2021-05-11 20:00:11.909 [http-nio-8080-exec-5] CollectionBinder - Mapping collection: com.leeannjakel.entity.Genre.books -> book
[DEBUG] 2021-05-11 20:00:11.909 [http-nio-8080-exec-5] TableBinder - Retrieving property com.leeannjakel.entity.Book.genre
[DEBUG] 2021-05-11 20:00:11.911 [http-nio-8080-exec-5] CollectionSecondPass - Mapped collection key: genre_id, one-to-many: com.leeannjakel.entity.Book
[DEBUG] 2021-05-11 20:00:11.911 [http-nio-8080-exec-5] CollectionSecondPass - Second pass for collection: com.leeannjakel.entity.User.books
[DEBUG] 2021-05-11 20:00:11.911 [http-nio-8080-exec-5] CollectionBinder - Binding a OneToMany: com.leeannjakel.entity.User.books through a foreign key
[DEBUG] 2021-05-11 20:00:11.911 [http-nio-8080-exec-5] CollectionBinder - Mapping collection: com.leeannjakel.entity.User.books -> book
[DEBUG] 2021-05-11 20:00:11.912 [http-nio-8080-exec-5] TableBinder - Retrieving property com.leeannjakel.entity.Book.user
[DEBUG] 2021-05-11 20:00:11.912 [http-nio-8080-exec-5] CollectionSecondPass - Mapped collection key: user_id, one-to-many: com.leeannjakel.entity.Book
[DEBUG] 2021-05-11 20:00:11.912 [http-nio-8080-exec-5] CollectionSecondPass - Second pass for collection: com.leeannjakel.entity.User.roles
[DEBUG] 2021-05-11 20:00:11.912 [http-nio-8080-exec-5] CollectionBinder - Binding a OneToMany: com.leeannjakel.entity.User.roles through a foreign key
[DEBUG] 2021-05-11 20:00:11.912 [http-nio-8080-exec-5] CollectionBinder - Mapping collection: com.leeannjakel.entity.User.roles -> role
[DEBUG] 2021-05-11 20:00:11.912 [http-nio-8080-exec-5] TableBinder - Retrieving property com.leeannjakel.entity.Role.user
[DEBUG] 2021-05-11 20:00:11.912 [http-nio-8080-exec-5] CollectionSecondPass - Mapped collection key: user_id, one-to-many: com.leeannjakel.entity.Role
[DEBUG] 2021-05-11 20:00:11.912 [http-nio-8080-exec-5] InFlightMetadataCollectorImpl - Resolving reference to class: com.leeannjakel.entity.Author
[DEBUG] 2021-05-11 20:00:11.931 [http-nio-8080-exec-5] InFlightMetadataCollectorImpl - Resolving reference to class: com.leeannjakel.entity.Genre
[DEBUG] 2021-05-11 20:00:11.935 [http-nio-8080-exec-5] InFlightMetadataCollectorImpl - Resolving reference to class: com.leeannjakel.entity.User
[DEBUG] 2021-05-11 20:00:11.935 [http-nio-8080-exec-5] InFlightMetadataCollectorImpl - Resolving reference to class: com.leeannjakel.entity.User
[DEBUG] 2021-05-11 20:00:11.945 [http-nio-8080-exec-5] InFlightMetadataCollectorImpl - Resolving reference to class: com.leeannjakel.entity.Author
[DEBUG] 2021-05-11 20:00:11.947 [http-nio-8080-exec-5] InFlightMetadataCollectorImpl - Resolving reference to class: com.leeannjakel.entity.Genre
[DEBUG] 2021-05-11 20:00:11.947 [http-nio-8080-exec-5] InFlightMetadataCollectorImpl - Resolving reference to class: com.leeannjakel.entity.User
[DEBUG] 2021-05-11 20:00:11.947 [http-nio-8080-exec-5] InFlightMetadataCollectorImpl - Resolving reference to class: com.leeannjakel.entity.User
[DEBUG] 2021-05-11 20:00:12.179 [http-nio-8080-exec-5] SessionFactoryImpl - Building session factory
[DEBUG] 2021-05-11 20:00:12.184 [http-nio-8080-exec-5] Settings - SessionFactory name : null
[DEBUG] 2021-05-11 20:00:12.184 [http-nio-8080-exec-5] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2021-05-11 20:00:12.184 [http-nio-8080-exec-5] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2021-05-11 20:00:12.185 [http-nio-8080-exec-5] Settings - Statistics: disabled
[DEBUG] 2021-05-11 20:00:12.185 [http-nio-8080-exec-5] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2021-05-11 20:00:12.185 [http-nio-8080-exec-5] Settings - Default entity-mode: pojo
[DEBUG] 2021-05-11 20:00:12.185 [http-nio-8080-exec-5] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2021-05-11 20:00:12.187 [http-nio-8080-exec-5] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2021-05-11 20:00:12.187 [http-nio-8080-exec-5] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2021-05-11 20:00:12.192 [http-nio-8080-exec-5] Settings - Default batch fetch size: -1
[DEBUG] 2021-05-11 20:00:12.194 [http-nio-8080-exec-5] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2021-05-11 20:00:12.194 [http-nio-8080-exec-5] Settings - Default null ordering: NONE
[DEBUG] 2021-05-11 20:00:12.194 [http-nio-8080-exec-5] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2021-05-11 20:00:12.194 [http-nio-8080-exec-5] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2021-05-11 20:00:12.194 [http-nio-8080-exec-5] Settings - multi-tenancy strategy : NONE
[DEBUG] 2021-05-11 20:00:12.194 [http-nio-8080-exec-5] Settings - JTA Track by Thread: enabled
[DEBUG] 2021-05-11 20:00:12.194 [http-nio-8080-exec-5] Settings - Query language substitutions: {}
[DEBUG] 2021-05-11 20:00:12.194 [http-nio-8080-exec-5] Settings - Named query checking : enabled
[DEBUG] 2021-05-11 20:00:12.194 [http-nio-8080-exec-5] Settings - Second-level cache: disabled
[DEBUG] 2021-05-11 20:00:12.195 [http-nio-8080-exec-5] Settings - Second-level query cache: disabled
[DEBUG] 2021-05-11 20:00:12.195 [http-nio-8080-exec-5] Settings - Second-level query cache factory: null
[DEBUG] 2021-05-11 20:00:12.195 [http-nio-8080-exec-5] Settings - Second-level cache region prefix: null
[DEBUG] 2021-05-11 20:00:12.195 [http-nio-8080-exec-5] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2021-05-11 20:00:12.195 [http-nio-8080-exec-5] Settings - Structured second-level cache entries: disabled
[DEBUG] 2021-05-11 20:00:12.196 [http-nio-8080-exec-5] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2021-05-11 20:00:12.196 [http-nio-8080-exec-5] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2021-05-11 20:00:12.196 [http-nio-8080-exec-5] Settings - JDBC batch size: 15
[DEBUG] 2021-05-11 20:00:12.196 [http-nio-8080-exec-5] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2021-05-11 20:00:12.196 [http-nio-8080-exec-5] Settings - Scrollable result sets: enabled
[DEBUG] 2021-05-11 20:00:12.196 [http-nio-8080-exec-5] Settings - Wrap result sets: disabled
[DEBUG] 2021-05-11 20:00:12.196 [http-nio-8080-exec-5] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2021-05-11 20:00:12.196 [http-nio-8080-exec-5] Settings - JDBC result set fetch size: null
[DEBUG] 2021-05-11 20:00:12.196 [http-nio-8080-exec-5] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2021-05-11 20:00:12.198 [http-nio-8080-exec-5] Settings - Generate SQL with comments: disabled
[DEBUG] 2021-05-11 20:00:12.198 [http-nio-8080-exec-5] Settings - JPA compliance - query : 
[DEBUG] 2021-05-11 20:00:12.199 [http-nio-8080-exec-5] Settings - JPA compliance - closed-handling : 
[DEBUG] 2021-05-11 20:00:12.199 [http-nio-8080-exec-5] Settings - JPA compliance - lists : 
[DEBUG] 2021-05-11 20:00:12.199 [http-nio-8080-exec-5] Settings - JPA compliance - transactions : 
[INFO ] 2021-05-11 20:00:12.548 [http-nio-8080-exec-5] beans - HHH10005002: No explicit CDI BeanManager reference was passed to Hibernate, but CDI is available on the Hibernate ClassLoader.
[DEBUG] 2021-05-11 20:00:12.697 [http-nio-8080-exec-5] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2021-05-11 20:00:12.704 [http-nio-8080-exec-5] SessionFactoryImpl - Instantiating session factory with properties: {awt.toolkit=sun.awt.X11.XToolkit, java.specification.version=11, sun.cpu.isalist=, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=UTF-8, hibernate.c3p0.min_size=5, sun.arch.data.model=64, java.vendor.url=https://ubuntu.com/, catalina.useNaming=true, openejb.provider.default=org.apache.tomee, sun.boot.library.path=/usr/lib/jvm/java-11-openjdk-amd64/lib, com.sun.management.jmxremote.ssl=false, sun.java.command=org.apache.catalina.startup.Bootstrap start, jdk.debug=release, java.specification.vendor=Oracle Corporation, java.naming.factory.url.pkgs=org.apache.naming:org.apache.openejb.core.ivm.naming, openejb.embedder.source=ServerListener, java.version.date=2021-04-20, java.home=/usr/lib/jvm/java-11-openjdk-amd64, ignore.endorsed.dirs=, file.separator=/, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, openejb.scan.webapp.container=true, com.sun.management.jmxremote.password.file=/home/student/.cache/JetBrains/IntelliJIdea2020.3/tomcat/10a53701-4112-462e-a101-1df2054f3873/jmxremote.password, package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.naming.,org.apache.tomcat., openejb.deployments.classpath.filter.systemapps=false, jdk.tls.ephemeralDHKeySize=2048, java.util.logging.config.file=/home/student/.cache/JetBrains/IntelliJIdea2020.3/tomcat/10a53701-4112-462e-a101-1df2054f3873/conf/logging.properties, java.protocol.handler.pkgs=org.apache.catalina.webresources, connection.password=student, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, openejb.scan.webapp.container.excludes=, java.runtime.version=11.0.11+9-Ubuntu-0ubuntu2.20.04, user.name=student, org.apache.johnzon.max-string-length=8192, file.encoding=UTF-8, derby.system.home=/home/student/tomcat/bin, org.apache.catalina.security.SecurityListener.UMASK=0027, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.io.tmpdir=/home/student/tomcat/temp, tomcat.util.scan.StandardJarScanFilter.jarsToScan=log4j-taglib*.jar,log4j-web*.jar,log4javascript*.jar,slf4j-taglib*.jar, java.version=11.0.11, com.sun.management.jmxremote.port=1099, tomcat.util.scan.StandardJarScanFilter.jarsToSkip=annotations-api.jar,ant-junit*.jar,ant-launcher.jar,ant.jar,asm-*.jar,aspectj*.jar,bootstrap.jar,catalina-ant.jar,catalina-ha.jar,catalina-jmx-remote.jar,catalina-storeconfig.jar,catalina-tribes.jar,catalina-ws.jar,catalina.jar,cglib-*.jar,cobertura-*.jar,commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,commons-daemon.jar,commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,commons-math*.jar,commons-pool*.jar,dom4j-*.jar,easymock-*.jar,ecj-*.jar,el-api.jar,geronimo-spec-jaxrpc*.jar,h2*.jar,hamcrest-*.jar,hibernate*.jar,httpclient*.jar,icu4j-*.jar,jasper-el.jar,jasper.jar,jaspic-api.jar,jaxb-*.jar,jaxen-*.jar,jdom-*.jar,jetty-*.jar,jmx-tools.jar,jmx.jar,jsp-api.jar,jstl.jar,jta*.jar,junit-*.jar,junit.jar,log4j*.jar,mail*.jar,objenesis-*.jar,oraclepki.jar,oro-*.jar,servlet-api-*.jar,servlet-api.jar,slf4j*.jar,taglibs-standard-spec-*.jar,tagsoup-*.jar,tomcat-api.jar,tomcat-coyote.jar,tomcat-dbcp.jar,tomcat-i18n-*.jar,tomcat-jdbc.jar,tomcat-jni.jar,tomcat-juli-adapters.jar,tomcat-juli.jar,tomcat-util-scan.jar,tomcat-util.jar,tomcat-websocket.jar,tools.jar,websocket-api.jar,wsdl4j*.jar,xercesImpl.jar,xml-apis.jar,xmlParserAPIs-*.jar,xmlParserAPIs.jar,xom-*.jar, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.print.PSPrinterJob, sun.os.patch.level=unknown, connection.driver_class=com.mysql.cj.jdbc.Driver, tomcat.built=May 4 2019 09:17:16 UTC, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor=Ubuntu, tomee.version=7.1.1, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, tomcat.util.buf.StringCache.byte.enabled=true, sun.desktop=gnome, java.class.path=/home/student/tomcat/bin/bootstrap.jar:/home/student/tomcat/bin/tomcat-juli.jar, tomcat.version=8.5.41.0, java.vm.vendor=Ubuntu, openejb.home=/home/student/tomcat, openejb.system.apps=true, user.timezone=America/Chicago, os.name=Linux, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, openejb.base=/home/student/.cache/JetBrains/IntelliJIdea2020.3/tomcat/10a53701-4112-462e-a101-1df2054f3873, com.sun.management.jmxremote=, sun.cpu.endian=little, user.home=/home/student, hibernate.c3p0.max_statements=50, user.language=en, openejb.deployments.classpath=false, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.tomcat., openejb.loader=tomcat-system, server.loader=, com.sun.management.jmxremote.access.file=/home/student/.cache/JetBrains/IntelliJIdea2020.3/tomcat/10a53701-4112-462e-a101-1df2054f3873/jmxremote.access, hibernate.c3p0.max_size=20, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, path.separator=:, org.apache.openejb.core.security.JaccProvider=org.apache.openejb.core.security.jacc.BasicJaccProvider, common.loader="/home/student/tomcat/lib","/home/student/tomcat/lib/*.jar","/home/student/tomcat/lib","/home/student/tomcat/lib/*.jar", hibernate.connection.username=****, os.version=5.4.0-72-generic, openejb.version=7.1.1, org.apache.security.jacc.EJBMethodPermission.methodInterfaces=BusinessLocalHome,BusinessRemoteHome,BusinessRemote,BusinessLocal, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/BookCollection, java.vm.name=OpenJDK 64-Bit Server VM, openejb.scan.webapp.container.includes=.*(geronimo|mp-jwt|failsafe).*, tomee.remote.support=true, java.vendor.url.bug=https://bugs.launchpad.net/ubuntu/+source/openjdk-lts, catalina.home=/home/student/tomcat, user.dir=/home/student/tomcat/bin, bval.in-container=true, os.arch=amd64, openjpa.Log=org.apache.openejb.openjpa.JULOpenJPALogFactory, hibernate.connection.password=****, tomee.serialization.class.blacklist=-, tomee.serialization.class.whitelist=, shared.loader=, catalina.base=/home/student/.cache/JetBrains/IntelliJIdea2020.3/tomcat/10a53701-4112-462e-a101-1df2054f3873, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@2f82bc7a, noBanner=true, java.util.logging.manager=org.apache.juli.ClassLoaderLogManager, org.apache.webbeans.logger.WebBeansLoggerFacade=org.apache.openejb.cdi.logging.ContainerJULLoggerFactory, java.vm.info=mixed mode, sharing, java.vm.version=11.0.11+9-Ubuntu-0ubuntu2.20.04, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.hostname=127.0.0.1, javax.security.jacc.PolicyConfigurationFactory.provider=org.apache.openejb.core.security.JaccProvider$Factory, connection.url=jdbc:mysql://localhost:3306/BookCollection, java.class.version=55.0, authconfigprovider.factory=false}
[DEBUG] 2021-05-11 20:00:12.841 [http-nio-8080-exec-5] ClassLoaderAccessImpl - Not known whether passed class name [com.leeannjakel.entity.Book] is safe
[DEBUG] 2021-05-11 20:00:12.843 [http-nio-8080-exec-5] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.leeannjakel.entity.Book
[DEBUG] 2021-05-11 20:00:12.931 [http-nio-8080-exec-5] ClassLoaderAccessImpl - Not known whether passed class name [com.leeannjakel.entity.User] is safe
[DEBUG] 2021-05-11 20:00:12.937 [http-nio-8080-exec-5] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.leeannjakel.entity.User
[DEBUG] 2021-05-11 20:00:12.943 [http-nio-8080-exec-5] ClassLoaderAccessImpl - Not known whether passed class name [com.leeannjakel.entity.Author] is safe
[DEBUG] 2021-05-11 20:00:12.943 [http-nio-8080-exec-5] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.leeannjakel.entity.Author
[DEBUG] 2021-05-11 20:00:12.955 [http-nio-8080-exec-5] ClassLoaderAccessImpl - Not known whether passed class name [com.leeannjakel.entity.Genre] is safe
[DEBUG] 2021-05-11 20:00:12.955 [http-nio-8080-exec-5] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.leeannjakel.entity.Genre
[DEBUG] 2021-05-11 20:00:12.957 [http-nio-8080-exec-5] ClassLoaderAccessImpl - Not known whether passed class name [com.leeannjakel.entity.Role] is safe
[DEBUG] 2021-05-11 20:00:12.957 [http-nio-8080-exec-5] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.leeannjakel.entity.Role
[DEBUG] 2021-05-11 20:00:12.979 [http-nio-8080-exec-5] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2021-05-11 20:00:12.987 [http-nio-8080-exec-5] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2021-05-11 20:00:12.988 [http-nio-8080-exec-5] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7ef38e9b] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@306c8161]
[DEBUG] 2021-05-11 20:00:13.271 [http-nio-8080-exec-5] ClassLoaderAccessImpl - Not known whether passed class name [com.leeannjakel.entity.Book] is safe
[DEBUG] 2021-05-11 20:00:13.275 [http-nio-8080-exec-5] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.leeannjakel.entity.Book
[DEBUG] 2021-05-11 20:00:13.361 [http-nio-8080-exec-5] ClassLoaderAccessImpl - Not known whether passed class name [com.leeannjakel.entity.Book] is safe
[DEBUG] 2021-05-11 20:00:13.361 [http-nio-8080-exec-5] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.leeannjakel.entity.Book
[DEBUG] 2021-05-11 20:00:14.050 [http-nio-8080-exec-5] ClassLoaderAccessImpl - Not known whether passed class name [com.leeannjakel.entity.User] is safe
[DEBUG] 2021-05-11 20:00:14.050 [http-nio-8080-exec-5] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.leeannjakel.entity.User
[DEBUG] 2021-05-11 20:00:14.059 [http-nio-8080-exec-5] ClassLoaderAccessImpl - Not known whether passed class name [com.leeannjakel.entity.User] is safe
[DEBUG] 2021-05-11 20:00:14.059 [http-nio-8080-exec-5] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.leeannjakel.entity.User
[DEBUG] 2021-05-11 20:00:14.191 [http-nio-8080-exec-5] ClassLoaderAccessImpl - Not known whether passed class name [com.leeannjakel.entity.Author] is safe
[DEBUG] 2021-05-11 20:00:14.191 [http-nio-8080-exec-5] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.leeannjakel.entity.Author
[DEBUG] 2021-05-11 20:00:14.192 [http-nio-8080-exec-5] ClassLoaderAccessImpl - Not known whether passed class name [com.leeannjakel.entity.Author] is safe
[DEBUG] 2021-05-11 20:00:14.192 [http-nio-8080-exec-5] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.leeannjakel.entity.Author
[DEBUG] 2021-05-11 20:00:14.244 [http-nio-8080-exec-5] ClassLoaderAccessImpl - Not known whether passed class name [com.leeannjakel.entity.Genre] is safe
[DEBUG] 2021-05-11 20:00:14.244 [http-nio-8080-exec-5] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.leeannjakel.entity.Genre
[DEBUG] 2021-05-11 20:00:14.251 [http-nio-8080-exec-5] ClassLoaderAccessImpl - Not known whether passed class name [com.leeannjakel.entity.Genre] is safe
[DEBUG] 2021-05-11 20:00:14.252 [http-nio-8080-exec-5] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.leeannjakel.entity.Genre
[DEBUG] 2021-05-11 20:00:14.315 [http-nio-8080-exec-5] ClassLoaderAccessImpl - Not known whether passed class name [com.leeannjakel.entity.Role] is safe
[DEBUG] 2021-05-11 20:00:14.315 [http-nio-8080-exec-5] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.leeannjakel.entity.Role
[DEBUG] 2021-05-11 20:00:14.315 [http-nio-8080-exec-5] ClassLoaderAccessImpl - Not known whether passed class name [com.leeannjakel.entity.Role] is safe
[DEBUG] 2021-05-11 20:00:14.315 [http-nio-8080-exec-5] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.leeannjakel.entity.Role
[DEBUG] 2021-05-11 20:00:14.386 [http-nio-8080-exec-5] AbstractCollectionPersister - Static SQL for collection: com.leeannjakel.entity.Author.books
[DEBUG] 2021-05-11 20:00:14.386 [http-nio-8080-exec-5] AbstractCollectionPersister -  Row insert: update book set author_id=? where id=?
[DEBUG] 2021-05-11 20:00:14.386 [http-nio-8080-exec-5] AbstractCollectionPersister -  Row update: update book set  where id=?
[DEBUG] 2021-05-11 20:00:14.386 [http-nio-8080-exec-5] AbstractCollectionPersister -  Row delete: update book set author_id=null where author_id=? and id=?
[DEBUG] 2021-05-11 20:00:14.387 [http-nio-8080-exec-5] AbstractCollectionPersister -  One-shot delete: update book set author_id=null where author_id=?
[DEBUG] 2021-05-11 20:00:14.387 [http-nio-8080-exec-5] AbstractCollectionPersister - Static SQL for collection: com.leeannjakel.entity.User.books
[DEBUG] 2021-05-11 20:00:14.387 [http-nio-8080-exec-5] AbstractCollectionPersister -  Row insert: update book set user_id=? where id=?
[DEBUG] 2021-05-11 20:00:14.387 [http-nio-8080-exec-5] AbstractCollectionPersister -  Row update: update book set  where id=?
[DEBUG] 2021-05-11 20:00:14.387 [http-nio-8080-exec-5] AbstractCollectionPersister -  Row delete: update book set user_id=null where user_id=? and id=?
[DEBUG] 2021-05-11 20:00:14.387 [http-nio-8080-exec-5] AbstractCollectionPersister -  One-shot delete: update book set user_id=null where user_id=?
[DEBUG] 2021-05-11 20:00:14.388 [http-nio-8080-exec-5] AbstractCollectionPersister - Static SQL for collection: com.leeannjakel.entity.User.roles
[DEBUG] 2021-05-11 20:00:14.388 [http-nio-8080-exec-5] AbstractCollectionPersister -  Row insert: update role set user_id=? where id=?
[DEBUG] 2021-05-11 20:00:14.388 [http-nio-8080-exec-5] AbstractCollectionPersister -  Row update: update role set  where id=?
[DEBUG] 2021-05-11 20:00:14.388 [http-nio-8080-exec-5] AbstractCollectionPersister -  Row delete: update role set user_id=null where user_id=? and id=?
[DEBUG] 2021-05-11 20:00:14.388 [http-nio-8080-exec-5] AbstractCollectionPersister -  One-shot delete: update role set user_id=null where user_id=?
[DEBUG] 2021-05-11 20:00:14.389 [http-nio-8080-exec-5] AbstractCollectionPersister - Static SQL for collection: com.leeannjakel.entity.Genre.books
[DEBUG] 2021-05-11 20:00:14.389 [http-nio-8080-exec-5] AbstractCollectionPersister -  Row insert: update book set genre_id=? where id=?
[DEBUG] 2021-05-11 20:00:14.389 [http-nio-8080-exec-5] AbstractCollectionPersister -  Row update: update book set  where id=?
[DEBUG] 2021-05-11 20:00:14.389 [http-nio-8080-exec-5] AbstractCollectionPersister -  Row delete: update book set genre_id=null where genre_id=? and id=?
[DEBUG] 2021-05-11 20:00:14.389 [http-nio-8080-exec-5] AbstractCollectionPersister -  One-shot delete: update book set genre_id=null where genre_id=?
[DEBUG] 2021-05-11 20:00:14.401 [http-nio-8080-exec-5] AbstractEntityPersister - Static SQL for entity: com.leeannjakel.entity.Book
[DEBUG] 2021-05-11 20:00:14.401 [http-nio-8080-exec-5] AbstractEntityPersister -  Version select: select id from book where id =?
[DEBUG] 2021-05-11 20:00:14.402 [http-nio-8080-exec-5] AbstractEntityPersister -  Snapshot select: select book_.id, book_.author_id as author_i5_1_, book_.genre_id as genre_id6_1_, book_.isbn as isbn2_1_, book_.notes as notes3_1_, book_.title as title4_1_, book_.user_id as user_id7_1_ from book book_ where book_.id=?
[DEBUG] 2021-05-11 20:00:14.402 [http-nio-8080-exec-5] AbstractEntityPersister -  Insert 0: insert into book (author_id, genre_id, isbn, notes, title, user_id, id) values (?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2021-05-11 20:00:14.402 [http-nio-8080-exec-5] AbstractEntityPersister -  Update 0: update book set author_id=?, genre_id=?, isbn=?, notes=?, title=?, user_id=? where id=?
[DEBUG] 2021-05-11 20:00:14.402 [http-nio-8080-exec-5] AbstractEntityPersister -  Delete 0: delete from book where id=?
[DEBUG] 2021-05-11 20:00:14.402 [http-nio-8080-exec-5] AbstractEntityPersister -  Identity insert: insert into book (author_id, genre_id, isbn, notes, title, user_id) values (?, ?, ?, ?, ?, ?)
[DEBUG] 2021-05-11 20:00:14.551 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@38d4ef0c]
[DEBUG] 2021-05-11 20:00:14.563 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : author
[DEBUG] 2021-05-11 20:00:14.594 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6df00dcd]
[DEBUG] 2021-05-11 20:00:14.596 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : author.books
[DEBUG] 2021-05-11 20:00:14.596 [http-nio-8080-exec-5] MetamodelGraphWalker - Property path deemed to be circular : author.books
[DEBUG] 2021-05-11 20:00:14.603 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : author.name
[DEBUG] 2021-05-11 20:00:14.603 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : genre
[DEBUG] 2021-05-11 20:00:14.604 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@31e0bb7c]
[DEBUG] 2021-05-11 20:00:14.604 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : genre.books
[DEBUG] 2021-05-11 20:00:14.604 [http-nio-8080-exec-5] MetamodelGraphWalker - Property path deemed to be circular : genre.books
[DEBUG] 2021-05-11 20:00:14.604 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : genre.name
[DEBUG] 2021-05-11 20:00:14.606 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : isbn
[DEBUG] 2021-05-11 20:00:14.606 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : notes
[DEBUG] 2021-05-11 20:00:14.607 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2021-05-11 20:00:14.607 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2021-05-11 20:00:14.607 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@17c38a10]
[DEBUG] 2021-05-11 20:00:14.607 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.books
[DEBUG] 2021-05-11 20:00:14.607 [http-nio-8080-exec-5] MetamodelGraphWalker - Property path deemed to be circular : user.books
[DEBUG] 2021-05-11 20:00:14.607 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2021-05-11 20:00:14.607 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2021-05-11 20:00:14.607 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2021-05-11 20:00:14.607 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2021-05-11 20:00:14.607 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2021-05-11 20:00:14.609 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1580190c]
[DEBUG] 2021-05-11 20:00:14.614 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1f011162]
[DEBUG] 2021-05-11 20:00:14.616 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.roles.roleName
[DEBUG] 2021-05-11 20:00:14.616 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2021-05-11 20:00:14.617 [http-nio-8080-exec-5] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2021-05-11 20:00:14.617 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.roles.userName
[DEBUG] 2021-05-11 20:00:14.623 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.userName
[DEBUG] 2021-05-11 20:00:14.623 [http-nio-8080-exec-5] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-05-11 20:00:14.679 [http-nio-8080-exec-5] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-05-11 20:00:14.719 [http-nio-8080-exec-5] LoadPlanTreePrinter - LoadPlan(entity=com.leeannjakel.entity.Book)
    - Returns
       - EntityReturnImpl(entity=com.leeannjakel.entity.Book, querySpaceUid=<gen:0>, path=com.leeannjakel.entity.Book)
          - EntityAttributeFetchImpl(entity=com.leeannjakel.entity.Author, querySpaceUid=<gen:1>, path=com.leeannjakel.entity.Book.author)
          - EntityAttributeFetchImpl(entity=com.leeannjakel.entity.Genre, querySpaceUid=<gen:2>, path=com.leeannjakel.entity.Book.genre)
          - EntityAttributeFetchImpl(entity=com.leeannjakel.entity.User, querySpaceUid=<gen:3>, path=com.leeannjakel.entity.Book.user)
             - CollectionAttributeFetchImpl(collection=com.leeannjakel.entity.User.roles, querySpaceUid=<gen:4>, path=com.leeannjakel.entity.Book.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.leeannjakel.entity.Role, querySpaceUid=<gen:5>, path=com.leeannjakel.entity.Book.user.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.leeannjakel.entity.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(author)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.leeannjakel.entity.Author)
                - SQL table alias mapping - author1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}
          - JOIN (JoinDefinedByMetadata(genre)) : <gen:0> -> <gen:2>
             - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.leeannjakel.entity.Genre)
                - SQL table alias mapping - genre2_
                - alias suffix - 2_
                - suffixed key columns - {id1_2_2_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=com.leeannjakel.entity.User)
                - SQL table alias mapping - user3_
                - alias suffix - 3_
                - suffixed key columns - {id1_4_3_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:3> -> <gen:4>
                   - CollectionQuerySpaceImpl(uid=<gen:4>, collection=com.leeannjakel.entity.User.roles)
                      - SQL table alias mapping - roles4_
                      - alias suffix - 4_
                      - suffixed key columns - {user_id4_3_4_}
                      - entity-element alias suffix - 5_
                      - 5_entity-element suffixed key columns - id1_3_5_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:4> -> <gen:5>
                         - EntityQuerySpaceImpl(uid=<gen:5>, entity=com.leeannjakel.entity.Role)
                            - SQL table alias mapping - roles4_
                            - alias suffix - 5_
                            - suffixed key columns - {id1_3_5_}

[DEBUG] 2021-05-11 20:00:14.729 [http-nio-8080-exec-5] EntityLoader - Static select for entity com.leeannjakel.entity.Book [NONE]: select book0_.id as id1_1_0_, book0_.author_id as author_i5_1_0_, book0_.genre_id as genre_id6_1_0_, book0_.isbn as isbn2_1_0_, book0_.notes as notes3_1_0_, book0_.title as title4_1_0_, book0_.user_id as user_id7_1_0_, author1_.id as id1_0_1_, author1_.name as name2_0_1_, genre2_.id as id1_2_2_, genre2_.name as name2_2_2_, user3_.id as id1_4_3_, user3_.email as email2_4_3_, user3_.first_name as first_na3_4_3_, user3_.last_name as last_nam4_4_3_, user3_.password as password5_4_3_, user3_.user_name as user_nam6_4_3_, roles4_.user_id as user_id4_3_4_, roles4_.id as id1_3_4_, roles4_.id as id1_3_5_, roles4_.role_name as role_nam2_3_5_, roles4_.user_id as user_id4_3_5_, roles4_.user_name as user_nam3_3_5_ from book book0_ left outer join author author1_ on book0_.author_id=author1_.id left outer join genre genre2_ on book0_.genre_id=genre2_.id left outer join user user3_ on book0_.user_id=user3_.id left outer join role roles4_ on user3_.id=roles4_.user_id where book0_.id=?
[DEBUG] 2021-05-11 20:00:14.731 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2007d8a4]
[DEBUG] 2021-05-11 20:00:14.732 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : author
[DEBUG] 2021-05-11 20:00:14.733 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@632f0360]
[DEBUG] 2021-05-11 20:00:14.733 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : author.books
[DEBUG] 2021-05-11 20:00:14.734 [http-nio-8080-exec-5] MetamodelGraphWalker - Property path deemed to be circular : author.books
[DEBUG] 2021-05-11 20:00:14.734 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : author.name
[DEBUG] 2021-05-11 20:00:14.734 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : genre
[DEBUG] 2021-05-11 20:00:14.734 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@32aaebd2]
[DEBUG] 2021-05-11 20:00:14.734 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : genre.books
[DEBUG] 2021-05-11 20:00:14.734 [http-nio-8080-exec-5] MetamodelGraphWalker - Property path deemed to be circular : genre.books
[DEBUG] 2021-05-11 20:00:14.734 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : genre.name
[DEBUG] 2021-05-11 20:00:14.734 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : isbn
[DEBUG] 2021-05-11 20:00:14.734 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : notes
[DEBUG] 2021-05-11 20:00:14.734 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2021-05-11 20:00:14.734 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2021-05-11 20:00:14.734 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@321aa99b]
[DEBUG] 2021-05-11 20:00:14.734 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.books
[DEBUG] 2021-05-11 20:00:14.734 [http-nio-8080-exec-5] MetamodelGraphWalker - Property path deemed to be circular : user.books
[DEBUG] 2021-05-11 20:00:14.735 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2021-05-11 20:00:14.735 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2021-05-11 20:00:14.735 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2021-05-11 20:00:14.735 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2021-05-11 20:00:14.735 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2021-05-11 20:00:14.735 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4dc737af]
[DEBUG] 2021-05-11 20:00:14.735 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@48a9aea2]
[DEBUG] 2021-05-11 20:00:14.735 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.roles.roleName
[DEBUG] 2021-05-11 20:00:14.735 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2021-05-11 20:00:14.735 [http-nio-8080-exec-5] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2021-05-11 20:00:14.735 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.roles.userName
[DEBUG] 2021-05-11 20:00:14.735 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.userName
[DEBUG] 2021-05-11 20:00:14.735 [http-nio-8080-exec-5] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-05-11 20:00:14.735 [http-nio-8080-exec-5] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-05-11 20:00:14.747 [http-nio-8080-exec-5] LoadPlanTreePrinter - LoadPlan(entity=com.leeannjakel.entity.Book)
    - Returns
       - EntityReturnImpl(entity=com.leeannjakel.entity.Book, querySpaceUid=<gen:0>, path=com.leeannjakel.entity.Book)
          - EntityAttributeFetchImpl(entity=com.leeannjakel.entity.Author, querySpaceUid=<gen:1>, path=com.leeannjakel.entity.Book.author)
          - EntityAttributeFetchImpl(entity=com.leeannjakel.entity.Genre, querySpaceUid=<gen:2>, path=com.leeannjakel.entity.Book.genre)
          - EntityAttributeFetchImpl(entity=com.leeannjakel.entity.User, querySpaceUid=<gen:3>, path=com.leeannjakel.entity.Book.user)
             - CollectionAttributeFetchImpl(collection=com.leeannjakel.entity.User.roles, querySpaceUid=<gen:4>, path=com.leeannjakel.entity.Book.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.leeannjakel.entity.Role, querySpaceUid=<gen:5>, path=com.leeannjakel.entity.Book.user.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.leeannjakel.entity.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(author)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.leeannjakel.entity.Author)
                - SQL table alias mapping - author1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}
          - JOIN (JoinDefinedByMetadata(genre)) : <gen:0> -> <gen:2>
             - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.leeannjakel.entity.Genre)
                - SQL table alias mapping - genre2_
                - alias suffix - 2_
                - suffixed key columns - {id1_2_2_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=com.leeannjakel.entity.User)
                - SQL table alias mapping - user3_
                - alias suffix - 3_
                - suffixed key columns - {id1_4_3_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:3> -> <gen:4>
                   - CollectionQuerySpaceImpl(uid=<gen:4>, collection=com.leeannjakel.entity.User.roles)
                      - SQL table alias mapping - roles4_
                      - alias suffix - 4_
                      - suffixed key columns - {user_id4_3_4_}
                      - entity-element alias suffix - 5_
                      - 5_entity-element suffixed key columns - id1_3_5_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:4> -> <gen:5>
                         - EntityQuerySpaceImpl(uid=<gen:5>, entity=com.leeannjakel.entity.Role)
                            - SQL table alias mapping - roles4_
                            - alias suffix - 5_
                            - suffixed key columns - {id1_3_5_}

[DEBUG] 2021-05-11 20:00:14.747 [http-nio-8080-exec-5] EntityLoader - Static select for entity com.leeannjakel.entity.Book [READ]: select book0_.id as id1_1_0_, book0_.author_id as author_i5_1_0_, book0_.genre_id as genre_id6_1_0_, book0_.isbn as isbn2_1_0_, book0_.notes as notes3_1_0_, book0_.title as title4_1_0_, book0_.user_id as user_id7_1_0_, author1_.id as id1_0_1_, author1_.name as name2_0_1_, genre2_.id as id1_2_2_, genre2_.name as name2_2_2_, user3_.id as id1_4_3_, user3_.email as email2_4_3_, user3_.first_name as first_na3_4_3_, user3_.last_name as last_nam4_4_3_, user3_.password as password5_4_3_, user3_.user_name as user_nam6_4_3_, roles4_.user_id as user_id4_3_4_, roles4_.id as id1_3_4_, roles4_.id as id1_3_5_, roles4_.role_name as role_nam2_3_5_, roles4_.user_id as user_id4_3_5_, roles4_.user_name as user_nam3_3_5_ from book book0_ left outer join author author1_ on book0_.author_id=author1_.id left outer join genre genre2_ on book0_.genre_id=genre2_.id left outer join user user3_ on book0_.user_id=user3_.id left outer join role roles4_ on user3_.id=roles4_.user_id where book0_.id=?
[DEBUG] 2021-05-11 20:00:14.792 [http-nio-8080-exec-5] Loader - Static select for action ACTION_MERGE on entity com.leeannjakel.entity.Book: select book0_.id as id1_1_0_, book0_.author_id as author_i5_1_0_, book0_.genre_id as genre_id6_1_0_, book0_.isbn as isbn2_1_0_, book0_.notes as notes3_1_0_, book0_.title as title4_1_0_, book0_.user_id as user_id7_1_0_ from book book0_ where book0_.id=?
[DEBUG] 2021-05-11 20:00:14.793 [http-nio-8080-exec-5] Loader - Static select for action ACTION_REFRESH on entity com.leeannjakel.entity.Book: select book0_.id as id1_1_0_, book0_.author_id as author_i5_1_0_, book0_.genre_id as genre_id6_1_0_, book0_.isbn as isbn2_1_0_, book0_.notes as notes3_1_0_, book0_.title as title4_1_0_, book0_.user_id as user_id7_1_0_ from book book0_ where book0_.id=?
[DEBUG] 2021-05-11 20:00:14.793 [http-nio-8080-exec-5] AbstractEntityPersister - Static SQL for entity: com.leeannjakel.entity.User
[DEBUG] 2021-05-11 20:00:14.793 [http-nio-8080-exec-5] AbstractEntityPersister -  Version select: select id from user where id =?
[DEBUG] 2021-05-11 20:00:14.793 [http-nio-8080-exec-5] AbstractEntityPersister -  Snapshot select: select user_.id, user_.email as email2_4_, user_.first_name as first_na3_4_, user_.last_name as last_nam4_4_, user_.password as password5_4_, user_.user_name as user_nam6_4_ from user user_ where user_.id=?
[DEBUG] 2021-05-11 20:00:14.793 [http-nio-8080-exec-5] AbstractEntityPersister -  Insert 0: insert into user (email, first_name, last_name, password, user_name, id) values (?, ?, ?, ?, ?, ?)
[DEBUG] 2021-05-11 20:00:14.793 [http-nio-8080-exec-5] AbstractEntityPersister -  Update 0: update user set email=?, first_name=?, last_name=?, password=?, user_name=? where id=?
[DEBUG] 2021-05-11 20:00:14.793 [http-nio-8080-exec-5] AbstractEntityPersister -  Delete 0: delete from user where id=?
[DEBUG] 2021-05-11 20:00:14.793 [http-nio-8080-exec-5] AbstractEntityPersister -  Identity insert: insert into user (email, first_name, last_name, password, user_name) values (?, ?, ?, ?, ?)
[DEBUG] 2021-05-11 20:00:14.794 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5e4a12c8]
[DEBUG] 2021-05-11 20:00:14.795 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : books
[DEBUG] 2021-05-11 20:00:14.795 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@36532ba5]
[DEBUG] 2021-05-11 20:00:14.795 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@301cdf75]
[DEBUG] 2021-05-11 20:00:14.797 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2021-05-11 20:00:14.797 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2021-05-11 20:00:14.797 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2021-05-11 20:00:14.797 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2021-05-11 20:00:14.797 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : roles
[DEBUG] 2021-05-11 20:00:14.798 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3ece47ec]
[DEBUG] 2021-05-11 20:00:14.798 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@34dafa00]
[DEBUG] 2021-05-11 20:00:14.798 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : roles.roleName
[DEBUG] 2021-05-11 20:00:14.798 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : roles.user
[DEBUG] 2021-05-11 20:00:14.798 [http-nio-8080-exec-5] MetamodelGraphWalker - Property path deemed to be circular : roles.user
[DEBUG] 2021-05-11 20:00:14.798 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : roles.userName
[DEBUG] 2021-05-11 20:00:14.798 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : userName
[DEBUG] 2021-05-11 20:00:14.798 [http-nio-8080-exec-5] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-05-11 20:00:14.800 [http-nio-8080-exec-5] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-05-11 20:00:14.801 [http-nio-8080-exec-5] LoadPlanTreePrinter - LoadPlan(entity=com.leeannjakel.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.leeannjakel.entity.User, querySpaceUid=<gen:0>, path=com.leeannjakel.entity.User)
          - CollectionAttributeFetchImpl(collection=com.leeannjakel.entity.User.books, querySpaceUid=<gen:1>, path=com.leeannjakel.entity.User.books)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.leeannjakel.entity.Book, querySpaceUid=<gen:2>, path=com.leeannjakel.entity.User.books.<elements>)
          - CollectionAttributeFetchImpl(collection=com.leeannjakel.entity.User.roles, querySpaceUid=<gen:3>, path=com.leeannjakel.entity.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.leeannjakel.entity.Role, querySpaceUid=<gen:4>, path=com.leeannjakel.entity.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.leeannjakel.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:3>
             - CollectionQuerySpaceImpl(uid=<gen:3>, collection=com.leeannjakel.entity.User.roles)
                - SQL table alias mapping - roles1_
                - alias suffix - 1_
                - suffixed key columns - {user_id4_3_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_3_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:3> -> <gen:4>
                   - EntityQuerySpaceImpl(uid=<gen:4>, entity=com.leeannjakel.entity.Role)
                      - SQL table alias mapping - roles1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_3_2_}

[DEBUG] 2021-05-11 20:00:14.801 [http-nio-8080-exec-5] EntityLoader - Static select for entity com.leeannjakel.entity.User [NONE]: select user0_.id as id1_4_0_, user0_.email as email2_4_0_, user0_.first_name as first_na3_4_0_, user0_.last_name as last_nam4_4_0_, user0_.password as password5_4_0_, user0_.user_name as user_nam6_4_0_, roles1_.user_id as user_id4_3_1_, roles1_.id as id1_3_1_, roles1_.id as id1_3_2_, roles1_.role_name as role_nam2_3_2_, roles1_.user_id as user_id4_3_2_, roles1_.user_name as user_nam3_3_2_ from user user0_ left outer join role roles1_ on user0_.id=roles1_.user_id where user0_.id=?
[DEBUG] 2021-05-11 20:00:14.801 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1f7ad22]
[DEBUG] 2021-05-11 20:00:14.801 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : books
[DEBUG] 2021-05-11 20:00:14.801 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@26282a81]
[DEBUG] 2021-05-11 20:00:14.801 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@386e84e6]
[DEBUG] 2021-05-11 20:00:14.801 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2021-05-11 20:00:14.801 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2021-05-11 20:00:14.801 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2021-05-11 20:00:14.801 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2021-05-11 20:00:14.801 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : roles
[DEBUG] 2021-05-11 20:00:14.801 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4cca074]
[DEBUG] 2021-05-11 20:00:14.801 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@142d2c76]
[DEBUG] 2021-05-11 20:00:14.802 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : roles.roleName
[DEBUG] 2021-05-11 20:00:14.802 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : roles.user
[DEBUG] 2021-05-11 20:00:14.802 [http-nio-8080-exec-5] MetamodelGraphWalker - Property path deemed to be circular : roles.user
[DEBUG] 2021-05-11 20:00:14.802 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : roles.userName
[DEBUG] 2021-05-11 20:00:14.802 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : userName
[DEBUG] 2021-05-11 20:00:14.802 [http-nio-8080-exec-5] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-05-11 20:00:14.812 [http-nio-8080-exec-5] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-05-11 20:00:14.816 [http-nio-8080-exec-5] LoadPlanTreePrinter - LoadPlan(entity=com.leeannjakel.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.leeannjakel.entity.User, querySpaceUid=<gen:0>, path=com.leeannjakel.entity.User)
          - CollectionAttributeFetchImpl(collection=com.leeannjakel.entity.User.books, querySpaceUid=<gen:1>, path=com.leeannjakel.entity.User.books)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.leeannjakel.entity.Book, querySpaceUid=<gen:2>, path=com.leeannjakel.entity.User.books.<elements>)
          - CollectionAttributeFetchImpl(collection=com.leeannjakel.entity.User.roles, querySpaceUid=<gen:3>, path=com.leeannjakel.entity.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.leeannjakel.entity.Role, querySpaceUid=<gen:4>, path=com.leeannjakel.entity.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.leeannjakel.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:3>
             - CollectionQuerySpaceImpl(uid=<gen:3>, collection=com.leeannjakel.entity.User.roles)
                - SQL table alias mapping - roles1_
                - alias suffix - 1_
                - suffixed key columns - {user_id4_3_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_3_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:3> -> <gen:4>
                   - EntityQuerySpaceImpl(uid=<gen:4>, entity=com.leeannjakel.entity.Role)
                      - SQL table alias mapping - roles1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_3_2_}

[DEBUG] 2021-05-11 20:00:14.817 [http-nio-8080-exec-5] EntityLoader - Static select for entity com.leeannjakel.entity.User [READ]: select user0_.id as id1_4_0_, user0_.email as email2_4_0_, user0_.first_name as first_na3_4_0_, user0_.last_name as last_nam4_4_0_, user0_.password as password5_4_0_, user0_.user_name as user_nam6_4_0_, roles1_.user_id as user_id4_3_1_, roles1_.id as id1_3_1_, roles1_.id as id1_3_2_, roles1_.role_name as role_nam2_3_2_, roles1_.user_id as user_id4_3_2_, roles1_.user_name as user_nam3_3_2_ from user user0_ left outer join role roles1_ on user0_.id=roles1_.user_id where user0_.id=?
[DEBUG] 2021-05-11 20:00:14.819 [http-nio-8080-exec-5] Loader - Static select for action ACTION_MERGE on entity com.leeannjakel.entity.User: select user0_.id as id1_4_1_, user0_.email as email2_4_1_, user0_.first_name as first_na3_4_1_, user0_.last_name as last_nam4_4_1_, user0_.password as password5_4_1_, user0_.user_name as user_nam6_4_1_, books1_.user_id as user_id7_1_3_, books1_.id as id1_1_3_, books1_.id as id1_1_0_, books1_.author_id as author_i5_1_0_, books1_.genre_id as genre_id6_1_0_, books1_.isbn as isbn2_1_0_, books1_.notes as notes3_1_0_, books1_.title as title4_1_0_, books1_.user_id as user_id7_1_0_ from user user0_ left outer join book books1_ on user0_.id=books1_.user_id where user0_.id=?
[DEBUG] 2021-05-11 20:00:14.819 [http-nio-8080-exec-5] Loader - Static select for action ACTION_REFRESH on entity com.leeannjakel.entity.User: select user0_.id as id1_4_1_, user0_.email as email2_4_1_, user0_.first_name as first_na3_4_1_, user0_.last_name as last_nam4_4_1_, user0_.password as password5_4_1_, user0_.user_name as user_nam6_4_1_, books1_.user_id as user_id7_1_3_, books1_.id as id1_1_3_, books1_.id as id1_1_0_, books1_.author_id as author_i5_1_0_, books1_.genre_id as genre_id6_1_0_, books1_.isbn as isbn2_1_0_, books1_.notes as notes3_1_0_, books1_.title as title4_1_0_, books1_.user_id as user_id7_1_0_ from user user0_ left outer join book books1_ on user0_.id=books1_.user_id where user0_.id=?
[DEBUG] 2021-05-11 20:00:14.823 [http-nio-8080-exec-5] AbstractEntityPersister - Static SQL for entity: com.leeannjakel.entity.Author
[DEBUG] 2021-05-11 20:00:14.823 [http-nio-8080-exec-5] AbstractEntityPersister -  Version select: select id from author where id =?
[DEBUG] 2021-05-11 20:00:14.823 [http-nio-8080-exec-5] AbstractEntityPersister -  Snapshot select: select author_.id, author_.name as name2_0_ from author author_ where author_.id=?
[DEBUG] 2021-05-11 20:00:14.823 [http-nio-8080-exec-5] AbstractEntityPersister -  Insert 0: insert into author (name, id) values (?, ?)
[DEBUG] 2021-05-11 20:00:14.823 [http-nio-8080-exec-5] AbstractEntityPersister -  Update 0: update author set name=? where id=?
[DEBUG] 2021-05-11 20:00:14.823 [http-nio-8080-exec-5] AbstractEntityPersister -  Delete 0: delete from author where id=?
[DEBUG] 2021-05-11 20:00:14.823 [http-nio-8080-exec-5] AbstractEntityPersister -  Identity insert: insert into author (name) values (?)
[DEBUG] 2021-05-11 20:00:14.823 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@405145a6]
[DEBUG] 2021-05-11 20:00:14.823 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : books
[DEBUG] 2021-05-11 20:00:14.823 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2348b800]
[DEBUG] 2021-05-11 20:00:14.823 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1637e471]
[DEBUG] 2021-05-11 20:00:14.823 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : books.author
[DEBUG] 2021-05-11 20:00:14.823 [http-nio-8080-exec-5] MetamodelGraphWalker - Property path deemed to be circular : books.author
[DEBUG] 2021-05-11 20:00:14.824 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : books.genre
[DEBUG] 2021-05-11 20:00:14.825 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@75a228e8]
[DEBUG] 2021-05-11 20:00:14.825 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : books.genre.books
[DEBUG] 2021-05-11 20:00:14.825 [http-nio-8080-exec-5] MetamodelGraphWalker - Property path deemed to be circular : books.genre.books
[DEBUG] 2021-05-11 20:00:14.825 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : books.genre.name
[DEBUG] 2021-05-11 20:00:14.825 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : books.isbn
[DEBUG] 2021-05-11 20:00:14.825 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : books.notes
[DEBUG] 2021-05-11 20:00:14.826 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : books.title
[DEBUG] 2021-05-11 20:00:14.826 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : books.user
[DEBUG] 2021-05-11 20:00:14.826 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@fb6f069]
[DEBUG] 2021-05-11 20:00:14.826 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : books.user.books
[DEBUG] 2021-05-11 20:00:14.826 [http-nio-8080-exec-5] MetamodelGraphWalker - Property path deemed to be circular : books.user.books
[DEBUG] 2021-05-11 20:00:14.826 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : books.user.email
[DEBUG] 2021-05-11 20:00:14.826 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : books.user.firstName
[DEBUG] 2021-05-11 20:00:14.826 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : books.user.lastName
[DEBUG] 2021-05-11 20:00:14.826 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : books.user.password
[DEBUG] 2021-05-11 20:00:14.826 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : books.user.roles
[DEBUG] 2021-05-11 20:00:14.827 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1859bcef]
[DEBUG] 2021-05-11 20:00:14.827 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3e9294f3]
[DEBUG] 2021-05-11 20:00:14.827 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : books.user.userName
[DEBUG] 2021-05-11 20:00:14.827 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2021-05-11 20:00:14.828 [http-nio-8080-exec-5] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-05-11 20:00:14.829 [http-nio-8080-exec-5] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-05-11 20:00:14.833 [http-nio-8080-exec-5] LoadPlanTreePrinter - LoadPlan(entity=com.leeannjakel.entity.Author)
    - Returns
       - EntityReturnImpl(entity=com.leeannjakel.entity.Author, querySpaceUid=<gen:0>, path=com.leeannjakel.entity.Author)
          - CollectionAttributeFetchImpl(collection=com.leeannjakel.entity.Author.books, querySpaceUid=<gen:1>, path=com.leeannjakel.entity.Author.books)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.leeannjakel.entity.Book, querySpaceUid=<gen:2>, path=com.leeannjakel.entity.Author.books.<elements>)
                - EntityAttributeFetchImpl(entity=com.leeannjakel.entity.Genre, querySpaceUid=<gen:3>, path=com.leeannjakel.entity.Author.books.<elements>.genre)
                - EntityAttributeFetchImpl(entity=com.leeannjakel.entity.User, querySpaceUid=<gen:4>, path=com.leeannjakel.entity.Author.books.<elements>.user)
                   - CollectionAttributeFetchImpl(collection=com.leeannjakel.entity.User.roles, querySpaceUid=<gen:5>, path=com.leeannjakel.entity.Author.books.<elements>.user.roles)
                      - (collection element) CollectionFetchableElementEntityGraph(entity=com.leeannjakel.entity.Role, querySpaceUid=<gen:6>, path=com.leeannjakel.entity.Author.books.<elements>.user.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.leeannjakel.entity.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(books)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=com.leeannjakel.entity.Author.books)
                - SQL table alias mapping - books1_
                - alias suffix - 1_
                - suffixed key columns - {author_i5_1_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_1_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.leeannjakel.entity.Book)
                      - SQL table alias mapping - books1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_1_2_}
                      - JOIN (JoinDefinedByMetadata(genre)) : <gen:2> -> <gen:3>
                         - EntityQuerySpaceImpl(uid=<gen:3>, entity=com.leeannjakel.entity.Genre)
                            - SQL table alias mapping - genre2_
                            - alias suffix - 3_
                            - suffixed key columns - {id1_2_3_}
                      - JOIN (JoinDefinedByMetadata(user)) : <gen:2> -> <gen:4>
                         - EntityQuerySpaceImpl(uid=<gen:4>, entity=com.leeannjakel.entity.User)
                            - SQL table alias mapping - user3_
                            - alias suffix - 4_
                            - suffixed key columns - {id1_4_4_}

[DEBUG] 2021-05-11 20:00:14.833 [http-nio-8080-exec-5] EntityLoader - Static select for entity com.leeannjakel.entity.Author [NONE]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, books1_.author_id as author_i5_1_1_, books1_.id as id1_1_1_, books1_.id as id1_1_2_, books1_.author_id as author_i5_1_2_, books1_.genre_id as genre_id6_1_2_, books1_.isbn as isbn2_1_2_, books1_.notes as notes3_1_2_, books1_.title as title4_1_2_, books1_.user_id as user_id7_1_2_, genre2_.id as id1_2_3_, genre2_.name as name2_2_3_, user3_.id as id1_4_4_, user3_.email as email2_4_4_, user3_.first_name as first_na3_4_4_, user3_.last_name as last_nam4_4_4_, user3_.password as password5_4_4_, user3_.user_name as user_nam6_4_4_ from author author0_ left outer join book books1_ on author0_.id=books1_.author_id left outer join genre genre2_ on books1_.genre_id=genre2_.id left outer join user user3_ on books1_.user_id=user3_.id where author0_.id=?
[DEBUG] 2021-05-11 20:00:14.833 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@61f1ef0]
[DEBUG] 2021-05-11 20:00:14.833 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : books
[DEBUG] 2021-05-11 20:00:14.833 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6e664213]
[DEBUG] 2021-05-11 20:00:14.833 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@44f96620]
[DEBUG] 2021-05-11 20:00:14.833 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : books.author
[DEBUG] 2021-05-11 20:00:14.833 [http-nio-8080-exec-5] MetamodelGraphWalker - Property path deemed to be circular : books.author
[DEBUG] 2021-05-11 20:00:14.833 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : books.genre
[DEBUG] 2021-05-11 20:00:14.833 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@34e03e72]
[DEBUG] 2021-05-11 20:00:14.834 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : books.genre.books
[DEBUG] 2021-05-11 20:00:14.843 [http-nio-8080-exec-5] MetamodelGraphWalker - Property path deemed to be circular : books.genre.books
[DEBUG] 2021-05-11 20:00:14.843 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : books.genre.name
[DEBUG] 2021-05-11 20:00:14.843 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : books.isbn
[DEBUG] 2021-05-11 20:00:14.843 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : books.notes
[DEBUG] 2021-05-11 20:00:14.843 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : books.title
[DEBUG] 2021-05-11 20:00:14.843 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : books.user
[DEBUG] 2021-05-11 20:00:14.843 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@794cb89d]
[DEBUG] 2021-05-11 20:00:14.844 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : books.user.books
[DEBUG] 2021-05-11 20:00:14.844 [http-nio-8080-exec-5] MetamodelGraphWalker - Property path deemed to be circular : books.user.books
[DEBUG] 2021-05-11 20:00:14.844 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : books.user.email
[DEBUG] 2021-05-11 20:00:14.844 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : books.user.firstName
[DEBUG] 2021-05-11 20:00:14.844 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : books.user.lastName
[DEBUG] 2021-05-11 20:00:14.844 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : books.user.password
[DEBUG] 2021-05-11 20:00:14.844 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : books.user.roles
[DEBUG] 2021-05-11 20:00:14.844 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@70e13a7d]
[DEBUG] 2021-05-11 20:00:14.844 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7774f01f]
[DEBUG] 2021-05-11 20:00:14.844 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : books.user.userName
[DEBUG] 2021-05-11 20:00:14.844 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2021-05-11 20:00:14.848 [http-nio-8080-exec-5] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-05-11 20:00:14.848 [http-nio-8080-exec-5] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-05-11 20:00:14.851 [http-nio-8080-exec-5] LoadPlanTreePrinter - LoadPlan(entity=com.leeannjakel.entity.Author)
    - Returns
       - EntityReturnImpl(entity=com.leeannjakel.entity.Author, querySpaceUid=<gen:0>, path=com.leeannjakel.entity.Author)
          - CollectionAttributeFetchImpl(collection=com.leeannjakel.entity.Author.books, querySpaceUid=<gen:1>, path=com.leeannjakel.entity.Author.books)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.leeannjakel.entity.Book, querySpaceUid=<gen:2>, path=com.leeannjakel.entity.Author.books.<elements>)
                - EntityAttributeFetchImpl(entity=com.leeannjakel.entity.Genre, querySpaceUid=<gen:3>, path=com.leeannjakel.entity.Author.books.<elements>.genre)
                - EntityAttributeFetchImpl(entity=com.leeannjakel.entity.User, querySpaceUid=<gen:4>, path=com.leeannjakel.entity.Author.books.<elements>.user)
                   - CollectionAttributeFetchImpl(collection=com.leeannjakel.entity.User.roles, querySpaceUid=<gen:5>, path=com.leeannjakel.entity.Author.books.<elements>.user.roles)
                      - (collection element) CollectionFetchableElementEntityGraph(entity=com.leeannjakel.entity.Role, querySpaceUid=<gen:6>, path=com.leeannjakel.entity.Author.books.<elements>.user.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.leeannjakel.entity.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(books)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=com.leeannjakel.entity.Author.books)
                - SQL table alias mapping - books1_
                - alias suffix - 1_
                - suffixed key columns - {author_i5_1_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_1_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.leeannjakel.entity.Book)
                      - SQL table alias mapping - books1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_1_2_}
                      - JOIN (JoinDefinedByMetadata(genre)) : <gen:2> -> <gen:3>
                         - EntityQuerySpaceImpl(uid=<gen:3>, entity=com.leeannjakel.entity.Genre)
                            - SQL table alias mapping - genre2_
                            - alias suffix - 3_
                            - suffixed key columns - {id1_2_3_}
                      - JOIN (JoinDefinedByMetadata(user)) : <gen:2> -> <gen:4>
                         - EntityQuerySpaceImpl(uid=<gen:4>, entity=com.leeannjakel.entity.User)
                            - SQL table alias mapping - user3_
                            - alias suffix - 4_
                            - suffixed key columns - {id1_4_4_}

[DEBUG] 2021-05-11 20:00:14.851 [http-nio-8080-exec-5] EntityLoader - Static select for entity com.leeannjakel.entity.Author [READ]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, books1_.author_id as author_i5_1_1_, books1_.id as id1_1_1_, books1_.id as id1_1_2_, books1_.author_id as author_i5_1_2_, books1_.genre_id as genre_id6_1_2_, books1_.isbn as isbn2_1_2_, books1_.notes as notes3_1_2_, books1_.title as title4_1_2_, books1_.user_id as user_id7_1_2_, genre2_.id as id1_2_3_, genre2_.name as name2_2_3_, user3_.id as id1_4_4_, user3_.email as email2_4_4_, user3_.first_name as first_na3_4_4_, user3_.last_name as last_nam4_4_4_, user3_.password as password5_4_4_, user3_.user_name as user_nam6_4_4_ from author author0_ left outer join book books1_ on author0_.id=books1_.author_id left outer join genre genre2_ on books1_.genre_id=genre2_.id left outer join user user3_ on books1_.user_id=user3_.id where author0_.id=?
[DEBUG] 2021-05-11 20:00:14.856 [http-nio-8080-exec-5] Loader - Static select for action ACTION_MERGE on entity com.leeannjakel.entity.Author: select author0_.id as id1_0_1_, author0_.name as name2_0_1_, books1_.author_id as author_i5_1_3_, books1_.id as id1_1_3_, books1_.id as id1_1_0_, books1_.author_id as author_i5_1_0_, books1_.genre_id as genre_id6_1_0_, books1_.isbn as isbn2_1_0_, books1_.notes as notes3_1_0_, books1_.title as title4_1_0_, books1_.user_id as user_id7_1_0_ from author author0_ left outer join book books1_ on author0_.id=books1_.author_id where author0_.id=?
[DEBUG] 2021-05-11 20:00:14.856 [http-nio-8080-exec-5] Loader - Static select for action ACTION_REFRESH on entity com.leeannjakel.entity.Author: select author0_.id as id1_0_1_, author0_.name as name2_0_1_, books1_.author_id as author_i5_1_3_, books1_.id as id1_1_3_, books1_.id as id1_1_0_, books1_.author_id as author_i5_1_0_, books1_.genre_id as genre_id6_1_0_, books1_.isbn as isbn2_1_0_, books1_.notes as notes3_1_0_, books1_.title as title4_1_0_, books1_.user_id as user_id7_1_0_ from author author0_ left outer join book books1_ on author0_.id=books1_.author_id where author0_.id=?
[DEBUG] 2021-05-11 20:00:14.856 [http-nio-8080-exec-5] AbstractEntityPersister - Static SQL for entity: com.leeannjakel.entity.Genre
[DEBUG] 2021-05-11 20:00:14.856 [http-nio-8080-exec-5] AbstractEntityPersister -  Version select: select id from genre where id =?
[DEBUG] 2021-05-11 20:00:14.856 [http-nio-8080-exec-5] AbstractEntityPersister -  Snapshot select: select genre_.id, genre_.name as name2_2_ from genre genre_ where genre_.id=?
[DEBUG] 2021-05-11 20:00:14.859 [http-nio-8080-exec-5] AbstractEntityPersister -  Insert 0: insert into genre (name, id) values (?, ?)
[DEBUG] 2021-05-11 20:00:14.859 [http-nio-8080-exec-5] AbstractEntityPersister -  Update 0: update genre set name=? where id=?
[DEBUG] 2021-05-11 20:00:14.860 [http-nio-8080-exec-5] AbstractEntityPersister -  Delete 0: delete from genre where id=?
[DEBUG] 2021-05-11 20:00:14.860 [http-nio-8080-exec-5] AbstractEntityPersister -  Identity insert: insert into genre (name) values (?)
[DEBUG] 2021-05-11 20:00:14.860 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6b60363c]
[DEBUG] 2021-05-11 20:00:14.860 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : books
[DEBUG] 2021-05-11 20:00:14.860 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6bed21f5]
[DEBUG] 2021-05-11 20:00:14.860 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3b49d09f]
[DEBUG] 2021-05-11 20:00:14.860 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2021-05-11 20:00:14.860 [http-nio-8080-exec-5] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-05-11 20:00:14.861 [http-nio-8080-exec-5] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-05-11 20:00:14.861 [http-nio-8080-exec-5] LoadPlanTreePrinter - LoadPlan(entity=com.leeannjakel.entity.Genre)
    - Returns
       - EntityReturnImpl(entity=com.leeannjakel.entity.Genre, querySpaceUid=<gen:0>, path=com.leeannjakel.entity.Genre)
          - CollectionAttributeFetchImpl(collection=com.leeannjakel.entity.Genre.books, querySpaceUid=<gen:1>, path=com.leeannjakel.entity.Genre.books)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.leeannjakel.entity.Book, querySpaceUid=<gen:2>, path=com.leeannjakel.entity.Genre.books.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.leeannjakel.entity.Genre)
          - SQL table alias mapping - genre0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

[DEBUG] 2021-05-11 20:00:14.861 [http-nio-8080-exec-5] EntityLoader - Static select for entity com.leeannjakel.entity.Genre [NONE]: select genre0_.id as id1_2_0_, genre0_.name as name2_2_0_ from genre genre0_ where genre0_.id=?
[DEBUG] 2021-05-11 20:00:14.861 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@51f2d01c]
[DEBUG] 2021-05-11 20:00:14.864 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : books
[DEBUG] 2021-05-11 20:00:14.864 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7788b24e]
[DEBUG] 2021-05-11 20:00:14.864 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2305908]
[DEBUG] 2021-05-11 20:00:14.864 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2021-05-11 20:00:14.864 [http-nio-8080-exec-5] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-05-11 20:00:14.864 [http-nio-8080-exec-5] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-05-11 20:00:14.865 [http-nio-8080-exec-5] LoadPlanTreePrinter - LoadPlan(entity=com.leeannjakel.entity.Genre)
    - Returns
       - EntityReturnImpl(entity=com.leeannjakel.entity.Genre, querySpaceUid=<gen:0>, path=com.leeannjakel.entity.Genre)
          - CollectionAttributeFetchImpl(collection=com.leeannjakel.entity.Genre.books, querySpaceUid=<gen:1>, path=com.leeannjakel.entity.Genre.books)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.leeannjakel.entity.Book, querySpaceUid=<gen:2>, path=com.leeannjakel.entity.Genre.books.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.leeannjakel.entity.Genre)
          - SQL table alias mapping - genre0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

[DEBUG] 2021-05-11 20:00:14.865 [http-nio-8080-exec-5] EntityLoader - Static select for entity com.leeannjakel.entity.Genre [READ]: select genre0_.id as id1_2_0_, genre0_.name as name2_2_0_ from genre genre0_ where genre0_.id=?
[DEBUG] 2021-05-11 20:00:14.865 [http-nio-8080-exec-5] Loader - Static select for action ACTION_MERGE on entity com.leeannjakel.entity.Genre: select genre0_.id as id1_2_1_, genre0_.name as name2_2_1_, books1_.genre_id as genre_id6_1_3_, books1_.id as id1_1_3_, books1_.id as id1_1_0_, books1_.author_id as author_i5_1_0_, books1_.genre_id as genre_id6_1_0_, books1_.isbn as isbn2_1_0_, books1_.notes as notes3_1_0_, books1_.title as title4_1_0_, books1_.user_id as user_id7_1_0_ from genre genre0_ left outer join book books1_ on genre0_.id=books1_.genre_id where genre0_.id=?
[DEBUG] 2021-05-11 20:00:14.866 [http-nio-8080-exec-5] Loader - Static select for action ACTION_REFRESH on entity com.leeannjakel.entity.Genre: select genre0_.id as id1_2_1_, genre0_.name as name2_2_1_, books1_.genre_id as genre_id6_1_3_, books1_.id as id1_1_3_, books1_.id as id1_1_0_, books1_.author_id as author_i5_1_0_, books1_.genre_id as genre_id6_1_0_, books1_.isbn as isbn2_1_0_, books1_.notes as notes3_1_0_, books1_.title as title4_1_0_, books1_.user_id as user_id7_1_0_ from genre genre0_ left outer join book books1_ on genre0_.id=books1_.genre_id where genre0_.id=?
[DEBUG] 2021-05-11 20:00:14.866 [http-nio-8080-exec-5] AbstractEntityPersister - Static SQL for entity: com.leeannjakel.entity.Role
[DEBUG] 2021-05-11 20:00:14.866 [http-nio-8080-exec-5] AbstractEntityPersister -  Version select: select id from role where id =?
[DEBUG] 2021-05-11 20:00:14.866 [http-nio-8080-exec-5] AbstractEntityPersister -  Snapshot select: select role_.id, role_.role_name as role_nam2_3_, role_.user_id as user_id4_3_, role_.user_name as user_nam3_3_ from role role_ where role_.id=?
[DEBUG] 2021-05-11 20:00:14.866 [http-nio-8080-exec-5] AbstractEntityPersister -  Insert 0: insert into role (role_name, user_id, user_name, id) values (?, ?, ?, ?)
[DEBUG] 2021-05-11 20:00:14.866 [http-nio-8080-exec-5] AbstractEntityPersister -  Update 0: update role set role_name=?, user_id=?, user_name=? where id=?
[DEBUG] 2021-05-11 20:00:14.866 [http-nio-8080-exec-5] AbstractEntityPersister -  Delete 0: delete from role where id=?
[DEBUG] 2021-05-11 20:00:14.866 [http-nio-8080-exec-5] AbstractEntityPersister -  Identity insert: insert into role (role_name, user_id, user_name) values (?, ?, ?)
[DEBUG] 2021-05-11 20:00:14.866 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@45851b62]
[DEBUG] 2021-05-11 20:00:14.866 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : roleName
[DEBUG] 2021-05-11 20:00:14.866 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2021-05-11 20:00:14.867 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@444a3e22]
[DEBUG] 2021-05-11 20:00:14.870 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.books
[DEBUG] 2021-05-11 20:00:14.870 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@29819a55]
[DEBUG] 2021-05-11 20:00:14.871 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@48c1c6ef]
[DEBUG] 2021-05-11 20:00:14.871 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2021-05-11 20:00:14.871 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2021-05-11 20:00:14.871 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2021-05-11 20:00:14.872 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2021-05-11 20:00:14.872 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2021-05-11 20:00:14.872 [http-nio-8080-exec-5] MetamodelGraphWalker - Property path deemed to be circular : user.roles
[DEBUG] 2021-05-11 20:00:14.872 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.userName
[DEBUG] 2021-05-11 20:00:14.872 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : userName
[DEBUG] 2021-05-11 20:00:14.872 [http-nio-8080-exec-5] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-05-11 20:00:14.873 [http-nio-8080-exec-5] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-05-11 20:00:14.879 [http-nio-8080-exec-5] LoadPlanTreePrinter - LoadPlan(entity=com.leeannjakel.entity.Role)
    - Returns
       - EntityReturnImpl(entity=com.leeannjakel.entity.Role, querySpaceUid=<gen:0>, path=com.leeannjakel.entity.Role)
          - EntityAttributeFetchImpl(entity=com.leeannjakel.entity.User, querySpaceUid=<gen:1>, path=com.leeannjakel.entity.Role.user)
             - CollectionAttributeFetchImpl(collection=com.leeannjakel.entity.User.books, querySpaceUid=<gen:2>, path=com.leeannjakel.entity.Role.user.books)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.leeannjakel.entity.Book, querySpaceUid=<gen:3>, path=com.leeannjakel.entity.Role.user.books.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.leeannjakel.entity.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.leeannjakel.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_4_1_}

[DEBUG] 2021-05-11 20:00:14.879 [http-nio-8080-exec-5] EntityLoader - Static select for entity com.leeannjakel.entity.Role [NONE]: select role0_.id as id1_3_0_, role0_.role_name as role_nam2_3_0_, role0_.user_id as user_id4_3_0_, role0_.user_name as user_nam3_3_0_, user1_.id as id1_4_1_, user1_.email as email2_4_1_, user1_.first_name as first_na3_4_1_, user1_.last_name as last_nam4_4_1_, user1_.password as password5_4_1_, user1_.user_name as user_nam6_4_1_ from role role0_ left outer join user user1_ on role0_.user_id=user1_.id where role0_.id=?
[DEBUG] 2021-05-11 20:00:14.879 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5def5afb]
[DEBUG] 2021-05-11 20:00:14.880 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : roleName
[DEBUG] 2021-05-11 20:00:14.880 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2021-05-11 20:00:14.880 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2ac4396a]
[DEBUG] 2021-05-11 20:00:14.881 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.books
[DEBUG] 2021-05-11 20:00:14.881 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4bebc394]
[DEBUG] 2021-05-11 20:00:14.881 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@568b3603]
[DEBUG] 2021-05-11 20:00:14.881 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2021-05-11 20:00:14.881 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2021-05-11 20:00:14.881 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2021-05-11 20:00:14.881 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2021-05-11 20:00:14.881 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2021-05-11 20:00:14.881 [http-nio-8080-exec-5] MetamodelGraphWalker - Property path deemed to be circular : user.roles
[DEBUG] 2021-05-11 20:00:14.881 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.userName
[DEBUG] 2021-05-11 20:00:14.882 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : userName
[DEBUG] 2021-05-11 20:00:14.882 [http-nio-8080-exec-5] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-05-11 20:00:14.883 [http-nio-8080-exec-5] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-05-11 20:00:14.883 [http-nio-8080-exec-5] LoadPlanTreePrinter - LoadPlan(entity=com.leeannjakel.entity.Role)
    - Returns
       - EntityReturnImpl(entity=com.leeannjakel.entity.Role, querySpaceUid=<gen:0>, path=com.leeannjakel.entity.Role)
          - EntityAttributeFetchImpl(entity=com.leeannjakel.entity.User, querySpaceUid=<gen:1>, path=com.leeannjakel.entity.Role.user)
             - CollectionAttributeFetchImpl(collection=com.leeannjakel.entity.User.books, querySpaceUid=<gen:2>, path=com.leeannjakel.entity.Role.user.books)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.leeannjakel.entity.Book, querySpaceUid=<gen:3>, path=com.leeannjakel.entity.Role.user.books.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.leeannjakel.entity.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.leeannjakel.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_4_1_}

[DEBUG] 2021-05-11 20:00:14.883 [http-nio-8080-exec-5] EntityLoader - Static select for entity com.leeannjakel.entity.Role [READ]: select role0_.id as id1_3_0_, role0_.role_name as role_nam2_3_0_, role0_.user_id as user_id4_3_0_, role0_.user_name as user_nam3_3_0_, user1_.id as id1_4_1_, user1_.email as email2_4_1_, user1_.first_name as first_na3_4_1_, user1_.last_name as last_nam4_4_1_, user1_.password as password5_4_1_, user1_.user_name as user_nam6_4_1_ from role role0_ left outer join user user1_ on role0_.user_id=user1_.id where role0_.id=?
[DEBUG] 2021-05-11 20:00:14.884 [http-nio-8080-exec-5] Loader - Static select for action ACTION_MERGE on entity com.leeannjakel.entity.Role: select role0_.id as id1_3_0_, role0_.role_name as role_nam2_3_0_, role0_.user_id as user_id4_3_0_, role0_.user_name as user_nam3_3_0_ from role role0_ where role0_.id=?
[DEBUG] 2021-05-11 20:00:14.884 [http-nio-8080-exec-5] Loader - Static select for action ACTION_REFRESH on entity com.leeannjakel.entity.Role: select role0_.id as id1_3_0_, role0_.role_name as role_nam2_3_0_, role0_.user_id as user_id4_3_0_, role0_.user_name as user_nam3_3_0_ from role role0_ where role0_.id=?
[DEBUG] 2021-05-11 20:00:14.892 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1d369a78]
[DEBUG] 2021-05-11 20:00:14.893 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7e0b8e85]
[DEBUG] 2021-05-11 20:00:14.893 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : author
[DEBUG] 2021-05-11 20:00:14.893 [http-nio-8080-exec-5] MetamodelGraphWalker - Property path deemed to be circular : author
[DEBUG] 2021-05-11 20:00:14.893 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : genre
[DEBUG] 2021-05-11 20:00:14.893 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@585a5b99]
[DEBUG] 2021-05-11 20:00:14.893 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : genre.books
[DEBUG] 2021-05-11 20:00:14.894 [http-nio-8080-exec-5] MetamodelGraphWalker - Property path deemed to be circular : genre.books
[DEBUG] 2021-05-11 20:00:14.894 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : genre.name
[DEBUG] 2021-05-11 20:00:14.895 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : isbn
[DEBUG] 2021-05-11 20:00:14.895 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : notes
[DEBUG] 2021-05-11 20:00:14.895 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2021-05-11 20:00:14.895 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2021-05-11 20:00:14.896 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@77a3b462]
[DEBUG] 2021-05-11 20:00:14.896 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.books
[DEBUG] 2021-05-11 20:00:14.896 [http-nio-8080-exec-5] MetamodelGraphWalker - Property path deemed to be circular : user.books
[DEBUG] 2021-05-11 20:00:14.896 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2021-05-11 20:00:14.896 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2021-05-11 20:00:14.897 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2021-05-11 20:00:14.897 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2021-05-11 20:00:14.897 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2021-05-11 20:00:14.897 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3babd983]
[DEBUG] 2021-05-11 20:00:14.908 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7da70546]
[DEBUG] 2021-05-11 20:00:14.908 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.userName
[DEBUG] 2021-05-11 20:00:14.908 [http-nio-8080-exec-5] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-05-11 20:00:14.916 [http-nio-8080-exec-5] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-05-11 20:00:14.920 [http-nio-8080-exec-5] LoadPlanTreePrinter - LoadPlan(collection=com.leeannjakel.entity.Author.books)
    - Returns
       - CollectionReturnImpl(collection=com.leeannjakel.entity.Author.books, querySpaceUid=<gen:0>, path=[com.leeannjakel.entity.Author.books])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.leeannjakel.entity.Book, querySpaceUid=<gen:1>, path=[com.leeannjakel.entity.Author.books].<elements>)
             - EntityAttributeFetchImpl(entity=com.leeannjakel.entity.Genre, querySpaceUid=<gen:2>, path=[com.leeannjakel.entity.Author.books].<elements>.genre)
             - EntityAttributeFetchImpl(entity=com.leeannjakel.entity.User, querySpaceUid=<gen:3>, path=[com.leeannjakel.entity.Author.books].<elements>.user)
                - CollectionAttributeFetchImpl(collection=com.leeannjakel.entity.User.roles, querySpaceUid=<gen:4>, path=[com.leeannjakel.entity.Author.books].<elements>.user.roles)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.leeannjakel.entity.Role, querySpaceUid=<gen:5>, path=[com.leeannjakel.entity.Author.books].<elements>.user.roles.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.leeannjakel.entity.Author.books)
          - SQL table alias mapping - books0_
          - alias suffix - 0_
          - suffixed key columns - {author_i5_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.leeannjakel.entity.Book)
                - SQL table alias mapping - books0_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}
                - JOIN (JoinDefinedByMetadata(genre)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.leeannjakel.entity.Genre)
                      - SQL table alias mapping - genre1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_2_2_}
                - JOIN (JoinDefinedByMetadata(user)) : <gen:1> -> <gen:3>
                   - EntityQuerySpaceImpl(uid=<gen:3>, entity=com.leeannjakel.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 3_
                      - suffixed key columns - {id1_4_3_}

[DEBUG] 2021-05-11 20:00:14.921 [http-nio-8080-exec-5] CollectionLoader - Static select for collection com.leeannjakel.entity.Author.books: select books0_.author_id as author_i5_1_0_, books0_.id as id1_1_0_, books0_.id as id1_1_1_, books0_.author_id as author_i5_1_1_, books0_.genre_id as genre_id6_1_1_, books0_.isbn as isbn2_1_1_, books0_.notes as notes3_1_1_, books0_.title as title4_1_1_, books0_.user_id as user_id7_1_1_, genre1_.id as id1_2_2_, genre1_.name as name2_2_2_, user2_.id as id1_4_3_, user2_.email as email2_4_3_, user2_.first_name as first_na3_4_3_, user2_.last_name as last_nam4_4_3_, user2_.password as password5_4_3_, user2_.user_name as user_nam6_4_3_ from book books0_ left outer join genre genre1_ on books0_.genre_id=genre1_.id left outer join user user2_ on books0_.user_id=user2_.id where books0_.author_id=?
[DEBUG] 2021-05-11 20:00:14.921 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6f74b72c]
[DEBUG] 2021-05-11 20:00:14.921 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7a2009c1]
[DEBUG] 2021-05-11 20:00:14.927 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : author
[DEBUG] 2021-05-11 20:00:14.927 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@dc461c6]
[DEBUG] 2021-05-11 20:00:14.927 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : author.books
[DEBUG] 2021-05-11 20:00:14.927 [http-nio-8080-exec-5] MetamodelGraphWalker - Property path deemed to be circular : author.books
[DEBUG] 2021-05-11 20:00:14.927 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : author.name
[DEBUG] 2021-05-11 20:00:14.927 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : genre
[DEBUG] 2021-05-11 20:00:14.927 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5461fd2c]
[DEBUG] 2021-05-11 20:00:14.927 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : genre.books
[DEBUG] 2021-05-11 20:00:14.927 [http-nio-8080-exec-5] MetamodelGraphWalker - Property path deemed to be circular : genre.books
[DEBUG] 2021-05-11 20:00:14.927 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : genre.name
[DEBUG] 2021-05-11 20:00:14.927 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : isbn
[DEBUG] 2021-05-11 20:00:14.927 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : notes
[DEBUG] 2021-05-11 20:00:14.927 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2021-05-11 20:00:14.927 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2021-05-11 20:00:14.927 [http-nio-8080-exec-5] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2021-05-11 20:00:14.927 [http-nio-8080-exec-5] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-05-11 20:00:14.928 [http-nio-8080-exec-5] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-05-11 20:00:14.935 [http-nio-8080-exec-5] LoadPlanTreePrinter - LoadPlan(collection=com.leeannjakel.entity.User.books)
    - Returns
       - CollectionReturnImpl(collection=com.leeannjakel.entity.User.books, querySpaceUid=<gen:0>, path=[com.leeannjakel.entity.User.books])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.leeannjakel.entity.Book, querySpaceUid=<gen:1>, path=[com.leeannjakel.entity.User.books].<elements>)
             - EntityAttributeFetchImpl(entity=com.leeannjakel.entity.Author, querySpaceUid=<gen:2>, path=[com.leeannjakel.entity.User.books].<elements>.author)
             - EntityAttributeFetchImpl(entity=com.leeannjakel.entity.Genre, querySpaceUid=<gen:3>, path=[com.leeannjakel.entity.User.books].<elements>.genre)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.leeannjakel.entity.User.books)
          - SQL table alias mapping - books0_
          - alias suffix - 0_
          - suffixed key columns - {user_id7_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.leeannjakel.entity.Book)
                - SQL table alias mapping - books0_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}
                - JOIN (JoinDefinedByMetadata(author)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.leeannjakel.entity.Author)
                      - SQL table alias mapping - author1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}
                - JOIN (JoinDefinedByMetadata(genre)) : <gen:1> -> <gen:3>
                   - EntityQuerySpaceImpl(uid=<gen:3>, entity=com.leeannjakel.entity.Genre)
                      - SQL table alias mapping - genre2_
                      - alias suffix - 3_
                      - suffixed key columns - {id1_2_3_}

[DEBUG] 2021-05-11 20:00:14.935 [http-nio-8080-exec-5] CollectionLoader - Static select for collection com.leeannjakel.entity.User.books: select books0_.user_id as user_id7_1_0_, books0_.id as id1_1_0_, books0_.id as id1_1_1_, books0_.author_id as author_i5_1_1_, books0_.genre_id as genre_id6_1_1_, books0_.isbn as isbn2_1_1_, books0_.notes as notes3_1_1_, books0_.title as title4_1_1_, books0_.user_id as user_id7_1_1_, author1_.id as id1_0_2_, author1_.name as name2_0_2_, genre2_.id as id1_2_3_, genre2_.name as name2_2_3_ from book books0_ left outer join author author1_ on books0_.author_id=author1_.id left outer join genre genre2_ on books0_.genre_id=genre2_.id where books0_.user_id=?
[DEBUG] 2021-05-11 20:00:14.936 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@26046b25]
[DEBUG] 2021-05-11 20:00:14.936 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@515ebda4]
[DEBUG] 2021-05-11 20:00:14.936 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : roleName
[DEBUG] 2021-05-11 20:00:14.936 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2021-05-11 20:00:14.936 [http-nio-8080-exec-5] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2021-05-11 20:00:14.936 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : userName
[DEBUG] 2021-05-11 20:00:14.936 [http-nio-8080-exec-5] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-05-11 20:00:14.936 [http-nio-8080-exec-5] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-05-11 20:00:14.936 [http-nio-8080-exec-5] LoadPlanTreePrinter - LoadPlan(collection=com.leeannjakel.entity.User.roles)
    - Returns
       - CollectionReturnImpl(collection=com.leeannjakel.entity.User.roles, querySpaceUid=<gen:0>, path=[com.leeannjakel.entity.User.roles])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.leeannjakel.entity.Role, querySpaceUid=<gen:1>, path=[com.leeannjakel.entity.User.roles].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.leeannjakel.entity.User.roles)
          - SQL table alias mapping - roles0_
          - alias suffix - 0_
          - suffixed key columns - {user_id4_3_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_3_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.leeannjakel.entity.Role)
                - SQL table alias mapping - roles0_
                - alias suffix - 1_
                - suffixed key columns - {id1_3_1_}

[DEBUG] 2021-05-11 20:00:14.936 [http-nio-8080-exec-5] CollectionLoader - Static select for collection com.leeannjakel.entity.User.roles: select roles0_.user_id as user_id4_3_0_, roles0_.id as id1_3_0_, roles0_.id as id1_3_1_, roles0_.role_name as role_nam2_3_1_, roles0_.user_id as user_id4_3_1_, roles0_.user_name as user_nam3_3_1_ from role roles0_ where roles0_.user_id=?
[DEBUG] 2021-05-11 20:00:14.937 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@b7519b]
[DEBUG] 2021-05-11 20:00:14.937 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@24a07fb4]
[DEBUG] 2021-05-11 20:00:14.937 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : author
[DEBUG] 2021-05-11 20:00:14.937 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@630c2ac]
[DEBUG] 2021-05-11 20:00:14.937 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : author.books
[DEBUG] 2021-05-11 20:00:14.937 [http-nio-8080-exec-5] MetamodelGraphWalker - Property path deemed to be circular : author.books
[DEBUG] 2021-05-11 20:00:14.937 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : author.name
[DEBUG] 2021-05-11 20:00:14.937 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : genre
[DEBUG] 2021-05-11 20:00:14.937 [http-nio-8080-exec-5] MetamodelGraphWalker - Property path deemed to be circular : genre
[DEBUG] 2021-05-11 20:00:14.937 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : isbn
[DEBUG] 2021-05-11 20:00:14.937 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : notes
[DEBUG] 2021-05-11 20:00:14.937 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2021-05-11 20:00:14.937 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2021-05-11 20:00:14.937 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3fa5e0b1]
[DEBUG] 2021-05-11 20:00:14.937 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.books
[DEBUG] 2021-05-11 20:00:14.937 [http-nio-8080-exec-5] MetamodelGraphWalker - Property path deemed to be circular : user.books
[DEBUG] 2021-05-11 20:00:14.937 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2021-05-11 20:00:14.937 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2021-05-11 20:00:14.937 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2021-05-11 20:00:14.937 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2021-05-11 20:00:14.947 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2021-05-11 20:00:14.947 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@8bfce47]
[DEBUG] 2021-05-11 20:00:14.947 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7b864d19]
[DEBUG] 2021-05-11 20:00:14.947 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.userName
[DEBUG] 2021-05-11 20:00:14.947 [http-nio-8080-exec-5] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-05-11 20:00:14.948 [http-nio-8080-exec-5] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-05-11 20:00:14.949 [http-nio-8080-exec-5] LoadPlanTreePrinter - LoadPlan(collection=com.leeannjakel.entity.Genre.books)
    - Returns
       - CollectionReturnImpl(collection=com.leeannjakel.entity.Genre.books, querySpaceUid=<gen:0>, path=[com.leeannjakel.entity.Genre.books])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.leeannjakel.entity.Book, querySpaceUid=<gen:1>, path=[com.leeannjakel.entity.Genre.books].<elements>)
             - EntityAttributeFetchImpl(entity=com.leeannjakel.entity.Author, querySpaceUid=<gen:2>, path=[com.leeannjakel.entity.Genre.books].<elements>.author)
             - EntityAttributeFetchImpl(entity=com.leeannjakel.entity.User, querySpaceUid=<gen:3>, path=[com.leeannjakel.entity.Genre.books].<elements>.user)
                - CollectionAttributeFetchImpl(collection=com.leeannjakel.entity.User.roles, querySpaceUid=<gen:4>, path=[com.leeannjakel.entity.Genre.books].<elements>.user.roles)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.leeannjakel.entity.Role, querySpaceUid=<gen:5>, path=[com.leeannjakel.entity.Genre.books].<elements>.user.roles.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.leeannjakel.entity.Genre.books)
          - SQL table alias mapping - books0_
          - alias suffix - 0_
          - suffixed key columns - {genre_id6_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.leeannjakel.entity.Book)
                - SQL table alias mapping - books0_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}
                - JOIN (JoinDefinedByMetadata(author)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.leeannjakel.entity.Author)
                      - SQL table alias mapping - author1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}
                - JOIN (JoinDefinedByMetadata(user)) : <gen:1> -> <gen:3>
                   - EntityQuerySpaceImpl(uid=<gen:3>, entity=com.leeannjakel.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 3_
                      - suffixed key columns - {id1_4_3_}

[DEBUG] 2021-05-11 20:00:14.949 [http-nio-8080-exec-5] CollectionLoader - Static select for collection com.leeannjakel.entity.Genre.books: select books0_.genre_id as genre_id6_1_0_, books0_.id as id1_1_0_, books0_.id as id1_1_1_, books0_.author_id as author_i5_1_1_, books0_.genre_id as genre_id6_1_1_, books0_.isbn as isbn2_1_1_, books0_.notes as notes3_1_1_, books0_.title as title4_1_1_, books0_.user_id as user_id7_1_1_, author1_.id as id1_0_2_, author1_.name as name2_0_2_, user2_.id as id1_4_3_, user2_.email as email2_4_3_, user2_.first_name as first_na3_4_3_, user2_.last_name as last_nam4_4_3_, user2_.password as password5_4_3_, user2_.user_name as user_nam6_4_3_ from book books0_ left outer join author author1_ on books0_.author_id=author1_.id left outer join user user2_ on books0_.user_id=user2_.id where books0_.genre_id=?
[DEBUG] 2021-05-11 20:00:15.114 [http-nio-8080-exec-5] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2021-05-11 20:00:15.117 [http-nio-8080-exec-5] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2021-05-11 20:00:15.117 [http-nio-8080-exec-5] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2021-05-11 20:00:15.146 [http-nio-8080-exec-5] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2021-05-11 20:00:15.146 [http-nio-8080-exec-5] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2021-05-11 20:00:15.147 [http-nio-8080-exec-5] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2021-05-11 20:00:15.147 [http-nio-8080-exec-5] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2021-05-11 20:00:15.164 [http-nio-8080-exec-5] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@77b512f6
[DEBUG] 2021-05-11 20:00:15.170 [http-nio-8080-exec-5] SessionFactoryRegistry - Registering SessionFactory: 22bf5124-c796-428e-af7d-df5741bba9a4 (<unnamed>)
[DEBUG] 2021-05-11 20:00:15.170 [http-nio-8080-exec-5] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2021-05-11 20:00:15.475 [http-nio-8080-exec-5] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2021-05-11 20:00:15.653 [http-nio-8080-exec-5] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from User as generatedAlias0 where generatedAlias0.userName=:param0
[DEBUG] 2021-05-11 20:00:15.734 [http-nio-8080-exec-5] QueryTranslatorFactoryInitiator - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@16d5bc2b
[DEBUG] 2021-05-11 20:00:15.857 [http-nio-8080-exec-5] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from com.leeannjakel.entity.User as generatedAlias0 where generatedAlias0.userName=:param0
[DEBUG] 2021-05-11 20:00:15.880 [http-nio-8080-exec-5] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2021-05-11 20:00:15.917 [http-nio-8080-exec-5] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  \-[IDENT] Node: 'leeannjakel'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'User'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'userName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

[DEBUG] 2021-05-11 20:00:15.983 [http-nio-8080-exec-5] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2021-05-11 20:00:16.015 [http-nio-8080-exec-5] FromElement - FromClause{level=1} : com.leeannjakel.entity.User (generatedAlias0) -> user0_
[DEBUG] 2021-05-11 20:00:16.016 [http-nio-8080-exec-5] FromReferenceNode - Resolved : generatedAlias0 -> user0_.id
[DEBUG] 2021-05-11 20:00:16.020 [http-nio-8080-exec-5] FromReferenceNode - Resolved : generatedAlias0 -> user0_.id
[DEBUG] 2021-05-11 20:00:16.029 [http-nio-8080-exec-5] DotNode - getDataType() : userName -> org.hibernate.type.StringType@2780709
[DEBUG] 2021-05-11 20:00:16.030 [http-nio-8080-exec-5] FromReferenceNode - Resolved : generatedAlias0.userName -> user0_.user_name
[DEBUG] 2021-05-11 20:00:16.033 [http-nio-8080-exec-5] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2021-05-11 20:00:16.033 [http-nio-8080-exec-5] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} user0_.id ) ( FromClause{level=1} user user0_ ) ( where ( = ( user0_.user_name user0_.id userName ) ? ) ) )
[DEBUG] 2021-05-11 20:00:16.053 [http-nio-8080-exec-5] JoinProcessor - Using FROM fragment [user user0_]
[DEBUG] 2021-05-11 20:00:16.053 [http-nio-8080-exec-5] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2021-05-11 20:00:16.053 [http-nio-8080-exec-5] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (user)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.id as id1_4_' {alias=generatedAlias0, className=com.leeannjakel.entity.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.email as email2_4_, user0_.first_name as first_na3_4_, user0_.last_name as last_nam4_4_, user0_.password as password5_4_, user0_.user_name as user_nam6_4_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'user user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=user,tableAlias=user0_,origin=null,columns={,className=com.leeannjakel.entity.User}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user0_.user_name' {propertyName=userName,dereferenceType=PRIMITIVE,getPropertyPath=userName,path=generatedAlias0.userName,tableAlias=user0_,className=com.leeannjakel.entity.User,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'user0_.id' {alias=generatedAlias0, className=com.leeannjakel.entity.User, tableAlias=user0_}
          |  \-[IDENT] IdentNode: 'userName' {originalText=userName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@2780709}

[DEBUG] 2021-05-11 20:00:16.054 [http-nio-8080-exec-5] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2021-05-11 20:00:16.067 [http-nio-8080-exec-5] QueryTranslatorImpl - HQL: select generatedAlias0 from com.leeannjakel.entity.User as generatedAlias0 where generatedAlias0.userName=:param0
[DEBUG] 2021-05-11 20:00:16.067 [http-nio-8080-exec-5] QueryTranslatorImpl - SQL: select user0_.id as id1_4_, user0_.email as email2_4_, user0_.first_name as first_na3_4_, user0_.last_name as last_nam4_4_, user0_.password as password5_4_, user0_.user_name as user_nam6_4_ from user user0_ where user0_.user_name=?
[DEBUG] 2021-05-11 20:00:16.067 [http-nio-8080-exec-5] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2021-05-11 20:00:16.110 [http-nio-8080-exec-5] SQL - select user0_.id as id1_4_, user0_.email as email2_4_, user0_.first_name as first_na3_4_, user0_.last_name as last_nam4_4_, user0_.password as password5_4_, user0_.user_name as user_nam6_4_ from user user0_ where user0_.user_name=?
[DEBUG] 2021-05-11 20:00:16.152 [http-nio-8080-exec-5] Loader - Result set row: 0
[DEBUG] 2021-05-11 20:00:16.163 [http-nio-8080-exec-5] Loader - Result row: EntityKey[com.leeannjakel.entity.User#1]
[DEBUG] 2021-05-11 20:00:16.185 [http-nio-8080-exec-5] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.User#1]
[DEBUG] 2021-05-11 20:00:16.186 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `books` : value = NOT NULL COLLECTION
[DEBUG] 2021-05-11 20:00:16.186 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`books`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:00:16.197 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `email` : value = email@something.com
[DEBUG] 2021-05-11 20:00:16.197 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:00:16.197 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `firstName` : value = LeeAnn
[DEBUG] 2021-05-11 20:00:16.197 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:00:16.197 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `lastName` : value = Jakel
[DEBUG] 2021-05-11 20:00:16.197 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:00:16.199 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `password` : value = password
[DEBUG] 2021-05-11 20:00:16.199 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:00:16.199 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2021-05-11 20:00:16.199 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:00:16.200 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `userName` : value = ljakel
[DEBUG] 2021-05-11 20:00:16.200 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:00:16.201 [http-nio-8080-exec-5] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.User#1]
[DEBUG] 2021-05-11 20:00:16.204 [http-nio-8080-exec-5] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.leeannjakel.entity.User.roles#1]
[DEBUG] 2021-05-11 20:00:16.205 [http-nio-8080-exec-5] SQL - select roles0_.user_id as user_id4_3_0_, roles0_.id as id1_3_0_, roles0_.id as id1_3_1_, roles0_.role_name as role_nam2_3_1_, roles0_.user_id as user_id4_3_1_, roles0_.user_name as user_nam3_3_1_ from role roles0_ where roles0_.user_id=?
[DEBUG] 2021-05-11 20:00:16.214 [http-nio-8080-exec-5] ResultSetProcessorImpl - Preparing collection initializer : [com.leeannjakel.entity.User.roles#1]
[DEBUG] 2021-05-11 20:00:16.225 [http-nio-8080-exec-5] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-05-11 20:00:16.228 [http-nio-8080-exec-5] CollectionReferenceInitializerImpl - Found row of collection: [com.leeannjakel.entity.User.roles#1]
[DEBUG] 2021-05-11 20:00:16.235 [http-nio-8080-exec-5] TwoPhaseLoad - Resolving attributes for [com.leeannjakel.entity.Role#7]
[DEBUG] 2021-05-11 20:00:16.235 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `roleName` : value = admin
[DEBUG] 2021-05-11 20:00:16.235 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`roleName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:00:16.235 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2021-05-11 20:00:16.235 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:00:16.236 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `userName` : value = ljakel
[DEBUG] 2021-05-11 20:00:16.236 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-11 20:00:16.237 [http-nio-8080-exec-5] TwoPhaseLoad - Done materializing entity [com.leeannjakel.entity.Role#7]
[DEBUG] 2021-05-11 20:00:16.237 [http-nio-8080-exec-5] CollectionLoadContext - 1 collections were found in result set for role: com.leeannjakel.entity.User.roles
[DEBUG] 2021-05-11 20:00:16.238 [http-nio-8080-exec-5] CollectionLoadContext - Collection fully initialized: [com.leeannjakel.entity.User.roles#1]
[DEBUG] 2021-05-11 20:00:16.238 [http-nio-8080-exec-5] CollectionLoadContext - 1 collections initialized for role: com.leeannjakel.entity.User.roles
[DEBUG] 2021-05-11 20:00:16.238 [http-nio-8080-exec-5] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-05-11 20:00:16.238 [http-nio-8080-exec-5] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2021-05-11 20:00:16.241 [http-nio-8080-exec-5] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
